import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test03501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03501");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.putIntProp((int) (short) 1, 1);
        scriptNode0.setEncodedSource("typeof");
        java.lang.Object obj7 = scriptNode0.getProp(2);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = scriptNode0.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test03502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03502");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setGenerateDebugInfo(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray16 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet17);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet17);
        boolean boolean21 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03503");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        scriptNode1.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode9.getFunctions();
        scriptNode9.setPosition((int) (byte) 10);
        java.lang.String str14 = scriptNode1.toStringTree(scriptNode9);
        int int15 = scriptNode1.getBaseLineno();
        boolean boolean16 = scriptNode1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = astRoot18.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol21 = astRoot18.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot((int) '4');
        astRoot18.setCompilerData((java.lang.Object) astRoot23);
        astRoot23.setBaseLineno(574921099);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = astRoot27.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        boolean boolean34 = comment33.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        boolean boolean40 = comment39.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType43, "");
        java.lang.String str47 = comment45.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] { comment33, comment39, comment45 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        boolean boolean52 = astRoot27.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray53 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList54, symbolArray53);
        astRoot27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList54);
        int int57 = astRoot27.getLineno();
        astRoot23.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot27);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int60 = astRoot59.getParamCount();
        int int61 = astRoot59.getPosition();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter63 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory64 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons62, errorReporter63);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode66.getFunctions();
        scriptNode66.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node71 = iRFactory64.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.lang.String str72 = scriptNode66.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator74 = scriptNode73.spliterator();
        com.google.javascript.rhino.head.Node node76 = scriptNode73.setType((int) '#');
        boolean boolean77 = scriptNode73.hasConsistentReturnUsage();
        scriptNode66.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode73);
        com.google.javascript.rhino.head.ast.Symbol symbol80 = scriptNode66.getSymbol("                                      ");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot59, (com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        com.google.javascript.rhino.head.ast.AstNode astNode82 = scriptNode66.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.replaceChild((com.google.javascript.rhino.head.Node) astRoot27, (com.google.javascript.rhino.head.Node) astNode82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(scriptNode17);
        org.junit.Assert.assertNull(commentSet19);
        org.junit.Assert.assertNull(symbol21);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                                                                                                                                                                                                        " + "'", str47, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(symbolArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(nodeSpliterator74);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(symbol80);
        org.junit.Assert.assertNotNull(astNode82);
    }

    @Test
    public void test03504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03504");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        com.google.javascript.rhino.head.Node node31 = astRoot1.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode58 = astRoot32.getParent();
        astRoot32.setPosition(14);
        java.lang.String str61 = astRoot32.getSourceName();
        com.google.javascript.rhino.head.ast.Comment comment62 = astRoot32.getJsDocNode();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        boolean boolean65 = astRoot64.hasConsistentReturnUsage();
        java.lang.String str67 = astRoot64.toSource(95442629);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) comment62, (com.google.javascript.rhino.head.Node) astRoot64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(astNode58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(comment62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
    }

    @Test
    public void test03505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03505");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (byte) -1, "                                    {\n                                    }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test03506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03506");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        boolean boolean12 = compilerEnvirons10.getWarnTrailingComma();
        compilerEnvirons10.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons10.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter16);
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        java.lang.String str21 = astRoot19.getJsDoc();
        java.lang.String str22 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = iRFactory18.transformTree(astRoot19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray25 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList26, symbolArray25);
        scriptNode24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        int int31 = astRoot29.getRegexpCount();
        scriptNode24.addChildToBack((com.google.javascript.rhino.head.Node) astRoot29);
        int int33 = astRoot29.getPosition();
        astRoot19.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot29);
        boolean boolean35 = astRoot29.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Comment comment36 = astRoot29.getJsDocNode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(symbolArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(comment36);
    }

    @Test
    public void test03507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03507");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = scriptNode2.new NodeIterator();
        int int9 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode2.getParentScope();
        scriptNode2.removeProp(65536);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode14.getChildScopes();
        int int17 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.Node node18 = scriptNode14.getLastSibling();
        int int19 = scriptNode14.getEndLineno();
        scriptNode14.setBaseLineno(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = astRoot22.getComments();
        int int24 = astRoot22.getEndLineno();
        com.google.javascript.rhino.head.Node node26 = astRoot22.setType((int) (short) 10);
        astRoot22.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scriptNode33.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        java.lang.String str41 = comment39.toSource(100);
        java.lang.String str42 = comment39.getValue();
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        boolean boolean51 = comment50.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType54, "");
        boolean boolean57 = comment56.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType60, "");
        java.lang.String str64 = comment62.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] { comment50, comment56, comment62 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        boolean boolean69 = astRoot44.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray70 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList71, symbolArray70);
        astRoot44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList71);
        com.google.javascript.rhino.head.Node node74 = astRoot44.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, (com.google.javascript.rhino.head.ast.Scope) scriptNode76);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment39, (com.google.javascript.rhino.head.Node) scriptNode76);
        astRoot22.addComment(comment39);
        scriptNode14.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType84, "");
        com.google.javascript.rhino.head.Token.CommentType commentType87 = comment86.getCommentType();
        java.lang.String str89 = comment86.toSource(21);
        java.lang.String str90 = comment86.getValue();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(15, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) comment86, 6);
        astRoot22.setEncodedSource("1\tCOMMENT 1 0\n");
        com.google.javascript.rhino.head.ast.Symbol symbol96 = astRoot22.getSymbol("1384960853\tSCRIPT 1384960853 1\n");
        // The following exception was thrown during execution in test generation
        try {
            astRoot22.checkParentLinks();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No parent for node: 10?");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(commentSet23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                                                                                                                                                        " + "'", str41, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                                                                                                                                        " + "'", str64, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(symbolArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(commentType87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "                                          " + "'", str89, "                                          ");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertNull(symbol96);
    }

    @Test
    public void test03508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03508");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode13.getChildScopes();
        int int16 = scriptNode13.getBaseLineno();
        int int17 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode19.getFunctions();
        scriptNode19.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = scriptNode27.getChildScopes();
        int int30 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = scriptNode27.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = scriptNode27.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode27);
        com.google.javascript.rhino.head.Node node34 = iRFactory11.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        scriptNode27.setEncodedSourceEnd(1617059566);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(astRoot32);
        org.junit.Assert.assertNotNull(node34);
    }

    @Test
    public void test03509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03509");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        int int15 = scriptNode8.getEndLineno();
        scriptNode8.setEncodedSource("hi!");
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode8, (int) (byte) 0);
        node19.removeChildren();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test03510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03510");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        int int8 = scriptNode4.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode10.getFunctions();
        scriptNode10.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode4.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope15);
        scriptNode10.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node19 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        int int20 = scriptNode10.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = astRoot21.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        boolean boolean34 = comment33.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        java.lang.String str41 = comment39.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray42 = new com.google.javascript.rhino.head.ast.Comment[] { comment27, comment33, comment39 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet43, commentArray42);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet43);
        boolean boolean46 = astRoot21.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode47 = astRoot21.getParent();
        astRoot21.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode50 = astRoot21.getParent();
        java.lang.String str51 = scriptNode10.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot21);
        com.google.javascript.rhino.head.Node node52 = astRoot21.target;
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor53 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot21.visit(nodeVisitor53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                                                                                                                                                        " + "'", str41, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(astNode47);
        org.junit.Assert.assertNull(astNode50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(node52);
    }

    @Test
    public void test03511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03511");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = astRoot31.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        boolean boolean38 = comment37.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType41, "");
        boolean boolean44 = comment43.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        java.lang.String str51 = comment49.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] { comment37, comment43, comment49 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        boolean boolean56 = astRoot31.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType59, "hi!");
        astRoot31.addComment(comment61);
        astRoot0.addComment(comment61);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral64 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addRegExp(regExpLiteral64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                                                                                                                                                        " + "'", str51, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test03512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03512");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        boolean boolean9 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03513");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.lang.Object obj22 = scriptNode12.getCompilerData();
        com.google.javascript.rhino.head.ast.Comment comment23 = scriptNode12.getJsDocNode();
        com.google.javascript.rhino.head.ast.Scope scope24 = scriptNode12.getParentScope();
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(comment23);
        org.junit.Assert.assertNull(scope24);
    }

    @Test
    public void test03514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03514");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-213029975));
        java.lang.String str2 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = astRoot3.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType7, "");
        boolean boolean10 = comment9.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType13, "");
        boolean boolean16 = comment15.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        java.lang.String str23 = comment21.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray24 = new com.google.javascript.rhino.head.ast.Comment[] { comment9, comment15, comment21 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet25, commentArray24);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet25);
        boolean boolean28 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray29 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList30, symbolArray29);
        astRoot3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList30);
        com.google.javascript.rhino.head.Node node33 = astRoot3.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot3, (com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode38 = scriptNode35.getEnclosingFunction();
        scriptNode35.setEndLineno(6);
        int int41 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) scriptNode35);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList43 = scriptNode35.getSymbols();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor44 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode35.visit(nodeVisitor44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-213029975\tSCRIPT -213029975 1\n" + "'", str2, "-213029975\tSCRIPT -213029975 1\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                                                                                                                                                                                        " + "'", str23, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(symbolArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(functionNode38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(symbolList43);
    }

    @Test
    public void test03515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03515");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        java.lang.String str20 = scriptNode16.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        java.lang.Object obj25 = scriptNode16.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str28 = scriptNode26.toSource((int) '4');
        java.lang.String str29 = scriptNode16.toStringTree(scriptNode26);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory32 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons30, errorReporter31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode34.getChildScopes();
        int int37 = scriptNode34.getBaseLineno();
        int int38 = scriptNode34.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode40.getFunctions();
        scriptNode40.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode34.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope45);
        scriptNode40.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node49 = iRFactory32.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter51 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory52 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons50, errorReporter51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList56 = scriptNode54.getChildScopes();
        int int57 = scriptNode54.getBaseLineno();
        int int58 = scriptNode54.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode59.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode60.getFunctions();
        scriptNode60.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope65 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode54.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode60, (com.google.javascript.rhino.head.Node) scope65);
        scriptNode60.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node69 = iRFactory52.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        scriptNode40.setTop(scriptNode60);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode40, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = scriptNode40.getTop();
        java.lang.String str75 = scriptNode40.toSource((int) (short) 1);
        scriptNode40.setEncodedSourceBounds(1499437464, 875237497);
        comment4.putProp(1617059566, (java.lang.Object) 1499437464);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "          hi!" + "'", str6, "          hi!");
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str28, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNull(scopeList56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertNotNull(scriptNode73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "  {\n  }\n" + "'", str75, "  {\n  }\n");
    }

    @Test
    public void test03516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03516");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean8 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean9 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03517");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        scope0.setTop(scriptNode3);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = scope0.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        int int11 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.Node node12 = scriptNode8.getLastSibling();
        int int13 = scriptNode8.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = scriptNode8.new NodeIterator();
        java.lang.Object obj15 = scriptNode8.getCompilerData();
        scope0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        java.lang.String str17 = scriptNode8.getSourceName();
        scriptNode8.setEncodedSourceEnd((int) (short) 0);
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03518");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        boolean boolean12 = compilerEnvirons10.getWarnTrailingComma();
        compilerEnvirons10.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons10.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter16);
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        compilerEnvirons0.setAllowSharpComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.getWarnTrailingComma();
        boolean boolean24 = compilerEnvirons21.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean27 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        int int28 = compilerEnvirons26.getLanguageVersion();
        compilerEnvirons26.setLanguageVersion((int) (byte) 100);
        boolean boolean31 = compilerEnvirons26.isAllowMemberExprAsFunctionName();
        compilerEnvirons26.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray40 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        compilerEnvirons34.setActivationNames((java.util.Set<java.lang.String>) strSet41);
        boolean boolean44 = compilerEnvirons34.isGenerateDebugInfo();
        compilerEnvirons34.setOptimizationLevel((int) (short) 1);
        compilerEnvirons34.setAllowSharpComments(true);
        boolean boolean49 = compilerEnvirons34.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons34.getErrorReporter();
        compilerEnvirons26.setErrorReporter(errorReporter50);
        com.google.javascript.rhino.head.ErrorReporter errorReporter52 = compilerEnvirons26.getErrorReporter();
        compilerEnvirons21.setErrorReporter(errorReporter52);
        com.google.javascript.rhino.head.IRFactory iRFactory54 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = astRoot55.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        boolean boolean62 = comment61.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType65, "");
        boolean boolean68 = comment67.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType71, "");
        java.lang.String str75 = comment73.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray76 = new com.google.javascript.rhino.head.ast.Comment[] { comment61, comment67, comment73 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet77 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet77, commentArray76);
        astRoot55.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet77);
        boolean boolean80 = astRoot55.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode81 = astRoot55.getParent();
        java.lang.String str82 = astRoot55.debugPrint();
        int int83 = astRoot55.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet84 = astRoot55.getComments();
        astRoot55.checkParentLinks();
        astRoot55.setEndLineno(842975161);
        com.google.javascript.rhino.head.Node node89 = astRoot55.setType(605628279);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = iRFactory54.transformTree(astRoot55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can't transform: 605628279");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(compilerEnvirons26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 170 + "'", int28 == 170);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(errorReporter52);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                                                                                                                                                                                        " + "'", str75, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(astNode81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str82, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(commentSet84);
        org.junit.Assert.assertNotNull(node89);
    }

    @Test
    public void test03519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03519");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        int int8 = scriptNode4.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode10.getFunctions();
        scriptNode10.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode4.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope15);
        scriptNode10.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node19 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        scriptNode10.putProp(17, (java.lang.Object) 18);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump23 = scriptNode10.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test03520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03520");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        java.lang.String str2 = astRoot0.getSourceName();
        boolean boolean3 = astRoot0.hasChildren();
        int int4 = astRoot0.getLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor5 = null;
        astRoot0.visitComments(nodeVisitor5);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean8 = compilerEnvirons7.isReservedKeywordAsIdentifier();
        boolean boolean9 = compilerEnvirons7.isIdeMode();
        boolean boolean10 = compilerEnvirons7.getWarnTrailingComma();
        compilerEnvirons7.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean14 = compilerEnvirons13.isReservedKeywordAsIdentifier();
        int int15 = compilerEnvirons13.getLanguageVersion();
        int int16 = compilerEnvirons13.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean18 = compilerEnvirons17.isReservedKeywordAsIdentifier();
        compilerEnvirons17.setStrictMode(true);
        compilerEnvirons17.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean24 = compilerEnvirons23.isReservedKeywordAsIdentifier();
        boolean boolean25 = compilerEnvirons23.getWarnTrailingComma();
        compilerEnvirons23.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet28 = compilerEnvirons23.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons17, errorReporter29);
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons13, errorReporter29);
        com.google.javascript.rhino.head.IRFactory iRFactory32 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons7, errorReporter29);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons33, errorReporter34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode37.getFunctions();
        scriptNode37.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node42 = iRFactory35.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.lang.String str43 = scriptNode37.getSourceName();
        int int44 = scriptNode37.getRegexpCount();
        java.lang.Object obj45 = scriptNode37.getCompilerData();
        java.lang.String str46 = scriptNode37.getSourceName();
        com.google.javascript.rhino.head.Node node47 = iRFactory32.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = astRoot0.getSymbols();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(compilerEnvirons7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 170 + "'", int15 == 170);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 170 + "'", int16 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strSet28);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(symbolList49);
    }

    @Test
    public void test03521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03521");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-405371752));
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03522");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = scriptNode0.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = astRoot2.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType6, "");
        boolean boolean9 = comment8.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        java.lang.String str22 = comment20.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] { comment8, comment14, comment20 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        boolean boolean27 = astRoot2.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray28 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList29, symbolArray28);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList29);
        int int32 = astRoot2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment33 = astRoot2.getJsDocNode();
        astRoot2.setInStrictMode(false);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot2);
        boolean boolean37 = scriptNode0.hasSideEffects();
        scriptNode0.setBounds((int) (byte) 1, 65536);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.visit(nodeVisitor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(functionNode1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                                                                                                                                                        " + "'", str22, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(symbolArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(comment33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03523");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(1, (int) 'a');
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList3 = scope2.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = scriptNode4.spliterator();
        com.google.javascript.rhino.head.Node node7 = scriptNode4.setType((int) '#');
        java.lang.Object obj8 = scriptNode4.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol10 = scriptNode4.getSymbol("typeof");
        scriptNode4.setEncodedSource("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot13.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        boolean boolean26 = comment25.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        java.lang.String str33 = comment31.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] { comment19, comment25, comment31 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        boolean boolean38 = astRoot13.isInStrictMode();
        int int39 = astRoot13.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean41 = astRoot40.hasSideEffects();
        astRoot13.target = astRoot40;
        scriptNode4.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot40);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode4.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode46.flattenSymbolTable(true);
        scriptNode46.setBounds((-1116244898), 3);
        scriptNode4.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getBaseLineno();
        java.lang.String str58 = astRoot56.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator60 = astRoot59.new NodeIterator();
        int int61 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot56, (com.google.javascript.rhino.head.ast.AstNode) astRoot59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator63 = scriptNode62.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator64 = scriptNode62.new NodeIterator();
        astRoot59.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        int int66 = astRoot59.getEndLineno();
        scriptNode4.addChildToBack((com.google.javascript.rhino.head.Node) astRoot59);
        scope2.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot59);
        org.junit.Assert.assertNotNull(astNodeList3);
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(symbol10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                                                                                                                                                        " + "'", str33, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str58, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test03524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03524");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scriptNode23.getChildScopes();
        int int26 = scriptNode23.getBaseLineno();
        com.google.javascript.rhino.head.Node node27 = scriptNode23.getLastSibling();
        scriptNode23.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode30.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode31);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList33 = scriptNode31.getFunctions();
        scriptNode31.setPosition((int) (byte) 10);
        java.lang.String str36 = scriptNode23.toStringTree(scriptNode31);
        int int37 = scriptNode23.getBaseLineno();
        scriptNode23.setEncodedSourceStart((int) '4');
        scriptNode12.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Node node42 = com.google.javascript.rhino.head.Node.newString("136");
        node42.setString("                                                                                                        {\n                                                                                                        }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode47.getChildScopes();
        int int50 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.Node node51 = scriptNode47.getLastSibling();
        int int52 = scriptNode47.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator57 = astRoot56.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType60, "");
        boolean boolean63 = comment62.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType66, "");
        boolean boolean69 = comment68.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType72, "");
        java.lang.String str76 = comment74.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray77 = new com.google.javascript.rhino.head.ast.Comment[] { comment62, comment68, comment74 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet78 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet78, commentArray77);
        astRoot56.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet78);
        boolean boolean81 = astRoot56.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode82 = astRoot56.getParent();
        astRoot56.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node86 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode47, (com.google.javascript.rhino.head.Node) scope55, (com.google.javascript.rhino.head.Node) astRoot56, 6);
        java.lang.String str87 = node42.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        astRoot56.removeProp((-603115504));
        astRoot56.setBounds(20, 100);
        java.lang.String str93 = scriptNode12.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        boolean boolean94 = astRoot56.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node96 = astRoot56.setType(6);
        java.lang.String str97 = astRoot56.debugPrint();
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(functionNodeList33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "                                                                                                                                                                                                        " + "'", str76, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(astNode82);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "20\tIFEQ 20 80\n22\t  COMMENT 2 0\n22\t  COMMENT 2 0\n22\t  COMMENT 2 0\n" + "'", str97, "20\tIFEQ 20 80\n22\t  COMMENT 2 0\n22\t  COMMENT 2 0\n22\t  COMMENT 2 0\n");
    }

    @Test
    public void test03525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03525");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            errorReporter8.warning("                  {\n                  }\n", "AstRoot", (-191564152), "-213029975\tSCRIPT -213029975 1\n", (-777163487));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter8);
    }

    @Test
    public void test03526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03526");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        java.lang.String str20 = scriptNode16.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList25 = scriptNode1.getSymbols();
        java.lang.String str26 = scriptNode1.getEncodedSource();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray27 = scriptNode1.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(symbolList25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test03527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03527");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot((int) '4');
        astRoot0.setCompilerData((java.lang.Object) astRoot5);
        com.google.javascript.rhino.head.Node node8 = astRoot5.setType(25);
        // The following exception was thrown during execution in test generation
        try {
            astRoot5.labelId(644758030);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertNotNull(node8);
    }

    @Test
    public void test03528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03528");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getBaseLineno();
        int int2 = astRoot0.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.Node node8 = scriptNode4.getLastSibling();
        scriptNode4.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode12.getFunctions();
        scriptNode12.setPosition((int) (byte) 10);
        java.lang.String str17 = scriptNode4.toStringTree(scriptNode12);
        int int18 = scriptNode4.getBaseLineno();
        astRoot0.target = scriptNode4;
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons20.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean24 = compilerEnvirons23.isReservedKeywordAsIdentifier();
        boolean boolean25 = compilerEnvirons23.getWarnTrailingComma();
        compilerEnvirons23.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet28 = compilerEnvirons23.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons23.getErrorReporter();
        java.lang.String[] strArray35 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        compilerEnvirons23.setActivationNames((java.util.Set<java.lang.String>) strSet36);
        com.google.javascript.rhino.head.ErrorReporter errorReporter39 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser40 = new com.google.javascript.rhino.head.Parser(compilerEnvirons20, errorReporter39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = parser40.parse("          hi!", "hi!", 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = astRoot45.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType49, "");
        boolean boolean52 = comment51.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType55, "");
        boolean boolean58 = comment57.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType61, "");
        java.lang.String str65 = comment63.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray66 = new com.google.javascript.rhino.head.ast.Comment[] { comment51, comment57, comment63 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet67, commentArray66);
        astRoot45.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet67);
        boolean boolean70 = astRoot45.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray71 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList72 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList72, symbolArray71);
        astRoot45.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList72);
        int int75 = astRoot45.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment76 = astRoot45.getJsDocNode();
        astRoot45.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType81, "");
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        comment83.setCommentType(commentType84);
        astRoot45.setJsDocNode(comment83);
        astRoot44.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot45);
        scriptNode4.setCompilerData((java.lang.Object) astRoot44);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor89 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.visit(nodeVisitor89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(compilerEnvirons20);
        org.junit.Assert.assertNotNull(compilerEnvirons23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strSet28);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(errorReporter39);
        org.junit.Assert.assertNotNull(astRoot44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                                                                                                                                                                                                        " + "'", str65, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(symbolArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(comment76);
    }

    @Test
    public void test03529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03529");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        int int8 = scriptNode4.getParamCount();
        scriptNode4.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode4.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode13.getChildScopes();
        int int16 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode19.getChildScopes();
        java.lang.String str23 = scriptNode19.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode13.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scriptNode25);
        scriptNode13.setEncodedSourceEnd(170);
        int int29 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scope11, (com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scriptNode13.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator30.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(scope11);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test03530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03530");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        int int11 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.Node node12 = scriptNode8.getLastSibling();
        scriptNode8.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode16.getFunctions();
        scriptNode16.setPosition((int) (byte) 10);
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode16);
        int int22 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.Node node24 = scriptNode8.setType((int) (byte) -1);
        scriptNode1.target = scriptNode8;
        java.lang.String str26 = scriptNode1.getEncodedSource();
        java.lang.Object obj28 = scriptNode1.getProp((-704784932));
        int int29 = scriptNode1.getParamCount();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test03531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03531");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        int int4 = compilerEnvirons0.getOptimizationLevel();
        int int5 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean8 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean9 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 170 + "'", int5 == 170);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03532");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot0.getJsDocNode();
        astRoot0.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        comment38.setCommentType(commentType39);
        astRoot0.setJsDocNode(comment38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode43.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = astRoot46.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor48 = astRoot46.iterator();
        scriptNode43.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot46);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor50 = null;
        astRoot46.visitComments(nodeVisitor50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str54 = scriptNode52.toSource((int) '4');
        com.google.javascript.rhino.head.Node node55 = scriptNode52.getFirstChild();
        astRoot46.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode52);
        comment38.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot46);
        astRoot46.checkParentLinks();
        com.google.javascript.rhino.head.Node node59 = astRoot46.getNext();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int61 = astRoot60.getBaseLineno();
        int int62 = astRoot60.getPosition();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        astRoot60.visitComments(nodeVisitor63);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = astRoot65.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType69, "");
        boolean boolean72 = comment71.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType75, "");
        boolean boolean78 = comment77.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType81, "");
        java.lang.String str85 = comment83.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray86 = new com.google.javascript.rhino.head.ast.Comment[] { comment71, comment77, comment83 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet87 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet87, commentArray86);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet87);
        boolean boolean90 = astRoot65.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode91 = astRoot65.getParent();
        java.lang.String str92 = astRoot65.debugPrint();
        int int93 = astRoot65.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet94 = astRoot65.getComments();
        astRoot60.setComments(commentSet94);
        astRoot46.setComments(commentSet94);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertNotNull(nodeItor48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str54, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "                                                                                                                                                                                                        " + "'", str85, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(astNode91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str92, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(commentSet94);
    }

    @Test
    public void test03533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03533");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot0.getJsDocNode();
        astRoot0.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        comment38.setCommentType(commentType39);
        astRoot0.setJsDocNode(comment38);
        int int42 = astRoot0.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator47 = scriptNode46.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        java.lang.String str54 = comment52.toSource(100);
        java.lang.String str55 = comment52.getValue();
        scriptNode46.setParent((com.google.javascript.rhino.head.ast.AstNode) comment52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator58 = astRoot57.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType61, "");
        boolean boolean64 = comment63.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType67, "");
        boolean boolean70 = comment69.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType73, "");
        java.lang.String str77 = comment75.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray78 = new com.google.javascript.rhino.head.ast.Comment[] { comment63, comment69, comment75 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet79, commentArray78);
        astRoot57.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        boolean boolean82 = astRoot57.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray83 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList84, symbolArray83);
        astRoot57.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        com.google.javascript.rhino.head.Node node87 = astRoot57.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode89 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode88.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode89);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot57, (com.google.javascript.rhino.head.ast.Scope) scriptNode89);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) comment52, (com.google.javascript.rhino.head.Node) scriptNode89);
        int int93 = comment52.getLineno();
        astRoot0.addComment(comment52);
        int int95 = comment52.getPosition();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 136 + "'", int42 == 136);
        org.junit.Assert.assertNotNull(nodeSpliterator47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                                                                                                                                                                        " + "'", str54, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                                                                                                                                                                                                        " + "'", str77, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(symbolArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2 + "'", int95 == 2);
    }

    @Test
    public void test03534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03534");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType7, "");
        java.lang.String str11 = comment9.toSource(100);
        java.lang.String str12 = comment9.getValue();
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot14.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        java.lang.String str34 = comment32.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] { comment20, comment26, comment32 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        boolean boolean39 = astRoot14.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        com.google.javascript.rhino.head.Node node44 = astRoot14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot14, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) comment9, (com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator51 = scriptNode50.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType54, "");
        java.lang.String str58 = comment56.toSource(100);
        java.lang.String str59 = comment56.getValue();
        scriptNode50.setParent((com.google.javascript.rhino.head.ast.AstNode) comment56);
        node49.setJsDocNode(comment56);
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        comment56.setCommentType(commentType62);
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                        " + "'", str11, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                                                                                                                                                        " + "'", str34, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(nodeSpliterator51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                                                                                                                                                        " + "'", str58, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test03535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03535");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        astRoot1.setEncodedSourceBounds(875237497, 25);
        boolean boolean77 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visit(nodeVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test03536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03536");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList2 = astRoot1.getFunctions();
        int int3 = astRoot1.getEncodedSourceEnd();
        astRoot1.clearParentScope();
        org.junit.Assert.assertNotNull(functionNodeList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03537");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        scriptNode1.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode9.getFunctions();
        scriptNode9.setPosition((int) (byte) 10);
        java.lang.String str14 = scriptNode1.toStringTree(scriptNode9);
        int int15 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = astRoot17.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol20 = astRoot17.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType23, "hi!");
        astRoot17.addChildrenToFront((com.google.javascript.rhino.head.Node) comment25);
        boolean boolean27 = astRoot17.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode29.getChildScopes();
        int int32 = scriptNode29.getBaseLineno();
        int int33 = scriptNode29.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode29.getSymbols();
        int int35 = scriptNode29.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = astRoot36.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        java.lang.String str56 = comment54.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] { comment42, comment48, comment54 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        boolean boolean61 = astRoot36.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray62 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList63, symbolArray62);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList63);
        com.google.javascript.rhino.head.Node node66 = astRoot36.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, (com.google.javascript.rhino.head.ast.Scope) scriptNode68);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) astRoot36, (int) (byte) 1);
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        java.lang.String str75 = astRoot36.toSource(0);
        com.google.javascript.rhino.head.ast.Comment comment76 = astRoot36.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode78 = astRoot36.getFunctionNode((-387673394));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(commentSet18);
        org.junit.Assert.assertNull(symbol20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                                                                                                                        " + "'", str56, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(symbolArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(comment76);
    }

    @Test
    public void test03538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03538");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean4 = compilerEnvirons3.isReservedKeywordAsIdentifier();
        compilerEnvirons3.setStrictMode(true);
        compilerEnvirons3.setXmlAvailable(true);
        compilerEnvirons3.setXmlAvailable(true);
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons3);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = iRFactory11.parse("-1\tSCRIPT -1 1\n", "129", 20);
        java.lang.Object obj16 = astRoot15.getCompilerData();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList17 = astRoot15.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode20.getChildScopes();
        int int23 = scriptNode20.getBaseLineno();
        com.google.javascript.rhino.head.Node node24 = scriptNode20.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        java.lang.String str30 = scriptNode26.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode32);
        java.lang.Object obj35 = scriptNode26.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource((int) '4');
        java.lang.String str39 = scriptNode26.toStringTree(scriptNode36);
        scriptNode36.setLength((-1));
        com.google.javascript.rhino.head.Node node42 = scriptNode36.getLastSibling();
        com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode36, 538062289);
        int int45 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.lang.String str46 = scriptNode36.toSource();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(compilerEnvirons3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(astRoot15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(astNodeList17);
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str38, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{\n}\n" + "'", str46, "{\n}\n");
    }

    @Test
    public void test03539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03539");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType7, "");
        java.lang.String str11 = comment9.toSource(100);
        java.lang.String str12 = comment9.getValue();
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot14.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        java.lang.String str34 = comment32.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] { comment20, comment26, comment32 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        boolean boolean39 = astRoot14.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        com.google.javascript.rhino.head.Node node44 = astRoot14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot14, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) comment9, (com.google.javascript.rhino.head.Node) scriptNode46);
        java.lang.String str50 = scriptNode2.getJsDoc();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons51 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter52 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory53 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons51, errorReporter52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList57 = scriptNode55.getFunctions();
        scriptNode55.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node60 = iRFactory53.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        java.lang.String str61 = scriptNode55.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator63 = scriptNode62.spliterator();
        com.google.javascript.rhino.head.Node node65 = scriptNode62.setType((int) '#');
        boolean boolean66 = scriptNode62.hasConsistentReturnUsage();
        scriptNode55.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode62);
        com.google.javascript.rhino.head.ast.Symbol symbol69 = scriptNode55.getSymbol("                                      ");
        scriptNode2.target = scriptNode55;
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str73 = astRoot71.toSource((int) '4');
        astRoot71.setPosition(100);
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot71);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode55.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                        " + "'", str11, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                                                                                                                                                        " + "'", str34, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(functionNodeList57);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(nodeSpliterator63);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(symbol69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test03540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03540");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        int int17 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean19 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean22 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray29 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        compilerEnvirons23.setActivationNames((java.util.Set<java.lang.String>) strSet30);
        boolean boolean33 = compilerEnvirons23.isGenerateDebugInfo();
        boolean boolean34 = compilerEnvirons23.isReservedKeywordAsIdentifier();
        compilerEnvirons23.setGenerateObserverCount(false);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons23);
        java.util.Set<java.lang.String> strSet38 = compilerEnvirons23.getActivationNames();
        compilerEnvirons0.setActivationNames(strSet38);
        boolean boolean40 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 170 + "'", int17 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test03541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03541");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        boolean boolean12 = compilerEnvirons10.getWarnTrailingComma();
        compilerEnvirons10.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons10.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter16);
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        compilerEnvirons0.setAllowSharpComments(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.getWarnTrailingComma();
        boolean boolean24 = compilerEnvirons21.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter25 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean27 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        int int28 = compilerEnvirons26.getLanguageVersion();
        compilerEnvirons26.setLanguageVersion((int) (byte) 100);
        boolean boolean31 = compilerEnvirons26.isAllowMemberExprAsFunctionName();
        compilerEnvirons26.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray40 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        compilerEnvirons34.setActivationNames((java.util.Set<java.lang.String>) strSet41);
        boolean boolean44 = compilerEnvirons34.isGenerateDebugInfo();
        compilerEnvirons34.setOptimizationLevel((int) (short) 1);
        compilerEnvirons34.setAllowSharpComments(true);
        boolean boolean49 = compilerEnvirons34.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = compilerEnvirons34.getErrorReporter();
        compilerEnvirons26.setErrorReporter(errorReporter50);
        com.google.javascript.rhino.head.ErrorReporter errorReporter52 = compilerEnvirons26.getErrorReporter();
        compilerEnvirons21.setErrorReporter(errorReporter52);
        com.google.javascript.rhino.head.IRFactory iRFactory54 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter52);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter52.error("                ", "|", (-476424842), "|", 95442628);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter25);
        org.junit.Assert.assertNotNull(compilerEnvirons26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 170 + "'", int28 == 170);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(errorReporter50);
        org.junit.Assert.assertNotNull(errorReporter52);
    }

    @Test
    public void test03542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03542");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node((-447184571));
    }

    @Test
    public void test03543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03543");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        scope0.setTop(scriptNode3);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = scope0.iterator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scope0.getChildScopes();
        java.lang.String str9 = scope0.toSource((-1116244898));
        com.google.javascript.rhino.head.ast.Scope scope11 = scope0.getDefiningScope("ScriptNode");
        com.google.javascript.rhino.head.ast.AstNode astNode12 = scope0.getParent();
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertNull(scope11);
        org.junit.Assert.assertNull(astNode12);
    }

    @Test
    public void test03544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03544");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int22 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.Node node23 = scriptNode12.getLastSibling();
        scriptNode12.removeProp(14);
        int int26 = scriptNode12.getEndLineno();
        int int27 = scriptNode12.getBaseLineno();
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test03545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03545");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-715784738), 161, commentType2, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test03546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03546");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = astRoot11.iterator();
        scriptNode8.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot11);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        astRoot11.visitComments(nodeVisitor15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource((int) '4');
        com.google.javascript.rhino.head.Node node20 = scriptNode17.getFirstChild();
        astRoot11.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode17);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.Node node28 = scriptNode24.getLastSibling();
        int int29 = scriptNode24.getEndLineno();
        scriptNode24.setBaseLineno(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = astRoot32.getComments();
        int int34 = astRoot32.getEndLineno();
        com.google.javascript.rhino.head.Node node36 = astRoot32.setType((int) (short) 10);
        astRoot32.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scriptNode43.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        java.lang.String str51 = comment49.toSource(100);
        java.lang.String str52 = comment49.getValue();
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = astRoot54.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType58, "");
        boolean boolean61 = comment60.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType64, "");
        boolean boolean67 = comment66.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType70, "");
        java.lang.String str74 = comment72.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray75 = new com.google.javascript.rhino.head.ast.Comment[] { comment60, comment66, comment72 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet76 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet76, commentArray75);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet76);
        boolean boolean79 = astRoot54.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray80 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList81, symbolArray80);
        astRoot54.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList81);
        com.google.javascript.rhino.head.Node node84 = astRoot54.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode85.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode86);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot54, (com.google.javascript.rhino.head.ast.Scope) scriptNode86);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) comment49, (com.google.javascript.rhino.head.Node) scriptNode86);
        astRoot32.addComment(comment49);
        scriptNode24.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot32);
        boolean boolean92 = scriptNode24.hasChildren();
        astRoot11.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode24);
        astRoot11.setCompilerData((java.lang.Object) 423587025);
        com.google.javascript.rhino.head.Node node96 = astRoot11.getLastChild();
        com.google.javascript.rhino.head.ast.Comment comment97 = astRoot11.getJsDocNode();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str19, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(commentSet33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                                                                                                                                                        " + "'", str51, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                                                                                                                                                                                                        " + "'", str74, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(symbolArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertNull(comment97);
    }

    @Test
    public void test03547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03547");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        int int2 = astRoot0.getRegexpCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet4 = astRoot3.getComments();
        int int5 = astRoot3.getEndLineno();
        com.google.javascript.rhino.head.Node node7 = astRoot3.setType((int) (short) 10);
        astRoot3.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scriptNode14.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        java.lang.String str22 = comment20.toSource(100);
        java.lang.String str23 = comment20.getValue();
        scriptNode14.setParent((com.google.javascript.rhino.head.ast.AstNode) comment20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = astRoot25.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        boolean boolean32 = comment31.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        boolean boolean38 = comment37.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType41, "");
        java.lang.String str45 = comment43.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray46 = new com.google.javascript.rhino.head.ast.Comment[] { comment31, comment37, comment43 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet47, commentArray46);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet47);
        boolean boolean50 = astRoot25.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray51 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList52, symbolArray51);
        astRoot25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList52);
        com.google.javascript.rhino.head.Node node55 = astRoot25.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot25, (com.google.javascript.rhino.head.ast.Scope) scriptNode57);
        com.google.javascript.rhino.head.Node node60 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) comment20, (com.google.javascript.rhino.head.Node) scriptNode57);
        astRoot3.addComment(comment20);
        com.google.javascript.rhino.head.Node node62 = astRoot3.getLastSibling();
        astRoot0.addChildToFront(node62);
        astRoot0.setBounds((int) ' ', 161);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(commentSet4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                                                                                                                                                        " + "'", str22, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                                                                                                                                                                                        " + "'", str45, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(symbolArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node62);
    }

    @Test
    public void test03548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03548");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        int int26 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean28 = astRoot27.hasSideEffects();
        astRoot0.target = astRoot27;
        java.lang.String str30 = astRoot27.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = astRoot27.getRegexpFlags(37212131);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test03549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03549");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = parser10.parse("-1\tSCRIPT -1 1\n", "35", 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode18.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = astRoot21.getComments();
        int int23 = astRoot21.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor24 = null;
        astRoot21.visitComments(nodeVisitor24);
        com.google.javascript.rhino.head.Node node26 = astRoot21.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot21.getComments();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) astRoot21);
        int int29 = scriptNode18.getLength();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory32 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons30, errorReporter31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode34.getFunctions();
        scriptNode34.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node39 = iRFactory32.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.lang.String str40 = scriptNode34.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode42.getChildScopes();
        int int45 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.Node node46 = scriptNode42.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode48.getChildScopes();
        java.lang.String str52 = scriptNode48.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode42.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scriptNode54);
        java.lang.Object obj57 = scriptNode48.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode58.toSource((int) '4');
        java.lang.String str61 = scriptNode48.toStringTree(scriptNode58);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode18.getChildScopes();
        astRoot14.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        astRoot14.checkParentLinks();
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean68 = astRoot67.hasSideEffects();
        astRoot14.addChildToBack((com.google.javascript.rhino.head.Node) astRoot67);
        int int70 = astRoot67.getRegexpCount();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertNull(commentSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str60, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test03550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03550");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(14, (int) '4');
        scope2.putIntProp(1275261773, 8);
        scope2.clearParentScope();
    }

    @Test
    public void test03551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03551");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        astRoot0.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scriptNode11.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        java.lang.String str19 = comment17.toSource(100);
        java.lang.String str20 = comment17.getValue();
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot22.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        boolean boolean29 = comment28.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        java.lang.String str42 = comment40.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray43 = new com.google.javascript.rhino.head.ast.Comment[] { comment28, comment34, comment40 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet44, commentArray43);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        boolean boolean47 = astRoot22.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.Node node52 = astRoot22.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot22, (com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) comment17, (com.google.javascript.rhino.head.Node) scriptNode54);
        astRoot0.addComment(comment17);
        com.google.javascript.rhino.head.Node node59 = astRoot0.getLastSibling();
        astRoot0.setPosition(16);
        astRoot0.putIntProp((-306271829), 14);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor65 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                                                                                                                        " + "'", str19, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                                                                                                                        " + "'", str42, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(node59);
    }

    @Test
    public void test03552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03552");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode4.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode4.getChildScopes();
        com.google.javascript.rhino.head.ast.Symbol symbol13 = scriptNode4.getSymbol("-1\t  SCRIPT 0 1\n");
        java.lang.String str14 = scriptNode4.toString();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode4.getFunctions();
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNull(symbol13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "136" + "'", str14, "136");
        org.junit.Assert.assertNotNull(functionNodeList15);
    }

    @Test
    public void test03553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03553");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = astRoot6.getComments();
        int int8 = astRoot6.getEndLineno();
        com.google.javascript.rhino.head.Node node10 = astRoot6.setType((int) (short) 10);
        astRoot6.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator18 = scriptNode17.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        java.lang.String str25 = comment23.toSource(100);
        java.lang.String str26 = comment23.getValue();
        scriptNode17.setParent((com.google.javascript.rhino.head.ast.AstNode) comment23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot28.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        java.lang.String str48 = comment46.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] { comment34, comment40, comment46 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        boolean boolean53 = astRoot28.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray54 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList55 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList55, symbolArray54);
        astRoot28.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList55);
        com.google.javascript.rhino.head.Node node58 = astRoot28.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode59.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot28, (com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) comment23, (com.google.javascript.rhino.head.Node) scriptNode60);
        astRoot6.addComment(comment23);
        com.google.javascript.rhino.head.Node node65 = astRoot6.getLastSibling();
        astRoot6.setPosition(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode(24);
        astRoot6.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray75 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList76 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList76, symbolArray75);
        scriptNode74.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList76);
        scriptNode71.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList76);
        int int80 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode69, (com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator81 = positionComparator0.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator82 = positionComparator0.reversed();
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertNull(commentSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(nodeSpliterator18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "                                                                                                                                                                                                        " + "'", str25, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                                                                                                                                                        " + "'", str48, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(symbolArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(symbolArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 25 + "'", int80 == 25);
        org.junit.Assert.assertNotNull(astNodeComparator81);
        org.junit.Assert.assertNotNull(astNodeComparator82);
    }

    @Test
    public void test03554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03554");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        boolean boolean30 = comment29.hasSideEffects();
        int int31 = comment29.getLineno();
        com.google.javascript.rhino.head.Node node33 = comment29.setType(18);
        boolean boolean34 = comment29.hasSideEffects();
        astRoot0.addComment(comment29);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator36 = comment29.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        comment29.setCommentType(commentType37);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator36);
    }

    @Test
    public void test03555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03555");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        int int8 = scriptNode4.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode10.getFunctions();
        scriptNode10.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode4.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) scope15);
        scriptNode10.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node19 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        int int28 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode30.getFunctions();
        scriptNode30.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope35);
        scriptNode30.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node39 = iRFactory22.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        scriptNode10.setTop(scriptNode30);
        int int41 = scriptNode30.getLineno();
        boolean boolean42 = scriptNode30.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList47 = scriptNode45.getChildScopes();
        int int48 = scriptNode45.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope49 = scriptNode45.getEnclosingScope();
        int int50 = scriptNode45.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode52.getChildScopes();
        int int55 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.Node node56 = scriptNode52.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode58.getChildScopes();
        java.lang.String str62 = scriptNode58.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode52.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.lang.String str66 = scriptNode52.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = null;
        scriptNode52.setTop(scriptNode67);
        scriptNode52.setSourceName("                                                                hi!");
        com.google.javascript.rhino.head.ast.AstRoot astRoot71 = scriptNode52.getAstRoot();
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node((-659200707), (com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scriptNode52, (-777163487));
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet75 = astRoot74.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol77 = astRoot74.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType80, "hi!");
        astRoot74.addChildrenToFront((com.google.javascript.rhino.head.Node) comment82);
        boolean boolean84 = astRoot74.hasSideEffects();
        boolean boolean85 = astRoot74.isInStrictMode();
        java.lang.String str87 = astRoot74.toSource(26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot88 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet89 = astRoot88.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol91 = astRoot88.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot93 = new com.google.javascript.rhino.head.ast.AstRoot((int) '4');
        astRoot88.setCompilerData((java.lang.Object) astRoot93);
        astRoot93.setBaseLineno(574921099);
        astRoot74.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot93);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode98 = astRoot74.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode30.replaceChildAfter(node73, (com.google.javascript.rhino.head.Node) astRoot74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(scopeList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(scope49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(astRoot71);
        org.junit.Assert.assertNull(commentSet75);
        org.junit.Assert.assertNull(symbol77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "                                                    hi!" + "'", str87, "                                                    hi!");
        org.junit.Assert.assertNull(commentSet89);
        org.junit.Assert.assertNull(symbol91);
        org.junit.Assert.assertNotNull(scriptNode98);
    }

    @Test
    public void test03556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03556");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Node node3 = scriptNode0.setType((int) '#');
        java.lang.String str4 = node3.getJsDoc();
        com.google.javascript.rhino.head.Node node5 = node3.getNext();
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test03557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03557");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 100L);
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment(842975161, 26, commentType4, "                                                                hi!");
        node1.setJsDocNode(comment6);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator10 = positionComparator8.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int12 = astRoot11.getBaseLineno();
        java.lang.String str13 = astRoot11.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot14.new NodeIterator();
        int int16 = positionComparator9.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot11, (com.google.javascript.rhino.head.ast.AstNode) astRoot14);
        boolean boolean17 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.Scope scope20 = new com.google.javascript.rhino.head.ast.Scope(14, (int) '4');
        astRoot11.addChildrenToFront((com.google.javascript.rhino.head.Node) scope20);
        int int22 = astRoot11.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = node1.getChildBefore((com.google.javascript.rhino.head.Node) astRoot11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNotNull(astNodeComparator10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str13, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03558");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = comment4.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment4.getCommentType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(commentType7);
        org.junit.Assert.assertNull(commentType8);
    }

    @Test
    public void test03559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03559");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(0, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode5.getChildScopes();
        int int8 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode5.getLastSibling();
        scriptNode5.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        java.lang.String str18 = scriptNode5.toStringTree(scriptNode13);
        int int19 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node21 = scriptNode5.setType((int) (byte) -1);
        scriptNode5.setSourceName("typeof");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = scriptNode26.getLastSibling();
        int int31 = scriptNode26.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = scriptNode26.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode34.getChildScopes();
        int int37 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node38 = scriptNode34.getLastSibling();
        scriptNode34.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode42.getFunctions();
        scriptNode42.setPosition((int) (byte) 10);
        java.lang.String str47 = scriptNode34.toStringTree(scriptNode42);
        int int48 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node50 = scriptNode34.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode26, node50);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, node51, 17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot((int) '4');
        node53.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = astRoot55.getTop();
        java.lang.String str58 = astRoot55.debugPrint();
        com.google.javascript.rhino.head.Node node59 = astRoot55.target;
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "52\tSCRIPT 52 1\n" + "'", str58, "52\tSCRIPT 52 1\n");
        org.junit.Assert.assertNull(node59);
    }

    @Test
    public void test03560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03560");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.Object obj16 = scriptNode7.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource((int) '4');
        java.lang.String str20 = scriptNode7.toStringTree(scriptNode17);
        scriptNode17.setLength((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode24.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = astRoot27.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor29 = astRoot27.iterator();
        scriptNode24.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot27);
        java.lang.String str31 = scriptNode24.toString();
        scriptNode17.setCompilerData((java.lang.Object) scriptNode24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int34 = astRoot33.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int36 = astRoot35.getBaseLineno();
        int int37 = astRoot35.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode39.getChildScopes();
        int int42 = scriptNode39.getBaseLineno();
        com.google.javascript.rhino.head.Node node43 = scriptNode39.getLastSibling();
        scriptNode39.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList49 = scriptNode47.getFunctions();
        scriptNode47.setPosition((int) (byte) 10);
        java.lang.String str52 = scriptNode39.toStringTree(scriptNode47);
        int int53 = scriptNode39.getBaseLineno();
        astRoot35.target = scriptNode39;
        int int55 = astRoot33.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode24.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str19, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(nodeItor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(functionNodeList49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test03561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03561");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(603173706, 0);
        astRoot1.addChildrenToFront(node34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode37.getChildScopes();
        int int40 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.Node node41 = scriptNode37.getLastSibling();
        int int42 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = scriptNode37.new NodeIterator();
        int int44 = scriptNode37.getLineno();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-1101340812), node34, (com.google.javascript.rhino.head.Node) scriptNode37, 25);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor47 = scriptNode37.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeItor47);
    }

    @Test
    public void test03562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03562");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(842975161, (-325419474));
    }

    @Test
    public void test03563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03563");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        boolean boolean5 = compilerEnvirons0.isXmlAvailable();
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test03564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03564");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int11 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean12 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setStrictMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean16 = compilerEnvirons15.isReservedKeywordAsIdentifier();
        boolean boolean17 = compilerEnvirons15.getWarnTrailingComma();
        compilerEnvirons15.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet20 = compilerEnvirons15.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = compilerEnvirons15.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser22 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter21);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter21.error("20\tIFEQ 20 80\n22\t  COMMENT 2 0\n22\t  COMMENT 2 0\n22\t  COMMENT 2 0\n", "35\tSCRIPT 35 1\n", 26, "        ", (-253374738));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(errorReporter21);
    }

    @Test
    public void test03565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03565");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        scriptNode8.setEncodedSource("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode19.getChildScopes();
        int int22 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.Node node23 = scriptNode19.getLastSibling();
        int int24 = scriptNode19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot28.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        java.lang.String str48 = comment46.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] { comment34, comment40, comment46 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        boolean boolean53 = astRoot28.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = astRoot28.getParent();
        astRoot28.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) astRoot28, 6);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) astRoot28);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor60 = node59.iterator();
        com.google.javascript.rhino.head.Node node61 = nodeItor60.next();
        // The following exception was thrown during execution in test generation
        try {
            node61.labelId(1028735497);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                                                                                                                                                        " + "'", str48, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertNotNull(nodeItor60);
        org.junit.Assert.assertNotNull(node61);
    }

    @Test
    public void test03566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03566");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGenerateObserverCount(false);
        com.google.javascript.rhino.head.IRFactory iRFactory14 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        java.io.Reader reader15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot18 = iRFactory14.parse(reader15, "18", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test03567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03567");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode7.getFunctions();
        scriptNode7.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope12);
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str16 = scriptNode7.getJsDoc();
        int int17 = scriptNode7.depth();
        com.google.javascript.rhino.head.Node node18 = scriptNode7.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = scriptNode7.getTop();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor20 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.visit(nodeVisitor20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(scriptNode19);
    }

    @Test
    public void test03568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03568");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        boolean boolean9 = astRoot3.isInStrictMode();
        java.lang.Object obj10 = astRoot3.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = astRoot12.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        boolean boolean19 = comment18.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType22, "");
        boolean boolean25 = comment24.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType28, "");
        java.lang.String str32 = comment30.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] { comment18, comment24, comment30 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        boolean boolean37 = astRoot12.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray38 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList39, symbolArray38);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList39);
        int int42 = astRoot12.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = astRoot43.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        boolean boolean50 = comment49.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType53, "");
        boolean boolean56 = comment55.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        java.lang.String str63 = comment61.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray64 = new com.google.javascript.rhino.head.ast.Comment[] { comment49, comment55, comment61 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet65, commentArray64);
        astRoot43.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        boolean boolean68 = astRoot43.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray69 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList70, symbolArray69);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList70);
        com.google.javascript.rhino.head.Node node73 = astRoot43.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode74.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot43, (com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot78 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator79 = astRoot78.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor80 = astRoot78.iterator();
        astRoot78.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node84 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot43, (com.google.javascript.rhino.head.Node) astRoot78, (int) (byte) 0);
        astRoot12.setEncodedSourceBounds(875237497, 25);
        java.lang.String str88 = astRoot3.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot12);
        com.google.javascript.rhino.head.ast.Symbol symbol89 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot3.putSymbol(symbol89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                        " + "'", str32, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(symbolArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                        " + "'", str63, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(symbolArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(nodeItor80);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test03569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03569");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        int int12 = compilerEnvirons0.getLanguageVersion();
        boolean boolean13 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setWarnTrailingComma(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 170 + "'", int12 == 170);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test03570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03570");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor74 = astRoot1.iterator();
        astRoot1.setInStrictMode(false);
        java.lang.String str77 = astRoot1.debugPrint();
        com.google.javascript.rhino.head.Node node78 = astRoot1.target;
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNotNull(nodeItor74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str77, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertNull(node78);
    }

    @Test
    public void test03571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03571");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(false);
        boolean boolean6 = compilerEnvirons0.reportWarningAsError();
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(423587025);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 423587025");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03572");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        int int17 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean21 = compilerEnvirons0.isIdeMode();
        boolean boolean22 = compilerEnvirons0.reportWarningAsError();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 170 + "'", int17 == 170);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03573");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(0);
        com.google.javascript.rhino.head.Token.CommentType commentType7 = comment4.getCommentType();
        int int8 = comment4.getAbsolutePosition();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(commentType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 35 + "'", int8 == 35);
    }

    @Test
    public void test03574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03574");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        boolean boolean12 = compilerEnvirons10.getWarnTrailingComma();
        compilerEnvirons10.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons10.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter16);
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        java.lang.String str21 = astRoot19.getJsDoc();
        java.lang.String str22 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = iRFactory18.transformTree(astRoot19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray25 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList26, symbolArray25);
        scriptNode24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getParamCount();
        int int31 = astRoot29.getRegexpCount();
        scriptNode24.addChildToBack((com.google.javascript.rhino.head.Node) astRoot29);
        int int33 = astRoot29.getPosition();
        astRoot19.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot29);
        java.lang.Class<?> wildcardClass35 = astRoot19.getClass();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertNotNull(symbolArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test03575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03575");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.getJsDoc();
        java.lang.String str3 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = astRoot0.getSymbol("                          ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getParamCount();
        java.lang.String str8 = astRoot6.getJsDoc();
        java.lang.String str9 = astRoot6.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = astRoot6.getTop();
        boolean boolean11 = astRoot6.isInStrictMode();
        int int12 = astRoot6.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment13 = astRoot6.getJsDocNode();
        java.lang.String str14 = astRoot6.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot6);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = astRoot6.getAstRoot();
        com.google.javascript.rhino.head.ast.Jump jump17 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot16.setLoop(jump17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
        org.junit.Assert.assertNotNull(scriptNode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(astRoot16);
    }

    @Test
    public void test03576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03576");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        astRoot0.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        scriptNode9.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap15 = scriptNode14.getSymbolTable();
        scriptNode9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList17 = scriptNode9.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope18 = scriptNode9.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getBaseLineno();
        java.lang.String str21 = astRoot19.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList22 = astRoot19.getSymbols();
        com.google.javascript.rhino.head.Node node24 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope18, (com.google.javascript.rhino.head.Node) astRoot19, 0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons25, errorReporter26);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = scriptNode29.getFunctions();
        scriptNode29.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node34 = iRFactory27.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        com.google.javascript.rhino.head.ast.AstNode astNode35 = scriptNode29.getParent();
        int int36 = scriptNode29.getAbsolutePosition();
        scope18.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        boolean boolean40 = astRoot39.hasConsistentReturnUsage();
        java.lang.String str41 = astRoot39.debugPrint();
        scriptNode29.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot39);
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator45 = scope44.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        scope44.setTop(scriptNode47);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor50 = scope44.iterator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scope44.getChildScopes();
        com.google.javascript.rhino.head.Node node52 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode29.replaceChildAfter((com.google.javascript.rhino.head.Node) scope44, node52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor2);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(astNodeList17);
        org.junit.Assert.assertNotNull(scope18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str21, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(symbolList22);
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(astNode35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 9 + "'", int36 == 9);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "2\tSCRIPT 2 1\n" + "'", str41, "2\tSCRIPT 2 1\n");
        org.junit.Assert.assertNotNull(nodeSpliterator45);
        org.junit.Assert.assertNotNull(nodeItor50);
        org.junit.Assert.assertNull(scopeList51);
    }

    @Test
    public void test03577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03577");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode7.getFunctions();
        scriptNode7.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope12);
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str16 = scriptNode7.getJsDoc();
        int int17 = scriptNode7.depth();
        java.lang.String str18 = scriptNode7.getEncodedSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = scriptNode7.new NodeIterator();
        boolean boolean20 = nodeIterator19.hasNext();
        boolean boolean21 = nodeIterator19.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator19.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03578");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int22 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.Node node23 = scriptNode12.getLastSibling();
        scriptNode12.removeProp(14);
        boolean boolean26 = scriptNode12.hasConsistentReturnUsage();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode12.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray28 = scriptNode12.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(scopeList27);
    }

    @Test
    public void test03579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03579");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((-213029975));
        astRoot1.checkParentLinks();
    }

    @Test
    public void test03580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03580");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean13 = compilerEnvirons12.isReservedKeywordAsIdentifier();
        boolean boolean14 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons12.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = iRFactory19.parse("          hi!", "9\t  SCRIPT 10 1\n", 7);
        java.io.Reader reader24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot27 = iRFactory19.parse(reader24, "        ", 1016536824);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: parser reused");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertNotNull(astRoot23);
    }

    @Test
    public void test03581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03581");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.Object obj16 = scriptNode7.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource((int) '4');
        java.lang.String str20 = scriptNode7.toStringTree(scriptNode17);
        scriptNode17.setLength((-1));
        boolean boolean23 = scriptNode17.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode25.getChildScopes();
        java.lang.String str28 = scriptNode25.getSourceName();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = scriptNode25.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode17.setDefault((com.google.javascript.rhino.head.Node) scriptNode25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str19, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(functionNodeList29);
    }

    @Test
    public void test03582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03582");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = astRoot8.getComments();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scriptNode14.spliterator();
        com.google.javascript.rhino.head.Node node17 = scriptNode14.setType((int) '#');
        boolean boolean18 = scriptNode14.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) astRoot8, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scriptNode14);
        com.google.javascript.rhino.head.Node node20 = iRFactory6.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.Node node22 = scriptNode11.setType((-213029975));
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType25, "hi!");
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        comment27.setCommentType(commentType28);
        int int32 = comment27.getIntProp((int) (byte) 10, 0);
        comment27.setPosition(161);
        java.lang.String str36 = comment27.toSource((-325419474));
        scriptNode11.setJsDocNode(comment27);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList38 = scriptNode11.getStatements();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(commentSet9);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(astNodeList38);
    }

    @Test
    public void test03583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03583");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        astRoot0.setInStrictMode(true);
        int int36 = astRoot0.getFunctionCount();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test03584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03584");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot0.getParent();
        java.lang.String str27 = astRoot0.debugPrint();
        int int28 = astRoot0.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = astRoot0.getComments();
        astRoot0.setEncodedSourceBounds((-325419474), 136);
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = astRoot33.getComments();
        int int35 = astRoot33.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor36 = null;
        astRoot33.visitComments(nodeVisitor36);
        com.google.javascript.rhino.head.Node node38 = astRoot33.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope39 = astRoot33.getEnclosingScope();
        astRoot33.setEncodedSourceStart(23);
        java.lang.String str43 = astRoot33.toSource(95442629);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType46, "hi!");
        java.lang.String str50 = comment48.toSource(5);
        astRoot33.setJsDocNode(comment48);
        java.lang.String str52 = comment48.getValue();
        astRoot0.addComment(comment48);
        com.google.javascript.rhino.head.Token.CommentType commentType54 = comment48.getCommentType();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str27, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(commentSet29);
        org.junit.Assert.assertNull(commentSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(scope39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "          hi!" + "'", str50, "          hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNull(commentType54);
    }

    @Test
    public void test03585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03585");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("136");
        node1.setString("                                                                                                        {\n                                                                                                        }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        int int11 = scriptNode6.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot15.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        java.lang.String str35 = comment33.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] { comment21, comment27, comment33 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        boolean boolean40 = astRoot15.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot15.getParent();
        astRoot15.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope14, (com.google.javascript.rhino.head.Node) astRoot15, 6);
        java.lang.String str46 = node1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot15);
        astRoot15.removeProp((-603115504));
        astRoot15.setBounds(20, 100);
        java.lang.String str53 = astRoot15.toSource(9);
        com.google.javascript.rhino.head.ast.Symbol symbol55 = astRoot15.getSymbol("                                                                                                                                                                                                        {\n                                                                                                                                                                                                        }\n");
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                                                                                                                        " + "'", str35, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(symbol55);
    }

    @Test
    public void test03586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03586");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot0.getParent();
        astRoot0.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode29 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scope30.spliterator();
        astRoot0.setCompilerData((java.lang.Object) nodeSpliterator31);
        com.google.javascript.rhino.head.ast.Scope scope33 = astRoot0.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor34 = scope33.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertNull(astNode29);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertNull(scope33);
    }

    @Test
    public void test03587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03587");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = scriptNode0.new NodeIterator();
        java.lang.String str3 = scriptNode0.getNextTempName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor4 = scriptNode0.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        java.lang.String str9 = scriptNode6.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        int int16 = scriptNode11.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = scriptNode11.new NodeIterator();
        int int18 = scriptNode11.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = astRoot19.new NodeIterator();
        scriptNode11.setCompilerData((java.lang.Object) nodeIterator20);
        int int22 = scriptNode6.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode24.getFunctions();
        scriptNode24.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int30 = astRoot29.getBaseLineno();
        scriptNode24.addChildToBack((com.google.javascript.rhino.head.Node) astRoot29);
        scriptNode24.flattenSymbolTable(true);
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        scriptNode0.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode11);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope36 = scriptNode0.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(nodeItor4);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1888843844 + "'", int22 == 1888843844);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test03588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03588");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        int int17 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setXmlAvailable(false);
        compilerEnvirons0.setXmlAvailable(false);
        boolean boolean22 = compilerEnvirons0.getWarnTrailingComma();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 170 + "'", int17 == 170);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test03589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03589");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = astRoot34.getComments();
        int int36 = astRoot34.getEndLineno();
        com.google.javascript.rhino.head.Node node38 = astRoot34.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        astRoot34.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray41 = astRoot34.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(commentSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node38);
    }

    @Test
    public void test03590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03590");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scriptNode3.getChildScopes();
        int int6 = scriptNode3.getBaseLineno();
        com.google.javascript.rhino.head.Node node7 = scriptNode3.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        java.lang.String str13 = scriptNode9.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode3.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scriptNode15);
        java.lang.Object obj18 = scriptNode9.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str21 = scriptNode19.toSource((int) '4');
        java.lang.String str22 = scriptNode9.toStringTree(scriptNode19);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter24 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory25 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons23, errorReporter24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = scriptNode27.getChildScopes();
        int int30 = scriptNode27.getBaseLineno();
        int int31 = scriptNode27.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList35 = scriptNode33.getFunctions();
        scriptNode33.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope38 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode27.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode33, (com.google.javascript.rhino.head.Node) scope38);
        scriptNode33.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node42 = iRFactory25.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory45 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons43, errorReporter44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode47.getChildScopes();
        int int50 = scriptNode47.getBaseLineno();
        int int51 = scriptNode47.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList55 = scriptNode53.getFunctions();
        scriptNode53.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope58 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode47.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scope58);
        scriptNode53.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node62 = iRFactory45.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        scriptNode33.setTop(scriptNode53);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scriptNode33, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = scriptNode33.getTop();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = null;
        java.lang.String str69 = node67.toStringTree(scriptNode68);
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str21, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(functionNodeList35);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(functionNodeList55);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test03591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03591");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        int int11 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.Node node12 = scriptNode8.getLastSibling();
        scriptNode8.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode16.getFunctions();
        scriptNode16.setPosition((int) (byte) 10);
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode16);
        int int22 = scriptNode8.getBaseLineno();
        com.google.javascript.rhino.head.Node node24 = scriptNode8.setType((int) (byte) -1);
        scriptNode1.target = scriptNode8;
        com.google.javascript.rhino.head.ast.Scope scope28 = new com.google.javascript.rhino.head.ast.Scope(6, (int) (short) -1);
        scriptNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) scope28);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList30 = scriptNode8.getSymbols();
        com.google.javascript.rhino.head.ast.AstNode astNode31 = scriptNode8.getParent();
        // The following exception was thrown during execution in test generation
        try {
            double double32 = astNode31.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(symbolList30);
        org.junit.Assert.assertNotNull(astNode31);
    }

    @Test
    public void test03592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03592");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        int int20 = compilerEnvirons18.getLanguageVersion();
        int int21 = compilerEnvirons18.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean23 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        compilerEnvirons22.setStrictMode(true);
        compilerEnvirons22.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        boolean boolean38 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean41 = compilerEnvirons0.isXmlAvailable();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 170 + "'", int20 == 170);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 170 + "'", int21 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test03593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03593");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        int int20 = compilerEnvirons18.getLanguageVersion();
        int int21 = compilerEnvirons18.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean23 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        compilerEnvirons22.setStrictMode(true);
        compilerEnvirons22.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        java.io.Reader reader38 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot41 = iRFactory37.parse(reader38, "-1\t  SCRIPT -19 1\n", 452928004);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 170 + "'", int20 == 170);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 170 + "'", int21 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
    }

    @Test
    public void test03594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03594");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scriptNode9.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode9.new NodeIterator();
        astRoot6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor13 = null;
        astRoot6.visitComments(nodeVisitor13);
        int int15 = astRoot6.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode17.getChildScopes();
        int int20 = scriptNode17.getBaseLineno();
        com.google.javascript.rhino.head.Node node21 = scriptNode17.getLastSibling();
        int int22 = scriptNode17.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = scriptNode17.new NodeIterator();
        int int24 = scriptNode17.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = astRoot25.new NodeIterator();
        scriptNode17.setCompilerData((java.lang.Object) nodeIterator26);
        astRoot6.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        int int29 = astRoot6.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray30 = astRoot6.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test03595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03595");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType7, "");
        java.lang.String str11 = comment9.toSource(100);
        java.lang.String str12 = comment9.getValue();
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot14.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        java.lang.String str34 = comment32.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] { comment20, comment26, comment32 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        boolean boolean39 = astRoot14.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        com.google.javascript.rhino.head.Node node44 = astRoot14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot14, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) comment9, (com.google.javascript.rhino.head.Node) scriptNode46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode51.getChildScopes();
        java.lang.String str54 = scriptNode51.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode56.getChildScopes();
        int int59 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.Node node60 = scriptNode56.getLastSibling();
        int int61 = scriptNode56.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator62 = scriptNode56.new NodeIterator();
        int int63 = scriptNode56.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot64 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator65 = astRoot64.new NodeIterator();
        scriptNode56.setCompilerData((java.lang.Object) nodeIterator65);
        int int67 = scriptNode51.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        scriptNode56.setLineno(20);
        com.google.javascript.rhino.head.Node node70 = scriptNode56.getLastSibling();
        scriptNode2.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode56);
        int int72 = scriptNode2.getEncodedSourceEnd();
        int int73 = scriptNode2.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope74 = scriptNode2.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                        " + "'", str11, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                                                                                                                                                        " + "'", str34, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1002486615 + "'", int67 == 1002486615);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test03596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03596");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = scriptNode0.new NodeIterator();
        int int3 = scriptNode0.getBaseLineno();
        java.lang.String str4 = scriptNode0.shortName();
        int int7 = scriptNode0.getIntProp((-837790279), 481479666);
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ScriptNode" + "'", str4, "ScriptNode");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 481479666 + "'", int7 == 481479666);
    }

    @Test
    public void test03597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03597");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        compilerEnvirons0.setGeneratingSource(true);
        boolean boolean7 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean8 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03598");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        scriptNode1.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode9.getFunctions();
        scriptNode9.setPosition((int) (byte) 10);
        java.lang.String str14 = scriptNode1.toStringTree(scriptNode9);
        int int15 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = astRoot17.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol20 = astRoot17.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType23, "hi!");
        astRoot17.addChildrenToFront((com.google.javascript.rhino.head.Node) comment25);
        boolean boolean27 = astRoot17.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode29.getChildScopes();
        int int32 = scriptNode29.getBaseLineno();
        int int33 = scriptNode29.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode29.getSymbols();
        int int35 = scriptNode29.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = astRoot36.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        java.lang.String str56 = comment54.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] { comment42, comment48, comment54 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        boolean boolean61 = astRoot36.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray62 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList63, symbolArray62);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList63);
        com.google.javascript.rhino.head.Node node66 = astRoot36.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, (com.google.javascript.rhino.head.ast.Scope) scriptNode68);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) astRoot36, (int) (byte) 1);
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        java.lang.String str75 = astRoot36.toSource(0);
        com.google.javascript.rhino.head.ast.Comment comment76 = astRoot36.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Comment comment77 = comment76.getJsDocNode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(commentSet18);
        org.junit.Assert.assertNull(symbol20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                                                                                                                        " + "'", str56, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(symbolArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(comment76);
    }

    @Test
    public void test03599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03599");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) 'a');
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str5 = scriptNode3.toSource((int) '4');
        com.google.javascript.rhino.head.Node node6 = scriptNode3.getFirstChild();
        java.lang.Object obj8 = scriptNode3.getProp(18);
        boolean boolean9 = scriptNode3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = astRoot10.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol13 = astRoot10.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType16, "hi!");
        astRoot10.addChildrenToFront((com.google.javascript.rhino.head.Node) comment18);
        astRoot10.setInStrictMode(true);
        java.lang.String str22 = scriptNode3.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot10);
        com.google.javascript.rhino.head.Node node23 = astRoot10.getLastChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = astRoot10.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope26 = new com.google.javascript.rhino.head.ast.Scope(603173706);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = scope26.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            scope1.replaceChildAfter((com.google.javascript.rhino.head.Node) astRoot10, (com.google.javascript.rhino.head.Node) scope26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str5, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(commentSet11);
        org.junit.Assert.assertNull(symbol13);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(astRoot27);
    }

    @Test
    public void test03600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03600");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        com.google.javascript.rhino.head.Node node5 = astRoot0.getFirstChild();
        boolean boolean6 = astRoot0.isInStrictMode();
        java.lang.String str8 = astRoot0.toSource(4);
        astRoot0.removeChildren();
        java.lang.Class<?> wildcardClass10 = astRoot0.getClass();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test03601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03601");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator3 = positionComparator1.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getBaseLineno();
        java.lang.String str6 = astRoot4.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        int int9 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot4, (com.google.javascript.rhino.head.ast.AstNode) astRoot7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator11 = scriptNode10.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scriptNode10.new NodeIterator();
        astRoot7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor14 = null;
        astRoot7.visitComments(nodeVisitor14);
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator18 = astRoot17.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        boolean boolean30 = comment29.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType33, "");
        java.lang.String str37 = comment35.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray38 = new com.google.javascript.rhino.head.ast.Comment[] { comment23, comment29, comment35 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet39 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet39, commentArray38);
        astRoot17.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet39);
        boolean boolean42 = astRoot17.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray43 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList44 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList44, symbolArray43);
        astRoot17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList44);
        int int47 = astRoot17.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator49 = astRoot48.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        boolean boolean55 = comment54.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType58, "");
        boolean boolean61 = comment60.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType64, "");
        java.lang.String str68 = comment66.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray69 = new com.google.javascript.rhino.head.ast.Comment[] { comment54, comment60, comment66 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet70 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet70, commentArray69);
        astRoot48.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet70);
        boolean boolean73 = astRoot48.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray74 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList75 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList75, symbolArray74);
        astRoot48.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList75);
        com.google.javascript.rhino.head.Node node78 = astRoot48.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode80 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode79.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode80);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot48, (com.google.javascript.rhino.head.ast.Scope) scriptNode80);
        com.google.javascript.rhino.head.ast.AstRoot astRoot83 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator84 = astRoot83.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor85 = astRoot83.iterator();
        astRoot83.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) astRoot48, (com.google.javascript.rhino.head.Node) astRoot83, (int) (byte) 0);
        astRoot48.setEncodedSource("                                ");
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) astRoot7, (com.google.javascript.rhino.head.Node) astRoot48);
        int int93 = astRoot48.getLength();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList94 = astRoot48.getFunctions();
        com.google.javascript.rhino.head.ast.Symbol symbol95 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot48.putSymbol(symbol95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                                                                                                                                                        " + "'", str37, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(symbolArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "                                                                                                                                                                                                        " + "'", str68, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(symbolArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(nodeItor85);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(functionNodeList94);
    }

    @Test
    public void test03602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03602");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode4.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = astRoot7.iterator();
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        int int15 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot7, (com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode12.getSymbols();
        scriptNode12.setSourceName("                                          ");
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral19 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode12.addRegExp(regExpLiteral19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(symbolList16);
    }

    @Test
    public void test03603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03603");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        astRoot0.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scriptNode11.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        java.lang.String str19 = comment17.toSource(100);
        java.lang.String str20 = comment17.getValue();
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot22.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        boolean boolean29 = comment28.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        java.lang.String str42 = comment40.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray43 = new com.google.javascript.rhino.head.ast.Comment[] { comment28, comment34, comment40 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet44, commentArray43);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        boolean boolean47 = astRoot22.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.Node node52 = astRoot22.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot22, (com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) comment17, (com.google.javascript.rhino.head.Node) scriptNode54);
        astRoot0.addComment(comment17);
        com.google.javascript.rhino.head.Node node59 = astRoot0.getLastSibling();
        astRoot0.setPosition(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode(24);
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList65 = astRoot0.getFunctions();
        java.lang.String str66 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.AstNode astNode67 = astRoot0.getParent();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                                                                                                                        " + "'", str19, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                                                                                                                        " + "'", str42, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(functionNodeList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "$0" + "'", str66, "$0");
        org.junit.Assert.assertNull(astNode67);
    }

    @Test
    public void test03604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03604");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType6, "hi!");
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) comment8);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            comment8.visit(nodeVisitor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
    }

    @Test
    public void test03605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03605");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode3.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray10 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList11 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList11, symbolArray10);
        scriptNode9.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        scriptNode6.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        scriptNode3.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        scriptNode1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList11);
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode1.getParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstNode astNode18 = scope17.getParent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(scope17);
    }

    @Test
    public void test03606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03606");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.putIntProp((int) (short) 1, 1);
        scriptNode0.setEncodedSource("typeof");
        java.lang.Object obj7 = scriptNode0.getProp(2);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList8 = scriptNode0.getStatements();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node18 = iRFactory11.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode13.getChildScopes();
        scriptNode0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = astRoot21.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        boolean boolean34 = comment33.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        java.lang.String str41 = comment39.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray42 = new com.google.javascript.rhino.head.ast.Comment[] { comment27, comment33, comment39 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet43, commentArray42);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet43);
        java.lang.String str46 = astRoot21.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot47 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = astRoot47.getComments();
        java.lang.String str49 = astRoot47.getSourceName();
        boolean boolean50 = astRoot47.hasChildren();
        int int51 = astRoot47.getLineno();
        astRoot21.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot47);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = astRoot47.getTop();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(astNodeList8);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                                                                                                                                                        " + "'", str41, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str46, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertNull(commentSet48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(scriptNode53);
    }

    @Test
    public void test03607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03607");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource((int) '4');
        com.google.javascript.rhino.head.Node node3 = scriptNode0.getFirstChild();
        java.lang.Object obj5 = scriptNode0.getProp(18);
        boolean boolean6 = scriptNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Comment comment7 = scriptNode0.getJsDocNode();
        scriptNode0.setPosition((int) ' ');
        scriptNode0.setEncodedSourceStart(8);
        scriptNode0.setBaseLineno((int) (short) 100);
        int int14 = scriptNode0.getEncodedSourceStart();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = scriptNode0.getExistingIntProp((-1034592013));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str2, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(comment7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
    }

    @Test
    public void test03608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03608");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean4 = compilerEnvirons3.isReservedKeywordAsIdentifier();
        boolean boolean5 = compilerEnvirons3.getWarnTrailingComma();
        compilerEnvirons3.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet8 = compilerEnvirons3.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons3.getErrorReporter();
        java.lang.String[] strArray15 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        compilerEnvirons3.setActivationNames((java.util.Set<java.lang.String>) strSet16);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser20 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter19);
        boolean boolean21 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(compilerEnvirons3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test03609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03609");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = iRFactory19.transformTree(astRoot20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
    }

    @Test
    public void test03610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03610");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = astRoot34.getComments();
        int int36 = astRoot34.getEndLineno();
        com.google.javascript.rhino.head.Node node38 = astRoot34.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        astRoot0.setBaseLineno((int) (byte) 0);
        int int42 = astRoot0.getEndLineno();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(commentSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test03611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03611");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        int int5 = astRoot0.getLength();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test03612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03612");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        java.lang.String str13 = scriptNode9.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        scriptNode15.setEncodedSourceEnd(11);
        int int19 = scriptNode9.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        scriptNode1.putProp(8, (java.lang.Object) scriptNode15);
        scriptNode1.setEndLineno(14);
        java.lang.String str23 = scriptNode1.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList27 = scriptNode25.getChildScopes();
        int int28 = scriptNode25.getBaseLineno();
        com.google.javascript.rhino.head.Node node29 = scriptNode25.getLastSibling();
        int int30 = scriptNode25.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator31 = scriptNode25.new NodeIterator();
        int int32 = scriptNode25.getLineno();
        scriptNode25.setEncodedSourceEnd((int) (byte) -1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap35 = scriptNode25.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource((int) '4');
        com.google.javascript.rhino.head.Node node40 = scriptNode37.getFirstChild();
        java.lang.Object obj42 = scriptNode37.getProp(18);
        boolean boolean43 = scriptNode37.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet45 = astRoot44.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol47 = astRoot44.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType50, "hi!");
        astRoot44.addChildrenToFront((com.google.javascript.rhino.head.Node) comment52);
        astRoot44.setInStrictMode(true);
        java.lang.String str56 = scriptNode37.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot44);
        com.google.javascript.rhino.head.Node node57 = astRoot44.getLastChild();
        scriptNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot44);
        // The following exception was thrown during execution in test generation
        try {
            astRoot44.setBaseLineno((-777163487));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-700519401) + "'", int19 == (-700519401));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(scopeList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str39, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(commentSet45);
        org.junit.Assert.assertNull(symbol47);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(node57);
    }

    @Test
    public void test03613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03613");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("                    ");
        // The following exception was thrown during execution in test generation
        try {
            node1.labelId((-1171321573));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03614");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        int int20 = compilerEnvirons18.getLanguageVersion();
        int int21 = compilerEnvirons18.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean23 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        compilerEnvirons22.setStrictMode(true);
        compilerEnvirons22.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray44 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        compilerEnvirons38.setActivationNames((java.util.Set<java.lang.String>) strSet45);
        boolean boolean48 = compilerEnvirons38.isGenerateDebugInfo();
        compilerEnvirons38.setOptimizationLevel((int) (short) 1);
        compilerEnvirons38.setAllowSharpComments(true);
        boolean boolean53 = compilerEnvirons38.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter54 = compilerEnvirons38.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser55 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter54);
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean58 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons59 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean60 = compilerEnvirons59.isReservedKeywordAsIdentifier();
        int int61 = compilerEnvirons59.getLanguageVersion();
        int int62 = compilerEnvirons59.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons63 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean64 = compilerEnvirons63.isReservedKeywordAsIdentifier();
        compilerEnvirons63.setStrictMode(true);
        compilerEnvirons63.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons69 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean70 = compilerEnvirons69.isReservedKeywordAsIdentifier();
        boolean boolean71 = compilerEnvirons69.getWarnTrailingComma();
        compilerEnvirons69.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet74 = compilerEnvirons69.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter75 = compilerEnvirons69.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory76 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons63, errorReporter75);
        com.google.javascript.rhino.head.IRFactory iRFactory77 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons59, errorReporter75);
        compilerEnvirons59.setAllowSharpComments(false);
        boolean boolean80 = compilerEnvirons59.recoverFromErrors();
        java.util.Set<java.lang.String> strSet81 = compilerEnvirons59.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons82 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean83 = compilerEnvirons82.isReservedKeywordAsIdentifier();
        boolean boolean84 = compilerEnvirons82.getWarnTrailingComma();
        compilerEnvirons82.setXmlAvailable(true);
        boolean boolean87 = compilerEnvirons82.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory88 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons82);
        boolean boolean89 = compilerEnvirons82.recoverFromErrors();
        com.google.javascript.rhino.head.ErrorReporter errorReporter90 = compilerEnvirons82.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser91 = new com.google.javascript.rhino.head.Parser(compilerEnvirons59, errorReporter90);
        compilerEnvirons0.setErrorReporter(errorReporter90);
        boolean boolean93 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 170 + "'", int20 == 170);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 170 + "'", int21 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(compilerEnvirons38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(errorReporter54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 170 + "'", int61 == 170);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 170 + "'", int62 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(strSet74);
        org.junit.Assert.assertNotNull(errorReporter75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strSet81);
        org.junit.Assert.assertNotNull(compilerEnvirons82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(errorReporter90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test03615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03615");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((-603173706));
    }

    @Test
    public void test03616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03616");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode2.getFunctions();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, 8);
        int int7 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = astRoot8.getComments();
        java.lang.String str10 = astRoot8.getSourceName();
        boolean boolean11 = astRoot8.hasChildren();
        int int12 = astRoot8.getLineno();
        astRoot8.setEncodedSourceBounds((int) (byte) 10, (int) (short) 100);
        com.google.javascript.rhino.head.ast.Comment comment16 = astRoot8.getJsDocNode();
        scriptNode2.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot8);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons18.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.getWarnTrailingComma();
        compilerEnvirons21.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet26 = compilerEnvirons21.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons21.getErrorReporter();
        java.lang.String[] strArray33 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerEnvirons21.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser38 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = parser38.parse("          hi!", "hi!", 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = astRoot43.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        boolean boolean50 = comment49.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType53, "");
        boolean boolean56 = comment55.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        java.lang.String str63 = comment61.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray64 = new com.google.javascript.rhino.head.ast.Comment[] { comment49, comment55, comment61 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet65, commentArray64);
        astRoot43.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        boolean boolean68 = astRoot43.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray69 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList70, symbolArray69);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList70);
        int int73 = astRoot43.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment74 = astRoot43.getJsDocNode();
        astRoot43.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType79, "");
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        comment81.setCommentType(commentType82);
        astRoot43.setJsDocNode(comment81);
        astRoot42.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot43);
        astRoot8.addChildToBack((com.google.javascript.rhino.head.Node) astRoot43);
        com.google.javascript.rhino.head.ast.Scope scope87 = astRoot8.getParentScope();
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(commentSet9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strSet26);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                        " + "'", str63, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(symbolArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(comment74);
        org.junit.Assert.assertNull(scope87);
    }

    @Test
    public void test03617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03617");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope(1, (int) 'a');
        scope2.clearParentScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.IRFactory iRFactory12 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot13.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor15 = astRoot13.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor16 = null;
        astRoot13.visitComments(nodeVisitor16);
        com.google.javascript.rhino.head.Node node18 = astRoot13.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = iRFactory12.transformTree(astRoot13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode23.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot26.getComments();
        int int28 = astRoot26.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        astRoot26.visitComments(nodeVisitor29);
        com.google.javascript.rhino.head.Node node31 = astRoot26.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = astRoot26.getComments();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) astRoot26);
        int int34 = scriptNode23.getLength();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons35 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter36 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons35, errorReporter36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode39.getFunctions();
        scriptNode39.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node44 = iRFactory37.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        java.lang.String str45 = scriptNode39.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode47.getChildScopes();
        int int50 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.Node node51 = scriptNode47.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode53.getChildScopes();
        java.lang.String str57 = scriptNode53.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode47.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode53, (com.google.javascript.rhino.head.Node) scriptNode59);
        java.lang.Object obj62 = scriptNode53.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str65 = scriptNode63.toSource((int) '4');
        java.lang.String str66 = scriptNode53.toStringTree(scriptNode63);
        scriptNode39.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode23, (com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList69 = scriptNode23.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = scriptNode23.getSymbols();
        scriptNode19.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode23);
        com.google.javascript.rhino.head.Node node73 = scriptNode19.setType(1490422031);
        // The following exception was thrown during execution in test generation
        try {
            scope2.setContinue((com.google.javascript.rhino.head.Node) scriptNode19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(nodeItor15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNotNull(scriptNode19);
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(commentSet32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str65, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(scopeList69);
        org.junit.Assert.assertNotNull(symbolList70);
        org.junit.Assert.assertNotNull(node73);
    }

    @Test
    public void test03618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03618");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.flattenSymbolTable(true);
        scriptNode2.setBounds((-1116244898), 3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator10 = positionComparator8.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator9);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator12 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator13 = positionComparator11.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getBaseLineno();
        java.lang.String str16 = astRoot14.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator18 = astRoot17.new NodeIterator();
        int int19 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = positionComparator8.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator12);
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        java.lang.String str27 = comment25.toSource(100);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor28 = comment25.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        comment25.setCommentType(commentType29);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getBaseLineno();
        java.lang.String str36 = astRoot34.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = astRoot37.new NodeIterator();
        int int39 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot34, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.putIntProp((int) (short) 1, 1);
        java.lang.String str44 = scriptNode40.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        scope45.setTop(scriptNode48);
        scope45.setLineno((int) (short) -1);
        int int53 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode40, (com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode55.getChildScopes();
        int int58 = scriptNode55.getBaseLineno();
        int int59 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode61);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = scriptNode61.getFunctions();
        scriptNode61.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode55.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scope66);
        scriptNode61.setEncodedSource("-1\tSCRIPT -1 1\n");
        java.lang.String str70 = scriptNode40.toStringTree(scriptNode61);
        int int71 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) comment25, (com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) comment25);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode2, 0);
        com.google.javascript.rhino.head.Node node75 = scriptNode2.getLastChild();
        com.google.javascript.rhino.head.ast.Comment comment76 = node75.getJsDocNode();
        org.junit.Assert.assertNotNull(astNodeComparator10);
        org.junit.Assert.assertNotNull(astNodeComparator13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str16, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                                                                                                                        " + "'", str27, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNull(comment76);
    }

    @Test
    public void test03619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03619");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.Node node1 = scope0.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = scope0.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03620");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        boolean boolean12 = compilerEnvirons10.getWarnTrailingComma();
        compilerEnvirons10.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons10.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter16);
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        java.lang.String str21 = astRoot19.getJsDoc();
        java.lang.String str22 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = iRFactory18.transformTree(astRoot19);
        astRoot19.checkParentLinks();
        java.lang.String str25 = astRoot19.toString();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "136" + "'", str25, "136");
    }

    @Test
    public void test03621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03621");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot((int) 'a');
        java.lang.String str2 = astRoot1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "136" + "'", str2, "136");
    }

    @Test
    public void test03622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03622");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scriptNode9.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode9.new NodeIterator();
        astRoot6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.Node node13 = scriptNode9.getNext();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode14 = scriptNode9.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = functionNode14.getLength();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(functionNode14);
    }

    @Test
    public void test03623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03623");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode4.getChildScopes();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode4.new NodeIterator();
        boolean boolean12 = nodeIterator11.hasNext();
        boolean boolean13 = nodeIterator11.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node14 = nodeIterator11.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03624");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList2 = astRoot1.getFunctions();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        int int9 = comment7.getLineno();
        com.google.javascript.rhino.head.Node node11 = comment7.setType(18);
        comment7.removeChildren();
        comment7.setLineno(19);
        java.lang.String str16 = comment7.toSource(13);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setDefault((com.google.javascript.rhino.head.Node) comment7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "                          " + "'", str16, "                          ");
    }

    @Test
    public void test03625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03625");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode36.getChildScopes();
        int int39 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastSibling();
        scriptNode36.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        java.lang.String str49 = scriptNode36.toStringTree(scriptNode44);
        int int50 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node52 = scriptNode36.setType((int) (byte) -1);
        java.lang.String str53 = astRoot0.toStringTree(scriptNode36);
        java.lang.String str55 = scriptNode36.toSource((-306271829));
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = astRoot56.getComments();
        int int58 = astRoot56.getEndLineno();
        com.google.javascript.rhino.head.Node node60 = astRoot56.setType((int) (short) 10);
        scriptNode36.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot56);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator62 = scriptNode36.new NodeIterator();
        scriptNode36.setEncodedSourceStart(95442629);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{\n}\n" + "'", str55, "{\n}\n");
        org.junit.Assert.assertNull(commentSet57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(node60);
    }

    @Test
    public void test03626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03626");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        scriptNode2.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode10.getFunctions();
        scriptNode10.setPosition((int) (byte) 10);
        java.lang.String str15 = scriptNode2.toStringTree(scriptNode10);
        int int16 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node18 = scriptNode2.setType((int) (byte) -1);
        scriptNode2.setSourceName("typeof");
        com.google.javascript.rhino.head.Node node21 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.Node node28 = scriptNode24.getLastSibling();
        int int29 = scriptNode24.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator30 = scriptNode24.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        int int35 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastSibling();
        scriptNode32.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode40.getFunctions();
        scriptNode40.setPosition((int) (byte) 10);
        java.lang.String str45 = scriptNode32.toStringTree(scriptNode40);
        int int46 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node48 = scriptNode32.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode24, node48);
        com.google.javascript.rhino.head.Node node52 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "");
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node((int) 'a', (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode24, node52, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        scriptNode57.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode61.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode62.getChildScopes();
        int int65 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.Node node66 = scriptNode62.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode68.getChildScopes();
        java.lang.String str72 = scriptNode68.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode62.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode68, (com.google.javascript.rhino.head.Node) scriptNode74);
        int int76 = scriptNode68.getType();
        scriptNode57.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList81 = scriptNode79.getChildScopes();
        int int82 = scriptNode79.getBaseLineno();
        com.google.javascript.rhino.head.Node node83 = scriptNode79.getLastSibling();
        scriptNode79.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode86.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList89 = scriptNode87.getFunctions();
        scriptNode87.setPosition((int) (byte) 10);
        java.lang.String str92 = scriptNode79.toStringTree(scriptNode87);
        int int93 = scriptNode79.getBaseLineno();
        scriptNode79.setEncodedSourceStart((int) '4');
        scriptNode68.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode79);
        node54.putProp(21, (java.lang.Object) scriptNode68);
        com.google.javascript.rhino.head.Node node98 = node54.getNext();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 136 + "'", int76 == 136);
        org.junit.Assert.assertNull(scopeList81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertNotNull(functionNodeList89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNull(node98);
    }

    @Test
    public void test03627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03627");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        java.lang.String[] strArray21 = new java.lang.String[] { "$0", "                      ", "                                                                                                                                                                                                        ", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n", "ScriptNode", "AstRoot", "136" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        boolean boolean25 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray34 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        compilerEnvirons28.setActivationNames((java.util.Set<java.lang.String>) strSet35);
        boolean boolean38 = compilerEnvirons28.isGenerateDebugInfo();
        compilerEnvirons28.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter41);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = parser42.parse("18", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  LSH 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", 391457258);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(errorReporter41);
        org.junit.Assert.assertNotNull(astRoot46);
    }

    @Test
    public void test03628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03628");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        compilerEnvirons4.setStrictMode(true);
        compilerEnvirons4.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        boolean boolean12 = compilerEnvirons10.getWarnTrailingComma();
        compilerEnvirons10.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet15 = compilerEnvirons10.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons10.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter16);
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter16);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int20 = astRoot19.getParamCount();
        java.lang.String str21 = astRoot19.getJsDoc();
        java.lang.String str22 = astRoot19.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = iRFactory18.transformTree(astRoot19);
        int int24 = astRoot19.getParamCount();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node25 = astRoot19.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "$0" + "'", str22, "$0");
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test03629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03629");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        java.lang.String str6 = comment4.toSource(100);
        java.lang.String str7 = comment4.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment4.getCommentType();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                                                                                                                                                        " + "'", str6, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(commentType8);
    }

    @Test
    public void test03630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03630");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode36.getChildScopes();
        int int39 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastSibling();
        scriptNode36.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        java.lang.String str49 = scriptNode36.toStringTree(scriptNode44);
        int int50 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node52 = scriptNode36.setType((int) (byte) -1);
        java.lang.String str53 = astRoot0.toStringTree(scriptNode36);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = scriptNode36.getTop();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral55 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode54.addRegExp(regExpLiteral55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(scriptNode54);
    }

    @Test
    public void test03631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03631");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        scriptNode1.setPosition(24);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor8 = scriptNode1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(nodeItor8);
    }

    @Test
    public void test03632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03632");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        java.lang.String str8 = comment6.toSource(100);
        java.lang.String str9 = comment6.getValue();
        scriptNode0.setParent((com.google.javascript.rhino.head.ast.AstNode) comment6);
        java.lang.String str12 = scriptNode0.makeIndent(11);
        com.google.javascript.rhino.head.ast.Symbol symbol14 = scriptNode0.getSymbol("52\tSCRIPT 52 1\n");
        com.google.javascript.rhino.head.ast.Scope scope16 = scriptNode0.getDefiningScope("$0");
        int int17 = scriptNode0.getEndLineno();
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                                                                                                                                                                                                        " + "'", str8, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                      " + "'", str12, "                      ");
        org.junit.Assert.assertNull(symbol14);
        org.junit.Assert.assertNull(scope16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test03633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03633");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot0.toSource((int) '4');
        astRoot0.setEncodedSourceEnd(100);
        int int5 = astRoot0.getEndLineno();
        astRoot0.setBounds((-777163487), (-1496675853));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList12 = scriptNode10.getFunctions();
        scriptNode10.setPosition((int) (byte) 10);
        int int15 = scriptNode10.getEncodedSourceEnd();
        int int16 = scriptNode10.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode18.getChildScopes();
        int int21 = scriptNode18.getBaseLineno();
        com.google.javascript.rhino.head.Node node22 = scriptNode18.getLastSibling();
        java.lang.String str23 = scriptNode10.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.ast.AstNode astNode24 = scriptNode10.getParent();
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator26 = astRoot25.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        boolean boolean32 = comment31.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        boolean boolean38 = comment37.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType41, "");
        java.lang.String str45 = comment43.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray46 = new com.google.javascript.rhino.head.ast.Comment[] { comment31, comment37, comment43 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet47, commentArray46);
        astRoot25.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet47);
        boolean boolean50 = astRoot25.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray51 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList52 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList52, symbolArray51);
        astRoot25.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList52);
        int int55 = astRoot25.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment56 = astRoot25.getJsDocNode();
        astRoot25.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType61, "");
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        comment63.setCommentType(commentType64);
        astRoot25.setJsDocNode(comment63);
        int int67 = astRoot25.getType();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode10, (com.google.javascript.rhino.head.ast.Scope) astRoot25);
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode10);
        int int70 = astRoot0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Symbol symbol71 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.putSymbol(symbol71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(astNode24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                                                                                                                                                                                        " + "'", str45, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(symbolArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(comment56);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 136 + "'", int67 == 136);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test03634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03634");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode36.getChildScopes();
        int int39 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastSibling();
        scriptNode36.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        java.lang.String str49 = scriptNode36.toStringTree(scriptNode44);
        int int50 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node52 = scriptNode36.setType((int) (byte) -1);
        java.lang.String str53 = astRoot0.toStringTree(scriptNode36);
        scriptNode36.clearParentScope();
        scriptNode36.setEncodedSourceBounds(10, (int) (byte) 10);
        int int58 = scriptNode36.getBaseLineno();
        java.lang.String str59 = scriptNode36.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.putIntProp((int) (short) 1, 1);
        java.lang.String str64 = scriptNode60.getEncodedSource();
        java.lang.String str66 = scriptNode60.toSource(0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons67 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory69 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons67, errorReporter68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode71.getFunctions();
        scriptNode71.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node76 = iRFactory69.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        com.google.javascript.rhino.head.ast.AstNode astNode77 = scriptNode71.getParent();
        scriptNode71.setPosition((int) (byte) 1);
        scriptNode60.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode71);
        com.google.javascript.rhino.head.Node node82 = scriptNode60.setType(1891424362);
        scriptNode36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = scriptNode60.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: 1891424362");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{\n}\n" + "'", str59, "{\n}\n");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{\n}\n" + "'", str66, "{\n}\n");
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(astNode77);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test03635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03635");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray11 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet12);
        boolean boolean15 = compilerEnvirons5.isGenerateDebugInfo();
        compilerEnvirons5.setOptimizationLevel((int) (short) 1);
        compilerEnvirons5.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap24 = null;
        scriptNode23.setSymbolTable(strMap24);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = scriptNode23.getSymbols();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator31 = scriptNode30.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType34, "");
        java.lang.String str38 = comment36.toSource(100);
        java.lang.String str39 = comment36.getValue();
        scriptNode30.setParent((com.google.javascript.rhino.head.ast.AstNode) comment36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator42 = astRoot41.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType45, "");
        boolean boolean48 = comment47.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType51, "");
        boolean boolean54 = comment53.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType57, "");
        java.lang.String str61 = comment59.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray62 = new com.google.javascript.rhino.head.ast.Comment[] { comment47, comment53, comment59 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet63, commentArray62);
        astRoot41.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet63);
        boolean boolean66 = astRoot41.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray67 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList68, symbolArray67);
        astRoot41.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList68);
        com.google.javascript.rhino.head.Node node71 = astRoot41.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode72.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode73);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot41, (com.google.javascript.rhino.head.ast.Scope) scriptNode73);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) comment36, (com.google.javascript.rhino.head.Node) scriptNode73);
        java.lang.String str77 = scriptNode29.getJsDoc();
        scriptNode23.setTop(scriptNode29);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor79 = scriptNode29.iterator();
        com.google.javascript.rhino.head.Node node80 = iRFactory21.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        node80.removeChildren();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(symbolList26);
        org.junit.Assert.assertNotNull(nodeSpliterator31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                                                                                                                                                        " + "'", str38, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "                                                                                                                                                                                                        " + "'", str61, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(symbolArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(nodeItor79);
        org.junit.Assert.assertNotNull(node80);
    }

    @Test
    public void test03636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03636");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(4, "");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment(3, (-1721493936), commentType5, ">>>");
        node2.setJsDocNode(comment7);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int10 = astRoot9.getParamCount();
        java.lang.String str11 = astRoot9.getNextTempName();
        int int12 = astRoot9.getEncodedSourceStart();
        java.lang.String str13 = astRoot9.shortName();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot9.getComments();
        astRoot9.setEncodedSourceEnd((int) (byte) 100);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator17 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator18 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator19 = positionComparator17.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode21.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator25 = astRoot24.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor26 = astRoot24.iterator();
        scriptNode21.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode29.getChildScopes();
        int int32 = positionComparator18.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot24, (com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList33 = scriptNode29.getSymbols();
        scriptNode29.setSourceName("                                          ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str38 = scriptNode36.toSource((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        int int42 = scriptNode39.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode36, (com.google.javascript.rhino.head.ast.Scope) scriptNode39);
        scriptNode29.setTop(scriptNode36);
        astRoot9.setTop(scriptNode29);
        node2.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot9);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = astRoot9.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator47.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "$0" + "'", str11, "$0");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AstRoot" + "'", str13, "AstRoot");
        org.junit.Assert.assertNull(commentSet14);
        org.junit.Assert.assertNotNull(astNodeComparator19);
        org.junit.Assert.assertNotNull(nodeItor26);
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(symbolList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str38, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test03637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03637");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        boolean boolean6 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setIdeMode(false);
        boolean boolean9 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean10 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean12 = compilerEnvirons11.isReservedKeywordAsIdentifier();
        compilerEnvirons11.setStrictMode(true);
        compilerEnvirons11.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean18 = compilerEnvirons17.isReservedKeywordAsIdentifier();
        compilerEnvirons17.setStrictMode(true);
        compilerEnvirons17.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean24 = compilerEnvirons23.isReservedKeywordAsIdentifier();
        boolean boolean25 = compilerEnvirons23.getWarnTrailingComma();
        compilerEnvirons23.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet28 = compilerEnvirons23.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons17, errorReporter29);
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons11, errorReporter29);
        com.google.javascript.rhino.head.IRFactory iRFactory32 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter29);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strSet28);
        org.junit.Assert.assertNotNull(errorReporter29);
    }

    @Test
    public void test03638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03638");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scriptNode32.spliterator();
        com.google.javascript.rhino.head.Node node35 = scriptNode32.setType((int) '#');
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode41.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor46 = astRoot44.iterator();
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode49.getChildScopes();
        int int52 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        scriptNode55.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap61 = scriptNode60.getSymbolTable();
        scriptNode55.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode60);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList63 = scriptNode55.getStatements();
        int int64 = scriptNode55.getFunctionCount();
        int int65 = scriptNode55.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode32, (com.google.javascript.rhino.head.ast.Scope) scriptNode55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode68.getChildScopes();
        int int71 = scriptNode68.getBaseLineno();
        com.google.javascript.rhino.head.Node node72 = scriptNode68.getLastSibling();
        int int73 = scriptNode68.getEncodedSourceEnd();
        java.lang.String str74 = scriptNode68.debugPrint();
        scriptNode32.target = scriptNode68;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node76 = scriptNode32.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(nodeItor46);
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(astNodeList63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 11 + "'", int65 == 11);
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "-1\t  SCRIPT 0 1\n" + "'", str74, "-1\t  SCRIPT 0 1\n");
    }

    @Test
    public void test03639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03639");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean3 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean6 = compilerEnvirons0.isGeneratingSource();
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test03640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03640");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator1 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator3 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator4 = positionComparator2.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator3);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator5 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator6 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator7 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator8 = positionComparator6.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator7);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator9 = positionComparator6.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator12 = positionComparator10.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator11);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator13 = astNodeComparator12.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator14 = positionComparator6.thenComparing(astNodeComparator13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getBaseLineno();
        int int17 = astRoot15.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode19.getChildScopes();
        int int22 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.Node node23 = scriptNode19.getLastSibling();
        scriptNode19.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList29 = scriptNode27.getFunctions();
        scriptNode27.setPosition((int) (byte) 10);
        java.lang.String str32 = scriptNode19.toStringTree(scriptNode27);
        int int33 = scriptNode19.getBaseLineno();
        astRoot15.target = scriptNode19;
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = astRoot15.getComments();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = astRoot15.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int38 = astRoot37.getParamCount();
        java.lang.String str39 = astRoot37.getJsDoc();
        java.lang.String str40 = astRoot37.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = astRoot37.getTop();
        int int42 = positionComparator6.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope((int) ' ', (int) (byte) 10);
        scope45.setPosition((int) (byte) -1);
        int int48 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType51, "");
        java.lang.String str55 = comment53.toSource(100);
        java.lang.String str56 = comment53.getValue();
        boolean boolean57 = comment53.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope59 = new com.google.javascript.rhino.head.ast.Scope(52);
        int int60 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) comment53, (com.google.javascript.rhino.head.ast.AstNode) scope59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode61.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode62.getChildScopes();
        int int65 = scriptNode62.getBaseLineno();
        com.google.javascript.rhino.head.Node node66 = scriptNode62.getLastSibling();
        int int67 = scriptNode62.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = scriptNode62.new NodeIterator();
        int int69 = scriptNode62.getLineno();
        com.google.javascript.rhino.head.ast.AstNode astNode70 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int71 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode62, astNode70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator1);
        org.junit.Assert.assertNotNull(astNodeComparator4);
        org.junit.Assert.assertNotNull(astNodeComparator5);
        org.junit.Assert.assertNotNull(astNodeComparator8);
        org.junit.Assert.assertNotNull(astNodeComparator9);
        org.junit.Assert.assertNotNull(astNodeComparator12);
        org.junit.Assert.assertNotNull(astNodeComparator13);
        org.junit.Assert.assertNotNull(astNodeComparator14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(functionNodeList29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(commentSet35);
        org.junit.Assert.assertNotNull(symbolList36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "$0" + "'", str40, "$0");
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                                                                                                                                                                                                        " + "'", str55, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-51) + "'", int60 == (-51));
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test03641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03641");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scriptNode32.spliterator();
        com.google.javascript.rhino.head.Node node35 = scriptNode32.setType((int) '#');
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode41.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor46 = astRoot44.iterator();
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode49.getChildScopes();
        int int52 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode49);
        scriptNode49.putIntProp((int) (byte) -1, 11);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode49.labelId((-923688614));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(nodeItor46);
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test03642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03642");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean8 = compilerEnvirons0.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.getWarnTrailingComma();
        boolean boolean12 = compilerEnvirons9.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter13 = compilerEnvirons9.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser14 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter13);
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter17);
        com.google.javascript.rhino.head.Context context19 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(errorReporter13);
    }

    @Test
    public void test03643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03643");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = scriptNode2.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        scriptNode10.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList20 = scriptNode18.getFunctions();
        scriptNode18.setPosition((int) (byte) 10);
        java.lang.String str23 = scriptNode10.toStringTree(scriptNode18);
        int int24 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node26 = scriptNode10.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node27 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode2, node26);
        scriptNode2.setEncodedSourceStart(100);
        int int30 = scriptNode2.getFunctionCount();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral31 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.addRegExp(regExpLiteral31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNotNull(functionNodeList20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test03644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03644");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(16);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap2 = scope1.getSymbolTable();
        scope1.setLength((-552755211));
        org.junit.Assert.assertNull(strMap2);
    }

    @Test
    public void test03645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03645");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGenerateObserverCount(false);
        boolean boolean14 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean15 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean16 = compilerEnvirons0.recoverFromErrors();
        boolean boolean17 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setRecordingComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean25 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean26 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test03646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03646");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        boolean boolean18 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        java.lang.String str31 = comment29.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] { comment17, comment23, comment29 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        boolean boolean36 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot11.getParent();
        astRoot11.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) astRoot11, 6);
        astRoot11.setLineno((int) '#');
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        com.google.javascript.rhino.head.Token.CommentType commentType49 = comment48.getCommentType();
        int int50 = comment48.depth();
        astRoot11.addComment(comment48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot52 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator53 = astRoot52.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType56, "");
        boolean boolean59 = comment58.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType62, "");
        boolean boolean65 = comment64.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType68 = null;
        com.google.javascript.rhino.head.ast.Comment comment70 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType68, "");
        java.lang.String str72 = comment70.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray73 = new com.google.javascript.rhino.head.ast.Comment[] { comment58, comment64, comment70 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet74 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet74, commentArray73);
        astRoot52.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet74);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet74);
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertNull(commentType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                                                                                                                                                                                                        " + "'", str72, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03647");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator75 = scriptNode74.spliterator();
        com.google.javascript.rhino.head.Node node77 = scriptNode74.setType((int) '#');
        java.lang.Object obj78 = scriptNode74.getCompilerData();
        astRoot1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump80 = scriptNode74.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNotNull(nodeSpliterator75);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test03648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03648");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean7 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        int int8 = compilerEnvirons6.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.isIdeMode();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        boolean boolean14 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setRecordingLocalJsDocComments(true);
        boolean boolean17 = compilerEnvirons9.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        boolean boolean20 = compilerEnvirons18.getWarnTrailingComma();
        boolean boolean21 = compilerEnvirons18.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter22);
        compilerEnvirons6.setErrorReporter(errorReporter22);
        compilerEnvirons0.setErrorReporter(errorReporter22);
        boolean boolean26 = compilerEnvirons0.isXmlAvailable();
        boolean boolean27 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setAllowSharpComments(true);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        compilerEnvirons0.setStrictMode(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 170 + "'", int8 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test03649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03649");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        int int27 = astRoot1.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean29 = astRoot28.hasSideEffects();
        astRoot1.target = astRoot28;
        java.lang.String str31 = astRoot28.getSourceName();
        com.google.javascript.rhino.head.Node node33 = new com.google.javascript.rhino.head.Node((-405371752), (com.google.javascript.rhino.head.Node) astRoot28, (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = astRoot28.getRegexpFlags((-715784738));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03650");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory3 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1, errorReporter2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = scriptNode5.getFunctions();
        scriptNode5.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node10 = iRFactory3.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = astRoot12.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        boolean boolean19 = comment18.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType22, "");
        boolean boolean25 = comment24.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType28, "");
        java.lang.String str32 = comment30.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] { comment18, comment24, comment30 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        boolean boolean37 = astRoot12.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode39.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = astRoot42.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor44 = astRoot42.iterator();
        scriptNode39.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot42);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor46 = null;
        astRoot42.visitComments(nodeVisitor46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode48.toSource((int) '4');
        com.google.javascript.rhino.head.Node node51 = scriptNode48.getFirstChild();
        astRoot42.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode48);
        boolean boolean53 = astRoot42.isInStrictMode();
        astRoot12.setCompilerData((java.lang.Object) astRoot42);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode56.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator60 = astRoot59.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor61 = astRoot59.iterator();
        scriptNode56.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot59);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor63 = null;
        astRoot59.visitComments(nodeVisitor63);
        int int65 = astRoot59.getEndLineno();
        int int66 = astRoot59.getAbsolutePosition();
        com.google.javascript.rhino.head.Node node67 = new com.google.javascript.rhino.head.Node((-933351410), (com.google.javascript.rhino.head.Node) astRoot12, (com.google.javascript.rhino.head.Node) astRoot59);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node((-87298254), node10, (com.google.javascript.rhino.head.Node) astRoot59, 1410155489);
        int int70 = astRoot59.getEncodedSourceEnd();
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                        " + "'", str32, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(nodeItor44);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str50, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(nodeItor61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test03651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03651");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        int int3 = compilerEnvirons0.getLanguageVersion();
        int int4 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean6 = compilerEnvirons0.isRecordingComments();
        boolean boolean7 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 170 + "'", int3 == 170);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03652");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(1384960853);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 1384960853");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03653");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode2.getFunctions();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, 8);
        int int7 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = astRoot8.getComments();
        java.lang.String str10 = astRoot8.getSourceName();
        boolean boolean11 = astRoot8.hasChildren();
        int int12 = astRoot8.getLineno();
        astRoot8.setEncodedSourceBounds((int) (byte) 10, (int) (short) 100);
        com.google.javascript.rhino.head.ast.Comment comment16 = astRoot8.getJsDocNode();
        scriptNode2.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot8);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons18.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.getWarnTrailingComma();
        compilerEnvirons21.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet26 = compilerEnvirons21.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons21.getErrorReporter();
        java.lang.String[] strArray33 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerEnvirons21.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser38 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = parser38.parse("          hi!", "hi!", 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = astRoot43.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        boolean boolean50 = comment49.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType53, "");
        boolean boolean56 = comment55.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        java.lang.String str63 = comment61.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray64 = new com.google.javascript.rhino.head.ast.Comment[] { comment49, comment55, comment61 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet65, commentArray64);
        astRoot43.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        boolean boolean68 = astRoot43.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray69 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList70, symbolArray69);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList70);
        int int73 = astRoot43.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment74 = astRoot43.getJsDocNode();
        astRoot43.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType79, "");
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        comment81.setCommentType(commentType82);
        astRoot43.setJsDocNode(comment81);
        astRoot42.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot43);
        astRoot8.addChildToBack((com.google.javascript.rhino.head.Node) astRoot43);
        java.lang.String str87 = astRoot8.shortName();
        astRoot8.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str90 = astRoot8.getRegexpFlags((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(commentSet9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strSet26);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                        " + "'", str63, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(symbolArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(comment74);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "AstRoot" + "'", str87, "AstRoot");
    }

    @Test
    public void test03654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03654");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        int int11 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean12 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test03655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03655");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        compilerEnvirons0.setIdeMode(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03656");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot0.getJsDocNode();
        astRoot0.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = astRoot34.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        boolean boolean47 = comment46.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        java.lang.String str54 = comment52.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] { comment40, comment46, comment52 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        boolean boolean59 = astRoot34.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray60 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList61, symbolArray60);
        astRoot34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList61);
        int int64 = astRoot34.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList68 = scriptNode66.getChildScopes();
        int int69 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.Node node70 = scriptNode66.getLastSibling();
        scriptNode66.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode73.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = scriptNode74.getFunctions();
        scriptNode74.setPosition((int) (byte) 10);
        java.lang.String str79 = scriptNode66.toStringTree(scriptNode74);
        int int80 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot34, (com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot34);
        astRoot0.setEndLineno(15);
        astRoot0.setEncodedSource("      ");
        int int87 = astRoot0.getLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor88 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visitComments(nodeVisitor88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                                                                                                                                                                        " + "'", str54, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(symbolArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(functionNodeList76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 52 + "'", int87 == 52);
    }

    @Test
    public void test03657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03657");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scriptNode9.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode9.new NodeIterator();
        astRoot6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.lang.String str14 = scriptNode9.toSource(12);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = scriptNode9.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "                        {\n                        }\n" + "'", str14, "                        {\n                        }\n");
    }

    @Test
    public void test03658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03658");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(10, (int) ' ', commentType2, "0\tSCRIPT 0 1\n");
    }

    @Test
    public void test03659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03659");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        java.lang.String str27 = comment25.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] { comment13, comment19, comment25 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        boolean boolean32 = astRoot7.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType35, "hi!");
        astRoot7.addComment(comment37);
        astRoot7.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = astRoot41.getComments();
        int int43 = astRoot41.getEndLineno();
        com.google.javascript.rhino.head.Node node45 = astRoot41.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot7, (com.google.javascript.rhino.head.ast.Scope) astRoot41);
        astRoot7.setBaseLineno((int) (byte) 0);
        astRoot7.setEncodedSourceStart((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = iRFactory6.transformTree(astRoot7);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = scriptNode51.getExistingIntProp((-488381886));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                                                                                                                        " + "'", str27, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(commentSet42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(scriptNode51);
    }

    @Test
    public void test03660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03660");
        com.google.javascript.rhino.head.Node node3 = new com.google.javascript.rhino.head.Node(100, (int) (byte) 1);
        com.google.javascript.rhino.head.Node node4 = node3.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet7 = astRoot6.getComments();
        int int8 = astRoot6.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor9 = null;
        astRoot6.visitComments(nodeVisitor9);
        com.google.javascript.rhino.head.Node node11 = astRoot6.getFirstChild();
        boolean boolean12 = astRoot6.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator17 = scriptNode16.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType20, "");
        java.lang.String str24 = comment22.toSource(100);
        java.lang.String str25 = comment22.getValue();
        scriptNode16.setParent((com.google.javascript.rhino.head.ast.AstNode) comment22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = astRoot27.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        boolean boolean34 = comment33.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        boolean boolean40 = comment39.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType43, "");
        java.lang.String str47 = comment45.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray48 = new com.google.javascript.rhino.head.ast.Comment[] { comment33, comment39, comment45 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet49 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet49, commentArray48);
        astRoot27.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet49);
        boolean boolean52 = astRoot27.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray53 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList54 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList54, symbolArray53);
        astRoot27.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList54);
        com.google.javascript.rhino.head.Node node57 = astRoot27.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot27, (com.google.javascript.rhino.head.ast.Scope) scriptNode59);
        com.google.javascript.rhino.head.Node node62 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) comment22, (com.google.javascript.rhino.head.Node) scriptNode59);
        java.lang.Object obj64 = comment22.getProp((int) '4');
        java.lang.String str65 = comment22.getValue();
        java.lang.String str67 = comment22.toSource(19);
        com.google.javascript.rhino.head.Node node68 = new com.google.javascript.rhino.head.Node((int) (byte) -1, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) comment22);
        com.google.javascript.rhino.head.Node node69 = new com.google.javascript.rhino.head.Node(5, node4, node68);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(commentSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "                                                                                                                                                                                                        " + "'", str24, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "                                                                                                                                                                                                        " + "'", str47, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(symbolArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "                                      " + "'", str67, "                                      ");
    }

    @Test
    public void test03661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03661");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str10 = scriptNode4.getSourceName();
        int int11 = scriptNode4.getRegexpCount();
        java.lang.Object obj12 = scriptNode4.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        scriptNode14.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap20 = scriptNode19.getSymbolTable();
        scriptNode14.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList22 = scriptNode14.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope23 = scriptNode14.getEnclosingScope();
        scriptNode4.target = scope23;
        scriptNode4.clearParentScope();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump26 = scriptNode4.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(astNodeList22);
        org.junit.Assert.assertNotNull(scope23);
    }

    @Test
    public void test03662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03662");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean3 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean6 = compilerEnvirons0.isGeneratingSource();
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot11 = iRFactory7.parse("0\tSCRIPT 0 1\n", "                                      {\n                                      }\n", (-1121952777));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test03663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03663");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test03664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03664");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.Node node35 = astRoot0.getFirstChild();
        boolean boolean36 = astRoot0.hasChildren();
        com.google.javascript.rhino.head.ast.Comment comment37 = astRoot0.getJsDocNode();
        java.lang.String str38 = astRoot0.debugPrint();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(comment37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str38, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
    }

    @Test
    public void test03665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03665");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getParamCount();
        int int3 = astRoot1.getPosition();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter5 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons4, errorReporter5);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node13 = iRFactory6.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.lang.String str14 = scriptNode8.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator16 = scriptNode15.spliterator();
        com.google.javascript.rhino.head.Node node18 = scriptNode15.setType((int) '#');
        boolean boolean19 = scriptNode15.hasConsistentReturnUsage();
        scriptNode8.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode15);
        com.google.javascript.rhino.head.ast.Symbol symbol22 = scriptNode8.getSymbol("                                      ");
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot1, (com.google.javascript.rhino.head.ast.Scope) scriptNode8);
        boolean boolean24 = scriptNode8.hasSideEffects();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1721493936), (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) astRoot26, (-476424842));
        com.google.javascript.rhino.head.ast.Scope scope29 = scriptNode8.getEnclosingScope();
        int int30 = scriptNode8.getParamCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(nodeSpliterator16);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(symbol22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(scope29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test03666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03666");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode4.getChildScopes();
        java.lang.Object obj11 = scriptNode4.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode13.getChildScopes();
        int int16 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastSibling();
        int int18 = scriptNode13.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor19 = scriptNode13.iterator();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scriptNode21.spliterator();
        scriptNode13.setTop(scriptNode21);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        int int27 = scope24.getIntProp(16, 22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode29.getChildScopes();
        int int32 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.Node node33 = scriptNode29.getLastSibling();
        int int34 = scriptNode29.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = scriptNode29.new NodeIterator();
        int int36 = scriptNode29.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = astRoot37.new NodeIterator();
        scriptNode29.setCompilerData((java.lang.Object) nodeIterator38);
        scope24.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode29);
        com.google.javascript.rhino.head.ast.Scope scope41 = scriptNode29.getParentScope();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        com.google.javascript.rhino.head.Node node43 = scriptNode29.getFirstChild();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = scriptNode29.getParamOrVarName(298081840);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(nodeItor19);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 22 + "'", int27 == 22);
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(node43);
    }

    @Test
    public void test03667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03667");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = astRoot34.getComments();
        int int36 = astRoot34.getEndLineno();
        com.google.javascript.rhino.head.Node node38 = astRoot34.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        astRoot0.setBaseLineno((int) (byte) 0);
        astRoot0.setEncodedSourceStart((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.lang.Object obj47 = scriptNode46.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        int int51 = scriptNode48.getEndLineno();
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode46, (com.google.javascript.rhino.head.Node) scriptNode48);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator54 = astRoot53.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType57 = null;
        com.google.javascript.rhino.head.ast.Comment comment59 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType57, "");
        boolean boolean60 = comment59.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType63 = null;
        com.google.javascript.rhino.head.ast.Comment comment65 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType63, "");
        boolean boolean66 = comment65.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType69, "");
        java.lang.String str73 = comment71.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray74 = new com.google.javascript.rhino.head.ast.Comment[] { comment59, comment65, comment71 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet75 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet75, commentArray74);
        astRoot53.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet75);
        java.lang.String str78 = astRoot53.getEncodedSource();
        com.google.javascript.rhino.head.Node node79 = astRoot53.target;
        scriptNode46.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot53);
        java.lang.String str81 = astRoot53.getNextTempName();
        java.lang.String str82 = astRoot53.getSourceName();
        astRoot53.setBaseLineno(1499437464);
        java.lang.String str86 = astRoot53.toSource(19);
        com.google.javascript.rhino.head.ast.AstNode astNode87 = astRoot53.getParent();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node88 = astRoot0.getChildBefore((com.google.javascript.rhino.head.Node) astRoot53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(commentSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                                                                                                                                                                                                        " + "'", str73, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "$0" + "'", str81, "$0");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(astNode87);
    }

    @Test
    public void test03668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03668");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        int int3 = scope0.getIntProp(16, 22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode5.getChildScopes();
        int int8 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode5.getLastSibling();
        int int10 = scriptNode5.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode5.new NodeIterator();
        int int12 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot13.new NodeIterator();
        scriptNode5.setCompilerData((java.lang.Object) nodeIterator14);
        scope0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.Scope scope17 = scriptNode5.getParentScope();
        com.google.javascript.rhino.head.Node node19 = scriptNode5.setType(574921099);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray20 = scriptNode5.getParamAndVarNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 22 + "'", int3 == 22);
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scope17);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test03669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03669");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean7 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        int int8 = compilerEnvirons6.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.isIdeMode();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        boolean boolean14 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setRecordingLocalJsDocComments(true);
        boolean boolean17 = compilerEnvirons9.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        boolean boolean20 = compilerEnvirons18.getWarnTrailingComma();
        boolean boolean21 = compilerEnvirons18.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter22);
        compilerEnvirons6.setErrorReporter(errorReporter22);
        compilerEnvirons0.setErrorReporter(errorReporter22);
        boolean boolean26 = compilerEnvirons0.isXmlAvailable();
        boolean boolean27 = compilerEnvirons0.isIdeMode();
        boolean boolean28 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean31 = compilerEnvirons0.isGenerateDebugInfo();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel((-1222715009));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: -1222715009");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 170 + "'", int8 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test03670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03670");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode7.getFunctions();
        scriptNode7.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode15.getChildScopes();
        int int18 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.Node node19 = scriptNode15.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = scriptNode15.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node22 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(astRoot20);
    }

    @Test
    public void test03671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03671");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        boolean boolean5 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setGenerateObserverCount(false);
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean10 = compilerEnvirons0.isXmlAvailable();
        boolean boolean11 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03672");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode28.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = astRoot31.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor33 = astRoot31.iterator();
        scriptNode28.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot31);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        astRoot31.visitComments(nodeVisitor35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str39 = scriptNode37.toSource((int) '4');
        com.google.javascript.rhino.head.Node node40 = scriptNode37.getFirstChild();
        astRoot31.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode37);
        boolean boolean42 = astRoot31.isInStrictMode();
        astRoot1.setCompilerData((java.lang.Object) astRoot31);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType46, "hi!");
        java.lang.String str50 = comment48.toSource(0);
        java.lang.String str51 = comment48.shortName();
        boolean boolean52 = comment48.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator53 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator55 = positionComparator53.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator54);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getBaseLineno();
        java.lang.String str58 = astRoot56.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator60 = astRoot59.new NodeIterator();
        int int61 = positionComparator54.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot56, (com.google.javascript.rhino.head.ast.AstNode) astRoot59);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator63 = scriptNode62.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator64 = scriptNode62.new NodeIterator();
        astRoot59.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        com.google.javascript.rhino.head.Node node66 = scriptNode62.getFirstChild();
        comment48.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode62);
        java.lang.String str68 = comment48.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = comment48.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType72, "hi!");
        com.google.javascript.rhino.head.Token.CommentType commentType75 = comment74.getCommentType();
        com.google.javascript.rhino.head.Node node77 = new com.google.javascript.rhino.head.Node((-552755211), (com.google.javascript.rhino.head.Node) astRoot31, (com.google.javascript.rhino.head.Node) comment48, (com.google.javascript.rhino.head.Node) comment74, (int) (short) 0);
        com.google.javascript.rhino.head.Token.CommentType commentType80 = null;
        com.google.javascript.rhino.head.ast.Comment comment82 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType80, "");
        boolean boolean83 = comment82.hasSideEffects();
        int int84 = comment82.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        comment82.setCommentType(commentType85);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor87 = comment82.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType90 = null;
        com.google.javascript.rhino.head.ast.Comment comment92 = new com.google.javascript.rhino.head.ast.Comment(1836062230, (-1728226312), commentType90, "0\tSCRIPT 0 1\n");
        comment82.setJsDocNode(comment92);
        comment74.addChild((com.google.javascript.rhino.head.ast.AstNode) comment82);
        com.google.javascript.rhino.head.Node node95 = comment82.getLastSibling();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str39, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Comment" + "'", str51, "Comment");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(astNodeComparator55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str58, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator63);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNull(commentType69);
        org.junit.Assert.assertNull(commentType75);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(nodeItor87);
        org.junit.Assert.assertNotNull(node95);
    }

    @Test
    public void test03673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03673");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode4.toSource((int) '4');
        com.google.javascript.rhino.head.Node node7 = scriptNode4.getFirstChild();
        java.lang.Object obj9 = scriptNode4.getProp(18);
        boolean boolean10 = scriptNode4.hasConsistentReturnUsage();
        java.lang.String str11 = astRoot0.toStringTree(scriptNode4);
        com.google.javascript.rhino.head.Node node12 = scriptNode4.target;
        scriptNode4.setEncodedSourceBounds((-1395402336), 21);
        int int16 = scriptNode4.getEndLineno();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str6, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03674");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        boolean boolean17 = compilerEnvirons0.recoverFromErrors();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel((-488381886));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: -488381886");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test03675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03675");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        scriptNode8.setEncodedSource("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode19.getChildScopes();
        int int22 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.Node node23 = scriptNode19.getLastSibling();
        int int24 = scriptNode19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot28.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        java.lang.String str48 = comment46.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] { comment34, comment40, comment46 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        boolean boolean53 = astRoot28.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = astRoot28.getParent();
        astRoot28.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) astRoot28, 6);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) astRoot28);
        boolean boolean60 = astRoot28.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            astRoot28.setBaseLineno((-476424842));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                                                                                                                                                        " + "'", str48, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test03676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03676");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons2 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean3 = compilerEnvirons2.isReservedKeywordAsIdentifier();
        boolean boolean4 = compilerEnvirons2.getWarnTrailingComma();
        boolean boolean5 = compilerEnvirons2.reportWarningAsError();
        java.util.Set<java.lang.String> strSet6 = compilerEnvirons2.getActivationNames();
        boolean boolean7 = compilerEnvirons2.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean9 = compilerEnvirons8.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons8.getWarnTrailingComma();
        compilerEnvirons8.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet13 = compilerEnvirons8.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons8.getErrorReporter();
        java.lang.String[] strArray20 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerEnvirons8.setActivationNames((java.util.Set<java.lang.String>) strSet21);
        boolean boolean24 = compilerEnvirons8.isGenerateDebugInfo();
        boolean boolean25 = compilerEnvirons8.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean27 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        int int28 = compilerEnvirons26.getLanguageVersion();
        int int29 = compilerEnvirons26.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean31 = compilerEnvirons30.isReservedKeywordAsIdentifier();
        compilerEnvirons30.setStrictMode(true);
        compilerEnvirons30.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean37 = compilerEnvirons36.isReservedKeywordAsIdentifier();
        boolean boolean38 = compilerEnvirons36.getWarnTrailingComma();
        compilerEnvirons36.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet41 = compilerEnvirons36.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter42 = compilerEnvirons36.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory43 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons30, errorReporter42);
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26, errorReporter42);
        com.google.javascript.rhino.head.IRFactory iRFactory45 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons8, errorReporter42);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons46 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray52 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        compilerEnvirons46.setActivationNames((java.util.Set<java.lang.String>) strSet53);
        boolean boolean56 = compilerEnvirons46.isGenerateDebugInfo();
        compilerEnvirons46.setOptimizationLevel((int) (short) 1);
        compilerEnvirons46.setAllowSharpComments(true);
        boolean boolean61 = compilerEnvirons46.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter62 = compilerEnvirons46.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser63 = new com.google.javascript.rhino.head.Parser(compilerEnvirons8, errorReporter62);
        com.google.javascript.rhino.head.IRFactory iRFactory64 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons2, errorReporter62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList68 = scriptNode66.getChildScopes();
        int int69 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.Node node70 = scriptNode66.getLastSibling();
        int int71 = scriptNode66.getEndLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode73.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot76 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator77 = astRoot76.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor78 = astRoot76.iterator();
        scriptNode73.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot76);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor80 = null;
        astRoot76.visitComments(nodeVisitor80);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str84 = scriptNode82.toSource((int) '4');
        com.google.javascript.rhino.head.Node node85 = scriptNode82.getFirstChild();
        astRoot76.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode82);
        scriptNode66.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot76);
        com.google.javascript.rhino.head.Node node88 = iRFactory64.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((-213029975), node88, 1152923454);
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node((-1721493936), node88, 9);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = node88.getExistingIntProp((-352107342));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(strSet13);
        org.junit.Assert.assertNotNull(errorReporter14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 170 + "'", int28 == 170);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 170 + "'", int29 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strSet41);
        org.junit.Assert.assertNotNull(errorReporter42);
        org.junit.Assert.assertNotNull(compilerEnvirons46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(errorReporter62);
        org.junit.Assert.assertNull(scopeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(nodeItor78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str84, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(node88);
    }

    @Test
    public void test03677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03677");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecordingComments(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03678");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(204293885, 630415762, commentType2, "  {\n  }\n");
    }

    @Test
    public void test03679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03679");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        comment4.setCommentType(commentType7);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = comment4.iterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeItor9.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(nodeItor9);
    }

    @Test
    public void test03680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03680");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode36.getChildScopes();
        int int39 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastSibling();
        scriptNode36.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        java.lang.String str49 = scriptNode36.toStringTree(scriptNode44);
        int int50 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node52 = scriptNode36.setType((int) (byte) -1);
        java.lang.String str53 = astRoot0.toStringTree(scriptNode36);
        scriptNode36.clearParentScope();
        scriptNode36.setEncodedSourceBounds(10, (int) (byte) 10);
        java.lang.String str59 = scriptNode36.toSource(170);
        int int60 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator62 = astRoot61.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType65, "");
        boolean boolean68 = comment67.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType71, "");
        boolean boolean74 = comment73.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType77, "");
        java.lang.String str81 = comment79.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray82 = new com.google.javascript.rhino.head.ast.Comment[] { comment67, comment73, comment79 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet83 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet83, commentArray82);
        astRoot61.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet83);
        boolean boolean86 = astRoot61.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType89 = null;
        com.google.javascript.rhino.head.ast.Comment comment91 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType89, "hi!");
        astRoot61.addComment(comment91);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode36.setDefault((com.google.javascript.rhino.head.Node) comment91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                                    }\n" + "'", str59, "                                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                                    }\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "                                                                                                                                                                                                        " + "'", str81, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test03681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03681");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        int int10 = scriptNode7.getBaseLineno();
        int int11 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode7.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode21.getChildScopes();
        int int24 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.Node node25 = scriptNode21.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = scriptNode21.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode7, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        comment4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode((int) 'a');
        scriptNode7.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = astRoot32.getComments();
        int int34 = astRoot32.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor35 = null;
        astRoot32.visitComments(nodeVisitor35);
        com.google.javascript.rhino.head.Node node37 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope38 = astRoot32.getEnclosingScope();
        astRoot32.setEncodedSourceStart(23);
        java.lang.String str42 = astRoot32.toSource(95442629);
        com.google.javascript.rhino.head.Node node43 = astRoot32.getFirstChild();
        java.lang.String str45 = astRoot32.toSource(129);
        boolean boolean46 = astRoot32.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.removeChild((com.google.javascript.rhino.head.Node) astRoot32);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertNull(commentSet33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(scope38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test03682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03682");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        boolean boolean3 = compilerEnvirons0.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        boolean boolean6 = compilerEnvirons4.getWarnTrailingComma();
        boolean boolean7 = compilerEnvirons4.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons4.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = iRFactory9.parse("          hi!", "1\tCOMMENT 1 0\n", 25);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet15 = astRoot14.getComments();
        int int16 = astRoot14.getEndLineno();
        com.google.javascript.rhino.head.Node node18 = astRoot14.setType((int) (short) 10);
        astRoot14.putIntProp(24, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = iRFactory9.transformTree(astRoot14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can't transform: 10");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter8);
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertNull(commentSet15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node18);
    }

    @Test
    public void test03683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03683");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getBaseLineno();
        int int2 = astRoot0.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.Node node8 = scriptNode4.getLastSibling();
        scriptNode4.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList14 = scriptNode12.getFunctions();
        scriptNode12.setPosition((int) (byte) 10);
        java.lang.String str17 = scriptNode4.toStringTree(scriptNode12);
        int int18 = scriptNode4.getBaseLineno();
        astRoot0.target = scriptNode4;
        int int20 = scriptNode4.getLength();
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = astRoot21.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        boolean boolean34 = comment33.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        java.lang.String str41 = comment39.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray42 = new com.google.javascript.rhino.head.ast.Comment[] { comment27, comment33, comment39 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet43 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet43, commentArray42);
        astRoot21.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet43);
        boolean boolean46 = astRoot21.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType49, "hi!");
        astRoot21.addComment(comment51);
        java.lang.String str53 = astRoot21.shortName();
        boolean boolean54 = astRoot21.hasSideEffects();
        int int55 = astRoot21.getEncodedSourceStart();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList56 = astRoot21.getFunctions();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = new com.google.javascript.rhino.head.ast.AstRoot(2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList59 = astRoot58.getFunctions();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode4.replaceChild((com.google.javascript.rhino.head.Node) astRoot21, (com.google.javascript.rhino.head.Node) astRoot58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(functionNodeList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                                                                                                                                                        " + "'", str41, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AstRoot" + "'", str53, "AstRoot");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList56);
        org.junit.Assert.assertNotNull(functionNodeList59);
    }

    @Test
    public void test03684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03684");
        com.google.javascript.rhino.head.Node node1 = null;
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet3 = astRoot2.getComments();
        int int4 = astRoot2.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor5 = null;
        astRoot2.visitComments(nodeVisitor5);
        com.google.javascript.rhino.head.Node node7 = astRoot2.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = astRoot8.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        java.lang.String str28 = comment26.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] { comment14, comment20, comment26 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        boolean boolean33 = astRoot8.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType36, "hi!");
        astRoot8.addComment(comment38);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode40 = comment38.getEnclosingFunction();
        astRoot2.addComment(comment38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode(95442629);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node44 = new com.google.javascript.rhino.head.Node(638771449, node1, (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                                                                                                                                                        " + "'", str28, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(functionNode40);
    }

    @Test
    public void test03685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03685");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean7 = compilerEnvirons0.recoverFromErrors();
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons0.getErrorReporter();
        // The following exception was thrown during execution in test generation
        try {
            errorReporter8.warning("          {\n          }\n", "{\n  {\n  }\n}\n", (int) (short) 10, "35\t  COMMENT 36 2\n", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter8);
    }

    @Test
    public void test03686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03686");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean7 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        int int8 = compilerEnvirons6.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.isIdeMode();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        boolean boolean14 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setRecordingLocalJsDocComments(true);
        boolean boolean17 = compilerEnvirons9.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        boolean boolean20 = compilerEnvirons18.getWarnTrailingComma();
        boolean boolean21 = compilerEnvirons18.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter22);
        compilerEnvirons6.setErrorReporter(errorReporter22);
        compilerEnvirons0.setErrorReporter(errorReporter22);
        boolean boolean26 = compilerEnvirons0.isXmlAvailable();
        boolean boolean27 = compilerEnvirons0.isIdeMode();
        boolean boolean28 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean31 = compilerEnvirons0.isGenerateDebugInfo();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion((-451814955));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: -451814955");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 170 + "'", int8 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test03687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03687");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        com.google.javascript.rhino.head.Node node8 = comment4.setType(18);
        comment4.removeChildren();
        comment4.setLineno(19);
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        comment4.setCommentType(commentType12);
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        boolean boolean19 = comment18.hasSideEffects();
        int int20 = comment18.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = comment18.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList25 = scriptNode23.getChildScopes();
        int int26 = scriptNode23.getBaseLineno();
        int int27 = scriptNode23.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList31 = scriptNode29.getFunctions();
        scriptNode29.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode23.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) scope34);
        scriptNode29.setEncodedSourceEnd(18);
        comment18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = scriptNode29.getAstRoot();
        int int40 = scriptNode29.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = scriptNode29.getTop();
        comment4.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode41);
        java.lang.Object obj44 = comment4.getProp(13);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(commentType21);
        org.junit.Assert.assertNull(scopeList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(functionNodeList31);
        org.junit.Assert.assertNull(astRoot39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 18 + "'", int40 == 18);
        org.junit.Assert.assertNotNull(scriptNode41);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test03688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03688");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        java.lang.String str7 = comment4.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = astRoot8.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        java.lang.String str28 = comment26.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] { comment14, comment20, comment26 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        boolean boolean33 = astRoot8.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray34 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList35 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList35, symbolArray34);
        astRoot8.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList35);
        int int38 = astRoot8.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList42 = scriptNode40.getChildScopes();
        int int43 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.Node node44 = scriptNode40.getLastSibling();
        scriptNode40.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode48.getFunctions();
        scriptNode48.setPosition((int) (byte) 10);
        java.lang.String str53 = scriptNode40.toStringTree(scriptNode48);
        int int54 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot8, (com.google.javascript.rhino.head.ast.Scope) scriptNode40);
        java.lang.String str57 = astRoot8.toSource(15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode59.getChildScopes();
        int int62 = scriptNode59.getBaseLineno();
        com.google.javascript.rhino.head.Node node63 = scriptNode59.getLastSibling();
        int int64 = scriptNode59.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList68 = scriptNode66.getChildScopes();
        int int69 = scriptNode66.getBaseLineno();
        int int70 = scriptNode66.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList74 = scriptNode72.getFunctions();
        scriptNode72.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope77 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode66.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode72, (com.google.javascript.rhino.head.Node) scope77);
        scriptNode59.setTop(scriptNode66);
        int int80 = astRoot8.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        int int81 = comment4.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        java.lang.String str82 = comment4.toSource();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1\tCOMMENT 1 0\n" + "'", str7, "1\tCOMMENT 1 0\n");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                                                                                                                                                        " + "'", str28, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(symbolArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(functionNodeList74);
// flaky:         org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-607685701) + "'", int80 == (-607685701));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test03689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03689");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) '#', "$0");
        boolean boolean3 = node2.hasChildren();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03690");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean20 = compilerEnvirons0.isGeneratingSource();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test03691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03691");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str15 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType18, "hi!");
        scriptNode1.setJsDocNode(comment20);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scriptNode1.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode24 = scriptNode1.getFunctionNode((-715784738));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
    }

    @Test
    public void test03692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03692");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        boolean boolean18 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        java.lang.String str31 = comment29.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] { comment17, comment23, comment29 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        boolean boolean36 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot11.getParent();
        astRoot11.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) astRoot11, 6);
        astRoot11.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node44 = astRoot11.getLastSibling();
        com.google.javascript.rhino.head.ast.Scope scope45 = astRoot11.getParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode47.getChildScopes();
        int int50 = scriptNode47.getBaseLineno();
        int int51 = scriptNode47.getParamCount();
        scriptNode47.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope54 = scriptNode47.getEnclosingScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode55 = scriptNode47.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        scriptNode57.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        int int64 = astRoot62.getRegexpCount();
        scriptNode57.addChildToBack((com.google.javascript.rhino.head.Node) astRoot62);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator66 = astRoot62.spliterator();
        scriptNode47.putProp((-777163487), (java.lang.Object) astRoot62);
        java.lang.String str68 = astRoot62.getNextTempName();
        int int69 = astRoot62.getFunctionCount();
        // The following exception was thrown during execution in test generation
        try {
            scope45.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(scope45);
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(scope54);
        org.junit.Assert.assertNull(functionNode55);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "$0" + "'", str68, "$0");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test03693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03693");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        java.lang.Class<?> wildcardClass6 = compilerEnvirons0.getClass();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test03694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03694");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = astRoot4.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = astRoot4.iterator();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot4);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        astRoot4.visitComments(nodeVisitor8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str12 = scriptNode10.toSource((int) '4');
        com.google.javascript.rhino.head.Node node13 = scriptNode10.getFirstChild();
        astRoot4.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        com.google.javascript.rhino.head.ast.Scope scope15 = scriptNode10.getEnclosingScope();
        com.google.javascript.rhino.head.Parser parser16 = new com.google.javascript.rhino.head.Parser();
        scriptNode10.setCompilerData((java.lang.Object) parser16);
        int int18 = scriptNode10.getParamCount();
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str12, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(scope15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test03695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03695");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node68 = scriptNode8.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode71.getChildScopes();
        int int74 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.Node node75 = scriptNode71.getLastSibling();
        scriptNode71.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode79.getFunctions();
        scriptNode79.setPosition((int) (byte) 10);
        java.lang.String str84 = scriptNode71.toStringTree(scriptNode79);
        int int85 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode87.removeProp(10);
        com.google.javascript.rhino.head.ast.Scope scope90 = scriptNode87.getParentScope();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        java.lang.Object obj92 = scriptNode87.getCompilerData();
        scriptNode8.putProp(12, (java.lang.Object) scriptNode87);
        scriptNode8.setLineno((int) (byte) 100);
        int int96 = scriptNode8.getPosition();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test03696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03696");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode4.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = astRoot7.iterator();
        scriptNode4.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        int int15 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot7, (com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        com.google.javascript.rhino.head.Node node16 = astRoot7.getLastSibling();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType19, "hi!");
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        comment21.setCommentType(commentType22);
        java.lang.String str24 = comment21.getValue();
        astRoot7.setJsDocNode(comment21);
        int int26 = astRoot7.getEncodedSourceStart();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test03697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03697");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        int int3 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode0.setParentScope(scope4);
        scriptNode0.setLineno((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray8 = scriptNode0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test03698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03698");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        boolean boolean18 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        java.lang.String str31 = comment29.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] { comment17, comment23, comment29 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        boolean boolean36 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot11.getParent();
        astRoot11.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) astRoot11, 6);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope10.getDefiningScope("                                                                hi!");
        com.google.javascript.rhino.head.Node node44 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope10.setContinue(node44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertNull(scope43);
    }

    @Test
    public void test03699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03699");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(2, 22);
    }

    @Test
    public void test03700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03700");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newString("136");
        node1.setString("                                                                                                        {\n                                                                                                        }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        int int11 = scriptNode6.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot15.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        java.lang.String str35 = comment33.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] { comment21, comment27, comment33 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        boolean boolean40 = astRoot15.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = astRoot15.getParent();
        astRoot15.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode6, (com.google.javascript.rhino.head.Node) scope14, (com.google.javascript.rhino.head.Node) astRoot15, 6);
        java.lang.String str46 = node1.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot15);
        astRoot15.checkParentLinks();
        java.lang.String str49 = astRoot15.toSource(3);
        java.lang.String str50 = astRoot15.getJsDoc();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = astRoot15.getTop();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump52 = scriptNode51.getLoop();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                                                                                                                        " + "'", str35, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(astNode41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(scriptNode51);
    }

    @Test
    public void test03701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03701");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.getNextTempName();
        int int3 = astRoot0.getEncodedSourceStart();
        java.lang.String str4 = astRoot0.shortName();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot0.getComments();
        java.lang.String str6 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode7 = astRoot0.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = functionNode7.debugPrint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AstRoot" + "'", str4, "AstRoot");
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(functionNode7);
    }

    @Test
    public void test03702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03702");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        int int9 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setStrictMode(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03703");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(true);
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setRecoverFromErrors(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03704");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean8 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean9 = compilerEnvirons0.reportWarningAsError();
        int int10 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 170 + "'", int10 == 170);
    }

    @Test
    public void test03705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03705");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        int int15 = scriptNode8.getEndLineno();
        scriptNode8.setEncodedSource("hi!");
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode8, (int) (byte) 0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode24.getFunctions();
        scriptNode24.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node29 = iRFactory22.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.lang.String str30 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        int int35 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode38.getChildScopes();
        java.lang.String str42 = scriptNode38.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode32.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        java.lang.Object obj47 = scriptNode38.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode48.toSource((int) '4');
        java.lang.String str51 = scriptNode38.toStringTree(scriptNode48);
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        int int53 = scriptNode38.getLineno();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = astRoot55.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        boolean boolean62 = comment61.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType65, "");
        boolean boolean68 = comment67.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType71, "");
        java.lang.String str75 = comment73.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray76 = new com.google.javascript.rhino.head.ast.Comment[] { comment61, comment67, comment73 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet77 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet77, commentArray76);
        astRoot55.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet77);
        boolean boolean80 = astRoot55.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray81 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList82, symbolArray81);
        astRoot55.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList82);
        com.google.javascript.rhino.head.Node node85 = astRoot55.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode86.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot55, (com.google.javascript.rhino.head.ast.Scope) scriptNode87);
        com.google.javascript.rhino.head.Node node90 = astRoot55.getFirstChild();
        boolean boolean91 = astRoot55.hasChildren();
        scriptNode38.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot55);
        java.lang.String str93 = astRoot55.debugPrint();
        com.google.javascript.rhino.head.ast.Jump jump94 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot55.setLoop(jump94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str50, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                                                                                                                                                                                        " + "'", str75, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(symbolArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str93, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
    }

    @Test
    public void test03706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03706");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = parser10.parse("-1\tSCRIPT -1 1\n", "35", 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode18.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot21 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = astRoot21.getComments();
        int int23 = astRoot21.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor24 = null;
        astRoot21.visitComments(nodeVisitor24);
        com.google.javascript.rhino.head.Node node26 = astRoot21.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet27 = astRoot21.getComments();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) astRoot21);
        int int29 = scriptNode18.getLength();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory32 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons30, errorReporter31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode34.getFunctions();
        scriptNode34.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node39 = iRFactory32.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.lang.String str40 = scriptNode34.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList44 = scriptNode42.getChildScopes();
        int int45 = scriptNode42.getBaseLineno();
        com.google.javascript.rhino.head.Node node46 = scriptNode42.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList50 = scriptNode48.getChildScopes();
        java.lang.String str52 = scriptNode48.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode42.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode48, (com.google.javascript.rhino.head.Node) scriptNode54);
        java.lang.Object obj57 = scriptNode48.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str60 = scriptNode58.toSource((int) '4');
        java.lang.String str61 = scriptNode48.toStringTree(scriptNode58);
        scriptNode34.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode18, (com.google.javascript.rhino.head.Node) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList64 = scriptNode18.getChildScopes();
        astRoot14.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getBaseLineno();
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(100, (int) (byte) 1);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot67, node71);
        int int73 = astRoot67.getType();
        scriptNode18.setCompilerData((java.lang.Object) int73);
        boolean boolean75 = scriptNode18.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode18.setDouble((double) 101564782);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(astRoot14);
        org.junit.Assert.assertNull(commentSet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(commentSet27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(functionNodeList36);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(scopeList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNull(scopeList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str60, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(scopeList64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 136 + "'", int73 == 136);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test03707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03707");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        int int10 = scriptNode7.getBaseLineno();
        int int11 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode7.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode21.getChildScopes();
        int int24 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.Node node25 = scriptNode21.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = scriptNode21.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode7, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        comment4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.lang.String str29 = comment4.getValue();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons30 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter31 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory32 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons30, errorReporter31);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode34.getChildScopes();
        int int37 = scriptNode34.getBaseLineno();
        int int38 = scriptNode34.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode40.getFunctions();
        scriptNode40.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode34.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scope45);
        scriptNode40.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node49 = iRFactory32.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        int int50 = scriptNode40.getRegexpCount();
        scriptNode40.setBaseLineno(21);
        com.google.javascript.rhino.head.Node node53 = scriptNode40.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot((-213029975));
        java.lang.String str56 = astRoot55.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator58 = astRoot57.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType61, "");
        boolean boolean64 = comment63.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType67, "");
        boolean boolean70 = comment69.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType73, "");
        java.lang.String str77 = comment75.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray78 = new com.google.javascript.rhino.head.ast.Comment[] { comment63, comment69, comment75 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet79, commentArray78);
        astRoot57.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        boolean boolean82 = astRoot57.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray83 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList84 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList84, symbolArray83);
        astRoot57.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList84);
        com.google.javascript.rhino.head.Node node87 = astRoot57.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode89 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode88.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode89);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot57, (com.google.javascript.rhino.head.ast.Scope) scriptNode89);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode92 = scriptNode89.getEnclosingFunction();
        scriptNode89.setEndLineno(6);
        int int95 = scriptNode89.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot55, (com.google.javascript.rhino.head.ast.Scope) scriptNode89);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList97 = scriptNode89.getSymbols();
        scriptNode40.setSymbols(symbolList97);
        comment4.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        org.junit.Assert.assertNull(commentType5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(astRoot26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-213029975\tSCRIPT -213029975 1\n" + "'", str56, "-213029975\tSCRIPT -213029975 1\n");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                                                                                                                                                                                                        " + "'", str77, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(symbolArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertNull(functionNode92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(symbolList97);
    }

    @Test
    public void test03708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03708");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray11 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet12);
        boolean boolean15 = compilerEnvirons5.isGenerateDebugInfo();
        compilerEnvirons5.setOptimizationLevel((int) (short) 1);
        compilerEnvirons5.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = iRFactory21.parse(">>>", "%", 10);
        astRoot25.putIntProp(875237497, 15);
        int int29 = astRoot25.getEncodedSourceStart();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test03709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03709");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType7, "");
        java.lang.String str11 = comment9.toSource(100);
        java.lang.String str12 = comment9.getValue();
        scriptNode3.setParent((com.google.javascript.rhino.head.ast.AstNode) comment9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot14.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        java.lang.String str34 = comment32.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray35 = new com.google.javascript.rhino.head.ast.Comment[] { comment20, comment26, comment32 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet36, commentArray35);
        astRoot14.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet36);
        boolean boolean39 = astRoot14.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray40 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList41 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList41, symbolArray40);
        astRoot14.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList41);
        com.google.javascript.rhino.head.Node node44 = astRoot14.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot14, (com.google.javascript.rhino.head.ast.Scope) scriptNode46);
        com.google.javascript.rhino.head.Node node49 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) comment9, (com.google.javascript.rhino.head.Node) scriptNode46);
        scriptNode46.setRelative((-317066570));
        scriptNode46.setPosition(764472231);
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                                                                                                                                                                                        " + "'", str11, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "                                                                                                                                                                                                        " + "'", str34, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(symbolArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(node44);
    }

    @Test
    public void test03710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03710");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType3, "");
        boolean boolean6 = comment5.hasSideEffects();
        int int7 = comment5.getLineno();
        com.google.javascript.rhino.head.Node node9 = comment5.setType(18);
        comment5.removeChildren();
        comment5.setLineno(19);
        boolean boolean13 = comment5.hasSideEffects();
        com.google.javascript.rhino.head.ast.Scope scope14 = comment5.getEnclosingScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean16 = compilerEnvirons15.isReservedKeywordAsIdentifier();
        boolean boolean17 = compilerEnvirons15.getWarnTrailingComma();
        compilerEnvirons15.setXmlAvailable(true);
        boolean boolean20 = compilerEnvirons15.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot22.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor24 = astRoot22.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor25 = null;
        astRoot22.visitComments(nodeVisitor25);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = iRFactory21.transformTree(astRoot22);
        java.lang.String str28 = astRoot22.toSource();
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        com.google.javascript.rhino.head.Token.CommentType commentType35 = comment34.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        int int42 = comment40.getLineno();
        com.google.javascript.rhino.head.Node node44 = comment40.setType(18);
        comment40.removeChildren();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        boolean boolean51 = comment50.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        comment50.setCommentType(commentType52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = scriptNode54.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType58, "");
        java.lang.String str62 = comment60.toSource(100);
        java.lang.String str63 = comment60.getValue();
        scriptNode54.setParent((com.google.javascript.rhino.head.ast.AstNode) comment60);
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] { comment34, comment40, comment50, comment60 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot29.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        astRoot29.setEncodedSourceStart((-603115504));
        astRoot29.removeChildren();
        java.lang.String str72 = astRoot29.debugPrint();
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node(163023072, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) astRoot29, 0);
        com.google.javascript.rhino.head.ast.Scope scope75 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.Node node76 = scope75.getLastSibling();
        int int77 = scope75.getAbsolutePosition();
        int int78 = scope75.getAbsolutePosition();
        // The following exception was thrown during execution in test generation
        try {
            astRoot29.setLoop((com.google.javascript.rhino.head.ast.Jump) scope75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(scope14);
        org.junit.Assert.assertNotNull(compilerEnvirons15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertNotNull(scriptNode27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(commentType35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                                                                                                                                                                                                        " + "'", str62, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  LSH 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str72, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  LSH 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    }

    @Test
    public void test03711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03711");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        comment4.setCommentType(commentType7);
        comment4.setPosition(2);
        comment4.setLineno((-449082186));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test03712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03712");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = scriptNode1.getParentScope();
        boolean boolean10 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = astRoot12.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = astRoot12.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType18, "hi!");
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) comment20);
        boolean boolean22 = astRoot12.hasSideEffects();
        boolean boolean23 = astRoot12.isInStrictMode();
        boolean boolean24 = astRoot12.isInStrictMode();
        scriptNode1.putProp((int) '#', (java.lang.Object) astRoot12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode28.getChildScopes();
        int int31 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node32 = scriptNode28.getLastSibling();
        scriptNode28.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode36.getFunctions();
        scriptNode36.setPosition((int) (byte) 10);
        java.lang.String str41 = scriptNode28.toStringTree(scriptNode36);
        int int42 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node44 = scriptNode28.setType((int) (byte) -1);
        scriptNode28.setSourceName("typeof");
        com.google.javascript.rhino.head.Node node47 = scriptNode28.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode50.getChildScopes();
        int int53 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.Node node54 = scriptNode50.getLastSibling();
        int int55 = scriptNode50.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = scriptNode50.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode58.getChildScopes();
        int int61 = scriptNode58.getBaseLineno();
        com.google.javascript.rhino.head.Node node62 = scriptNode58.getLastSibling();
        scriptNode58.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode66.getFunctions();
        scriptNode66.setPosition((int) (byte) 10);
        java.lang.String str71 = scriptNode58.toStringTree(scriptNode66);
        int int72 = scriptNode58.getBaseLineno();
        com.google.javascript.rhino.head.Node node74 = scriptNode58.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode50, node74);
        com.google.javascript.rhino.head.Node node78 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "");
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) 'a', (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50, node78, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot12, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        java.lang.String str83 = astRoot12.toSource(0);
        java.lang.String str84 = astRoot12.debugPrint();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(commentSet13);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "-1\tSCRIPT -1 1\n16\tCOMMENT 16 0\n" + "'", str84, "-1\tSCRIPT -1 1\n16\tCOMMENT 16 0\n");
    }

    @Test
    public void test03713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03713");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot0.getParent();
        java.lang.String str27 = astRoot0.debugPrint();
        int int28 = astRoot0.getEncodedSourceStart();
        java.lang.String str29 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean32 = astRoot31.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap33 = null;
        astRoot31.setSymbolTable(strMap33);
        boolean boolean35 = astRoot31.isInStrictMode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode37.getChildScopes();
        int int40 = scriptNode37.getBaseLineno();
        int int41 = scriptNode37.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode43.getFunctions();
        scriptNode43.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope48 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode37.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode43, (com.google.javascript.rhino.head.Node) scope48);
        scriptNode43.setEncodedSource("-1\tSCRIPT -1 1\n");
        scriptNode43.setBaseLineno(12);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot31, (com.google.javascript.rhino.head.ast.Scope) scriptNode43);
        int int55 = astRoot31.getAbsolutePosition();
        astRoot0.putProp(0, (java.lang.Object) int55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = astRoot0.getRegexpString((-306271829));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str27, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "$0" + "'", str29, "$0");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test03714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03714");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter10);
    }

    @Test
    public void test03715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03715");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.removeProp(10);
        int int4 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean6 = compilerEnvirons5.isReservedKeywordAsIdentifier();
        int int7 = compilerEnvirons5.getLanguageVersion();
        compilerEnvirons5.setLanguageVersion((int) (byte) 100);
        boolean boolean10 = compilerEnvirons5.isGenerateObserverCount();
        compilerEnvirons5.setXmlAvailable(false);
        scriptNode1.setCompilerData((java.lang.Object) false);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(compilerEnvirons5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 170 + "'", int7 == 170);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03716");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str2 = astRoot0.toSource((int) '4');
        astRoot0.setPosition(100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray6 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList7 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList7, symbolArray6);
        scriptNode5.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = astRoot0.getTop();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = astRoot0.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(symbolArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(scriptNode11);
    }

    @Test
    public void test03717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03717");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType6, "hi!");
        astRoot0.addChildrenToFront((com.google.javascript.rhino.head.Node) comment8);
        boolean boolean10 = astRoot0.hasSideEffects();
        boolean boolean11 = astRoot0.isInStrictMode();
        java.lang.String str13 = astRoot0.toSource(26);
        com.google.javascript.rhino.head.Node node14 = astRoot0.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            double double15 = astRoot0.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "                                                    hi!" + "'", str13, "                                                    hi!");
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test03718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03718");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = astRoot34.getComments();
        int int36 = astRoot34.getEndLineno();
        com.google.javascript.rhino.head.Node node38 = astRoot34.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = astRoot34.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList41 = scriptNode40.getStatements();
        scriptNode40.setEndLineno(37212131);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray45 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList46, symbolArray45);
        scriptNode44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot49 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int50 = astRoot49.getParamCount();
        int int51 = astRoot49.getRegexpCount();
        scriptNode44.addChildToBack((com.google.javascript.rhino.head.Node) astRoot49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = astRoot49.getAstRoot();
        com.google.javascript.rhino.head.ast.Symbol symbol55 = astRoot53.getSymbol("-1\tSETPROP -1 1\n");
        com.google.javascript.rhino.head.ast.Scope scope57 = astRoot53.getDefiningScope("{\n}\n");
        int int58 = astRoot53.getEndLineno();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode40.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) astRoot53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(commentSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertNotNull(astNodeList41);
        org.junit.Assert.assertNotNull(symbolArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(astRoot53);
        org.junit.Assert.assertNull(symbol55);
        org.junit.Assert.assertNull(scope57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test03719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03719");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scope0.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = scope0.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.Node node8 = scriptNode4.getLastSibling();
        int int9 = scriptNode4.getEndLineno();
        scriptNode4.setBaseLineno(4);
        scriptNode4.clearParentScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode13 = scriptNode4.getEnclosingFunction();
        scope0.target = scriptNode4;
        int int15 = scope0.depth();
        com.google.javascript.rhino.head.ast.Scope scope16 = scope0.getParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor17 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope16.visit(nodeVisitor17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNull(astRoot2);
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(functionNode13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(scope16);
    }

    @Test
    public void test03720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03720");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.putIntProp((int) (short) 1, 1);
        com.google.javascript.rhino.head.Node node5 = scriptNode0.setType((int) 'a');
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode0.getParentScope();
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scope6);
    }

    @Test
    public void test03721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03721");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray1 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList2, symbolArray1);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.lang.Object obj8 = scriptNode7.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        int int12 = scriptNode9.getEndLineno();
        com.google.javascript.rhino.head.Node node13 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode9);
        scriptNode0.setCompilerData((java.lang.Object) scriptNode7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        int int19 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.Node node20 = scriptNode16.getLastSibling();
        scriptNode16.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode24.getFunctions();
        scriptNode24.setPosition((int) (byte) 10);
        java.lang.String str29 = scriptNode16.toStringTree(scriptNode24);
        int int30 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.Node node32 = scriptNode16.setType((int) (byte) -1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor33 = scriptNode16.iterator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator35 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = positionComparator34.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int38 = astRoot37.getBaseLineno();
        java.lang.String str39 = astRoot37.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator41 = astRoot40.new NodeIterator();
        int int42 = positionComparator35.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot37, (com.google.javascript.rhino.head.ast.AstNode) astRoot40);
        boolean boolean43 = astRoot37.isInStrictMode();
        scriptNode16.addChildToFront((com.google.javascript.rhino.head.Node) astRoot37);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) astRoot37);
        // The following exception was thrown during execution in test generation
        try {
            astRoot37.labelId(402672405);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(nodeItor33);
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str39, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test03722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03722");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setRecordingComments(false);
        int int10 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean12 = compilerEnvirons11.isReservedKeywordAsIdentifier();
        compilerEnvirons11.setStrictMode(true);
        compilerEnvirons11.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons17 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean18 = compilerEnvirons17.isReservedKeywordAsIdentifier();
        compilerEnvirons17.setStrictMode(true);
        compilerEnvirons17.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons23 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean24 = compilerEnvirons23.isReservedKeywordAsIdentifier();
        boolean boolean25 = compilerEnvirons23.getWarnTrailingComma();
        compilerEnvirons23.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet28 = compilerEnvirons23.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons23.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons17, errorReporter29);
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons11, errorReporter29);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter32);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException39 = errorReporter32.runtimeError("", "136", 10, "Comment", 21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 170 + "'", int10 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strSet28);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertNotNull(errorReporter32);
    }

    @Test
    public void test03723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03723");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.Symbol symbol27 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.putSymbol(symbol27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(astNode26);
    }

    @Test
    public void test03724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03724");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean8 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setOptimizationLevel((int) (short) 0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean12 = compilerEnvirons11.isReservedKeywordAsIdentifier();
        boolean boolean13 = compilerEnvirons11.getWarnTrailingComma();
        compilerEnvirons11.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet16 = compilerEnvirons11.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter17 = compilerEnvirons11.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory18 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter17);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter17.error("                                                                                                                                                                                                                                                                                                                                                    ", "                                                {\n                                                }\n", 1511404125, "                                                ", (-213029975));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strSet16);
        org.junit.Assert.assertNotNull(errorReporter17);
    }

    @Test
    public void test03725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03725");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) 783194089);
        org.junit.Assert.assertNotNull(node1);
    }

    @Test
    public void test03726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03726");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(100, (int) (byte) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot1, node5);
        boolean boolean7 = node6.hasSideEffects();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = node6.spliterator();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
    }

    @Test
    public void test03727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03727");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        int int10 = scriptNode7.getBaseLineno();
        int int11 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode7.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode21.getChildScopes();
        int int24 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.Node node25 = scriptNode21.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = scriptNode21.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode7, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        comment4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.visit(nodeVisitor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(astRoot26);
    }

    @Test
    public void test03728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03728");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setPosition((int) (byte) 10);
        int int6 = scriptNode1.getEncodedSourceEnd();
        int int7 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.AstNode astNode8 = null;
        scriptNode1.setParent(astNode8);
        scriptNode1.removeChildren();
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test03729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03729");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot1.getComments();
        java.lang.String str3 = astRoot1.getSourceName();
        boolean boolean4 = astRoot1.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        scriptNode6.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode14.getFunctions();
        scriptNode14.setPosition((int) (byte) 10);
        java.lang.String str19 = scriptNode6.toStringTree(scriptNode14);
        int int20 = scriptNode6.getBaseLineno();
        boolean boolean21 = scriptNode6.hasConsistentReturnUsage();
        astRoot1.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode6);
        astRoot1.setBaseLineno(14);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot1.getComments();
        astRoot1.clearParentScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.putIntProp((int) (short) 1, 1);
        scriptNode27.setEncodedSource("typeof");
        com.google.javascript.rhino.head.Node node33 = scriptNode27.getLastChild();
        scriptNode27.setBaseLineno(13);
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(875237497, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode27, 1344201075);
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.setString("-253374738\tSCRIPT -253374738 1\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(commentSet25);
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test03730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03730");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = astRoot4.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = astRoot4.iterator();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot4);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scriptNode1.getSymbolTable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.isIdeMode();
        compilerEnvirons9.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray20 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet21);
        boolean boolean24 = compilerEnvirons14.isGenerateDebugInfo();
        compilerEnvirons14.setOptimizationLevel((int) (short) 1);
        compilerEnvirons14.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter29 = compilerEnvirons14.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory30 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9, errorReporter29);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int32 = astRoot31.getParamCount();
        int int33 = astRoot31.getPosition();
        com.google.javascript.rhino.head.Node node34 = astRoot31.target;
        com.google.javascript.rhino.head.Node node35 = iRFactory30.transform((com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = astRoot37.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType41, "");
        boolean boolean44 = comment43.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        boolean boolean50 = comment49.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType53, "");
        java.lang.String str57 = comment55.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray58 = new com.google.javascript.rhino.head.ast.Comment[] { comment43, comment49, comment55 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet59 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet59, commentArray58);
        astRoot37.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet59);
        boolean boolean62 = astRoot37.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray63 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList64 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList64, symbolArray63);
        astRoot37.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList64);
        int int67 = astRoot37.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode68.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = scriptNode69.getChildScopes();
        int int72 = scriptNode69.getBaseLineno();
        com.google.javascript.rhino.head.Node node73 = scriptNode69.getLastSibling();
        scriptNode69.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode76.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList79 = scriptNode77.getFunctions();
        scriptNode77.setPosition((int) (byte) 10);
        java.lang.String str82 = scriptNode69.toStringTree(scriptNode77);
        int int83 = scriptNode69.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot37, (com.google.javascript.rhino.head.ast.Scope) scriptNode69);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap85 = astRoot37.getSymbolTable();
        scriptNode1.setSymbolTable(strMap85);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = scriptNode1.getRegexpString(16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(errorReporter29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "                                                                                                                                                                                                        " + "'", str57, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(symbolArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(functionNodeList79);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test03731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03731");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        astRoot0.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scriptNode11.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        java.lang.String str19 = comment17.toSource(100);
        java.lang.String str20 = comment17.getValue();
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot22.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        boolean boolean29 = comment28.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        java.lang.String str42 = comment40.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray43 = new com.google.javascript.rhino.head.ast.Comment[] { comment28, comment34, comment40 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet44, commentArray43);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        boolean boolean47 = astRoot22.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.Node node52 = astRoot22.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot22, (com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) comment17, (com.google.javascript.rhino.head.Node) scriptNode54);
        astRoot0.addComment(comment17);
        com.google.javascript.rhino.head.Node node59 = astRoot0.getLastSibling();
        astRoot0.setPosition(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode(24);
        astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        java.lang.String str65 = scriptNode63.debugPrint();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                                                                                                                        " + "'", str19, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                                                                                                                        " + "'", str42, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "24\tSCRIPT 24 1\n" + "'", str65, "24\tSCRIPT 24 1\n");
    }

    @Test
    public void test03732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03732");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType2, "hi!");
        int int5 = comment4.getPosition();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 16 + "'", int5 == 16);
    }

    @Test
    public void test03733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03733");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType3, "");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = comment5.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        int int11 = scriptNode8.getBaseLineno();
        int int12 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode14.getFunctions();
        scriptNode14.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode8.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode22.getChildScopes();
        int int25 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.Node node26 = scriptNode22.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = scriptNode22.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode8, (com.google.javascript.rhino.head.ast.Scope) scriptNode22);
        comment5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(15, (com.google.javascript.rhino.head.Node) scriptNode8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        int int37 = scriptNode32.getEncodedSourceEnd();
        java.lang.String str38 = scriptNode8.toStringTree(scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scriptNode40.spliterator();
        com.google.javascript.rhino.head.Node node43 = scriptNode40.setType((int) '#');
        java.lang.Object obj44 = scriptNode40.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol46 = scriptNode40.getSymbol("typeof");
        scriptNode40.setEncodedSource("{\n}\n");
        scriptNode40.setEncodedSourceBounds((int) (short) 100, 8);
        int int52 = scriptNode40.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.putIntProp((int) (short) 1, 1);
        scriptNode53.setEncodedSource("typeof");
        java.lang.Object obj60 = scriptNode53.getProp(2);
        com.google.javascript.rhino.head.Node node61 = new com.google.javascript.rhino.head.Node(574921099, (com.google.javascript.rhino.head.Node) scriptNode40, (com.google.javascript.rhino.head.Node) scriptNode53);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode64.getChildScopes();
        int int67 = scriptNode64.getBaseLineno();
        int int68 = scriptNode64.getParamCount();
        scriptNode64.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        scriptNode72.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap78 = scriptNode77.getSymbolTable();
        scriptNode72.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode77);
        com.google.javascript.rhino.head.ast.Scope scope80 = scriptNode72.getParentScope();
        boolean boolean81 = scriptNode72.hasChildren();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = scriptNode72.getSymbols();
        scriptNode64.setSymbols(symbolList82);
        node61.putProp(1275261773, (java.lang.Object) scriptNode64);
        scriptNode32.target = node61;
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray86 = scriptNode32.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNull(astRoot27);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(symbol46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(scope80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(symbolList82);
    }

    @Test
    public void test03734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03734");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(14);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = astRoot1.spliterator();
        org.junit.Assert.assertNotNull(nodeSpliterator2);
    }

    @Test
    public void test03735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03735");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((-9));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node2 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03736");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = astRoot7.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot7.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = iRFactory6.transformTree(astRoot7);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = astRoot7.getComments();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = astRoot7.getTop();
        astRoot7.clearParentScope();
        boolean boolean16 = astRoot7.isInStrictMode();
        java.lang.String str17 = astRoot7.getJsDoc();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNull(commentSet13);
        org.junit.Assert.assertNotNull(scriptNode14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03737");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        int int20 = compilerEnvirons18.getLanguageVersion();
        int int21 = compilerEnvirons18.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean23 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        compilerEnvirons22.setStrictMode(true);
        compilerEnvirons22.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = iRFactory37.parse("0\tSCRIPT 0 1\n", "                                ", 13);
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType44, "hi!");
        java.lang.String str48 = comment46.toSource(0);
        java.lang.String str49 = comment46.shortName();
        boolean boolean50 = comment46.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator51 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator52 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator53 = positionComparator51.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator52);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int55 = astRoot54.getBaseLineno();
        java.lang.String str56 = astRoot54.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator58 = astRoot57.new NodeIterator();
        int int59 = positionComparator52.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot54, (com.google.javascript.rhino.head.ast.AstNode) astRoot57);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator61 = scriptNode60.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator62 = scriptNode60.new NodeIterator();
        astRoot57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        com.google.javascript.rhino.head.Node node64 = scriptNode60.getFirstChild();
        comment46.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode60);
        java.lang.String str66 = comment46.getValue();
        astRoot41.addComment(comment46);
        boolean boolean68 = comment46.hasSideEffects();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 170 + "'", int20 == 170);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 170 + "'", int21 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(astRoot41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Comment" + "'", str49, "Comment");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(astNodeComparator53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str56, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator61);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test03738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03738");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test03739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03739");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scriptNode32.spliterator();
        com.google.javascript.rhino.head.Node node35 = scriptNode32.setType((int) '#');
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode41.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor46 = astRoot44.iterator();
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode49.getChildScopes();
        int int52 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.lang.String str54 = scriptNode32.toString();
        int int55 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scriptNode56.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType60, "");
        java.lang.String str64 = comment62.toSource(100);
        java.lang.String str65 = comment62.getValue();
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode32.setJsDocNode(comment62);
        scriptNode32.setRelative((int) (short) -1);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator70 = scriptNode32.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        scriptNode72.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode76.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList79 = scriptNode77.getChildScopes();
        int int80 = scriptNode77.getBaseLineno();
        com.google.javascript.rhino.head.Node node81 = scriptNode77.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode82.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList85 = scriptNode83.getChildScopes();
        java.lang.String str87 = scriptNode83.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode89 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode77.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode83, (com.google.javascript.rhino.head.Node) scriptNode89);
        int int91 = scriptNode83.getType();
        scriptNode72.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        scriptNode83.flattenSymbolTable(false);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor95 = scriptNode83.iterator();
        int int96 = scriptNode83.getBaseLineno();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        com.google.javascript.rhino.head.Node node98 = scriptNode83.getNext();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(nodeItor46);
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "35" + "'", str54, "35");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                                                                                                                                        " + "'", str64, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(scopeList79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNull(scopeList85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 136 + "'", int91 == 136);
        org.junit.Assert.assertNotNull(nodeItor95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNull(node98);
    }

    @Test
    public void test03740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03740");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        int int12 = scriptNode9.getBaseLineno();
        com.google.javascript.rhino.head.Node node13 = scriptNode9.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode15.getChildScopes();
        java.lang.String str19 = scriptNode15.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode9.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.Object obj24 = scriptNode15.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str27 = scriptNode25.toSource((int) '4');
        java.lang.String str28 = scriptNode15.toStringTree(scriptNode25);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons29 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons29, errorReporter30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = scriptNode33.getChildScopes();
        int int36 = scriptNode33.getBaseLineno();
        int int37 = scriptNode33.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = scriptNode39.getFunctions();
        scriptNode39.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope44 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode33.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scope44);
        scriptNode39.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node48 = iRFactory31.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons49 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter50 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory51 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons49, errorReporter50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode53.getChildScopes();
        int int56 = scriptNode53.getBaseLineno();
        int int57 = scriptNode53.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode59.getFunctions();
        scriptNode59.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope64);
        scriptNode59.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node68 = iRFactory51.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        scriptNode39.setTop(scriptNode59);
        com.google.javascript.rhino.head.Node node71 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode39, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode15.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode73);
        com.google.javascript.rhino.head.ast.Scope scope76 = scriptNode15.getDefiningScope("                      ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode78.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot81 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator82 = astRoot81.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor83 = astRoot81.iterator();
        scriptNode78.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot81);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor85 = null;
        astRoot81.visitComments(nodeVisitor85);
        astRoot81.setEndLineno(17);
        com.google.javascript.rhino.head.ast.Symbol symbol90 = astRoot81.getSymbol("AstRoot");
        scriptNode15.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot81);
        comment4.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = astRoot81.getParamOrVarName(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str27, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(scopeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(scope76);
        org.junit.Assert.assertNotNull(nodeItor83);
        org.junit.Assert.assertNull(symbol90);
    }

    @Test
    public void test03741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03741");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        com.google.javascript.rhino.head.Node node5 = astRoot0.getFirstChild();
        java.lang.String str6 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        scope8.setTop(scriptNode11);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = scope8.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        int int21 = comment19.getLineno();
        com.google.javascript.rhino.head.Node node23 = comment19.setType(18);
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        boolean boolean29 = comment28.hasSideEffects();
        int int30 = comment28.getLineno();
        com.google.javascript.rhino.head.Node node32 = comment28.setType(18);
        comment28.removeChildren();
        com.google.javascript.rhino.head.Node node35 = new com.google.javascript.rhino.head.Node((-1116244898), (com.google.javascript.rhino.head.Node) scope8, (com.google.javascript.rhino.head.Node) comment19, (com.google.javascript.rhino.head.Node) comment28, 15);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = astRoot36.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        java.lang.String str56 = comment54.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] { comment42, comment48, comment54 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        boolean boolean61 = astRoot36.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType64, "hi!");
        astRoot36.addComment(comment66);
        scope8.setJsDocNode(comment66);
        com.google.javascript.rhino.head.Token.CommentType commentType69 = comment66.getCommentType();
        astRoot0.addComment(comment66);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode72.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator76 = astRoot75.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor77 = astRoot75.iterator();
        scriptNode72.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot75);
        int int79 = astRoot75.getEncodedSourceEnd();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList80 = astRoot75.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode83.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node87 = new com.google.javascript.rhino.head.Node(538062289, (com.google.javascript.rhino.head.Node) scriptNode83, (-603115504));
        java.lang.String str88 = astRoot75.toStringTree(scriptNode83);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode83);
        com.google.javascript.rhino.head.ast.Symbol symbol90 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode83.putSymbol(symbol90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                                                                                                                        " + "'", str56, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(commentType69);
        org.junit.Assert.assertNotNull(nodeItor77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(scopeList80);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test03742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03742");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setPosition((int) (byte) 10);
        int int6 = scriptNode1.getEncodedSourceEnd();
        int int7 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        int int12 = scriptNode9.getBaseLineno();
        com.google.javascript.rhino.head.Node node13 = scriptNode9.getLastSibling();
        java.lang.String str14 = scriptNode1.toStringTree(scriptNode9);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode15 = scriptNode9.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode17.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList20 = scriptNode18.getChildScopes();
        int int21 = scriptNode18.getBaseLineno();
        int int22 = scriptNode18.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode24.getFunctions();
        scriptNode24.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode18.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope29);
        scriptNode24.setLineno((int) 'a');
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((-451814955), (com.google.javascript.rhino.head.Node) scriptNode24, 7);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = functionNode15.getIndexForNameNode((com.google.javascript.rhino.head.Node) scriptNode24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(functionNode15);
        org.junit.Assert.assertNull(scopeList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(functionNodeList26);
    }

    @Test
    public void test03743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03743");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray1 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList2, symbolArray1);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getParamCount();
        int int7 = astRoot5.getRegexpCount();
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = astRoot9.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType13, "");
        boolean boolean16 = comment15.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        java.lang.String str29 = comment27.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] { comment15, comment21, comment27 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        boolean boolean34 = astRoot9.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray35 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList36, symbolArray35);
        astRoot9.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList36);
        com.google.javascript.rhino.head.Node node39 = astRoot9.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot9, (com.google.javascript.rhino.head.ast.Scope) scriptNode41);
        int int44 = astRoot9.depth();
        com.google.javascript.rhino.head.ast.Comment comment45 = astRoot9.getJsDocNode();
        astRoot5.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot9);
        java.lang.String str47 = astRoot5.toSource();
        org.junit.Assert.assertNotNull(symbolArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                                                                                                                                                                                        " + "'", str29, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(symbolArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(comment45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test03744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03744");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        comment4.setCommentType(commentType7);
        com.google.javascript.rhino.head.Node node9 = comment4.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        int int15 = scriptNode11.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList16 = scriptNode11.getSymbols();
        int int17 = scriptNode11.getPosition();
        java.lang.Object obj19 = null;
        scriptNode11.putProp(170, obj19);
        // The following exception was thrown during execution in test generation
        try {
            node9.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(symbolList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test03745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03745");
        com.google.javascript.rhino.head.ast.Scope scope2 = new com.google.javascript.rhino.head.ast.Scope((-253374738), (-325419474));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        int int7 = scriptNode4.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode4.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        int int15 = scriptNode10.getEndLineno();
        scriptNode10.setBaseLineno(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = astRoot18.getComments();
        int int20 = astRoot18.getEndLineno();
        com.google.javascript.rhino.head.Node node22 = astRoot18.setType((int) (short) 10);
        astRoot18.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scriptNode29.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType33, "");
        java.lang.String str37 = comment35.toSource(100);
        java.lang.String str38 = comment35.getValue();
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator41 = astRoot40.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        boolean boolean47 = comment46.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        boolean boolean53 = comment52.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType56, "");
        java.lang.String str60 = comment58.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray61 = new com.google.javascript.rhino.head.ast.Comment[] { comment46, comment52, comment58 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet62 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet62, commentArray61);
        astRoot40.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        boolean boolean65 = astRoot40.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray66 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList67, symbolArray66);
        astRoot40.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList67);
        com.google.javascript.rhino.head.Node node70 = astRoot40.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot40, (com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment35, (com.google.javascript.rhino.head.Node) scriptNode72);
        astRoot18.addComment(comment35);
        scriptNode10.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot18);
        boolean boolean78 = scriptNode10.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator80 = scriptNode79.spliterator();
        com.google.javascript.rhino.head.Node node82 = scriptNode79.setType((int) '#');
        java.lang.Object obj83 = scriptNode79.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol85 = scriptNode79.getSymbol("typeof");
        scriptNode79.setEncodedSource("{\n}\n");
        scriptNode79.setEncodedSourceBounds((int) (short) 100, 8);
        java.lang.String str91 = scriptNode79.debugPrint();
        scriptNode10.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode79);
        scope8.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        scope2.addChildToBack((com.google.javascript.rhino.head.Node) scope8);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node95 = scope8.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(scope8);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(commentSet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                                                                                                                                                        " + "'", str37, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                                                                                                                                                                                                        " + "'", str60, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(symbolArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator80);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(symbol85);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-1\tSETPROP -1 1\n" + "'", str91, "-1\tSETPROP -1 1\n");
    }

    @Test
    public void test03746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03746");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        boolean boolean12 = compilerEnvirons0.isRecordingComments();
        boolean boolean13 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        int int16 = compilerEnvirons14.getLanguageVersion();
        compilerEnvirons14.setLanguageVersion((int) (byte) 100);
        boolean boolean19 = compilerEnvirons14.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean21 = compilerEnvirons20.isReservedKeywordAsIdentifier();
        compilerEnvirons20.setStrictMode(true);
        compilerEnvirons20.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean27 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        compilerEnvirons26.setStrictMode(true);
        compilerEnvirons26.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean33 = compilerEnvirons32.isReservedKeywordAsIdentifier();
        boolean boolean34 = compilerEnvirons32.getWarnTrailingComma();
        compilerEnvirons32.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet37 = compilerEnvirons32.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons32.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory39 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26, errorReporter38);
        com.google.javascript.rhino.head.IRFactory iRFactory40 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter38);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter38);
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter38);
        java.util.Set<java.lang.String> strSet43 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 170 + "'", int16 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strSet37);
        org.junit.Assert.assertNotNull(errorReporter38);
        org.junit.Assert.assertNotNull(strSet43);
    }

    @Test
    public void test03747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03747");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-451814955), 129, commentType2, "                                                                                                                                                                                                  ");
        // The following exception was thrown during execution in test generation
        try {
            int int5 = comment4.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03748");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean12 = compilerEnvirons11.isReservedKeywordAsIdentifier();
        boolean boolean13 = compilerEnvirons11.getWarnTrailingComma();
        compilerEnvirons11.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet16 = compilerEnvirons11.getActivationNames();
        compilerEnvirons11.setGenerateDebugInfo(true);
        compilerEnvirons11.setGenerateDebugInfo(true);
        boolean boolean21 = compilerEnvirons11.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray28 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerEnvirons22.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        boolean boolean32 = compilerEnvirons22.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter33 = compilerEnvirons22.getErrorReporter();
        compilerEnvirons22.setGenerateObserverCount(true);
        compilerEnvirons22.setIdeMode(false);
        java.util.Set<java.lang.String> strSet38 = compilerEnvirons22.getActivationNames();
        compilerEnvirons11.setActivationNames(strSet38);
        compilerEnvirons0.setActivationNames(strSet38);
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean43 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(errorReporter33);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test03749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03749");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int22 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope23 = scriptNode12.getEnclosingScope();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode27.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = astRoot30.getComments();
        int int32 = astRoot30.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor33 = null;
        astRoot30.visitComments(nodeVisitor33);
        com.google.javascript.rhino.head.Node node35 = astRoot30.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = astRoot30.getComments();
        com.google.javascript.rhino.head.Node node37 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) astRoot30);
        int int38 = scriptNode27.getLength();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter40 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory41 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons39, errorReporter40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode42.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList45 = scriptNode43.getFunctions();
        scriptNode43.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node48 = iRFactory41.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode43);
        java.lang.String str49 = scriptNode43.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode51.getChildScopes();
        int int54 = scriptNode51.getBaseLineno();
        com.google.javascript.rhino.head.Node node55 = scriptNode51.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode56.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList59 = scriptNode57.getChildScopes();
        java.lang.String str61 = scriptNode57.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode51.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode57, (com.google.javascript.rhino.head.Node) scriptNode63);
        java.lang.Object obj66 = scriptNode57.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str69 = scriptNode67.toSource((int) '4');
        java.lang.String str70 = scriptNode57.toStringTree(scriptNode67);
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode57);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) scriptNode57);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode27.getChildScopes();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList74 = scriptNode27.getSymbols();
        com.google.javascript.rhino.head.Token.CommentType commentType77 = null;
        com.google.javascript.rhino.head.ast.Comment comment79 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType77, "");
        boolean boolean80 = comment79.hasSideEffects();
        int int81 = comment79.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType82 = comment79.getCommentType();
        java.lang.String str84 = comment79.makeIndent((int) '4');
        scriptNode12.replaceChildAfter((com.google.javascript.rhino.head.Node) scriptNode27, (com.google.javascript.rhino.head.Node) comment79);
        scriptNode27.setEncodedSource("                                                    ");
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(scope23);
        org.junit.Assert.assertNull(commentSet31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(commentSet36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(functionNodeList45);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNull(scopeList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str69, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertNotNull(symbolList74);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(commentType82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "                                                                                                        " + "'", str84, "                                                                                                        ");
    }

    @Test
    public void test03750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03750");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode36.getChildScopes();
        int int39 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastSibling();
        scriptNode36.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        java.lang.String str49 = scriptNode36.toStringTree(scriptNode44);
        int int50 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node52 = scriptNode36.setType((int) (byte) -1);
        java.lang.String str53 = astRoot0.toStringTree(scriptNode36);
        scriptNode36.clearParentScope();
        scriptNode36.setEncodedSourceBounds(10, (int) (byte) 10);
        int int58 = scriptNode36.getBaseLineno();
        java.lang.String str59 = scriptNode36.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.putIntProp((int) (short) 1, 1);
        java.lang.String str64 = scriptNode60.getEncodedSource();
        java.lang.String str66 = scriptNode60.toSource(0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons67 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter68 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory69 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons67, errorReporter68);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode71.getFunctions();
        scriptNode71.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node76 = iRFactory69.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        com.google.javascript.rhino.head.ast.AstNode astNode77 = scriptNode71.getParent();
        scriptNode71.setPosition((int) (byte) 1);
        scriptNode60.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode71);
        com.google.javascript.rhino.head.Node node82 = scriptNode60.setType(1891424362);
        scriptNode36.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode60);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = scriptNode60.getParamOrVarName(1016536824);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{\n}\n" + "'", str59, "{\n}\n");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{\n}\n" + "'", str66, "{\n}\n");
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertNotNull(astNode77);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test03751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03751");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        com.google.javascript.rhino.head.Node node1 = scope0.getLastSibling();
        int int2 = scope0.getAbsolutePosition();
        int int3 = scope0.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode5.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = astRoot8.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor10 = astRoot8.iterator();
        scriptNode5.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot8);
        int int12 = astRoot8.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = astRoot8.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode15.getChildScopes();
        int int18 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.Node node19 = scriptNode15.getLastSibling();
        scriptNode15.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList25 = scriptNode23.getFunctions();
        scriptNode23.setPosition((int) (byte) 10);
        java.lang.String str28 = scriptNode15.toStringTree(scriptNode23);
        int int29 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = scriptNode15.setType((int) (byte) -1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor32 = scriptNode15.iterator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator34 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator35 = positionComparator33.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator34);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getBaseLineno();
        java.lang.String str38 = astRoot36.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot39 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator40 = astRoot39.new NodeIterator();
        int int41 = positionComparator34.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot36, (com.google.javascript.rhino.head.ast.AstNode) astRoot39);
        boolean boolean42 = astRoot36.isInStrictMode();
        scriptNode15.addChildToFront((com.google.javascript.rhino.head.Node) astRoot36);
        com.google.javascript.rhino.head.Node node44 = scriptNode15.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList45 = scriptNode15.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope46 = scriptNode15.getParentScope();
        java.lang.String str47 = astRoot13.toStringTree(scriptNode15);
        // The following exception was thrown during execution in test generation
        try {
            scope0.setFinally((com.google.javascript.rhino.head.Node) astRoot13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(nodeItor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(astRoot13);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(functionNodeList25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(nodeItor32);
        org.junit.Assert.assertNotNull(astNodeComparator35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str38, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNotNull(astNodeList45);
        org.junit.Assert.assertNull(scope46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test03752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03752");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        java.lang.String str20 = scriptNode16.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = null;
        scriptNode10.setSymbolTable(strMap25);
        int int27 = scriptNode10.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = scriptNode10.getParamOrVarName((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test03753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03753");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        boolean boolean18 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        java.lang.String str31 = comment29.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] { comment17, comment23, comment29 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        boolean boolean36 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot11.getParent();
        astRoot11.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) astRoot11, 6);
        astRoot11.setInStrictMode(true);
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        int int50 = comment48.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = comment48.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode53.getChildScopes();
        int int56 = scriptNode53.getBaseLineno();
        int int57 = scriptNode53.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList61 = scriptNode59.getFunctions();
        scriptNode59.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope64 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scope64);
        scriptNode59.setEncodedSourceEnd(18);
        comment48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        int int69 = scriptNode59.getLineno();
        boolean boolean70 = scriptNode59.hasSideEffects();
        astRoot11.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode59);
        com.google.javascript.rhino.head.ast.Scope scope72 = astRoot11.getParentScope();
        int int73 = astRoot11.getEncodedSourceEnd();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(commentType51);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(functionNodeList61);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(scope72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test03754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03754");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        astRoot0.setInStrictMode(false);
        int int7 = astRoot0.getEncodedSourceEnd();
        boolean boolean8 = astRoot0.isInStrictMode();
        astRoot0.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.Scope scope11 = astRoot0.getParentScope();
        org.junit.Assert.assertNotNull(nodeItor2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(scope11);
    }

    @Test
    public void test03755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03755");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        astRoot0.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator12 = scriptNode11.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        java.lang.String str19 = comment17.toSource(100);
        java.lang.String str20 = comment17.getValue();
        scriptNode11.setParent((com.google.javascript.rhino.head.ast.AstNode) comment17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot22.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        boolean boolean29 = comment28.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        java.lang.String str42 = comment40.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray43 = new com.google.javascript.rhino.head.ast.Comment[] { comment28, comment34, comment40 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet44 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet44, commentArray43);
        astRoot22.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet44);
        boolean boolean47 = astRoot22.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray48 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList49 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList49, symbolArray48);
        astRoot22.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList49);
        com.google.javascript.rhino.head.Node node52 = astRoot22.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode53.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot22, (com.google.javascript.rhino.head.ast.Scope) scriptNode54);
        com.google.javascript.rhino.head.Node node57 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode10, (com.google.javascript.rhino.head.Node) comment17, (com.google.javascript.rhino.head.Node) scriptNode54);
        astRoot0.addComment(comment17);
        com.google.javascript.rhino.head.Node node59 = astRoot0.getLastSibling();
        astRoot0.setBounds(23, (int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList66 = scriptNode64.getChildScopes();
        int int67 = scriptNode64.getBaseLineno();
        com.google.javascript.rhino.head.Node node68 = scriptNode64.getLastSibling();
        int int69 = scriptNode64.getEndLineno();
        scriptNode64.setBaseLineno(4);
        scriptNode64.setEncodedSource("                                      ");
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                                                                                                                        " + "'", str19, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                                                                                                                        " + "'", str42, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(symbolArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNull(scopeList66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test03756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03756");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray11 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet12);
        boolean boolean15 = compilerEnvirons5.isGenerateDebugInfo();
        compilerEnvirons5.setOptimizationLevel((int) (short) 1);
        compilerEnvirons5.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter20);
        com.google.javascript.rhino.head.ast.AstRoot astRoot25 = iRFactory21.parse(">>>", "%", 10);
        boolean boolean26 = iRFactory21.eof();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons27 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean28 = compilerEnvirons27.isReservedKeywordAsIdentifier();
        int int29 = compilerEnvirons27.getLanguageVersion();
        int int30 = compilerEnvirons27.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean32 = compilerEnvirons31.isReservedKeywordAsIdentifier();
        compilerEnvirons31.setStrictMode(true);
        compilerEnvirons31.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean38 = compilerEnvirons37.isReservedKeywordAsIdentifier();
        boolean boolean39 = compilerEnvirons37.getWarnTrailingComma();
        compilerEnvirons37.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet42 = compilerEnvirons37.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons37.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons31, errorReporter43);
        com.google.javascript.rhino.head.IRFactory iRFactory45 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons27, errorReporter43);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int47 = astRoot46.getParamCount();
        java.lang.String str48 = astRoot46.getJsDoc();
        java.lang.String str49 = astRoot46.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = iRFactory45.transformTree(astRoot46);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray52 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList53 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList53, symbolArray52);
        scriptNode51.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList53);
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getParamCount();
        int int58 = astRoot56.getRegexpCount();
        scriptNode51.addChildToBack((com.google.javascript.rhino.head.Node) astRoot56);
        int int60 = astRoot56.getPosition();
        astRoot46.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot56);
        boolean boolean62 = astRoot56.hasConsistentReturnUsage();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = iRFactory21.transformTree(astRoot56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(astRoot25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 170 + "'", int29 == 170);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 170 + "'", int30 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strSet42);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "$0" + "'", str49, "$0");
        org.junit.Assert.assertNotNull(scriptNode50);
        org.junit.Assert.assertNotNull(symbolArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test03757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03757");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean21 = compilerEnvirons0.isStrictMode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test03758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03758");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode7.getFunctions();
        scriptNode7.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope12);
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str16 = scriptNode7.getJsDoc();
        int int17 = scriptNode7.depth();
        java.lang.String str18 = scriptNode7.getEncodedSource();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = scriptNode7.new NodeIterator();
        boolean boolean20 = nodeIterator19.hasNext();
        boolean boolean21 = nodeIterator19.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node22 = nodeIterator19.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03759");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode1 = scriptNode0.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = astRoot2.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType6, "");
        boolean boolean9 = comment8.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        java.lang.String str22 = comment20.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] { comment8, comment14, comment20 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        boolean boolean27 = astRoot2.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray28 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList29, symbolArray28);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList29);
        int int32 = astRoot2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment33 = astRoot2.getJsDocNode();
        astRoot2.setInStrictMode(false);
        scriptNode0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot2);
        int int37 = astRoot2.getEndLineno();
        java.lang.String str38 = astRoot2.toString();
        com.google.javascript.rhino.head.Node node41 = com.google.javascript.rhino.head.Node.newString(95442629, "hi!");
        astRoot2.addChildToFront(node41);
        astRoot2.putIntProp((-603115504), 1490422031);
        org.junit.Assert.assertNull(functionNode1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                                                                                                                                                        " + "'", str22, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(symbolArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(comment33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "136" + "'", str38, "136");
        org.junit.Assert.assertNotNull(node41);
    }

    @Test
    public void test03760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03760");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        boolean boolean12 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons13 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean14 = compilerEnvirons13.isReservedKeywordAsIdentifier();
        boolean boolean15 = compilerEnvirons13.getWarnTrailingComma();
        compilerEnvirons13.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet18 = compilerEnvirons13.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons13.getErrorReporter();
        compilerEnvirons13.setReservedKeywordAsIdentifier(false);
        boolean boolean22 = compilerEnvirons13.isGeneratingSource();
        compilerEnvirons13.setIdeMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean26 = compilerEnvirons25.isReservedKeywordAsIdentifier();
        boolean boolean27 = compilerEnvirons25.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        java.lang.String[] strArray40 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        compilerEnvirons28.setActivationNames((java.util.Set<java.lang.String>) strSet41);
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons28.getErrorReporter();
        compilerEnvirons25.setErrorReporter(errorReporter44);
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons13, errorReporter44);
        com.google.javascript.rhino.head.IRFactory iRFactory47 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter44);
        compilerEnvirons0.setGeneratingSource(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strSet18);
        org.junit.Assert.assertNotNull(errorReporter19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(errorReporter44);
    }

    @Test
    public void test03761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03761");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean4 = compilerEnvirons3.isReservedKeywordAsIdentifier();
        int int5 = compilerEnvirons3.getLanguageVersion();
        boolean boolean6 = compilerEnvirons3.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser7 = new com.google.javascript.rhino.head.Parser(compilerEnvirons3);
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser9 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter8);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        int int15 = scriptNode12.getBaseLineno();
        com.google.javascript.rhino.head.Node node16 = scriptNode12.getLastSibling();
        int int17 = scriptNode12.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = scriptNode12.iterator();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean20 = compilerEnvirons19.isReservedKeywordAsIdentifier();
        boolean boolean21 = compilerEnvirons19.isIdeMode();
        int int22 = compilerEnvirons19.getOptimizationLevel();
        scriptNode12.setCompilerData((java.lang.Object) compilerEnvirons19);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean25 = compilerEnvirons24.isReservedKeywordAsIdentifier();
        boolean boolean26 = compilerEnvirons24.getWarnTrailingComma();
        compilerEnvirons24.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet29 = compilerEnvirons24.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons24.getErrorReporter();
        compilerEnvirons24.setReservedKeywordAsIdentifier(false);
        boolean boolean33 = compilerEnvirons24.isGeneratingSource();
        compilerEnvirons24.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons36 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean37 = compilerEnvirons36.isReservedKeywordAsIdentifier();
        boolean boolean38 = compilerEnvirons36.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean40 = compilerEnvirons39.isReservedKeywordAsIdentifier();
        int int41 = compilerEnvirons39.getLanguageVersion();
        boolean boolean42 = compilerEnvirons39.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser43 = new com.google.javascript.rhino.head.Parser(compilerEnvirons39);
        com.google.javascript.rhino.head.ErrorReporter errorReporter44 = compilerEnvirons39.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser45 = new com.google.javascript.rhino.head.Parser(compilerEnvirons36, errorReporter44);
        compilerEnvirons24.setErrorReporter(errorReporter44);
        com.google.javascript.rhino.head.IRFactory iRFactory47 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons19, errorReporter44);
        compilerEnvirons0.setErrorReporter(errorReporter44);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.EvaluatorException evaluatorException54 = errorReporter44.runtimeError("-1\tSCRIPT -1 1\n136\tBLOCK 136 538062289\n", "", (-568490075), "1", 24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 170 + "'", int5 == 170);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(errorReporter8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(nodeItor18);
        org.junit.Assert.assertNotNull(compilerEnvirons19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(compilerEnvirons24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strSet29);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 170 + "'", int41 == 170);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(errorReporter44);
    }

    @Test
    public void test03762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03762");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        scriptNode2.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scriptNode7.getSymbolTable();
        scriptNode2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList10 = scriptNode2.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope11 = scriptNode2.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getBaseLineno();
        java.lang.String str14 = astRoot12.debugPrint();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList15 = astRoot12.getSymbols();
        com.google.javascript.rhino.head.Node node17 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scope11, (com.google.javascript.rhino.head.Node) astRoot12, 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean19 = astRoot18.hasSideEffects();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode24.getFunctions();
        scriptNode24.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node29 = iRFactory22.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        astRoot18.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode24);
        scriptNode24.setEncodedSourceStart(20);
        com.google.javascript.rhino.head.Node node33 = scriptNode24.getNext();
        java.lang.String str34 = astRoot12.toStringTree(scriptNode24);
        scriptNode24.setBaseLineno(871114474);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(astNodeList10);
        org.junit.Assert.assertNotNull(scope11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNotNull(symbolList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test03763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03763");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getEndLineno();
        scriptNode1.setBaseLineno(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet10 = astRoot9.getComments();
        int int11 = astRoot9.getEndLineno();
        com.google.javascript.rhino.head.Node node13 = astRoot9.setType((int) (short) 10);
        astRoot9.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator21 = scriptNode20.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        java.lang.String str28 = comment26.toSource(100);
        java.lang.String str29 = comment26.getValue();
        scriptNode20.setParent((com.google.javascript.rhino.head.ast.AstNode) comment26);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = astRoot31.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        boolean boolean38 = comment37.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType41, "");
        boolean boolean44 = comment43.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        java.lang.String str51 = comment49.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] { comment37, comment43, comment49 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        boolean boolean56 = astRoot31.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        astRoot31.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        com.google.javascript.rhino.head.Node node61 = astRoot31.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode62.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot31, (com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        com.google.javascript.rhino.head.Node node66 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) comment26, (com.google.javascript.rhino.head.Node) scriptNode63);
        astRoot9.addComment(comment26);
        scriptNode1.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot9);
        com.google.javascript.rhino.head.Node node69 = scriptNode1.target;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node70 = scriptNode1.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(commentSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(nodeSpliterator21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                                                                                                                                                        " + "'", str28, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                                                                                                                                                        " + "'", str51, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node69);
    }

    @Test
    public void test03764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03764");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(871114474);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 871114474");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03765");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setEncodedSourceStart((int) 'a');
        java.lang.String str6 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        scriptNode9.setBaseLineno(18);
        scriptNode9.setEndLineno(26);
        com.google.javascript.rhino.head.Node node16 = scriptNode9.getLastSibling();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(1275261773, (com.google.javascript.rhino.head.Node) scriptNode9, 4);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = astRoot20.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        boolean boolean33 = comment32.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        java.lang.String str40 = comment38.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] { comment26, comment32, comment38 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        boolean boolean45 = astRoot20.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray46 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList47, symbolArray46);
        astRoot20.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList47);
        com.google.javascript.rhino.head.Node node50 = astRoot20.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot20, (com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode56.getChildScopes();
        int int59 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.Node node60 = scriptNode56.getLastSibling();
        scriptNode56.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList66 = scriptNode64.getFunctions();
        scriptNode64.setPosition((int) (byte) 10);
        java.lang.String str69 = scriptNode56.toStringTree(scriptNode64);
        int int70 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.Node node72 = scriptNode56.setType((int) (byte) -1);
        java.lang.String str73 = astRoot20.toStringTree(scriptNode56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = scriptNode56.getTop();
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode74);
        java.lang.String str76 = scriptNode74.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray77 = scriptNode74.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ScriptNode" + "'", str6, "ScriptNode");
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                                                                                                                                                                                        " + "'", str40, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(symbolArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "23\t  ERROR 24 1\n" + "'", str76, "23\t  ERROR 24 1\n");
    }

    @Test
    public void test03766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03766");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        int int11 = scriptNode8.getBaseLineno();
        int int12 = scriptNode8.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode14.getFunctions();
        scriptNode14.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode8.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode14, (com.google.javascript.rhino.head.Node) scope19);
        scriptNode1.setTop(scriptNode8);
        scriptNode8.setEncodedSourceStart((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = astRoot24.getComments();
        java.lang.String str26 = astRoot24.getSourceName();
        boolean boolean27 = astRoot24.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode29.getChildScopes();
        int int32 = scriptNode29.getBaseLineno();
        com.google.javascript.rhino.head.Node node33 = scriptNode29.getLastSibling();
        scriptNode29.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList39 = scriptNode37.getFunctions();
        scriptNode37.setPosition((int) (byte) 10);
        java.lang.String str42 = scriptNode29.toStringTree(scriptNode37);
        int int43 = scriptNode29.getBaseLineno();
        boolean boolean44 = scriptNode29.hasConsistentReturnUsage();
        astRoot24.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode29);
        scriptNode8.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot24);
        astRoot24.setBaseLineno(0);
        java.lang.String str50 = astRoot24.toSource((-1));
        astRoot24.setPosition(835353046);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator53 = astRoot24.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode55.getChildScopes();
        int int58 = scriptNode55.getBaseLineno();
        com.google.javascript.rhino.head.Node node59 = scriptNode55.getLastSibling();
        int int60 = scriptNode55.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor61 = scriptNode55.iterator();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean63 = compilerEnvirons62.isReservedKeywordAsIdentifier();
        boolean boolean64 = compilerEnvirons62.isIdeMode();
        int int65 = compilerEnvirons62.getOptimizationLevel();
        scriptNode55.setCompilerData((java.lang.Object) compilerEnvirons62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.putIntProp((int) (short) 1, 1);
        scriptNode67.setEncodedSource("typeof");
        com.google.javascript.rhino.head.Node node73 = scriptNode67.getLastChild();
        scriptNode55.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode67);
        scriptNode67.setEncodedSourceBounds((-552755211), (int) (byte) 100);
        astRoot24.setTop(scriptNode67);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertNull(commentSet25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNotNull(functionNodeList39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(nodeItor61);
        org.junit.Assert.assertNotNull(compilerEnvirons62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(node73);
    }

    @Test
    public void test03767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03767");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(0);
        java.lang.String str7 = comment4.shortName();
        boolean boolean8 = comment4.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        comment4.setCommentType(commentType9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot(1560112722);
        com.google.javascript.rhino.head.Node node13 = astRoot12.target;
        comment4.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot12);
        java.lang.String str15 = astRoot12.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode17.getChildScopes();
        java.lang.String str21 = scriptNode17.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode23.setEncodedSourceEnd(11);
        int int27 = scriptNode17.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str30 = scriptNode28.toSource((int) '4');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        int int34 = scriptNode31.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode28, (com.google.javascript.rhino.head.ast.Scope) scriptNode31);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = astRoot36.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        java.lang.String str56 = comment54.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] { comment42, comment48, comment54 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        boolean boolean61 = astRoot36.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray62 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList63, symbolArray62);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList63);
        int int66 = astRoot36.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList70 = scriptNode68.getChildScopes();
        int int71 = scriptNode68.getBaseLineno();
        com.google.javascript.rhino.head.Node node72 = scriptNode68.getLastSibling();
        scriptNode68.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList78 = scriptNode76.getFunctions();
        scriptNode76.setPosition((int) (byte) 10);
        java.lang.String str81 = scriptNode68.toStringTree(scriptNode76);
        int int82 = scriptNode68.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, (com.google.javascript.rhino.head.ast.Scope) scriptNode68);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap84 = scriptNode68.getSymbolTable();
        scriptNode28.setSymbolTable(strMap84);
        scriptNode17.setSymbolTable(strMap84);
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Comment" + "'", str7, "Comment");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1786340243 + "'", int27 == 1786340243);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str30, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                                                                                                                        " + "'", str56, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(symbolArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(scopeList70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNotNull(functionNodeList78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test03768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03768");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean19 = compilerEnvirons0.isIdeMode();
        boolean boolean20 = compilerEnvirons0.isGenerateDebugInfo();
        int int21 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test03769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03769");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        int int26 = astRoot0.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean28 = astRoot27.hasSideEffects();
        astRoot0.target = astRoot27;
        astRoot27.setBaseLineno(65536);
        // The following exception was thrown during execution in test generation
        try {
            astRoot27.setDouble((double) 1337018329);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test03770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03770");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        scriptNode1.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode9.getFunctions();
        scriptNode9.setPosition((int) (byte) 10);
        java.lang.String str14 = scriptNode1.toStringTree(scriptNode9);
        int int15 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node17 = scriptNode1.setType((int) (byte) -1);
        scriptNode1.setSourceName("typeof");
        scriptNode1.setEncodedSource("                                                                                                        {\n                                                                                                        }\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode23);
        scriptNode23.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap29 = scriptNode28.getSymbolTable();
        scriptNode23.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode28);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        int int35 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode38.getChildScopes();
        java.lang.String str42 = scriptNode38.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode32.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        scriptNode23.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode32);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap47 = null;
        scriptNode32.setSymbolTable(strMap47);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap49 = scriptNode32.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope50 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator51 = scope50.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        scope50.setTop(scriptNode53);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor56 = scope50.iterator();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scope50.getChildScopes();
        scriptNode32.setParentScope(scope50);
        java.lang.String str59 = scope50.getJsDoc();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scope50);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator63 = scriptNode62.spliterator();
        com.google.javascript.rhino.head.Node node65 = scriptNode62.setType((int) '#');
        java.lang.Object obj66 = scriptNode62.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol68 = scriptNode62.getSymbol("typeof");
        scriptNode62.setEncodedSource("{\n}\n");
        scriptNode62.setEncodedSourceBounds((int) (short) 100, 8);
        int int74 = scriptNode62.getRegexpCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.putIntProp((int) (short) 1, 1);
        scriptNode75.setEncodedSource("typeof");
        java.lang.Object obj82 = scriptNode75.getProp(2);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(574921099, (com.google.javascript.rhino.head.Node) scriptNode62, (com.google.javascript.rhino.head.Node) scriptNode75);
        scope50.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode62);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(nodeSpliterator51);
        org.junit.Assert.assertNotNull(nodeItor56);
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(nodeSpliterator63);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(symbol68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test03771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03771");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray12 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons6.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons6.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter16);
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateObserverCount(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertNotNull(errorReporter18);
    }

    @Test
    public void test03772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03772");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = scriptNode1.getParentScope();
        boolean boolean10 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = astRoot12.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = astRoot12.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType18, "hi!");
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) comment20);
        boolean boolean22 = astRoot12.hasSideEffects();
        boolean boolean23 = astRoot12.isInStrictMode();
        boolean boolean24 = astRoot12.isInStrictMode();
        scriptNode1.putProp((int) '#', (java.lang.Object) astRoot12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode28.getChildScopes();
        int int31 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node32 = scriptNode28.getLastSibling();
        scriptNode28.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode36.getFunctions();
        scriptNode36.setPosition((int) (byte) 10);
        java.lang.String str41 = scriptNode28.toStringTree(scriptNode36);
        int int42 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node44 = scriptNode28.setType((int) (byte) -1);
        scriptNode28.setSourceName("typeof");
        com.google.javascript.rhino.head.Node node47 = scriptNode28.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode50.getChildScopes();
        int int53 = scriptNode50.getBaseLineno();
        com.google.javascript.rhino.head.Node node54 = scriptNode50.getLastSibling();
        int int55 = scriptNode50.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = scriptNode50.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode58.getChildScopes();
        int int61 = scriptNode58.getBaseLineno();
        com.google.javascript.rhino.head.Node node62 = scriptNode58.getLastSibling();
        scriptNode58.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList68 = scriptNode66.getFunctions();
        scriptNode66.setPosition((int) (byte) 10);
        java.lang.String str71 = scriptNode58.toStringTree(scriptNode66);
        int int72 = scriptNode58.getBaseLineno();
        com.google.javascript.rhino.head.Node node74 = scriptNode58.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode50, node74);
        com.google.javascript.rhino.head.Node node78 = com.google.javascript.rhino.head.Node.newString((int) (short) 1, "");
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node((int) 'a', (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode50, node78, (int) (byte) 1);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot12, (com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        int int82 = astRoot12.getLength();
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.setString("typeof");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(commentSet13);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(functionNodeList68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test03773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03773");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        java.lang.String str4 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        int int11 = scriptNode6.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = scriptNode6.new NodeIterator();
        int int13 = scriptNode6.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator15 = astRoot14.new NodeIterator();
        scriptNode6.setCompilerData((java.lang.Object) nodeIterator15);
        int int17 = scriptNode1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode6.setLineno(20);
        com.google.javascript.rhino.head.Node node20 = scriptNode6.getLastSibling();
        node20.removeProp((-1492185149));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = scriptNode26.getLastSibling();
        int int31 = scriptNode26.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope34 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator36 = astRoot35.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType39 = null;
        com.google.javascript.rhino.head.ast.Comment comment41 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType39, "");
        boolean boolean42 = comment41.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType45 = null;
        com.google.javascript.rhino.head.ast.Comment comment47 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType45, "");
        boolean boolean48 = comment47.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType51 = null;
        com.google.javascript.rhino.head.ast.Comment comment53 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType51, "");
        java.lang.String str55 = comment53.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray56 = new com.google.javascript.rhino.head.ast.Comment[] { comment41, comment47, comment53 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet57 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet57, commentArray56);
        astRoot35.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet57);
        boolean boolean60 = astRoot35.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode61 = astRoot35.getParent();
        astRoot35.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node65 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scope34, (com.google.javascript.rhino.head.Node) astRoot35, 6);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode66 = scriptNode26.getEnclosingFunction();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType69, "");
        boolean boolean72 = comment71.hasSideEffects();
        int int73 = comment71.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope74 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator75 = scope74.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode76.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        scope74.setTop(scriptNode77);
        comment71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode81 = scriptNode77.getEnclosingFunction();
        int int82 = scriptNode77.getLineno();
        scriptNode26.target = scriptNode77;
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode84 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode84.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode85);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList87 = scriptNode85.getChildScopes();
        int int88 = scriptNode85.getBaseLineno();
        com.google.javascript.rhino.head.Node node89 = scriptNode85.getLastSibling();
        int int90 = scriptNode85.getEndLineno();
        scriptNode85.setBaseLineno(4);
        com.google.javascript.rhino.head.Node node93 = new com.google.javascript.rhino.head.Node(988431572, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) scriptNode85);
        node20.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode26);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1254326248) + "'", int17 == (-1254326248));
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "                                                                                                                                                                                                        " + "'", str55, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(astNode61);
        org.junit.Assert.assertNull(functionNode66);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator75);
        org.junit.Assert.assertNull(functionNode81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(scopeList87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test03774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03774");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        boolean boolean12 = compilerEnvirons0.isRecordingComments();
        boolean boolean13 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        int int16 = compilerEnvirons14.getLanguageVersion();
        compilerEnvirons14.setLanguageVersion((int) (byte) 100);
        boolean boolean19 = compilerEnvirons14.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean21 = compilerEnvirons20.isReservedKeywordAsIdentifier();
        compilerEnvirons20.setStrictMode(true);
        compilerEnvirons20.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean27 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        compilerEnvirons26.setStrictMode(true);
        compilerEnvirons26.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean33 = compilerEnvirons32.isReservedKeywordAsIdentifier();
        boolean boolean34 = compilerEnvirons32.getWarnTrailingComma();
        compilerEnvirons32.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet37 = compilerEnvirons32.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons32.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory39 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26, errorReporter38);
        com.google.javascript.rhino.head.IRFactory iRFactory40 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter38);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter38);
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter38);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons43 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean44 = compilerEnvirons43.isReservedKeywordAsIdentifier();
        boolean boolean45 = compilerEnvirons43.getWarnTrailingComma();
        compilerEnvirons43.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet48 = compilerEnvirons43.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter49 = compilerEnvirons43.getErrorReporter();
        boolean boolean50 = compilerEnvirons43.isRecordingComments();
        compilerEnvirons43.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean54 = compilerEnvirons53.isReservedKeywordAsIdentifier();
        int int55 = compilerEnvirons53.getLanguageVersion();
        int int56 = compilerEnvirons53.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons57 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean58 = compilerEnvirons57.isReservedKeywordAsIdentifier();
        compilerEnvirons57.setStrictMode(true);
        compilerEnvirons57.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons63 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean64 = compilerEnvirons63.isReservedKeywordAsIdentifier();
        boolean boolean65 = compilerEnvirons63.getWarnTrailingComma();
        compilerEnvirons63.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet68 = compilerEnvirons63.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter69 = compilerEnvirons63.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory70 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons57, errorReporter69);
        com.google.javascript.rhino.head.IRFactory iRFactory71 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons53, errorReporter69);
        com.google.javascript.rhino.head.IRFactory iRFactory72 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons43, errorReporter69);
        java.util.Set<java.lang.String> strSet73 = compilerEnvirons43.getActivationNames();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons74 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray80 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet81 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet81, strArray80);
        compilerEnvirons74.setActivationNames((java.util.Set<java.lang.String>) strSet81);
        boolean boolean84 = compilerEnvirons74.isGenerateDebugInfo();
        compilerEnvirons74.setOptimizationLevel((int) (short) 1);
        compilerEnvirons74.setAllowSharpComments(true);
        boolean boolean89 = compilerEnvirons74.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter90 = compilerEnvirons74.getErrorReporter();
        int int91 = compilerEnvirons74.getLanguageVersion();
        java.util.Set<java.lang.String> strSet92 = compilerEnvirons74.getActivationNames();
        compilerEnvirons43.setActivationNames(strSet92);
        compilerEnvirons0.setActivationNames(strSet92);
        compilerEnvirons0.setRecoverFromErrors(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 170 + "'", int16 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strSet37);
        org.junit.Assert.assertNotNull(errorReporter38);
        org.junit.Assert.assertNotNull(compilerEnvirons43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strSet48);
        org.junit.Assert.assertNotNull(errorReporter49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 170 + "'", int55 == 170);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 170 + "'", int56 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(strSet68);
        org.junit.Assert.assertNotNull(errorReporter69);
        org.junit.Assert.assertNull(strSet73);
        org.junit.Assert.assertNotNull(compilerEnvirons74);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(errorReporter90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 170 + "'", int91 == 170);
        org.junit.Assert.assertNotNull(strSet92);
    }

    @Test
    public void test03775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03775");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope69 = scriptNode8.getDefiningScope("                      ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode71.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = astRoot74.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor76 = astRoot74.iterator();
        scriptNode71.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot74);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        astRoot74.visitComments(nodeVisitor78);
        astRoot74.setEndLineno(17);
        com.google.javascript.rhino.head.ast.Symbol symbol83 = astRoot74.getSymbol("AstRoot");
        scriptNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot74);
        scriptNode8.setPosition(161);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode87 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int88 = scriptNode8.addFunction(functionNode87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNull(scope69);
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertNull(symbol83);
    }

    @Test
    public void test03776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03776");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        java.lang.String[] strArray21 = new java.lang.String[] { "$0", "                      ", "                                                                                                                                                                                                        ", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n", "ScriptNode", "AstRoot", "136" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        boolean boolean25 = compilerEnvirons0.getAllowSharpComments();
        int int26 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test03777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03777");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.putIntProp((int) (short) 1, 1);
        scriptNode0.setEncodedSource("typeof");
        java.lang.String str7 = scriptNode0.toSource(23);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode8 = scriptNode0.getEnclosingFunction();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                              {\n                                              }\n" + "'", str7, "                                              {\n                                              }\n");
        org.junit.Assert.assertNull(functionNode8);
    }

    @Test
    public void test03778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03778");
        com.google.javascript.rhino.head.ast.Scope scope0 = new com.google.javascript.rhino.head.ast.Scope();
        int int3 = scope0.getIntProp(16, 22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode5.getChildScopes();
        int int8 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode5.getLastSibling();
        int int10 = scriptNode5.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode5.new NodeIterator();
        int int12 = scriptNode5.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot13.new NodeIterator();
        scriptNode5.setCompilerData((java.lang.Object) nodeIterator14);
        scope0.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode5);
        scriptNode5.flattenSymbolTable(true);
        boolean boolean19 = scriptNode5.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 22 + "'", int3 == 22);
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03779");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope8 = scriptNode1.getEnclosingScope();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode9 = scriptNode1.getEnclosingFunction();
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode1.getFunctions();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int14 = scriptNode11.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope15 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode11.setParentScope(scope15);
        int int17 = scriptNode1.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope15);
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType20, "hi!");
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        comment22.setCommentType(commentType23);
        java.lang.String str25 = comment22.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        comment22.setCommentType(commentType26);
        scriptNode1.setJsDocNode(comment22);
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        comment22.setCommentType(commentType29);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(scope8);
        org.junit.Assert.assertNull(functionNode9);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1647296145 + "'", int17 == 1647296145);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test03780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03780");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str15 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.Node node17 = scriptNode1.setType(25);
        scriptNode1.setSourceName("                        {\n                        }\n");
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(node17);
    }

    @Test
    public void test03781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03781");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        int int3 = scriptNode0.getEndLineno();
        com.google.javascript.rhino.head.ast.Scope scope4 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode0.setParentScope(scope4);
        int int6 = scriptNode0.depth();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons7 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons7, errorReporter8);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList13 = scriptNode11.getFunctions();
        scriptNode11.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node16 = iRFactory9.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.lang.String str18 = scriptNode11.makeIndent(12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot19 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = astRoot19.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        boolean boolean26 = comment25.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        boolean boolean32 = comment31.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        java.lang.String str39 = comment37.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray40 = new com.google.javascript.rhino.head.ast.Comment[] { comment25, comment31, comment37 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet41, commentArray40);
        astRoot19.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet41);
        boolean boolean44 = astRoot19.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray45 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList46 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList46, symbolArray45);
        astRoot19.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        scriptNode11.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList46);
        scriptNode11.setBounds(25, 25);
        com.google.javascript.rhino.head.ast.AstNode astNode53 = scriptNode11.getParent();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = scriptNode11.getParent();
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.setFinally((com.google.javascript.rhino.head.Node) astNode54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                        " + "'", str18, "                        ");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "                                                                                                                                                                                                        " + "'", str39, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(symbolArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(astNode53);
        org.junit.Assert.assertNotNull(astNode54);
    }

    @Test
    public void test03782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03782");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = astRoot34.getComments();
        int int36 = astRoot34.getEndLineno();
        com.google.javascript.rhino.head.Node node38 = astRoot34.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = astRoot34.getTop();
        scriptNode40.setPosition(204293885);
        scriptNode40.putIntProp((-270991973), (-213029975));
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = astRoot46.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        boolean boolean53 = comment52.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType56, "");
        boolean boolean59 = comment58.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType62, "");
        java.lang.String str66 = comment64.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray67 = new com.google.javascript.rhino.head.ast.Comment[] { comment52, comment58, comment64 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet68, commentArray67);
        astRoot46.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet68);
        boolean boolean71 = astRoot46.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode72 = astRoot46.getParent();
        astRoot46.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.ast.AstNode astNode75 = astRoot46.getParent();
        com.google.javascript.rhino.head.ast.Scope scope76 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator77 = scope76.spliterator();
        astRoot46.setCompilerData((java.lang.Object) nodeSpliterator77);
        scriptNode40.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot46);
        com.google.javascript.rhino.head.Node node80 = astRoot46.target;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(commentSet35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(scriptNode40);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                                                                                                                                                                                        " + "'", str66, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(astNode72);
        org.junit.Assert.assertNull(astNode75);
        org.junit.Assert.assertNotNull(nodeSpliterator77);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test03783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03783");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = astRoot9.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor11 = astRoot9.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor12 = null;
        astRoot9.visitComments(nodeVisitor12);
        com.google.javascript.rhino.head.Node node14 = astRoot9.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = iRFactory8.transformTree(astRoot9);
        int int16 = astRoot9.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int19 = astRoot18.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.lang.Object obj23 = scriptNode22.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        int int27 = scriptNode24.getEndLineno();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode22, (com.google.javascript.rhino.head.Node) scriptNode24);
        com.google.javascript.rhino.head.ast.Scope scope30 = new com.google.javascript.rhino.head.ast.Scope(16);
        com.google.javascript.rhino.head.Node node31 = new com.google.javascript.rhino.head.Node((int) 'a', (com.google.javascript.rhino.head.Node) astRoot18, node28, (com.google.javascript.rhino.head.Node) scope30);
        // The following exception was thrown during execution in test generation
        try {
            astRoot9.setFinally((com.google.javascript.rhino.head.Node) astRoot18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(nodeItor11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(scriptNode15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test03784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03784");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node68 = scriptNode8.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode71.getChildScopes();
        int int74 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.Node node75 = scriptNode71.getLastSibling();
        scriptNode71.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode79.getFunctions();
        scriptNode79.setPosition((int) (byte) 10);
        java.lang.String str84 = scriptNode71.toStringTree(scriptNode79);
        int int85 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode87.removeProp(10);
        com.google.javascript.rhino.head.ast.Scope scope90 = scriptNode87.getParentScope();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        java.lang.Object obj92 = scriptNode87.getCompilerData();
        scriptNode8.putProp(12, (java.lang.Object) scriptNode87);
        java.lang.String str94 = scriptNode8.getSourceName();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test03785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03785");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(994604176);
        com.google.javascript.rhino.head.ast.AstNode astNode2 = scope1.getParent();
        org.junit.Assert.assertNull(astNode2);
    }

    @Test
    public void test03786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03786");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode26 = astRoot0.getParent();
        java.lang.String str27 = astRoot0.debugPrint();
        int int28 = astRoot0.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = astRoot0.getComments();
        java.lang.String str30 = astRoot0.debugPrint();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(astNode26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str27, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(commentSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str30, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
    }

    @Test
    public void test03787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03787");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.String str15 = scriptNode1.getSourceName();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType18, "hi!");
        scriptNode1.setJsDocNode(comment20);
        com.google.javascript.rhino.head.ast.Scope scope22 = comment20.getEnclosingScope();
        com.google.javascript.rhino.head.ast.AstRoot astRoot23 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int24 = astRoot23.getBaseLineno();
        java.lang.String str25 = astRoot23.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator27 = astRoot26.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        boolean boolean33 = comment32.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        java.lang.String str46 = comment44.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray47 = new com.google.javascript.rhino.head.ast.Comment[] { comment32, comment38, comment44 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet48 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet48, commentArray47);
        astRoot26.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet48);
        boolean boolean51 = astRoot26.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType54, "hi!");
        astRoot26.addComment(comment56);
        astRoot23.addComment(comment56);
        java.lang.String str59 = comment56.getValue();
        comment20.setJsDocNode(comment56);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(scope22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str25, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "                                                                                                                                                                                                        " + "'", str46, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
    }

    @Test
    public void test03788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03788");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList9 = scriptNode1.getStatements();
        int int10 = scriptNode1.getFunctionCount();
        java.lang.String str12 = scriptNode1.makeIndent((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node13 = scriptNode1.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(astNodeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "  " + "'", str12, "  ");
    }

    @Test
    public void test03789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03789");
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = astRoot2.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType6, "");
        boolean boolean9 = comment8.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        java.lang.String str22 = comment20.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] { comment8, comment14, comment20 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        boolean boolean27 = astRoot2.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray28 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList29 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList29, symbolArray28);
        astRoot2.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList29);
        int int32 = astRoot2.getLineno();
        java.lang.String str33 = astRoot2.getNextTempName();
        int int34 = astRoot2.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList38 = scriptNode36.getChildScopes();
        int int39 = scriptNode36.getBaseLineno();
        com.google.javascript.rhino.head.Node node40 = scriptNode36.getLastSibling();
        scriptNode36.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        java.lang.String str49 = scriptNode36.toStringTree(scriptNode44);
        int int50 = scriptNode36.getBaseLineno();
        boolean boolean51 = scriptNode36.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = scriptNode36.getTop();
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((-929928321), (com.google.javascript.rhino.head.Node) astRoot2, (com.google.javascript.rhino.head.Node) scriptNode36);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator54 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator55 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator56 = positionComparator54.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator55);
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int58 = astRoot57.getBaseLineno();
        java.lang.String str59 = astRoot57.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot60 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator61 = astRoot60.new NodeIterator();
        int int62 = positionComparator55.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot57, (com.google.javascript.rhino.head.ast.AstNode) astRoot60);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator64 = scriptNode63.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator65 = scriptNode63.new NodeIterator();
        astRoot60.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor67 = null;
        astRoot60.visitComments(nodeVisitor67);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList69 = astRoot60.getStatements();
        java.lang.String str71 = astRoot60.makeIndent(0);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node((-1728226312), node53, (com.google.javascript.rhino.head.Node) astRoot60);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                                                                                                                                                        " + "'", str22, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(symbolArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "$0" + "'", str33, "$0");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(scopeList38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(scriptNode52);
        org.junit.Assert.assertNotNull(astNodeComparator56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str59, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertNotNull(astNodeList69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test03790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03790");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator3 = positionComparator0.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator4 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator5 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator6 = positionComparator4.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator5);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator7 = astNodeComparator6.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator8 = positionComparator0.thenComparing(astNodeComparator7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scriptNode9.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = scriptNode9.new NodeIterator();
        java.lang.String str12 = scriptNode9.getNextTempName();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scriptNode9.iterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot((-270991973));
        int int16 = positionComparator0.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode9, (com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node17 = astRoot15.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertNotNull(astNodeComparator3);
        org.junit.Assert.assertNotNull(astNodeComparator6);
        org.junit.Assert.assertNotNull(astNodeComparator7);
        org.junit.Assert.assertNotNull(astNodeComparator8);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "$0" + "'", str12, "$0");
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 270991972 + "'", int16 == 270991972);
    }

    @Test
    public void test03791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03791");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.lang.Object obj4 = scriptNode3.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        int int8 = scriptNode5.getEndLineno();
        com.google.javascript.rhino.head.Node node9 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scriptNode5);
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = astRoot10.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType14, "");
        boolean boolean17 = comment16.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType20, "");
        boolean boolean23 = comment22.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        java.lang.String str30 = comment28.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray31 = new com.google.javascript.rhino.head.ast.Comment[] { comment16, comment22, comment28 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet32, commentArray31);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet32);
        java.lang.String str35 = astRoot10.getEncodedSource();
        com.google.javascript.rhino.head.Node node36 = astRoot10.target;
        scriptNode3.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        scriptNode38.setBaseLineno((int) 'a');
        java.lang.String str43 = scriptNode38.getSourceName();
        scriptNode3.target = scriptNode38;
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        boolean boolean50 = comment49.hasSideEffects();
        int int51 = comment49.getLineno();
        java.lang.String str52 = comment49.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        comment49.setCommentType(commentType53);
        java.lang.String str56 = comment49.toSource((-306271829));
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator58 = astRoot57.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        com.google.javascript.rhino.head.ast.Comment comment63 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType61, "");
        boolean boolean64 = comment63.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = null;
        com.google.javascript.rhino.head.ast.Comment comment69 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType67, "");
        boolean boolean70 = comment69.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType73, "");
        java.lang.String str77 = comment75.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray78 = new com.google.javascript.rhino.head.ast.Comment[] { comment63, comment69, comment75 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet79, commentArray78);
        astRoot57.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet79);
        boolean boolean82 = astRoot57.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType85 = null;
        com.google.javascript.rhino.head.ast.Comment comment87 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType85, "hi!");
        astRoot57.addComment(comment87);
        astRoot57.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot91 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet92 = astRoot91.getComments();
        int int93 = astRoot91.getEndLineno();
        com.google.javascript.rhino.head.Node node95 = astRoot91.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot57, (com.google.javascript.rhino.head.ast.Scope) astRoot91);
        com.google.javascript.rhino.head.Node node98 = new com.google.javascript.rhino.head.Node((int) (byte) 100, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) comment49, (com.google.javascript.rhino.head.Node) astRoot91, 1275261773);
        com.google.javascript.rhino.head.ast.Scope scope99 = astRoot91.getEnclosingScope();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                        " + "'", str30, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1\tCOMMENT 1 0\n" + "'", str52, "1\tCOMMENT 1 0\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "                                                                                                                                                                                                        " + "'", str77, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(commentSet92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertNull(scope99);
    }

    @Test
    public void test03792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03792");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode6.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode17.getChildScopes();
        java.lang.String str21 = scriptNode17.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode11.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int25 = scriptNode17.getType();
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode28.getChildScopes();
        int int31 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node32 = scriptNode28.getLastSibling();
        scriptNode28.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode36.getFunctions();
        scriptNode36.setPosition((int) (byte) 10);
        java.lang.String str41 = scriptNode28.toStringTree(scriptNode36);
        int int42 = scriptNode28.getBaseLineno();
        scriptNode28.setEncodedSourceStart((int) '4');
        scriptNode17.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode1.setCompilerData((java.lang.Object) scriptNode28);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode47 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int48 = scriptNode1.addFunction(functionNode47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test03793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03793");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean8 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03794");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList9 = scriptNode1.getStatements();
        java.lang.Class<?> wildcardClass10 = scriptNode1.getClass();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(astNodeList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test03795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03795");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node68 = scriptNode8.getNext();
        scriptNode8.setEncodedSourceBounds(0, (int) (byte) 100);
        com.google.javascript.rhino.head.Node node72 = scriptNode8.getLastChild();
        // The following exception was thrown during execution in test generation
        try {
            node72.setString("-1\tSCRIPT -1 1\n16\tCOMMENT 16 0\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNotNull(node72);
    }

    @Test
    public void test03796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03796");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray11 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet12);
        boolean boolean15 = compilerEnvirons5.isGenerateDebugInfo();
        compilerEnvirons5.setOptimizationLevel((int) (short) 1);
        compilerEnvirons5.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter20);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.Node node28 = scriptNode24.getLastSibling();
        int int29 = scriptNode24.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope32 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot33 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator34 = astRoot33.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        boolean boolean40 = comment39.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType43 = null;
        com.google.javascript.rhino.head.ast.Comment comment45 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType43, "");
        boolean boolean46 = comment45.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType49, "");
        java.lang.String str53 = comment51.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray54 = new com.google.javascript.rhino.head.ast.Comment[] { comment39, comment45, comment51 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet55 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet55, commentArray54);
        astRoot33.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet55);
        boolean boolean58 = astRoot33.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode59 = astRoot33.getParent();
        astRoot33.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node63 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode24, (com.google.javascript.rhino.head.Node) scope32, (com.google.javascript.rhino.head.Node) astRoot33, 6);
        boolean boolean64 = astRoot33.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = iRFactory21.transformTree(astRoot33);
        int int66 = astRoot33.getEndLineno();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "                                                                                                                                                                                                        " + "'", str53, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(astNode59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(scriptNode65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test03797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03797");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        java.lang.String str32 = astRoot1.getNextTempName();
        java.lang.String str33 = astRoot1.getJsDoc();
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int37 = astRoot36.getBaseLineno();
        int int38 = astRoot36.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList42 = scriptNode40.getChildScopes();
        int int43 = scriptNode40.getBaseLineno();
        com.google.javascript.rhino.head.Node node44 = scriptNode40.getLastSibling();
        scriptNode40.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList50 = scriptNode48.getFunctions();
        scriptNode48.setPosition((int) (byte) 10);
        java.lang.String str53 = scriptNode40.toStringTree(scriptNode48);
        int int54 = scriptNode40.getBaseLineno();
        astRoot36.target = scriptNode40;
        int int56 = astRoot34.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.lang.String str58 = astRoot34.toSource(19);
        java.lang.String str59 = astRoot34.getEncodedSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.FunctionNode functionNode61 = scriptNode60.getEnclosingFunction();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator63 = astRoot62.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType66 = null;
        com.google.javascript.rhino.head.ast.Comment comment68 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType66, "");
        boolean boolean69 = comment68.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType72, "");
        boolean boolean75 = comment74.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType78 = null;
        com.google.javascript.rhino.head.ast.Comment comment80 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType78, "");
        java.lang.String str82 = comment80.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray83 = new com.google.javascript.rhino.head.ast.Comment[] { comment68, comment74, comment80 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet84 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet84, commentArray83);
        astRoot62.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet84);
        boolean boolean87 = astRoot62.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray88 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList89 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList89, symbolArray88);
        astRoot62.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList89);
        int int92 = astRoot62.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment93 = astRoot62.getJsDocNode();
        astRoot62.setInStrictMode(false);
        scriptNode60.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot62);
        boolean boolean97 = scriptNode60.hasSideEffects();
        com.google.javascript.rhino.head.Node node98 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot34, (com.google.javascript.rhino.head.Node) scriptNode60);
        java.lang.String str99 = astRoot34.getNextTempName();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "$0" + "'", str32, "$0");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(scopeList42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(functionNodeList50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(functionNode61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "                                                                                                                                                                                                        " + "'", str82, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(symbolArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(comment93);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "$0" + "'", str99, "$0");
    }

    @Test
    public void test03798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03798");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator34 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator33);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator35 = positionComparator32.reversed();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType38, "hi!");
        java.lang.String str42 = comment40.toSource(0);
        java.lang.String str43 = comment40.shortName();
        boolean boolean44 = comment40.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator45 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator46 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator47 = positionComparator45.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getBaseLineno();
        java.lang.String str50 = astRoot48.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator52 = astRoot51.new NodeIterator();
        int int53 = positionComparator46.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot48, (com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator55 = scriptNode54.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = scriptNode54.new NodeIterator();
        astRoot51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode54);
        com.google.javascript.rhino.head.Node node58 = scriptNode54.getFirstChild();
        comment40.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode54);
        java.lang.String str60 = comment40.getValue();
        com.google.javascript.rhino.head.Token.CommentType commentType61 = comment40.getCommentType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet63 = astRoot62.getComments();
        java.lang.String str64 = astRoot62.getSourceName();
        boolean boolean65 = astRoot62.hasChildren();
        int int66 = astRoot62.getLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor67 = null;
        astRoot62.visitComments(nodeVisitor67);
        int int69 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) comment40, (com.google.javascript.rhino.head.ast.AstNode) astRoot62);
        java.lang.String str70 = astRoot0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot62);
        com.google.javascript.rhino.head.Node node71 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot62.addChildToFront(node71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(commentSet31);
        org.junit.Assert.assertNotNull(astNodeComparator34);
        org.junit.Assert.assertNotNull(astNodeComparator35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Comment" + "'", str43, "Comment");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(astNodeComparator47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str50, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator55);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNull(commentType61);
        org.junit.Assert.assertNull(commentSet63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 36 + "'", int69 == 36);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test03799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03799");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        int int17 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setXmlAvailable(false);
        compilerEnvirons0.setXmlAvailable(false);
        com.google.javascript.rhino.head.Parser parser22 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean23 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setGenerateDebugInfo(false);
        boolean boolean26 = compilerEnvirons0.isGenerateDebugInfo();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 170 + "'", int17 == 170);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test03800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03800");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        com.google.javascript.rhino.head.Node node5 = astRoot0.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode9.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = astRoot12.getComments();
        int int14 = astRoot12.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor15 = null;
        astRoot12.visitComments(nodeVisitor15);
        com.google.javascript.rhino.head.Node node17 = astRoot12.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = astRoot12.getComments();
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) astRoot12);
        int int20 = scriptNode9.getLength();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory23 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons21, errorReporter22);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode24.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList27 = scriptNode25.getFunctions();
        scriptNode25.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node30 = iRFactory23.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode25);
        java.lang.String str31 = scriptNode25.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = scriptNode33.getChildScopes();
        int int36 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.Node node37 = scriptNode33.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList41 = scriptNode39.getChildScopes();
        java.lang.String str43 = scriptNode39.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode33.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode39, (com.google.javascript.rhino.head.Node) scriptNode45);
        java.lang.Object obj48 = scriptNode39.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str51 = scriptNode49.toSource((int) '4');
        java.lang.String str52 = scriptNode39.toStringTree(scriptNode49);
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode39);
        com.google.javascript.rhino.head.Node node54 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode9, (com.google.javascript.rhino.head.Node) scriptNode39);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode9.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        scriptNode56.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        com.google.javascript.rhino.head.ast.AstRoot astRoot61 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int62 = astRoot61.getParamCount();
        int int63 = astRoot61.getRegexpCount();
        scriptNode56.addChildToBack((com.google.javascript.rhino.head.Node) astRoot61);
        scriptNode9.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot61);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int68 = astRoot67.getBaseLineno();
        int int69 = astRoot67.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode71.getChildScopes();
        int int74 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.Node node75 = scriptNode71.getLastSibling();
        scriptNode71.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode79.getFunctions();
        scriptNode79.setPosition((int) (byte) 10);
        java.lang.String str84 = scriptNode71.toStringTree(scriptNode79);
        int int85 = scriptNode71.getBaseLineno();
        astRoot67.target = scriptNode71;
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet87 = astRoot67.getComments();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList88 = astRoot67.getSymbols();
        scriptNode9.setSymbols(symbolList88);
        int int90 = scriptNode9.getFunctionCount();
        org.junit.Assert.assertNotNull(nodeItor2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(commentSet13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(commentSet18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(functionNodeList27);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(scopeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNull(scopeList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str51, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(commentSet87);
        org.junit.Assert.assertNotNull(symbolList88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test03801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03801");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setEncodedSourceStart((int) 'a');
        java.lang.String str6 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        scriptNode9.setBaseLineno(18);
        scriptNode9.setEndLineno(26);
        com.google.javascript.rhino.head.Node node16 = scriptNode9.getLastSibling();
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node(1275261773, (com.google.javascript.rhino.head.Node) scriptNode9, 4);
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = astRoot20.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        boolean boolean33 = comment32.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        java.lang.String str40 = comment38.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] { comment26, comment32, comment38 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        boolean boolean45 = astRoot20.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray46 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList47 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList47, symbolArray46);
        astRoot20.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList47);
        com.google.javascript.rhino.head.Node node50 = astRoot20.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot20, (com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode55.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode56);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList58 = scriptNode56.getChildScopes();
        int int59 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.Node node60 = scriptNode56.getLastSibling();
        scriptNode56.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList66 = scriptNode64.getFunctions();
        scriptNode64.setPosition((int) (byte) 10);
        java.lang.String str69 = scriptNode56.toStringTree(scriptNode64);
        int int70 = scriptNode56.getBaseLineno();
        com.google.javascript.rhino.head.Node node72 = scriptNode56.setType((int) (byte) -1);
        java.lang.String str73 = astRoot20.toStringTree(scriptNode56);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = scriptNode56.getTop();
        scriptNode1.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode74);
        java.lang.String str76 = scriptNode74.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = scriptNode74.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ScriptNode" + "'", str6, "ScriptNode");
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                                                                                                                                                                                        " + "'", str40, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(symbolArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(scopeList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNotNull(functionNodeList66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "23\t  ERROR 24 1\n" + "'", str76, "23\t  ERROR 24 1\n");
    }

    @Test
    public void test03802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03802");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.putIntProp((int) (short) 1, 1);
        java.lang.String str4 = scriptNode0.getEncodedSource();
        com.google.javascript.rhino.head.Node node5 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.Symbol symbol7 = scriptNode0.getSymbol("129");
        scriptNode0.setEncodedSourceEnd(0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(symbol7);
    }

    @Test
    public void test03803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03803");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        java.lang.String str20 = scriptNode16.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap25 = null;
        scriptNode10.setSymbolTable(strMap25);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap27 = scriptNode10.getSymbolTable();
        com.google.javascript.rhino.head.ast.Scope scope29 = new com.google.javascript.rhino.head.ast.Scope(1);
        int int30 = scriptNode10.compareTo((com.google.javascript.rhino.head.ast.AstNode) scope29);
        boolean boolean31 = scriptNode10.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode32.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode33);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList35 = scriptNode33.getChildScopes();
        int int36 = scriptNode33.getBaseLineno();
        com.google.javascript.rhino.head.Node node37 = scriptNode33.getLastSibling();
        int int38 = scriptNode33.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator39 = scriptNode33.new NodeIterator();
        int int40 = scriptNode33.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator42 = astRoot41.new NodeIterator();
        scriptNode33.setCompilerData((java.lang.Object) nodeIterator42);
        scriptNode10.setCompilerData((java.lang.Object) scriptNode33);
        scriptNode10.setEncodedSourceStart(1275261773);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode48.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator52 = astRoot51.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor53 = astRoot51.iterator();
        scriptNode48.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot51);
        int int55 = astRoot51.getType();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot51);
        int int57 = scriptNode10.getLineno();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = scriptNode10.getExistingIntProp((-975234622));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(scopeList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(nodeItor53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 136 + "'", int55 == 136);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test03804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03804");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean14 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setIdeMode(true);
        com.google.javascript.rhino.head.IRFactory iRFactory17 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode19.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator23 = astRoot22.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor24 = astRoot22.iterator();
        scriptNode19.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot22);
        int int26 = astRoot22.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = astRoot22.getAstRoot();
        java.lang.String str29 = astRoot22.toSource((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot30 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator31 = astRoot30.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType34, "");
        boolean boolean37 = comment36.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        java.lang.String str50 = comment48.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray51 = new com.google.javascript.rhino.head.ast.Comment[] { comment36, comment42, comment48 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet52, commentArray51);
        astRoot30.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet52);
        boolean boolean55 = astRoot30.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray56 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList57 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList57, symbolArray56);
        astRoot30.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList57);
        astRoot30.setInStrictMode(false);
        astRoot30.putIntProp(0, (int) (byte) 100);
        astRoot22.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot30);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = iRFactory17.transformTree(astRoot30);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList67 = astRoot30.getChildScopes();
        astRoot30.setEncodedSourceEnd((-505759099));
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(nodeItor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(astRoot27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                                                                                                                                                                                                        " + "'", str50, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(symbolArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertNull(scopeList67);
    }

    @Test
    public void test03805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03805");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        int int12 = compilerEnvirons10.getLanguageVersion();
        int int13 = compilerEnvirons10.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        compilerEnvirons14.setStrictMode(true);
        compilerEnvirons14.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean21 = compilerEnvirons20.isReservedKeywordAsIdentifier();
        boolean boolean22 = compilerEnvirons20.getWarnTrailingComma();
        compilerEnvirons20.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons20.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory28 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory29 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter26);
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        int int34 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 170 + "'", int12 == 170);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 170 + "'", int13 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test03806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03806");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator2 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator3 = positionComparator1.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int5 = astRoot4.getBaseLineno();
        java.lang.String str6 = astRoot4.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        int int9 = positionComparator2.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot4, (com.google.javascript.rhino.head.ast.AstNode) astRoot7);
        java.lang.String str11 = astRoot4.makeIndent(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode13.getChildScopes();
        int int16 = scriptNode13.getBaseLineno();
        com.google.javascript.rhino.head.Node node17 = scriptNode13.getLastSibling();
        java.lang.String str19 = scriptNode13.toSource((int) (short) -1);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode13);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray22 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList23 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList23, symbolArray22);
        scriptNode21.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList23);
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int27 = astRoot26.getParamCount();
        int int28 = astRoot26.getRegexpCount();
        scriptNode21.addChildToBack((com.google.javascript.rhino.head.Node) astRoot26);
        int int30 = astRoot26.getEncodedSourceEnd();
        java.lang.Object obj32 = astRoot26.getProp(0);
        com.google.javascript.rhino.head.Node node33 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node((int) ' ', (com.google.javascript.rhino.head.Node) astRoot4, (com.google.javascript.rhino.head.Node) astRoot26, node33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str6, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "                                " + "'", str11, "                                ");
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{\n}\n" + "'", str19, "{\n}\n");
        org.junit.Assert.assertNotNull(symbolArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test03807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03807");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        int int6 = compilerEnvirons4.getLanguageVersion();
        boolean boolean7 = compilerEnvirons4.isGenerateObserverCount();
        com.google.javascript.rhino.head.Parser parser8 = new com.google.javascript.rhino.head.Parser(compilerEnvirons4);
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons4.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter9);
        compilerEnvirons0.setGeneratingSource(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 170 + "'", int6 == 170);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(errorReporter9);
    }

    @Test
    public void test03808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03808");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(538062289);
    }

    @Test
    public void test03809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03809");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int22 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.Node node23 = scriptNode12.getLastSibling();
        scriptNode12.removeProp(14);
        com.google.javascript.rhino.head.ast.Symbol symbol27 = scriptNode12.getSymbol(">>>");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode12.labelId((-568490075));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNull(symbol27);
    }

    @Test
    public void test03810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03810");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.ast.Scope scope69 = scriptNode8.getDefiningScope("                      ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode71.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot74 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator75 = astRoot74.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor76 = astRoot74.iterator();
        scriptNode71.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot74);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        astRoot74.visitComments(nodeVisitor78);
        astRoot74.setEndLineno(17);
        com.google.javascript.rhino.head.ast.Symbol symbol83 = astRoot74.getSymbol("AstRoot");
        scriptNode8.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot74);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor85 = null;
        astRoot74.visitComments(nodeVisitor85);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = astRoot74.getParamAndVarCount();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNull(scope69);
        org.junit.Assert.assertNotNull(nodeItor76);
        org.junit.Assert.assertNull(symbol83);
    }

    @Test
    public void test03811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03811");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot75 = new com.google.javascript.rhino.head.ast.AstRoot((int) '#');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode76.putIntProp((int) (short) 1, 1);
        scriptNode76.setEncodedSource("typeof");
        com.google.javascript.rhino.head.Node node82 = scriptNode76.getLastChild();
        scriptNode76.setBaseLineno(13);
        scriptNode76.setLength(23);
        scriptNode76.setPosition((-213029975));
        java.lang.String str89 = scriptNode76.shortName();
        // The following exception was thrown during execution in test generation
        try {
            node73.addChildBefore((com.google.javascript.rhino.head.Node) astRoot75, (com.google.javascript.rhino.head.Node) scriptNode76);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNull(node82);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ScriptNode" + "'", str89, "ScriptNode");
    }

    @Test
    public void test03812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03812");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setStrictMode(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory7 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter6);
        boolean boolean8 = compilerEnvirons0.isRecordingComments();
        int int9 = compilerEnvirons0.getOptimizationLevel();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03813");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        astRoot0.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        scriptNode9.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode14.getChildScopes();
        int int17 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.Node node18 = scriptNode14.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode20.getChildScopes();
        java.lang.String str24 = scriptNode20.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode14.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int28 = scriptNode20.getType();
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int30 = scriptNode20.getParamCount();
        com.google.javascript.rhino.head.Node node31 = scriptNode20.getLastSibling();
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode20);
        int int33 = scriptNode20.depth();
        scriptNode20.setEncodedSourceBounds(0, 65536);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator37 = scriptNode20.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator39 = astRoot38.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        boolean boolean51 = comment50.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType54, "");
        java.lang.String str58 = comment56.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray59 = new com.google.javascript.rhino.head.ast.Comment[] { comment44, comment50, comment56 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet60, commentArray59);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        boolean boolean63 = astRoot38.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode64 = astRoot38.getParent();
        java.lang.String str65 = astRoot38.debugPrint();
        int int66 = astRoot38.getEncodedSourceStart();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet67 = astRoot38.getComments();
        astRoot38.checkParentLinks();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode20, (com.google.javascript.rhino.head.ast.Scope) astRoot38);
        int int70 = astRoot38.getLineno();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 136 + "'", int28 == 136);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(nodeSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                                                                                                                                                        " + "'", str58, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(astNode64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str65, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(commentSet67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test03814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03814");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        int int6 = compilerEnvirons0.getOptimizationLevel();
        compilerEnvirons0.setGeneratingSource(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test03815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03815");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scriptNode32.spliterator();
        com.google.javascript.rhino.head.Node node35 = scriptNode32.setType((int) '#');
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode41.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor46 = astRoot44.iterator();
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode49.getChildScopes();
        int int52 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.Node node54 = node53.getFirstChild();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(nodeItor46);
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(node54);
    }

    @Test
    public void test03816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03816");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        scriptNode8.setEncodedSource("-1\tSCRIPT -1 1\n");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList21 = scriptNode19.getChildScopes();
        int int22 = scriptNode19.getBaseLineno();
        com.google.javascript.rhino.head.Node node23 = scriptNode19.getLastSibling();
        int int24 = scriptNode19.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope27 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot28.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType32 = null;
        com.google.javascript.rhino.head.ast.Comment comment34 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType32, "");
        boolean boolean35 = comment34.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        java.lang.String str48 = comment46.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray49 = new com.google.javascript.rhino.head.ast.Comment[] { comment34, comment40, comment46 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet50 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet50, commentArray49);
        astRoot28.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet50);
        boolean boolean53 = astRoot28.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode54 = astRoot28.getParent();
        astRoot28.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node58 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope27, (com.google.javascript.rhino.head.Node) astRoot28, 6);
        com.google.javascript.rhino.head.Node node59 = new com.google.javascript.rhino.head.Node((int) (byte) 10, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) astRoot28);
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType62, "");
        boolean boolean65 = comment64.hasSideEffects();
        int int66 = comment64.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType67 = comment64.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode68.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode69);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList71 = scriptNode69.getChildScopes();
        int int72 = scriptNode69.getBaseLineno();
        int int73 = scriptNode69.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode74.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList77 = scriptNode75.getFunctions();
        scriptNode75.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope80 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode69.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode75, (com.google.javascript.rhino.head.Node) scope80);
        scriptNode75.setEncodedSourceEnd(18);
        comment64.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode75);
        com.google.javascript.rhino.head.ast.AstRoot astRoot85 = scriptNode75.getAstRoot();
        int int86 = scriptNode75.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = scriptNode75.getTop();
        astRoot28.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode75);
        com.google.javascript.rhino.head.Token.CommentType commentType91 = null;
        com.google.javascript.rhino.head.ast.Comment comment93 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType91, "");
        boolean boolean94 = comment93.hasSideEffects();
        int int95 = comment93.getLineno();
        java.lang.String str96 = comment93.debugPrint();
        astRoot28.addChildToBack((com.google.javascript.rhino.head.Node) comment93);
        int int98 = comment93.getPosition();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertNull(scopeList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                                                                                                                                                        " + "'", str48, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(astNode54);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(commentType67);
        org.junit.Assert.assertNull(scopeList71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(functionNodeList77);
        org.junit.Assert.assertNull(astRoot85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 18 + "'", int86 == 18);
        org.junit.Assert.assertNotNull(scriptNode87);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "1\tCOMMENT 1 0\n" + "'", str96, "1\tCOMMENT 1 0\n");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test03817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03817");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType3, "");
        boolean boolean6 = comment5.hasSideEffects();
        int int7 = comment5.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType8 = comment5.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        int int14 = scriptNode10.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList18 = scriptNode16.getFunctions();
        scriptNode16.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope21 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scope21);
        scriptNode16.setEncodedSourceEnd(18);
        comment5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator27 = scriptNode26.spliterator();
        com.google.javascript.rhino.head.Node node29 = scriptNode26.setType((int) '#');
        boolean boolean30 = scriptNode26.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.Symbol symbol32 = scriptNode26.getSymbol("hi!");
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(842975161, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scriptNode26, 24);
        // The following exception was thrown during execution in test generation
        try {
            node34.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(commentType8);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(functionNodeList18);
        org.junit.Assert.assertNotNull(nodeSpliterator27);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(symbol32);
    }

    @Test
    public void test03818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03818");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        int int15 = scriptNode8.getEndLineno();
        scriptNode8.setEncodedSource("hi!");
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode8, (int) (byte) 0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter21 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter21);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList26 = scriptNode24.getFunctions();
        scriptNode24.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node29 = iRFactory22.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.lang.String str30 = scriptNode24.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        int int35 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode38.getChildScopes();
        java.lang.String str42 = scriptNode38.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode32.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode44);
        java.lang.Object obj47 = scriptNode38.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str50 = scriptNode48.toSource((int) '4');
        java.lang.String str51 = scriptNode38.toStringTree(scriptNode48);
        scriptNode24.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        int int53 = scriptNode38.getLineno();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator56 = astRoot55.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        boolean boolean62 = comment61.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType65 = null;
        com.google.javascript.rhino.head.ast.Comment comment67 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType65, "");
        boolean boolean68 = comment67.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType71 = null;
        com.google.javascript.rhino.head.ast.Comment comment73 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType71, "");
        java.lang.String str75 = comment73.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray76 = new com.google.javascript.rhino.head.ast.Comment[] { comment61, comment67, comment73 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet77 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet77, commentArray76);
        astRoot55.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet77);
        boolean boolean80 = astRoot55.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray81 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList82 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList82, symbolArray81);
        astRoot55.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList82);
        com.google.javascript.rhino.head.Node node85 = astRoot55.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode86.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot55, (com.google.javascript.rhino.head.ast.Scope) scriptNode87);
        com.google.javascript.rhino.head.Node node90 = astRoot55.getFirstChild();
        boolean boolean91 = astRoot55.hasChildren();
        scriptNode38.addChildrenToBack((com.google.javascript.rhino.head.Node) astRoot55);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode38.setEndLineno((-387673394));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str50, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "                                                                                                                                                                                                        " + "'", str75, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(symbolArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03819");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString("-213029975\tSCRIPT -213029975 1\n");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) -1, commentType5, "AstRoot");
        com.google.javascript.rhino.head.Node node8 = new com.google.javascript.rhino.head.Node(0, node2, (com.google.javascript.rhino.head.Node) comment7);
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        comment7.setCommentType(commentType9);
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test03820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03820");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot1.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol4 = astRoot1.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str7 = scriptNode5.toSource((int) '4');
        com.google.javascript.rhino.head.Node node8 = scriptNode5.getFirstChild();
        java.lang.Object obj10 = scriptNode5.getProp(18);
        boolean boolean11 = scriptNode5.hasConsistentReturnUsage();
        java.lang.String str12 = astRoot1.toStringTree(scriptNode5);
        int int13 = astRoot1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot15.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        java.lang.String str35 = comment33.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] { comment21, comment27, comment33 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        int int46 = comment44.getLineno();
        com.google.javascript.rhino.head.Node node48 = comment44.setType(18);
        boolean boolean49 = comment44.hasSideEffects();
        astRoot15.addComment(comment44);
        com.google.javascript.rhino.head.Node node52 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) comment44, (-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot53 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = astRoot53.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol56 = astRoot53.getSymbol("                                                                                                                                                                                                        ");
        node52.addChildToFront((com.google.javascript.rhino.head.Node) astRoot53);
        com.google.javascript.rhino.head.ast.Scope scope60 = new com.google.javascript.rhino.head.ast.Scope(136, 538062289);
        astRoot53.addChildToFront((com.google.javascript.rhino.head.Node) scope60);
        com.google.javascript.rhino.head.Node node62 = scope60.getLastSibling();
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node((int) (short) 1, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scope60, 603173706);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode65 = scope60.getEnclosingFunction();
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertNull(symbol4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str7, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                                                                                                                        " + "'", str35, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(commentSet54);
        org.junit.Assert.assertNull(symbol56);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNull(functionNode65);
    }

    @Test
    public void test03821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03821");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        java.lang.String str9 = scriptNode1.getNextTempName();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node10 = scriptNode1.getContinue();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "$0" + "'", str9, "$0");
    }

    @Test
    public void test03822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03822");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        com.google.javascript.rhino.head.Token.CommentType commentType5 = comment4.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        int int10 = scriptNode7.getBaseLineno();
        int int11 = scriptNode7.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope18 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode7.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode13, (com.google.javascript.rhino.head.Node) scope18);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode21.getChildScopes();
        int int24 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.Node node25 = scriptNode21.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot26 = scriptNode21.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode7, (com.google.javascript.rhino.head.ast.Scope) scriptNode21);
        comment4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        scriptNode7.setEndLineno(9);
        scriptNode7.setEncodedSource("                                                ");
        // The following exception was thrown during execution in test generation
        try {
            double double33 = scriptNode7.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentType5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(astRoot26);
    }

    @Test
    public void test03823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03823");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator33 = scriptNode32.spliterator();
        com.google.javascript.rhino.head.Node node35 = scriptNode32.setType((int) '#');
        java.lang.Object obj36 = scriptNode32.getCompilerData();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator37 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode41.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor46 = astRoot44.iterator();
        scriptNode41.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot44);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode48.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList51 = scriptNode49.getChildScopes();
        int int52 = positionComparator38.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot44, (com.google.javascript.rhino.head.ast.AstNode) scriptNode49);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node(3, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scriptNode49);
        java.lang.String str54 = scriptNode32.toString();
        int int55 = scriptNode32.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator57 = scriptNode56.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType60, "");
        java.lang.String str64 = comment62.toSource(100);
        java.lang.String str65 = comment62.getValue();
        scriptNode56.setParent((com.google.javascript.rhino.head.ast.AstNode) comment62);
        scriptNode32.setJsDocNode(comment62);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode((-87298254));
        java.lang.String str70 = scriptNode69.getJsDoc();
        java.lang.String str71 = comment62.toStringTree(scriptNode69);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = null;
        java.lang.String str73 = comment62.toStringTree(scriptNode72);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(nodeItor46);
        org.junit.Assert.assertNull(scopeList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "35" + "'", str54, "35");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                                                                                                                                        " + "'", str64, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test03824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03824");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        boolean boolean6 = compilerEnvirons0.isGeneratingSource();
        boolean boolean7 = compilerEnvirons0.isStrictMode();
        boolean boolean8 = compilerEnvirons0.reportWarningAsError();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray16 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        compilerEnvirons10.setActivationNames((java.util.Set<java.lang.String>) strSet17);
        com.google.javascript.rhino.head.Parser parser20 = new com.google.javascript.rhino.head.Parser(compilerEnvirons10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot24 = parser20.parse("-1\tSCRIPT -1 1\n", "35", 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode28.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = astRoot31.getComments();
        int int33 = astRoot31.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor34 = null;
        astRoot31.visitComments(nodeVisitor34);
        com.google.javascript.rhino.head.Node node36 = astRoot31.getFirstChild();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot31.getComments();
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) astRoot31);
        int int39 = scriptNode28.getLength();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory42 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons40, errorReporter41);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node49 = iRFactory42.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.lang.String str50 = scriptNode44.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode52.getChildScopes();
        int int55 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.Node node56 = scriptNode52.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode58.getChildScopes();
        java.lang.String str62 = scriptNode58.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode52.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode58, (com.google.javascript.rhino.head.Node) scriptNode64);
        java.lang.Object obj67 = scriptNode58.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str70 = scriptNode68.toSource((int) '4');
        java.lang.String str71 = scriptNode58.toStringTree(scriptNode68);
        scriptNode44.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList74 = scriptNode28.getChildScopes();
        astRoot24.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode28);
        astRoot24.checkParentLinks();
        astRoot24.checkParentLinks();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = iRFactory9.transformTree(astRoot24);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor79 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot24.visitAll(nodeVisitor79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(astRoot24);
        org.junit.Assert.assertNull(commentSet32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str70, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(scopeList74);
        org.junit.Assert.assertNotNull(scriptNode78);
    }

    @Test
    public void test03825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03825");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.Node node4 = astRoot0.setType((int) (short) 10);
        astRoot0.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        scriptNode9.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode14.getChildScopes();
        int int17 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.Node node18 = scriptNode14.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode20.getChildScopes();
        java.lang.String str24 = scriptNode20.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode14.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode26);
        int int28 = scriptNode20.getType();
        scriptNode9.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        int int30 = scriptNode20.getParamCount();
        com.google.javascript.rhino.head.Node node31 = scriptNode20.getLastSibling();
        astRoot0.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode20);
        astRoot0.putIntProp((-1), (-1));
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet36 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor37 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 136 + "'", int28 == 136);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(commentSet36);
    }

    @Test
    public void test03826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03826");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isStrictMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean4 = compilerEnvirons3.isReservedKeywordAsIdentifier();
        boolean boolean5 = compilerEnvirons3.getWarnTrailingComma();
        compilerEnvirons3.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet8 = compilerEnvirons3.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter9 = compilerEnvirons3.getErrorReporter();
        java.lang.String[] strArray15 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        compilerEnvirons3.setActivationNames((java.util.Set<java.lang.String>) strSet16);
        com.google.javascript.rhino.head.ErrorReporter errorReporter19 = compilerEnvirons3.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter19);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter19.error("AstRoot", "                                                                                                                                                                                                        ", 104131204, "                                        {\n                                        }\n", 11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(errorReporter9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(errorReporter19);
    }

    @Test
    public void test03827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03827");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-954561564), 129, commentType2, "                                              hi!");
    }

    @Test
    public void test03828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03828");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setIdeMode(false);
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean9 = compilerEnvirons0.isRecordingLocalJsDocComments();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test03829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03829");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(667127547);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 667127547");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03830");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(0);
        java.lang.String str7 = comment4.shortName();
        boolean boolean8 = comment4.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator11 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getBaseLineno();
        java.lang.String str14 = astRoot12.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot15.new NodeIterator();
        int int17 = positionComparator10.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scriptNode18.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = scriptNode18.new NodeIterator();
        astRoot15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = scriptNode18.getFirstChild();
        comment4.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment4.setCommentType(commentType24);
        boolean boolean26 = comment4.hasConsistentReturnUsage();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Comment" + "'", str7, "Comment");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(astNodeComparator11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test03831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03831");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons5 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray11 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        compilerEnvirons5.setActivationNames((java.util.Set<java.lang.String>) strSet12);
        boolean boolean15 = compilerEnvirons5.isGenerateDebugInfo();
        compilerEnvirons5.setOptimizationLevel((int) (short) 1);
        compilerEnvirons5.setAllowSharpComments(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons5.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory21 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter20);
        com.google.javascript.rhino.head.IRFactory iRFactory22 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGeneratingSource(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter20);
    }

    @Test
    public void test03832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03832");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        compilerEnvirons0.setWarnTrailingComma(false);
        boolean boolean7 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean8 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGeneratingSource(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test03833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03833");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(0, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode5.getChildScopes();
        int int8 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode5.getLastSibling();
        scriptNode5.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        java.lang.String str18 = scriptNode5.toStringTree(scriptNode13);
        int int19 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node21 = scriptNode5.setType((int) (byte) -1);
        scriptNode5.setSourceName("typeof");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = scriptNode26.getLastSibling();
        int int31 = scriptNode26.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = scriptNode26.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode34.getChildScopes();
        int int37 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node38 = scriptNode34.getLastSibling();
        scriptNode34.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode42.getFunctions();
        scriptNode42.setPosition((int) (byte) 10);
        java.lang.String str47 = scriptNode34.toStringTree(scriptNode42);
        int int48 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node50 = scriptNode34.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode26, node50);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, node51, 17);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot((int) '4');
        node53.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = astRoot55.getTop();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList58 = astRoot55.getStatements();
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNotNull(scriptNode57);
        org.junit.Assert.assertNotNull(astNodeList58);
    }

    @Test
    public void test03834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03834");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.IRFactory iRFactory13 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        int int14 = compilerEnvirons0.getLanguageVersion();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 170 + "'", int14 == 170);
    }

    @Test
    public void test03835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03835");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        astRoot32.setInStrictMode(false);
        astRoot32.setSourceName("                                                                                                        {\n                                                                                                        }\n");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = astRoot32.getChildScopes();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode80 = astRoot32.getFunctionNode((-352107342));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNull(scopeList78);
    }

    @Test
    public void test03836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03836");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = astRoot7.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot7.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = iRFactory6.transformTree(astRoot7);
        com.google.javascript.rhino.head.ast.Scope scope13 = astRoot7.getEnclosingScope();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot7.getComments();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode16 = astRoot7.getFunctionNode(95442628);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertNull(commentSet14);
    }

    @Test
    public void test03837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03837");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int3 = astRoot2.getBaseLineno();
        int int4 = astRoot2.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        scriptNode6.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode14.getFunctions();
        scriptNode14.setPosition((int) (byte) 10);
        java.lang.String str19 = scriptNode6.toStringTree(scriptNode14);
        int int20 = scriptNode6.getBaseLineno();
        astRoot2.target = scriptNode6;
        int int22 = astRoot0.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        int int23 = astRoot0.getEncodedSourceEnd();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setString("                                                {\n                                                }\n");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test03838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03838");
        com.google.javascript.rhino.head.Node node1 = com.google.javascript.rhino.head.Node.newNumber((double) (-1020608546));
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = node1.new NodeIterator();
        boolean boolean3 = nodeIterator2.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node4 = nodeIterator2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(node1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03839");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = scriptNode1.spliterator();
        com.google.javascript.rhino.head.Node node4 = scriptNode1.setType((int) '#');
        int int5 = scriptNode1.getLineno();
        boolean boolean6 = scriptNode1.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scriptNode7.spliterator();
        com.google.javascript.rhino.head.Node node10 = scriptNode7.setType((int) '#');
        java.lang.Object obj11 = scriptNode7.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol13 = scriptNode7.getSymbol("typeof");
        scriptNode7.setEncodedSource("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet17 = astRoot16.getComments();
        int int18 = astRoot16.getEndLineno();
        com.google.javascript.rhino.head.Node node20 = astRoot16.setType((int) (short) 10);
        astRoot16.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator28 = scriptNode27.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        java.lang.String str35 = comment33.toSource(100);
        java.lang.String str36 = comment33.getValue();
        scriptNode27.setParent((com.google.javascript.rhino.head.ast.AstNode) comment33);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator39 = astRoot38.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        boolean boolean51 = comment50.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType54, "");
        java.lang.String str58 = comment56.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray59 = new com.google.javascript.rhino.head.ast.Comment[] { comment44, comment50, comment56 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet60 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet60, commentArray59);
        astRoot38.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet60);
        boolean boolean63 = astRoot38.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray64 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList65, symbolArray64);
        astRoot38.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList65);
        com.google.javascript.rhino.head.Node node68 = astRoot38.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode69 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode69.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode70);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot38, (com.google.javascript.rhino.head.ast.Scope) scriptNode70);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode26, (com.google.javascript.rhino.head.Node) comment33, (com.google.javascript.rhino.head.Node) scriptNode70);
        astRoot16.addComment(comment33);
        com.google.javascript.rhino.head.Node node75 = astRoot16.getLastSibling();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator76 = node75.spliterator();
        com.google.javascript.rhino.head.Node node78 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) scriptNode7, node75, (int) (byte) 10);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons79 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter80 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory81 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons79, errorReporter80);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode82 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode83 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode82.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList85 = scriptNode83.getFunctions();
        scriptNode83.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node88 = iRFactory81.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode83);
        java.lang.String str89 = scriptNode83.getSourceName();
        int int90 = scriptNode83.getRegexpCount();
        java.lang.Object obj91 = scriptNode83.getCompilerData();
        scriptNode7.addChildrenToBack((com.google.javascript.rhino.head.Node) scriptNode83);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.setDouble((double) 161);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(symbol13);
        org.junit.Assert.assertNull(commentSet17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNotNull(nodeSpliterator28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                                                                                                                        " + "'", str35, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "                                                                                                                                                                                                        " + "'", str58, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(symbolArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(nodeSpliterator76);
        org.junit.Assert.assertNotNull(functionNodeList85);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test03840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03840");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        int int20 = compilerEnvirons18.getLanguageVersion();
        int int21 = compilerEnvirons18.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean23 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        compilerEnvirons22.setStrictMode(true);
        compilerEnvirons22.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        boolean boolean38 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setRecoverFromErrors(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 170 + "'", int20 == 170);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 170 + "'", int21 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test03841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03841");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-19), (int) (byte) 1);
    }

    @Test
    public void test03842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03842");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.lang.String str1 = astRoot0.getJsDoc();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot0.getComments();
        java.lang.String str3 = astRoot0.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump4 = astRoot0.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str3, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test03843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03843");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot15.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType31, "");
        java.lang.String str35 = comment33.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] { comment21, comment27, comment33 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        boolean boolean40 = astRoot15.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray41 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList42 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList42, symbolArray41);
        astRoot15.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList42);
        com.google.javascript.rhino.head.Node node45 = astRoot15.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot15, (com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        astRoot15.checkParentLinks();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType53, "hi!");
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) astRoot15, (com.google.javascript.rhino.head.Node) comment55);
        com.google.javascript.rhino.head.ast.AstNode astNode57 = scriptNode1.getParent();
        com.google.javascript.rhino.head.ast.Comment comment58 = astNode57.getJsDocNode();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "                                                                                                                                                                                                        " + "'", str35, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(symbolArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(astNode57);
        org.junit.Assert.assertNull(comment58);
    }

    @Test
    public void test03844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03844");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        java.lang.String str7 = scriptNode1.toSource((int) (short) -1);
        int int8 = scriptNode1.getLength();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode17.getChildScopes();
        java.lang.String str21 = scriptNode17.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode11.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        java.lang.Object obj26 = scriptNode17.getProp((int) (short) -1);
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        boolean boolean32 = comment31.hasSideEffects();
        int int33 = comment31.getLineno();
        java.lang.String str34 = comment31.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        comment31.setCommentType(commentType35);
        scriptNode17.setJsDocNode(comment31);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap38 = scriptNode17.getSymbolTable();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = scriptNode17.getExistingIntProp(638771449);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{\n}\n" + "'", str7, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(scriptNode9);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1\tCOMMENT 1 0\n" + "'", str34, "1\tCOMMENT 1 0\n");
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test03845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03845");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode4.getChildScopes();
        java.lang.Object obj11 = scriptNode4.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = scriptNode4.getAstRoot();
        scriptNode4.setEncodedSourceBounds(22, 100);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode17.getFunctions();
        scriptNode17.setPosition((int) (byte) 10);
        int int22 = scriptNode17.getEncodedSourceEnd();
        int int23 = scriptNode17.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray25 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList26 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList26, symbolArray25);
        scriptNode24.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        scriptNode17.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        scriptNode4.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList26);
        int int31 = scriptNode4.getEncodedSourceEnd();
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(astRoot12);
        org.junit.Assert.assertNotNull(functionNodeList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(symbolArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
    }

    @Test
    public void test03846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03846");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setGenerateDebugInfo(true);
        compilerEnvirons0.setGenerateDebugInfo(true);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.Parser parser11 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot15 = parser11.parse("-1\tSCRIPT -1 1\n136\tBLOCK 136 538062289\n", ">>>", (-1121952777));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03847");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray1 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList2, symbolArray1);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int6 = astRoot5.getParamCount();
        int int7 = astRoot5.getRegexpCount();
        scriptNode0.addChildToBack((com.google.javascript.rhino.head.Node) astRoot5);
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode0.getDefiningScope("136");
        java.lang.String str11 = scriptNode0.toSource();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = scriptNode0.getTop();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList16 = scriptNode14.getFunctions();
        scriptNode14.setPosition((int) (byte) 10);
        int int19 = scriptNode14.getEncodedSourceEnd();
        int int20 = scriptNode14.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode22.getChildScopes();
        int int25 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.Node node26 = scriptNode22.getLastSibling();
        java.lang.String str27 = scriptNode14.toStringTree(scriptNode22);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int29 = astRoot28.getBaseLineno();
        int int30 = astRoot28.getPosition();
        astRoot28.setRelative(0);
        int int33 = scriptNode14.compareTo((com.google.javascript.rhino.head.ast.AstNode) astRoot28);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getBaseLineno();
        java.lang.String str36 = astRoot34.debugPrint();
        astRoot34.setEncodedSourceBounds((int) (byte) -1, 18);
        com.google.javascript.rhino.head.ast.Scope scope41 = astRoot34.getDefiningScope("136");
        int int42 = astRoot34.getEncodedSourceStart();
        astRoot34.setEndLineno(24);
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator47 = astRoot46.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        boolean boolean53 = comment52.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType56, "");
        boolean boolean59 = comment58.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType62 = null;
        com.google.javascript.rhino.head.ast.Comment comment64 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType62, "");
        java.lang.String str66 = comment64.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray67 = new com.google.javascript.rhino.head.ast.Comment[] { comment52, comment58, comment64 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet68, commentArray67);
        astRoot46.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet68);
        com.google.javascript.rhino.head.Token.CommentType commentType73 = null;
        com.google.javascript.rhino.head.ast.Comment comment75 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType73, "");
        boolean boolean76 = comment75.hasSideEffects();
        int int77 = comment75.getLineno();
        com.google.javascript.rhino.head.Node node79 = comment75.setType(18);
        boolean boolean80 = comment75.hasSideEffects();
        astRoot46.addComment(comment75);
        com.google.javascript.rhino.head.Node node83 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) comment75, (-1));
        comment75.setPosition(842975161);
        astRoot34.addComment(comment75);
        int int87 = astRoot34.depth();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode14, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode12, (com.google.javascript.rhino.head.ast.Scope) astRoot34);
        org.junit.Assert.assertNotNull(symbolArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{\n}\n" + "'", str11, "{\n}\n");
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNotNull(functionNodeList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                                                                                                                                                                                                        " + "'", str66, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test03848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03848");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        boolean boolean18 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        java.lang.String str31 = comment29.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] { comment17, comment23, comment29 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        boolean boolean36 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot11.getParent();
        astRoot11.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) astRoot11, 6);
        astRoot11.setInStrictMode(true);
        int int44 = astRoot11.getParamCount();
        astRoot11.setInStrictMode(true);
        java.lang.String str48 = astRoot11.toSource(6);
        int int49 = astRoot11.getFunctionCount();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList50 = astRoot11.getStatements();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(astNodeList50);
    }

    @Test
    public void test03849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03849");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setEncodedSourceStart((int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = scriptNode1.getTop();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        java.lang.String str27 = comment25.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] { comment13, comment19, comment25 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        boolean boolean32 = astRoot7.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType35, "hi!");
        astRoot7.addComment(comment37);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator39 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator41 = positionComparator39.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator39.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator43 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator44 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator45 = positionComparator43.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator44);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator46 = astNodeComparator45.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator47 = positionComparator39.thenComparing(astNodeComparator46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int49 = astRoot48.getBaseLineno();
        int int50 = astRoot48.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode52.getChildScopes();
        int int55 = scriptNode52.getBaseLineno();
        com.google.javascript.rhino.head.Node node56 = scriptNode52.getLastSibling();
        scriptNode52.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode59.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode60);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList62 = scriptNode60.getFunctions();
        scriptNode60.setPosition((int) (byte) 10);
        java.lang.String str65 = scriptNode52.toStringTree(scriptNode60);
        int int66 = scriptNode52.getBaseLineno();
        astRoot48.target = scriptNode52;
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet68 = astRoot48.getComments();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = astRoot48.getSymbols();
        com.google.javascript.rhino.head.ast.AstRoot astRoot70 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int71 = astRoot70.getParamCount();
        java.lang.String str72 = astRoot70.getJsDoc();
        java.lang.String str73 = astRoot70.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = astRoot70.getTop();
        int int75 = positionComparator39.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot48, (com.google.javascript.rhino.head.ast.AstNode) astRoot70);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) comment37, (com.google.javascript.rhino.head.Node) astRoot48);
        int int77 = scriptNode6.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode6.visit(nodeVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertNotNull(scriptNode6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                                                                                                                        " + "'", str27, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(astNodeComparator41);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(astNodeComparator45);
        org.junit.Assert.assertNotNull(astNodeComparator46);
        org.junit.Assert.assertNotNull(astNodeComparator47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(functionNodeList62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(commentSet68);
        org.junit.Assert.assertNotNull(symbolList69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertNotNull(scriptNode74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test03850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03850");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 100);
    }

    @Test
    public void test03851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03851");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Node node3 = scriptNode0.setType((int) '#');
        java.lang.Object obj4 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol6 = scriptNode0.getSymbol("typeof");
        scriptNode0.setEncodedSource("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = astRoot9.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType13, "");
        boolean boolean16 = comment15.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        java.lang.String str29 = comment27.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] { comment15, comment21, comment27 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        boolean boolean34 = astRoot9.isInStrictMode();
        int int35 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean37 = astRoot36.hasSideEffects();
        astRoot9.target = astRoot36;
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        astRoot36.flattenSymbolTable(true);
        int int42 = astRoot36.getLineno();
        astRoot36.setEncodedSourceStart(1617059566);
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(symbol6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                                                                                                                                                                                        " + "'", str29, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test03852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03852");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.rhino.head.Parser parser10 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setRecoverFromErrors(false);
        com.google.javascript.rhino.head.Parser parser13 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setAllowSharpComments(false);
        boolean boolean18 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03853");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean4 = compilerEnvirons3.isReservedKeywordAsIdentifier();
        compilerEnvirons3.setStrictMode(true);
        int int7 = compilerEnvirons3.getOptimizationLevel();
        java.lang.String[] strArray28 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "                    ", "35\t  COMMENT 36 2\n", "typeof", "$0", "                    ", "Comment", "                    {\n                    }\n", "35\t  COMMENT 36 2\n", "                      ", "                                                                                                        ", "136", "$0", "                    {\n                    }\n", "                                                                                                        ", "{\n}\n", "ScriptNode", "                      ", "                      ", "typeof" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerEnvirons3.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter32);
        compilerEnvirons0.setGeneratingSource(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        compilerEnvirons0.setAllowSharpComments(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(compilerEnvirons3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
    }

    @Test
    public void test03854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03854");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        scriptNode1.setSourceName("-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator9 = astRoot8.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        java.lang.String str28 = comment26.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray29 = new com.google.javascript.rhino.head.ast.Comment[] { comment14, comment20, comment26 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet30 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet30, commentArray29);
        astRoot8.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet30);
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        boolean boolean38 = comment37.hasSideEffects();
        int int39 = comment37.getLineno();
        com.google.javascript.rhino.head.Node node41 = comment37.setType(18);
        boolean boolean42 = comment37.hasSideEffects();
        astRoot8.addComment(comment37);
        com.google.javascript.rhino.head.Node node45 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) comment37, (-1));
        com.google.javascript.rhino.head.ast.AstRoot astRoot46 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet47 = astRoot46.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol49 = astRoot46.getSymbol("                                                                                                                                                                                                        ");
        node45.addChildToFront((com.google.javascript.rhino.head.Node) astRoot46);
        com.google.javascript.rhino.head.ast.AstRoot astRoot51 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean52 = astRoot51.hasSideEffects();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap53 = null;
        astRoot51.setSymbolTable(strMap53);
        boolean boolean55 = astRoot51.isInStrictMode();
        java.lang.String str56 = astRoot51.getEncodedSource();
        astRoot46.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot51);
        astRoot46.removeProp((-1728226312));
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) astRoot46);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = scriptNode1.getSymbols();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "                                                                                                                                                                                                        " + "'", str28, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(commentSet47);
        org.junit.Assert.assertNull(symbol49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(symbolList61);
    }

    @Test
    public void test03855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03855");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(0);
        java.lang.String str7 = comment4.shortName();
        boolean boolean8 = comment4.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator11 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int13 = astRoot12.getBaseLineno();
        java.lang.String str14 = astRoot12.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator16 = astRoot15.new NodeIterator();
        int int17 = positionComparator10.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot12, (com.google.javascript.rhino.head.ast.AstNode) astRoot15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator19 = scriptNode18.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator20 = scriptNode18.new NodeIterator();
        astRoot15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode18);
        com.google.javascript.rhino.head.Node node22 = scriptNode18.getFirstChild();
        comment4.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode18);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator24 = comment4.new NodeIterator();
        boolean boolean25 = nodeIterator24.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator24.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Comment" + "'", str7, "Comment");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(astNodeComparator11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test03856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03856");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.putIntProp((int) (short) 1, 1);
        java.lang.String str13 = scriptNode9.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope14 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator15 = scope14.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        scope14.setTop(scriptNode17);
        scope14.setLineno((int) (short) -1);
        int int22 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode9, (com.google.javascript.rhino.head.ast.AstNode) scope14);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        int int28 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode30.getFunctions();
        scriptNode30.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope35);
        scriptNode30.setEncodedSource("-1\tSCRIPT -1 1\n");
        java.lang.String str39 = scriptNode9.toStringTree(scriptNode30);
        int int40 = scriptNode9.getAbsolutePosition();
        scriptNode9.setEncodedSource("136");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean45 = compilerEnvirons44.isReservedKeywordAsIdentifier();
        boolean boolean46 = compilerEnvirons44.isIdeMode();
        compilerEnvirons44.setRecordingLocalJsDocComments(false);
        boolean boolean49 = compilerEnvirons44.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean51 = compilerEnvirons50.isReservedKeywordAsIdentifier();
        int int52 = compilerEnvirons50.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons53 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean54 = compilerEnvirons53.isReservedKeywordAsIdentifier();
        boolean boolean55 = compilerEnvirons53.isIdeMode();
        compilerEnvirons53.setRecordingLocalJsDocComments(false);
        boolean boolean58 = compilerEnvirons53.isGenerateDebugInfo();
        compilerEnvirons53.setRecordingLocalJsDocComments(true);
        boolean boolean61 = compilerEnvirons53.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons62 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean63 = compilerEnvirons62.isReservedKeywordAsIdentifier();
        boolean boolean64 = compilerEnvirons62.getWarnTrailingComma();
        boolean boolean65 = compilerEnvirons62.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter66 = compilerEnvirons62.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser67 = new com.google.javascript.rhino.head.Parser(compilerEnvirons53, errorReporter66);
        compilerEnvirons50.setErrorReporter(errorReporter66);
        compilerEnvirons44.setErrorReporter(errorReporter66);
        scriptNode9.putProp(129, (java.lang.Object) errorReporter66);
        scriptNode9.setLength(11);
        java.lang.String str73 = scriptNode9.getNextTempName();
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(nodeSpliterator15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(compilerEnvirons44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 170 + "'", int52 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(errorReporter66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
    }

    @Test
    public void test03857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03857");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.Object obj16 = scriptNode7.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource((int) '4');
        java.lang.String str20 = scriptNode7.toStringTree(scriptNode17);
        com.google.javascript.rhino.head.Node node21 = scriptNode17.target;
        scriptNode17.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope25 = new com.google.javascript.rhino.head.ast.Scope(19);
        scriptNode17.target = scope25;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump27 = scriptNode17.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str19, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test03858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03858");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = scriptNode2.new NodeIterator();
        int int9 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode2.getParentScope();
        scriptNode2.removeProp(65536);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode14.getChildScopes();
        int int17 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.Node node18 = scriptNode14.getLastSibling();
        int int19 = scriptNode14.getEndLineno();
        scriptNode14.setBaseLineno(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = astRoot22.getComments();
        int int24 = astRoot22.getEndLineno();
        com.google.javascript.rhino.head.Node node26 = astRoot22.setType((int) (short) 10);
        astRoot22.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scriptNode33.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        java.lang.String str41 = comment39.toSource(100);
        java.lang.String str42 = comment39.getValue();
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        boolean boolean51 = comment50.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType54, "");
        boolean boolean57 = comment56.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType60, "");
        java.lang.String str64 = comment62.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] { comment50, comment56, comment62 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        boolean boolean69 = astRoot44.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray70 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList71, symbolArray70);
        astRoot44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList71);
        com.google.javascript.rhino.head.Node node74 = astRoot44.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, (com.google.javascript.rhino.head.ast.Scope) scriptNode76);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment39, (com.google.javascript.rhino.head.Node) scriptNode76);
        astRoot22.addComment(comment39);
        scriptNode14.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot22);
        com.google.javascript.rhino.head.Token.CommentType commentType84 = null;
        com.google.javascript.rhino.head.ast.Comment comment86 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType84, "");
        com.google.javascript.rhino.head.Token.CommentType commentType87 = comment86.getCommentType();
        java.lang.String str89 = comment86.toSource(21);
        java.lang.String str90 = comment86.getValue();
        com.google.javascript.rhino.head.Node node92 = new com.google.javascript.rhino.head.Node(15, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) astRoot22, (com.google.javascript.rhino.head.Node) comment86, 6);
        boolean boolean93 = astRoot22.hasChildren();
        int int94 = astRoot22.depth();
        astRoot22.putIntProp(1936891202, (-1));
        java.lang.String str98 = astRoot22.getSourceName();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(scope10);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(commentSet23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                                                                                                                                                        " + "'", str41, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                                                                                                                                        " + "'", str64, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(symbolArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(commentType87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "                                          " + "'", str89, "                                          ");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test03859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03859");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scope1.setTop(scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor7 = scope1.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        int int14 = comment12.getLineno();
        com.google.javascript.rhino.head.Node node16 = comment12.setType(18);
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        int int23 = comment21.getLineno();
        com.google.javascript.rhino.head.Node node25 = comment21.setType(18);
        comment21.removeChildren();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1116244898), (com.google.javascript.rhino.head.Node) scope1, (com.google.javascript.rhino.head.Node) comment12, (com.google.javascript.rhino.head.Node) comment21, 15);
        com.google.javascript.rhino.head.Node node29 = scope1.getFirstChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap30 = scope1.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        java.lang.String str35 = scriptNode32.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode37.getChildScopes();
        int int40 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.Node node41 = scriptNode37.getLastSibling();
        int int42 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = scriptNode37.new NodeIterator();
        int int44 = scriptNode37.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot45 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator46 = astRoot45.new NodeIterator();
        scriptNode37.setCompilerData((java.lang.Object) nodeIterator46);
        int int48 = scriptNode32.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList52 = scriptNode50.getFunctions();
        scriptNode50.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot55 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int56 = astRoot55.getBaseLineno();
        scriptNode50.addChildToBack((com.google.javascript.rhino.head.Node) astRoot55);
        scriptNode50.flattenSymbolTable(true);
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        scope1.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode50);
        scope1.setBounds(65536, (-1496675853));
        com.google.javascript.rhino.head.ast.Scope scope67 = new com.google.javascript.rhino.head.ast.Scope(14, (int) '4');
        scope67.putIntProp(1275261773, 8);
        // The following exception was thrown during execution in test generation
        try {
            scope1.setDefault((com.google.javascript.rhino.head.Node) scope67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-95687401) + "'", int48 == (-95687401));
        org.junit.Assert.assertNotNull(functionNodeList52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test03860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03860");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        int int2 = astRoot0.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        com.google.javascript.rhino.head.Node node5 = astRoot0.getFirstChild();
        boolean boolean6 = astRoot0.isInStrictMode();
        java.lang.String str8 = astRoot0.toSource(4);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.getWarnTrailingComma();
        compilerEnvirons9.setXmlAvailable(true);
        boolean boolean14 = compilerEnvirons9.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory15 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons9);
        com.google.javascript.rhino.head.ast.AstRoot astRoot16 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator17 = astRoot16.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor18 = astRoot16.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor19 = null;
        astRoot16.visitComments(nodeVisitor19);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = iRFactory15.transformTree(astRoot16);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = astRoot16.getComments();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = astRoot16.getTop();
        astRoot16.clearParentScope();
        boolean boolean25 = astRoot16.isInStrictMode();
        astRoot0.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot16);
        com.google.javascript.rhino.head.ast.Comment comment27 = astRoot16.getJsDocNode();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(nodeItor18);
        org.junit.Assert.assertNotNull(scriptNode21);
        org.junit.Assert.assertNull(commentSet22);
        org.junit.Assert.assertNotNull(scriptNode23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(comment27);
    }

    @Test
    public void test03861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03861");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        com.google.javascript.rhino.head.Node node5 = astRoot0.getNext();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = astRoot0.iterator();
        astRoot0.setInStrictMode(false);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray9 = astRoot0.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(nodeItor6);
    }

    @Test
    public void test03862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03862");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList5 = scriptNode3.getChildScopes();
        int int6 = scriptNode3.getBaseLineno();
        com.google.javascript.rhino.head.Node node7 = scriptNode3.getLastSibling();
        java.lang.String str9 = scriptNode3.toSource((int) (short) -1);
        int int10 = scriptNode3.getLength();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode13.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode14);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList16 = scriptNode14.getChildScopes();
        int int17 = scriptNode14.getBaseLineno();
        com.google.javascript.rhino.head.Node node18 = scriptNode14.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode19.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode20);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList22 = scriptNode20.getChildScopes();
        java.lang.String str24 = scriptNode20.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode14.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode26);
        java.lang.Object obj29 = scriptNode20.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str32 = scriptNode30.toSource((int) '4');
        java.lang.String str33 = scriptNode20.toStringTree(scriptNode30);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter35 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons34, errorReporter35);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList40 = scriptNode38.getChildScopes();
        int int41 = scriptNode38.getBaseLineno();
        int int42 = scriptNode38.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList46 = scriptNode44.getFunctions();
        scriptNode44.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope49 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode38.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode44, (com.google.javascript.rhino.head.Node) scope49);
        scriptNode44.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node53 = iRFactory36.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons54 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory56 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons54, errorReporter55);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode57.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode58);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList60 = scriptNode58.getChildScopes();
        int int61 = scriptNode58.getBaseLineno();
        int int62 = scriptNode58.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList66 = scriptNode64.getFunctions();
        scriptNode64.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope69 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode58.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode64, (com.google.javascript.rhino.head.Node) scope69);
        scriptNode64.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node73 = iRFactory56.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        scriptNode44.setTop(scriptNode64);
        com.google.javascript.rhino.head.Node node76 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode20, (com.google.javascript.rhino.head.Node) scriptNode44, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode20.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode78);
        int int80 = scriptNode20.getAbsolutePosition();
        int int81 = scriptNode20.getEndLineno();
        int int82 = scriptNode20.depth();
        scope1.setTop(scriptNode20);
        org.junit.Assert.assertNull(scopeList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{\n}\n" + "'", str9, "{\n}\n");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(scopeList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(scopeList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str32, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(scopeList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(functionNodeList46);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNull(scopeList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(functionNodeList66);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
    }

    @Test
    public void test03863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03863");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot1.getComments();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList6 = scriptNode4.getChildScopes();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator8 = scriptNode7.spliterator();
        com.google.javascript.rhino.head.Node node10 = scriptNode7.setType((int) '#');
        boolean boolean11 = scriptNode7.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) scriptNode4, (com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.Scope scope14 = astRoot1.getDefiningScope("-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertNull(scopeList6);
        org.junit.Assert.assertNotNull(nodeSpliterator8);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(scope14);
    }

    @Test
    public void test03864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03864");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        int int4 = compilerEnvirons0.getOptimizationLevel();
        int int5 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean8 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 170 + "'", int5 == 170);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03865");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource((int) '4');
        com.google.javascript.rhino.head.Node node3 = scriptNode0.getFirstChild();
        com.google.javascript.rhino.head.ast.Symbol symbol5 = scriptNode0.getSymbol("35");
        com.google.javascript.rhino.head.Node node6 = scriptNode0.getFirstChild();
        int int7 = scriptNode0.getPosition();
        scriptNode0.setEndLineno(129);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str2, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(symbol5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test03866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03866");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot5 = new com.google.javascript.rhino.head.ast.AstRoot((int) '4');
        astRoot0.setCompilerData((java.lang.Object) astRoot5);
        astRoot5.setBaseLineno(574921099);
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = astRoot9.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType13, "");
        boolean boolean16 = comment15.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        java.lang.String str29 = comment27.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] { comment15, comment21, comment27 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        boolean boolean34 = astRoot9.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray35 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList36 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList36, symbolArray35);
        astRoot9.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList36);
        int int39 = astRoot9.getLineno();
        astRoot5.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList41 = astRoot9.getFunctions();
        boolean boolean42 = astRoot9.isInStrictMode();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                                                                                                                                                                                        " + "'", str29, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(symbolArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(functionNodeList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03867");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        java.lang.String str11 = scriptNode7.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scriptNode13);
        java.lang.Object obj16 = scriptNode7.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str19 = scriptNode17.toSource((int) '4');
        java.lang.String str20 = scriptNode7.toStringTree(scriptNode17);
        scriptNode17.setLength((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode24.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot27 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator28 = astRoot27.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor29 = astRoot27.iterator();
        scriptNode24.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot27);
        java.lang.String str31 = scriptNode24.toString();
        scriptNode17.setCompilerData((java.lang.Object) scriptNode24);
        com.google.javascript.rhino.head.ast.Comment comment33 = scriptNode24.getJsDocNode();
        scriptNode24.setSourceName("                                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                                    }\n");
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList36 = scriptNode24.getFunctions();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor37 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode24.visit(nodeVisitor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str19, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(nodeItor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "136" + "'", str31, "136");
        org.junit.Assert.assertNull(comment33);
        org.junit.Assert.assertNotNull(functionNodeList36);
    }

    @Test
    public void test03868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03868");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        java.lang.String str20 = scriptNode16.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        int int25 = scriptNode1.getRegexpCount();
        int int26 = scriptNode1.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode28.getChildScopes();
        int int31 = scriptNode28.getBaseLineno();
        int int32 = scriptNode28.getParamCount();
        scriptNode28.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope35 = scriptNode28.getEnclosingScope();
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode28.getChildScopes();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = astRoot37.new NodeIterator();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList39 = astRoot37.getStatements();
        astRoot37.setEncodedSourceEnd(161);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.addChildBefore((com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) astRoot37);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: node is not a child");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(scope35);
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertNotNull(astNodeList39);
    }

    @Test
    public void test03869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03869");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean7 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        compilerEnvirons6.setStrictMode(true);
        compilerEnvirons6.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean13 = compilerEnvirons12.isReservedKeywordAsIdentifier();
        boolean boolean14 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons12.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter18);
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.isIdeMode();
        boolean boolean24 = compilerEnvirons21.getWarnTrailingComma();
        compilerEnvirons21.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons21.setAllowSharpComments(true);
        boolean boolean29 = compilerEnvirons21.isRecordingLocalJsDocComments();
        compilerEnvirons21.setAllowMemberExprAsFunctionName(true);
        boolean boolean32 = compilerEnvirons21.reportWarningAsError();
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons21);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean35 = compilerEnvirons34.isReservedKeywordAsIdentifier();
        boolean boolean36 = compilerEnvirons34.isIdeMode();
        boolean boolean37 = compilerEnvirons34.getWarnTrailingComma();
        compilerEnvirons34.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean41 = compilerEnvirons40.isReservedKeywordAsIdentifier();
        int int42 = compilerEnvirons40.getLanguageVersion();
        int int43 = compilerEnvirons40.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean45 = compilerEnvirons44.isReservedKeywordAsIdentifier();
        compilerEnvirons44.setStrictMode(true);
        compilerEnvirons44.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean51 = compilerEnvirons50.isReservedKeywordAsIdentifier();
        boolean boolean52 = compilerEnvirons50.getWarnTrailingComma();
        compilerEnvirons50.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet55 = compilerEnvirons50.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter56 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory57 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons44, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory58 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons40, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory59 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons34, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory60 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons21, errorReporter56);
        com.google.javascript.rhino.head.Parser parser61 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory62 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setRecoverFromErrors(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 170 + "'", int42 == 170);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 170 + "'", int43 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strSet55);
        org.junit.Assert.assertNotNull(errorReporter56);
    }

    @Test
    public void test03870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03870");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str2 = scriptNode0.toSource((int) '4');
        com.google.javascript.rhino.head.Node node3 = scriptNode0.getFirstChild();
        java.lang.Object obj5 = scriptNode0.getProp(18);
        boolean boolean6 = scriptNode0.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet8 = astRoot7.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol10 = astRoot7.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType13, "hi!");
        astRoot7.addChildrenToFront((com.google.javascript.rhino.head.Node) comment15);
        astRoot7.setInStrictMode(true);
        java.lang.String str19 = scriptNode0.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot7);
        com.google.javascript.rhino.head.Node node20 = astRoot7.getLastChild();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap21 = astRoot7.getSymbolTable();
        com.google.javascript.rhino.head.Node node22 = astRoot7.getLastSibling();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node23 = astRoot7.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str2, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(commentSet8);
        org.junit.Assert.assertNull(symbol10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test03871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03871");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1397279810);
    }

    @Test
    public void test03872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03872");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(100);
    }

    @Test
    public void test03873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03873");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        astRoot0.setInStrictMode(false);
        astRoot0.putIntProp(0, (int) (byte) 100);
        java.lang.String str35 = astRoot0.debugPrint();
        java.lang.Object obj37 = astRoot0.getProp((-87298254));
        astRoot0.setInStrictMode(true);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n" + "'", str35, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n");
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test03874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03874");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot(605628279);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor2 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.visitAll(nodeVisitor2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03875");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = astRoot4.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = astRoot4.iterator();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot4);
        int int8 = astRoot4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot4.getAstRoot();
        java.lang.String str11 = astRoot4.toSource((int) '4');
        int int12 = astRoot4.getRegexpCount();
        int int15 = astRoot4.getIntProp((-50044338), 16);
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 16 + "'", int15 == 16);
    }

    @Test
    public void test03876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03876");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType3, "");
        boolean boolean6 = comment5.hasSideEffects();
        int int7 = comment5.getLineno();
        com.google.javascript.rhino.head.Node node9 = comment5.setType(18);
        comment5.removeChildren();
        comment5.setLineno(19);
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        comment5.setCommentType(commentType13);
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        int int21 = comment19.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = comment19.getCommentType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        int int28 = scriptNode24.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode30.getFunctions();
        scriptNode30.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope35 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode24.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode30, (com.google.javascript.rhino.head.Node) scope35);
        scriptNode30.setEncodedSourceEnd(18);
        comment19.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = scriptNode30.getAstRoot();
        int int41 = scriptNode30.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = scriptNode30.getTop();
        comment5.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode42);
        java.lang.Object obj45 = null;
        comment5.putProp((-213029975), obj45);
        com.google.javascript.rhino.head.ast.AstRoot astRoot48 = new com.google.javascript.rhino.head.ast.AstRoot(1490422031);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(1016536824, (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) astRoot48, 638771449);
        java.lang.String str51 = comment5.toSource();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(commentType22);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertNull(astRoot40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 18 + "'", int41 == 18);
        org.junit.Assert.assertNotNull(scriptNode42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test03877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03877");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator11 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator12 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator14 = positionComparator12.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getBaseLineno();
        java.lang.String str17 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = astRoot18.new NodeIterator();
        int int20 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) astRoot18);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator13);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator1.thenComparing(astNodeComparator21);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator23 = astNodeComparator21.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator24 = astNodeComparator21.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator25 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator26 = positionComparator25.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator27 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator28 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator29 = positionComparator27.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator28);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator30 = positionComparator25.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator27);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = astNodeComparator30.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator33 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator34 = positionComparator32.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator33);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator35 = astNodeComparator34.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator36 = astNodeComparator35.reversed();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator37 = astNodeComparator31.thenComparing(astNodeComparator36);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator38 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator39 = positionComparator38.reversed();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator40 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator41 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator42 = positionComparator40.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator41);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator43 = positionComparator38.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator44 = astNodeComparator37.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator45 = astNodeComparator21.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator40);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator11);
        org.junit.Assert.assertNotNull(astNodeComparator14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertNotNull(astNodeComparator23);
        org.junit.Assert.assertNotNull(astNodeComparator24);
        org.junit.Assert.assertNotNull(astNodeComparator26);
        org.junit.Assert.assertNotNull(astNodeComparator29);
        org.junit.Assert.assertNotNull(astNodeComparator30);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertNotNull(astNodeComparator34);
        org.junit.Assert.assertNotNull(astNodeComparator35);
        org.junit.Assert.assertNotNull(astNodeComparator36);
        org.junit.Assert.assertNotNull(astNodeComparator37);
        org.junit.Assert.assertNotNull(astNodeComparator39);
        org.junit.Assert.assertNotNull(astNodeComparator42);
        org.junit.Assert.assertNotNull(astNodeComparator43);
        org.junit.Assert.assertNotNull(astNodeComparator44);
        org.junit.Assert.assertNotNull(astNodeComparator45);
    }

    @Test
    public void test03878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03878");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        int int9 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean11 = compilerEnvirons0.isGeneratingSource();
        boolean boolean12 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecoverFromErrors(true);
        boolean boolean15 = compilerEnvirons0.recoverFromErrors();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(641547410);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 641547410");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test03879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03879");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList9 = scriptNode7.getChildScopes();
        int int10 = scriptNode7.getBaseLineno();
        com.google.javascript.rhino.head.Node node11 = scriptNode7.getLastSibling();
        int int12 = scriptNode7.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor13 = scriptNode7.iterator();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        boolean boolean16 = compilerEnvirons14.isIdeMode();
        int int17 = compilerEnvirons14.getOptimizationLevel();
        scriptNode7.setCompilerData((java.lang.Object) compilerEnvirons14);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean20 = compilerEnvirons19.isReservedKeywordAsIdentifier();
        boolean boolean21 = compilerEnvirons19.isIdeMode();
        compilerEnvirons19.setRecordingLocalJsDocComments(false);
        boolean boolean24 = compilerEnvirons19.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons25 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean26 = compilerEnvirons25.isReservedKeywordAsIdentifier();
        int int27 = compilerEnvirons25.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.isIdeMode();
        compilerEnvirons28.setRecordingLocalJsDocComments(false);
        boolean boolean33 = compilerEnvirons28.isGenerateDebugInfo();
        compilerEnvirons28.setRecordingLocalJsDocComments(true);
        boolean boolean36 = compilerEnvirons28.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons37 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean38 = compilerEnvirons37.isReservedKeywordAsIdentifier();
        boolean boolean39 = compilerEnvirons37.getWarnTrailingComma();
        boolean boolean40 = compilerEnvirons37.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter41 = compilerEnvirons37.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons28, errorReporter41);
        compilerEnvirons25.setErrorReporter(errorReporter41);
        compilerEnvirons19.setErrorReporter(errorReporter41);
        compilerEnvirons14.setErrorReporter(errorReporter41);
        com.google.javascript.rhino.head.Parser parser46 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter41);
        com.google.javascript.rhino.head.Context context47 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(scopeList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(nodeItor13);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(compilerEnvirons19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 170 + "'", int27 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(errorReporter41);
    }

    @Test
    public void test03880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03880");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode7.getFunctions();
        scriptNode7.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope12);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode15.getChildScopes();
        int int18 = scriptNode15.getBaseLineno();
        com.google.javascript.rhino.head.Node node19 = scriptNode15.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = scriptNode15.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, (com.google.javascript.rhino.head.ast.Scope) scriptNode15);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator22 = scriptNode1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode23.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList26 = scriptNode24.getChildScopes();
        int int27 = scriptNode24.getBaseLineno();
        com.google.javascript.rhino.head.Node node28 = scriptNode24.getLastSibling();
        int int29 = scriptNode24.getEndLineno();
        scriptNode24.setBaseLineno(4);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = astRoot32.getComments();
        int int34 = astRoot32.getEndLineno();
        com.google.javascript.rhino.head.Node node36 = astRoot32.setType((int) (short) 10);
        astRoot32.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator44 = scriptNode43.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        java.lang.String str51 = comment49.toSource(100);
        java.lang.String str52 = comment49.getValue();
        scriptNode43.setParent((com.google.javascript.rhino.head.ast.AstNode) comment49);
        com.google.javascript.rhino.head.ast.AstRoot astRoot54 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator55 = astRoot54.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType58, "");
        boolean boolean61 = comment60.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        com.google.javascript.rhino.head.ast.Comment comment66 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType64, "");
        boolean boolean67 = comment66.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType70 = null;
        com.google.javascript.rhino.head.ast.Comment comment72 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType70, "");
        java.lang.String str74 = comment72.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray75 = new com.google.javascript.rhino.head.ast.Comment[] { comment60, comment66, comment72 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet76 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet76, commentArray75);
        astRoot54.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet76);
        boolean boolean79 = astRoot54.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray80 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList81 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList81, symbolArray80);
        astRoot54.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList81);
        com.google.javascript.rhino.head.Node node84 = astRoot54.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode86 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode85.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode86);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot54, (com.google.javascript.rhino.head.ast.Scope) scriptNode86);
        com.google.javascript.rhino.head.Node node89 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode42, (com.google.javascript.rhino.head.Node) comment49, (com.google.javascript.rhino.head.Node) scriptNode86);
        astRoot32.addComment(comment49);
        scriptNode24.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node92 = scriptNode24.target;
        scriptNode24.setEncodedSourceEnd((-568490075));
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode24);
        int int96 = scriptNode24.getParamCount();
        scriptNode24.setRelative(198303179);
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(astRoot20);
        org.junit.Assert.assertNotNull(nodeSpliterator22);
        org.junit.Assert.assertNull(scopeList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(commentSet33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(nodeSpliterator44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                                                                                                                                                        " + "'", str51, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                                                                                                                                                                                                        " + "'", str74, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(symbolArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test03881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03881");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = iRFactory8.parse("-1\tSCRIPT -1 1\n", "129", 20);
        astRoot12.setPosition((-50044338));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList19 = scriptNode17.getFunctions();
        com.google.javascript.rhino.head.Node node21 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode17, 8);
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.setScope((com.google.javascript.rhino.head.ast.Scope) scriptNode17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertNotNull(functionNodeList19);
    }

    @Test
    public void test03882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03882");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator4 = scriptNode3.spliterator();
        com.google.javascript.rhino.head.Node node6 = scriptNode3.setType((int) '#');
        int int7 = scriptNode3.getLineno();
        boolean boolean8 = scriptNode3.hasConsistentReturnUsage();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator10 = scriptNode9.spliterator();
        com.google.javascript.rhino.head.Node node12 = scriptNode9.setType((int) '#');
        java.lang.Object obj13 = scriptNode9.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = scriptNode9.getSymbol("typeof");
        scriptNode9.setEncodedSource("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet19 = astRoot18.getComments();
        int int20 = astRoot18.getEndLineno();
        com.google.javascript.rhino.head.Node node22 = astRoot18.setType((int) (short) 10);
        astRoot18.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator30 = scriptNode29.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType33 = null;
        com.google.javascript.rhino.head.ast.Comment comment35 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType33, "");
        java.lang.String str37 = comment35.toSource(100);
        java.lang.String str38 = comment35.getValue();
        scriptNode29.setParent((com.google.javascript.rhino.head.ast.AstNode) comment35);
        com.google.javascript.rhino.head.ast.AstRoot astRoot40 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator41 = astRoot40.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        boolean boolean47 = comment46.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        boolean boolean53 = comment52.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType56 = null;
        com.google.javascript.rhino.head.ast.Comment comment58 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType56, "");
        java.lang.String str60 = comment58.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray61 = new com.google.javascript.rhino.head.ast.Comment[] { comment46, comment52, comment58 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet62 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet62, commentArray61);
        astRoot40.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet62);
        boolean boolean65 = astRoot40.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray66 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList67 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList67, symbolArray66);
        astRoot40.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList67);
        com.google.javascript.rhino.head.Node node70 = astRoot40.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode72 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode72);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot40, (com.google.javascript.rhino.head.ast.Scope) scriptNode72);
        com.google.javascript.rhino.head.Node node75 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode28, (com.google.javascript.rhino.head.Node) comment35, (com.google.javascript.rhino.head.Node) scriptNode72);
        astRoot18.addComment(comment35);
        com.google.javascript.rhino.head.Node node77 = astRoot18.getLastSibling();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator78 = node77.spliterator();
        com.google.javascript.rhino.head.Node node80 = new com.google.javascript.rhino.head.Node(21, (com.google.javascript.rhino.head.Node) scriptNode3, (com.google.javascript.rhino.head.Node) scriptNode9, node77, (int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes(scope1, (com.google.javascript.rhino.head.ast.Scope) scriptNode3);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Jump jump82 = scriptNode3.getJumpStatement();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator4);
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(nodeSpliterator10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertNull(commentSet19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(nodeSpliterator30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                                                                                                                                                        " + "'", str37, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "                                                                                                                                                                                                        " + "'", str60, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(symbolArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertNotNull(nodeSpliterator78);
    }

    @Test
    public void test03883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03883");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(641547410);
        com.google.javascript.rhino.head.ast.Symbol symbol2 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.putSymbol(symbol2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03884");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(1836062230);
        // The following exception was thrown during execution in test generation
        try {
            boolean[] booleanArray2 = scriptNode1.getParamAndVarConst();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03885");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node68 = scriptNode8.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode71.getChildScopes();
        int int74 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.Node node75 = scriptNode71.getLastSibling();
        scriptNode71.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode79.getFunctions();
        scriptNode79.setPosition((int) (byte) 10);
        java.lang.String str84 = scriptNode71.toStringTree(scriptNode79);
        int int85 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode87.removeProp(10);
        com.google.javascript.rhino.head.ast.Scope scope90 = scriptNode87.getParentScope();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        java.lang.Object obj92 = scriptNode87.getCompilerData();
        scriptNode8.putProp(12, (java.lang.Object) scriptNode87);
        int int94 = scriptNode87.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = scriptNode87.getRegexpString(1410155489);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test03886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03886");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        int int7 = scriptNode2.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope10 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot11 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator12 = astRoot11.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType15 = null;
        com.google.javascript.rhino.head.ast.Comment comment17 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType15, "");
        boolean boolean18 = comment17.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType21 = null;
        com.google.javascript.rhino.head.ast.Comment comment23 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType21, "");
        boolean boolean24 = comment23.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType27 = null;
        com.google.javascript.rhino.head.ast.Comment comment29 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType27, "");
        java.lang.String str31 = comment29.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray32 = new com.google.javascript.rhino.head.ast.Comment[] { comment17, comment23, comment29 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet33 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet33, commentArray32);
        astRoot11.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet33);
        boolean boolean36 = astRoot11.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode37 = astRoot11.getParent();
        astRoot11.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scope10, (com.google.javascript.rhino.head.Node) astRoot11, 6);
        com.google.javascript.rhino.head.ast.Scope scope43 = scope10.getDefiningScope("                                                                hi!");
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap44 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope43.setSymbolTable(strMap44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "                                                                                                                                                                                                        " + "'", str31, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(astNode37);
        org.junit.Assert.assertNull(scope43);
    }

    @Test
    public void test03887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03887");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        int int17 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean19 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean22 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        boolean boolean25 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 170 + "'", int17 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test03888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03888");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        int int15 = scriptNode8.getEndLineno();
        scriptNode8.setEncodedSource("hi!");
        com.google.javascript.rhino.head.Node node19 = new com.google.javascript.rhino.head.Node(18, (com.google.javascript.rhino.head.Node) scriptNode8, (int) (byte) 0);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor20 = node19.iterator();
        com.google.javascript.rhino.head.Node node21 = node19.getLastChild();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(nodeItor20);
        org.junit.Assert.assertNotNull(node21);
    }

    @Test
    public void test03889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03889");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node12 = new com.google.javascript.rhino.head.Node(538062289, (com.google.javascript.rhino.head.Node) scriptNode8, (-603115504));
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot13.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        boolean boolean26 = comment25.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        java.lang.String str33 = comment31.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray34 = new com.google.javascript.rhino.head.ast.Comment[] { comment19, comment25, comment31 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet35 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet35, commentArray34);
        astRoot13.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet35);
        boolean boolean38 = astRoot13.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray39 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList40 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList40, symbolArray39);
        astRoot13.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList40);
        com.google.javascript.rhino.head.Node node43 = astRoot13.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot13, (com.google.javascript.rhino.head.ast.Scope) scriptNode45);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode48 = scriptNode45.getEnclosingFunction();
        scriptNode45.setEndLineno(6);
        java.lang.Object obj51 = scriptNode45.getCompilerData();
        int int52 = scriptNode45.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope54 = new com.google.javascript.rhino.head.ast.Scope((int) 'a');
        scriptNode8.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode45, (com.google.javascript.rhino.head.Node) scope54);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode1, scope54);
        boolean boolean57 = scope54.hasChildren();
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                                                                                                                                                        " + "'", str33, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(symbolArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(functionNode48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test03890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03890");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        scriptNode2.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap8 = scriptNode7.getSymbolTable();
        scriptNode2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode7);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode17.getChildScopes();
        java.lang.String str21 = scriptNode17.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode11.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        scriptNode2.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode11);
        scriptNode11.flattenSymbolTable(false);
        com.google.javascript.rhino.head.ast.AstRoot astRoot29 = new com.google.javascript.rhino.head.ast.AstRoot(12);
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor30 = null;
        astRoot29.visitComments(nodeVisitor30);
        astRoot29.setEncodedSourceStart(15);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        scriptNode34.setBaseLineno((int) 'a');
        java.lang.String str39 = scriptNode34.getSourceName();
        scriptNode34.removeProp(988431572);
        com.google.javascript.rhino.head.Node node43 = new com.google.javascript.rhino.head.Node((-837790279), (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) astRoot29, (com.google.javascript.rhino.head.Node) scriptNode34, 3);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = node43.getExistingIntProp((-597242177));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test03891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03891");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setGenerateDebugInfo(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
    }

    @Test
    public void test03892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03892");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = scope1.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        scope1.setTop(scriptNode4);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor7 = scope1.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        int int14 = comment12.getLineno();
        com.google.javascript.rhino.head.Node node16 = comment12.setType(18);
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        int int23 = comment21.getLineno();
        com.google.javascript.rhino.head.Node node25 = comment21.setType(18);
        comment21.removeChildren();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-1116244898), (com.google.javascript.rhino.head.Node) scope1, (com.google.javascript.rhino.head.Node) comment12, (com.google.javascript.rhino.head.Node) comment21, 15);
        comment21.setRelative(24);
        comment21.removeProp((-1020608546));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator35 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator36 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator37 = positionComparator35.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator36);
        com.google.javascript.rhino.head.ast.AstRoot astRoot38 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int39 = astRoot38.getBaseLineno();
        java.lang.String str40 = astRoot38.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot41 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator42 = astRoot41.new NodeIterator();
        int int43 = positionComparator36.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot38, (com.google.javascript.rhino.head.ast.AstNode) astRoot41);
        java.lang.String str45 = astRoot38.makeIndent(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode46.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode47);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList49 = scriptNode47.getChildScopes();
        int int50 = scriptNode47.getBaseLineno();
        com.google.javascript.rhino.head.Node node51 = scriptNode47.getLastSibling();
        java.lang.String str53 = scriptNode47.toSource((int) (short) -1);
        astRoot38.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode47);
        scriptNode34.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot38);
        astRoot38.setBounds(100, 0);
        // The following exception was thrown during execution in test generation
        try {
            comment21.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(astNodeComparator37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str40, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "                                " + "'", str45, "                                ");
        org.junit.Assert.assertNull(scopeList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{\n}\n" + "'", str53, "{\n}\n");
    }

    @Test
    public void test03893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03893");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator5 = astRoot4.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor6 = astRoot4.iterator();
        scriptNode1.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot4);
        int int8 = astRoot4.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = astRoot4.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        scriptNode11.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode19.getFunctions();
        scriptNode19.setPosition((int) (byte) 10);
        java.lang.String str24 = scriptNode11.toStringTree(scriptNode19);
        int int25 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node27 = scriptNode11.setType((int) (byte) -1);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor28 = scriptNode11.iterator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator29 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator30 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator31 = positionComparator29.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int33 = astRoot32.getBaseLineno();
        java.lang.String str34 = astRoot32.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator36 = astRoot35.new NodeIterator();
        int int37 = positionComparator30.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot32, (com.google.javascript.rhino.head.ast.AstNode) astRoot35);
        boolean boolean38 = astRoot32.isInStrictMode();
        scriptNode11.addChildToFront((com.google.javascript.rhino.head.Node) astRoot32);
        com.google.javascript.rhino.head.Node node40 = scriptNode11.getNext();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList41 = scriptNode11.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope42 = scriptNode11.getParentScope();
        java.lang.String str43 = astRoot9.toStringTree(scriptNode11);
        com.google.javascript.rhino.head.Node node44 = scriptNode11.target;
        org.junit.Assert.assertNotNull(nodeItor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(astRoot9);
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertNotNull(astNodeComparator31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str34, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(astNodeList41);
        org.junit.Assert.assertNull(scope42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(node44);
    }

    @Test
    public void test03894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03894");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str10 = scriptNode4.getSourceName();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList11 = scriptNode4.getStatements();
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList12 = scriptNode4.getStatements();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = scriptNode4.getTop();
        scriptNode4.setLineno(1028735497);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = scriptNode4.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(astNodeList11);
        org.junit.Assert.assertNotNull(astNodeList12);
        org.junit.Assert.assertNotNull(scriptNode13);
    }

    @Test
    public void test03895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03895");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot0.getJsDocNode();
        astRoot0.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator35 = astRoot34.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType38, "");
        boolean boolean41 = comment40.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        boolean boolean47 = comment46.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType50 = null;
        com.google.javascript.rhino.head.ast.Comment comment52 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType50, "");
        java.lang.String str54 = comment52.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray55 = new com.google.javascript.rhino.head.ast.Comment[] { comment40, comment46, comment52 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet56 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet56, commentArray55);
        astRoot34.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet56);
        boolean boolean59 = astRoot34.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray60 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList61 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList61, symbolArray60);
        astRoot34.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList61);
        int int64 = astRoot34.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList68 = scriptNode66.getChildScopes();
        int int69 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.Node node70 = scriptNode66.getLastSibling();
        scriptNode66.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode73.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList76 = scriptNode74.getFunctions();
        scriptNode74.setPosition((int) (byte) 10);
        java.lang.String str79 = scriptNode66.toStringTree(scriptNode74);
        int int80 = scriptNode66.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot34, (com.google.javascript.rhino.head.ast.Scope) scriptNode66);
        astRoot0.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot34);
        astRoot0.setEndLineno(15);
        java.lang.String str85 = astRoot0.getSourceName();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setBaseLineno((-449082186));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "                                                                                                                                                                                                        " + "'", str54, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(symbolArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(scopeList68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertNotNull(functionNodeList76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test03896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03896");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setOptimizationLevel(0);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(101564782);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 101564782");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test03897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03897");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean13 = compilerEnvirons12.isReservedKeywordAsIdentifier();
        boolean boolean14 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons12.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        compilerEnvirons0.setRecoverFromErrors(false);
        compilerEnvirons0.setRecoverFromErrors(false);
        int int24 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setIdeMode(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 170 + "'", int24 == 170);
    }

    @Test
    public void test03898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03898");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope((int) (short) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = scope1.getAstRoot();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setEncodedSourceStart((int) 'a');
        java.lang.String str10 = scriptNode4.makeIndent((int) (byte) -1);
        int int11 = scriptNode4.getEndLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator13 = astRoot12.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        boolean boolean19 = comment18.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType22, "");
        boolean boolean25 = comment24.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType28, "");
        java.lang.String str32 = comment30.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray33 = new com.google.javascript.rhino.head.ast.Comment[] { comment18, comment24, comment30 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet34 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet34, commentArray33);
        astRoot12.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet34);
        boolean boolean37 = astRoot12.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray38 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList39 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList39, symbolArray38);
        astRoot12.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList39);
        int int42 = astRoot12.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList46 = scriptNode44.getChildScopes();
        int int47 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastSibling();
        scriptNode44.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        java.lang.String str57 = scriptNode44.toStringTree(scriptNode52);
        int int58 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot12, (com.google.javascript.rhino.head.ast.Scope) scriptNode44);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap60 = scriptNode44.getSymbolTable();
        scriptNode4.setSymbolTable(strMap60);
        scope1.setSymbolTable(strMap60);
        com.google.javascript.rhino.head.ast.Symbol symbol63 = null;
        // The following exception was thrown during execution in test generation
        try {
            scope1.putSymbol(symbol63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(astRoot2);
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "                                                                                                                                                                                                        " + "'", str32, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(symbolArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(scopeList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test03899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03899");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        boolean boolean5 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.IRFactory iRFactory6 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = astRoot7.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor10 = null;
        astRoot7.visitComments(nodeVisitor10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = iRFactory6.transformTree(astRoot7);
        com.google.javascript.rhino.head.ast.Scope scope13 = astRoot7.getEnclosingScope();
        java.lang.String str14 = astRoot7.debugPrint();
        // The following exception was thrown during execution in test generation
        try {
            astRoot7.labelId(871114474);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertNotNull(scriptNode12);
        org.junit.Assert.assertNull(scope13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str14, "-1\tSCRIPT -1 1\n");
    }

    @Test
    public void test03900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03900");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.Scope scope9 = scriptNode1.getParentScope();
        boolean boolean10 = scriptNode1.hasChildren();
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = astRoot12.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol15 = astRoot12.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType18, "hi!");
        astRoot12.addChildrenToFront((com.google.javascript.rhino.head.Node) comment20);
        boolean boolean22 = astRoot12.hasSideEffects();
        boolean boolean23 = astRoot12.isInStrictMode();
        boolean boolean24 = astRoot12.isInStrictMode();
        scriptNode1.putProp((int) '#', (java.lang.Object) astRoot12);
        java.lang.String str26 = astRoot12.debugPrint();
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral27 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot12.addRegExp(regExpLiteral27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scope9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(commentSet13);
        org.junit.Assert.assertNull(symbol15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "-1\tSCRIPT -1 1\n16\tCOMMENT 16 0\n" + "'", str26, "-1\tSCRIPT -1 1\n16\tCOMMENT 16 0\n");
    }

    @Test
    public void test03901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03901");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator2 = scriptNode1.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        java.lang.String str9 = comment7.toSource(100);
        java.lang.String str10 = comment7.getValue();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) comment7);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType14, "hi!");
        int int17 = comment16.getLength();
        java.lang.String str18 = comment16.getValue();
        com.google.javascript.rhino.head.Node node20 = new com.google.javascript.rhino.head.Node(1490422031, (com.google.javascript.rhino.head.Node) scriptNode1, (com.google.javascript.rhino.head.Node) comment16, (-476424842));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode21.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode22);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList24 = scriptNode22.getChildScopes();
        int int25 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.Node node26 = scriptNode22.getLastSibling();
        scriptNode22.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode30 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode29.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode30);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList32 = scriptNode30.getFunctions();
        scriptNode30.setPosition((int) (byte) 10);
        java.lang.String str35 = scriptNode22.toStringTree(scriptNode30);
        int int36 = scriptNode22.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode38 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode38.removeProp(10);
        com.google.javascript.rhino.head.ast.Scope scope41 = scriptNode38.getParentScope();
        scriptNode22.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList46 = scriptNode44.getChildScopes();
        int int47 = scriptNode44.getBaseLineno();
        com.google.javascript.rhino.head.Node node48 = scriptNode44.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode49.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode50);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList52 = scriptNode50.getChildScopes();
        java.lang.String str54 = scriptNode50.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode56 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode44.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode50, (com.google.javascript.rhino.head.Node) scriptNode56);
        java.lang.Object obj59 = scriptNode50.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str62 = scriptNode60.toSource((int) '4');
        java.lang.String str63 = scriptNode50.toStringTree(scriptNode60);
        node20.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode38, (com.google.javascript.rhino.head.Node) scriptNode50);
        com.google.javascript.rhino.head.ast.AstRoot astRoot65 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator66 = astRoot65.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType69 = null;
        com.google.javascript.rhino.head.ast.Comment comment71 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType69, "");
        boolean boolean72 = comment71.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        com.google.javascript.rhino.head.ast.Comment comment77 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType75, "");
        boolean boolean78 = comment77.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType81, "");
        java.lang.String str85 = comment83.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray86 = new com.google.javascript.rhino.head.ast.Comment[] { comment71, comment77, comment83 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet87 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet87, commentArray86);
        astRoot65.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet87);
        java.lang.String str90 = astRoot65.getEncodedSource();
        boolean boolean91 = astRoot65.isInStrictMode();
        scriptNode38.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot65);
        scriptNode38.setLength(12);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap95 = null;
        scriptNode38.setSymbolTable(strMap95);
        org.junit.Assert.assertNotNull(nodeSpliterator2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                                                                                                                                                        " + "'", str9, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(scopeList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(functionNodeList32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(scope41);
        org.junit.Assert.assertNull(scopeList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNull(scopeList52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str62, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "                                                                                                                                                                                                        " + "'", str85, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03902");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType3, "");
        com.google.javascript.rhino.head.Token.CommentType commentType6 = comment5.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType9 = null;
        com.google.javascript.rhino.head.ast.Comment comment11 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType9, "");
        boolean boolean12 = comment11.hasSideEffects();
        int int13 = comment11.getLineno();
        com.google.javascript.rhino.head.Node node15 = comment11.setType(18);
        comment11.removeChildren();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        comment21.setCommentType(commentType23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator26 = scriptNode25.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        com.google.javascript.rhino.head.ast.Comment comment31 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType29, "");
        java.lang.String str33 = comment31.toSource(100);
        java.lang.String str34 = comment31.getValue();
        scriptNode25.setParent((com.google.javascript.rhino.head.ast.AstNode) comment31);
        com.google.javascript.rhino.head.ast.Comment[] commentArray36 = new com.google.javascript.rhino.head.ast.Comment[] { comment5, comment11, comment21, comment31 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet37, commentArray36);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet37);
        astRoot0.setEncodedSourceStart((-603115504));
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = astRoot0.getAstRoot();
        astRoot42.setEncodedSourceEnd(603173706);
        org.junit.Assert.assertNull(commentType6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator26);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "                                                                                                                                                                                                        " + "'", str33, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(commentArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(astRoot42);
    }

    @Test
    public void test03903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03903");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.AstNode> astNodeList9 = scriptNode1.getStatements();
        com.google.javascript.rhino.head.ast.Scope scope10 = scriptNode1.getEnclosingScope();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons11 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons11.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        boolean boolean16 = compilerEnvirons14.getWarnTrailingComma();
        compilerEnvirons14.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet19 = compilerEnvirons14.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter20 = compilerEnvirons14.getErrorReporter();
        java.lang.String[] strArray26 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        compilerEnvirons14.setActivationNames((java.util.Set<java.lang.String>) strSet27);
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons14.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser31 = new com.google.javascript.rhino.head.Parser(compilerEnvirons11, errorReporter30);
        com.google.javascript.rhino.head.ast.AstRoot astRoot35 = parser31.parse("          hi!", "hi!", 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = astRoot36.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        java.lang.String str56 = comment54.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] { comment42, comment48, comment54 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        boolean boolean61 = astRoot36.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray62 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList63, symbolArray62);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList63);
        int int66 = astRoot36.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment67 = astRoot36.getJsDocNode();
        astRoot36.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType72, "");
        com.google.javascript.rhino.head.Token.CommentType commentType75 = null;
        comment74.setCommentType(commentType75);
        astRoot36.setJsDocNode(comment74);
        astRoot35.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet79 = astRoot35.getComments();
        scriptNode1.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot35);
        scriptNode1.putIntProp((-449082186), (int) (byte) -1);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(astNodeList9);
        org.junit.Assert.assertNotNull(scope10);
        org.junit.Assert.assertNotNull(compilerEnvirons11);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strSet19);
        org.junit.Assert.assertNotNull(errorReporter20);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(errorReporter30);
        org.junit.Assert.assertNotNull(astRoot35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                                                                                                                        " + "'", str56, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(symbolArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(comment67);
        org.junit.Assert.assertNull(commentSet79);
    }

    @Test
    public void test03904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03904");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        boolean boolean3 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setRecoverFromErrors(true);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test03905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03905");
        com.google.javascript.rhino.head.ast.Scope scope3 = new com.google.javascript.rhino.head.ast.Scope(0, 0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode5.getChildScopes();
        int int8 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode5.getLastSibling();
        scriptNode5.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        java.lang.String str18 = scriptNode5.toStringTree(scriptNode13);
        int int19 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node21 = scriptNode5.setType((int) (byte) -1);
        scriptNode5.setSourceName("typeof");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        com.google.javascript.rhino.head.Node node30 = scriptNode26.getLastSibling();
        int int31 = scriptNode26.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = scriptNode26.new NodeIterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode33.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode34);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList36 = scriptNode34.getChildScopes();
        int int37 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node38 = scriptNode34.getLastSibling();
        scriptNode34.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode42 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode41.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode42);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList44 = scriptNode42.getFunctions();
        scriptNode42.setPosition((int) (byte) 10);
        java.lang.String str47 = scriptNode34.toStringTree(scriptNode42);
        int int48 = scriptNode34.getBaseLineno();
        com.google.javascript.rhino.head.Node node50 = scriptNode34.setType((int) (byte) -1);
        com.google.javascript.rhino.head.Node node51 = new com.google.javascript.rhino.head.Node(9, (com.google.javascript.rhino.head.Node) scriptNode26, node50);
        com.google.javascript.rhino.head.Node node53 = new com.google.javascript.rhino.head.Node((int) (short) 0, (com.google.javascript.rhino.head.Node) scope3, (com.google.javascript.rhino.head.Node) scriptNode5, node51, 17);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope54 = scriptNode5.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(functionNodeList44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(node50);
    }

    @Test
    public void test03906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03906");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        astRoot32.setInStrictMode(false);
        astRoot32.setSourceName("                                                                                                        {\n                                                                                                        }\n");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = astRoot32.getChildScopes();
        astRoot32.removeProp((-954561564));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node81 = astRoot32.getFinally();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNull(scopeList78);
    }

    @Test
    public void test03907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03907");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode9.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode10);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList12 = scriptNode10.getChildScopes();
        int int13 = scriptNode10.getBaseLineno();
        com.google.javascript.rhino.head.Node node14 = scriptNode10.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        java.lang.String str20 = scriptNode16.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode22 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode10.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode16, (com.google.javascript.rhino.head.Node) scriptNode22);
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = scriptNode10.getString();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(scopeList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test03908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03908");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((int) (short) 100, 452928004);
    }

    @Test
    public void test03909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03909");
        com.google.javascript.rhino.head.Node node1 = new com.google.javascript.rhino.head.Node(1267544753);
    }

    @Test
    public void test03910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03910");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor2 = astRoot0.iterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor3 = null;
        astRoot0.visitComments(nodeVisitor3);
        astRoot0.setInStrictMode(false);
        astRoot0.clearParentScope();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeItor2);
    }

    @Test
    public void test03911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03911");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        int int1 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean4 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean5 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setAllowSharpComments(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03912");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((-929928321), 0, commentType2, "-1\t  SCRIPT 0 1\n");
        // The following exception was thrown during execution in test generation
        try {
            comment4.resetTargets();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03913");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = com.google.javascript.rhino.head.ast.AstNode.operatorToString(538062289);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid operator: 538062289");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03914");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setRecordingComments(false);
        compilerEnvirons0.setXmlAvailable(false);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test03915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03915");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        scriptNode18.setLength((-1));
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode25.removeProp(10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator29 = astRoot28.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor30 = astRoot28.iterator();
        scriptNode25.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot28);
        java.lang.String str32 = scriptNode25.toString();
        scriptNode18.setCompilerData((java.lang.Object) scriptNode25);
        com.google.javascript.rhino.head.ast.Comment comment34 = scriptNode25.getJsDocNode();
        scriptNode25.setSourceName("                                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                                    }\n");
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(10, (com.google.javascript.rhino.head.Node) scriptNode25, (-1101340812));
        com.google.javascript.rhino.head.Node node40 = node38.setType(270991972);
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(nodeItor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "136" + "'", str32, "136");
        org.junit.Assert.assertNull(comment34);
        org.junit.Assert.assertNotNull(node40);
    }

    @Test
    public void test03916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03916");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList4 = scriptNode2.getFunctions();
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode2, 8);
        int int7 = scriptNode2.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot8 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet9 = astRoot8.getComments();
        java.lang.String str10 = astRoot8.getSourceName();
        boolean boolean11 = astRoot8.hasChildren();
        int int12 = astRoot8.getLineno();
        astRoot8.setEncodedSourceBounds((int) (byte) 10, (int) (short) 100);
        com.google.javascript.rhino.head.ast.Comment comment16 = astRoot8.getJsDocNode();
        scriptNode2.setTop((com.google.javascript.rhino.head.ast.ScriptNode) astRoot8);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons18.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.getWarnTrailingComma();
        compilerEnvirons21.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet26 = compilerEnvirons21.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter27 = compilerEnvirons21.getErrorReporter();
        java.lang.String[] strArray33 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        compilerEnvirons21.setActivationNames((java.util.Set<java.lang.String>) strSet34);
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons21.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser38 = new com.google.javascript.rhino.head.Parser(compilerEnvirons18, errorReporter37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = parser38.parse("          hi!", "hi!", 2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot43 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator44 = astRoot43.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        boolean boolean50 = comment49.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType53 = null;
        com.google.javascript.rhino.head.ast.Comment comment55 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType53, "");
        boolean boolean56 = comment55.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType59 = null;
        com.google.javascript.rhino.head.ast.Comment comment61 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType59, "");
        java.lang.String str63 = comment61.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray64 = new com.google.javascript.rhino.head.ast.Comment[] { comment49, comment55, comment61 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet65 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet65, commentArray64);
        astRoot43.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet65);
        boolean boolean68 = astRoot43.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray69 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList70 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList70, symbolArray69);
        astRoot43.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList70);
        int int73 = astRoot43.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment74 = astRoot43.getJsDocNode();
        astRoot43.setBaseLineno((int) '4');
        com.google.javascript.rhino.head.Token.CommentType commentType79 = null;
        com.google.javascript.rhino.head.ast.Comment comment81 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType79, "");
        com.google.javascript.rhino.head.Token.CommentType commentType82 = null;
        comment81.setCommentType(commentType82);
        astRoot43.setJsDocNode(comment81);
        astRoot42.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot43);
        astRoot8.addChildToBack((com.google.javascript.rhino.head.Node) astRoot43);
        java.lang.String str88 = astRoot43.toSource((-954561564));
        astRoot43.setEncodedSourceEnd(97);
        org.junit.Assert.assertNotNull(functionNodeList4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(commentSet9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(comment16);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strSet26);
        org.junit.Assert.assertNotNull(errorReporter27);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(astRoot42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                        " + "'", str63, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(symbolArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(comment74);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test03917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03917");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray1 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList2, symbolArray1);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        boolean boolean19 = comment18.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType22, "");
        java.lang.String str26 = comment24.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] { comment12, comment18, comment24 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        boolean boolean31 = astRoot6.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType34, "hi!");
        astRoot6.addComment(comment36);
        astRoot6.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        scriptNode41.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.Node node50 = scriptNode46.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode52.getChildScopes();
        java.lang.String str56 = scriptNode52.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int60 = scriptNode52.getType();
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        int int62 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray64 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList65, symbolArray64);
        scriptNode63.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList65);
        int int68 = scriptNode63.getEndLineno();
        boolean boolean69 = scriptNode63.hasSideEffects();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        int int72 = scriptNode52.getPosition();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons73 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter74 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory75 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons73, errorReporter74);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode77 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode76.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList79 = scriptNode77.getFunctions();
        scriptNode77.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node82 = iRFactory75.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode77);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList83 = scriptNode77.getChildScopes();
        java.lang.Object obj84 = scriptNode77.getCompilerData();
        int int85 = scriptNode77.getType();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode88 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        java.lang.Object obj89 = scriptNode88.getCompilerData();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode90 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode91 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode90.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode91);
        int int93 = scriptNode90.getEndLineno();
        com.google.javascript.rhino.head.Node node94 = new com.google.javascript.rhino.head.Node(170, (com.google.javascript.rhino.head.Node) scriptNode88, (com.google.javascript.rhino.head.Node) scriptNode90);
        int int95 = scriptNode88.getFunctionCount();
        scriptNode77.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode88);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode52.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scriptNode77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                                                                                                                                                        " + "'", str26, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 136 + "'", int60 == 136);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(symbolArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(functionNodeList79);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertNull(scopeList83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 136 + "'", int85 == 136);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test03918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03918");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope scope6 = scriptNode2.getEnclosingScope();
        int int7 = scriptNode2.getAbsolutePosition();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        int int12 = scriptNode9.getBaseLineno();
        com.google.javascript.rhino.head.Node node13 = scriptNode9.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList17 = scriptNode15.getChildScopes();
        java.lang.String str19 = scriptNode15.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode9.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode15, (com.google.javascript.rhino.head.Node) scriptNode21);
        java.lang.String str23 = scriptNode9.getSourceName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode24 = null;
        scriptNode9.setTop(scriptNode24);
        scriptNode9.setSourceName("                                                                hi!");
        com.google.javascript.rhino.head.ast.AstRoot astRoot28 = scriptNode9.getAstRoot();
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node((-659200707), (com.google.javascript.rhino.head.Node) scriptNode2, (com.google.javascript.rhino.head.Node) scriptNode9, (-777163487));
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope31 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(scope6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(scopeList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(astRoot28);
    }

    @Test
    public void test03919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03919");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator1 = scriptNode0.spliterator();
        com.google.javascript.rhino.head.Node node3 = scriptNode0.setType((int) '#');
        java.lang.Object obj4 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.Symbol symbol6 = scriptNode0.getSymbol("typeof");
        scriptNode0.setEncodedSource("{\n}\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot9 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator10 = astRoot9.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType13, "");
        boolean boolean16 = comment15.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        boolean boolean22 = comment21.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        java.lang.String str29 = comment27.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray30 = new com.google.javascript.rhino.head.ast.Comment[] { comment15, comment21, comment27 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet31 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet31, commentArray30);
        astRoot9.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet31);
        boolean boolean34 = astRoot9.isInStrictMode();
        int int35 = astRoot9.getParamCount();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        boolean boolean37 = astRoot36.hasSideEffects();
        astRoot9.target = astRoot36;
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        astRoot36.flattenSymbolTable(true);
        int int42 = astRoot36.getPosition();
        // The following exception was thrown during execution in test generation
        try {
            double double43 = astRoot36.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.AstRoot cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(nodeSpliterator1);
        org.junit.Assert.assertNotNull(node3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(symbol6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "                                                                                                                                                                                                        " + "'", str29, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test03920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03920");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType28, "hi!");
        astRoot0.addComment(comment30);
        astRoot0.setEncodedSource("typeof");
        astRoot0.setEncodedSourceBounds((int) (short) 10, 170);
        com.google.javascript.rhino.head.ast.Scope scope37 = astRoot0.getEnclosingScope();
        int int38 = astRoot0.getType();
        boolean boolean39 = astRoot0.hasSideEffects();
        com.google.javascript.rhino.head.ast.Comment comment40 = astRoot0.getJsDocNode();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(scope37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 136 + "'", int38 == 136);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(comment40);
    }

    @Test
    public void test03921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03921");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        boolean boolean3 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setIdeMode(true);
        boolean boolean10 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03922");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor7 = scriptNode1.iterator();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean9 = compilerEnvirons8.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons8.isIdeMode();
        int int11 = compilerEnvirons8.getOptimizationLevel();
        scriptNode1.setCompilerData((java.lang.Object) compilerEnvirons8);
        java.lang.String str14 = scriptNode1.toSource((-603115504));
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        com.google.javascript.rhino.head.Token.CommentType commentType21 = comment20.getCommentType();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        int int28 = comment26.getLineno();
        com.google.javascript.rhino.head.Node node30 = comment26.setType(18);
        comment26.removeChildren();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType34, "");
        boolean boolean37 = comment36.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        comment36.setCommentType(commentType38);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scriptNode40.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType44 = null;
        com.google.javascript.rhino.head.ast.Comment comment46 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType44, "");
        java.lang.String str48 = comment46.toSource(100);
        java.lang.String str49 = comment46.getValue();
        scriptNode40.setParent((com.google.javascript.rhino.head.ast.AstNode) comment46);
        com.google.javascript.rhino.head.ast.Comment[] commentArray51 = new com.google.javascript.rhino.head.ast.Comment[] { comment20, comment26, comment36, comment46 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet52 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet52, commentArray51);
        astRoot15.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet52);
        scriptNode1.target = astRoot15;
        com.google.javascript.rhino.head.ast.AstRoot astRoot56 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int57 = astRoot56.getParamCount();
        java.lang.String str58 = astRoot56.getJsDoc();
        java.lang.String str59 = astRoot56.getNextTempName();
        com.google.javascript.rhino.head.ast.Symbol symbol61 = astRoot56.getSymbol("                          ");
        com.google.javascript.rhino.head.ast.AstRoot astRoot62 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int63 = astRoot62.getParamCount();
        java.lang.String str64 = astRoot62.getJsDoc();
        java.lang.String str65 = astRoot62.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = astRoot62.getTop();
        boolean boolean67 = astRoot62.isInStrictMode();
        int int68 = astRoot62.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment69 = astRoot62.getJsDocNode();
        java.lang.String str70 = astRoot62.debugPrint();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot56, (com.google.javascript.rhino.head.ast.Scope) astRoot62);
        astRoot15.addChildrenToFront((com.google.javascript.rhino.head.Node) astRoot56);
        java.lang.String str73 = astRoot15.getNextTempName();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet74 = astRoot15.getComments();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(nodeItor7);
        org.junit.Assert.assertNotNull(compilerEnvirons8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{\n}\n" + "'", str14, "{\n}\n");
        org.junit.Assert.assertNull(commentType21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "                                                                                                                                                                                                        " + "'", str48, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(commentArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "$0" + "'", str59, "$0");
        org.junit.Assert.assertNull(symbol61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "$0" + "'", str65, "$0");
        org.junit.Assert.assertNotNull(scriptNode66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(comment69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str70, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "$0" + "'", str73, "$0");
        org.junit.Assert.assertNotNull(commentSet74);
    }

    @Test
    public void test03923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03923");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode1.flattenSymbolTable(true);
        com.google.javascript.rhino.head.ast.Scope scope4 = scriptNode1.getEnclosingScope();
        java.lang.String str5 = scriptNode1.getEncodedSource();
        boolean boolean6 = scriptNode1.hasSideEffects();
        org.junit.Assert.assertNull(scope4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03924");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = new com.google.javascript.rhino.head.CompilerEnvirons();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray7 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        compilerEnvirons1.setActivationNames((java.util.Set<java.lang.String>) strSet8);
        boolean boolean11 = compilerEnvirons1.isGenerateDebugInfo();
        compilerEnvirons1.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.ErrorReporter errorReporter14 = compilerEnvirons1.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser15 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter14);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter14.warning("-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  LSH 2 0\n1\t  COMMENT 2 0\n", "                                                                                                        {\n                                                                                                        }\n", (-50044338), "                                                                        ", 14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons1);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(errorReporter14);
    }

    @Test
    public void test03925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03925");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean17 = compilerEnvirons0.isGenerateDebugInfo();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        int int20 = compilerEnvirons18.getLanguageVersion();
        int int21 = compilerEnvirons18.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean23 = compilerEnvirons22.isReservedKeywordAsIdentifier();
        compilerEnvirons22.setStrictMode(true);
        compilerEnvirons22.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory35 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory36 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter34);
        com.google.javascript.rhino.head.IRFactory iRFactory37 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter34);
        boolean boolean38 = compilerEnvirons0.recoverFromErrors();
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setGenerateDebugInfo(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = compilerEnvirons0.getErrorReporter();
        boolean boolean44 = compilerEnvirons0.isGeneratingSource();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 170 + "'", int20 == 170);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 170 + "'", int21 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(errorReporter43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test03926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03926");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        boolean boolean5 = compilerEnvirons0.isIdeMode();
        boolean boolean6 = compilerEnvirons0.isGenerateDebugInfo();
        java.util.Set<java.lang.String> strSet7 = compilerEnvirons0.getActivationNames();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test03927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03927");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        int int9 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean10 = compilerEnvirons0.isGenerateObserverCount();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean13 = compilerEnvirons0.isGenerateDebugInfo();
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setOptimizationLevel(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Optimization level outside [-1..9]: 13");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test03928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03928");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean7 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        int int8 = compilerEnvirons6.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        boolean boolean11 = compilerEnvirons9.isIdeMode();
        compilerEnvirons9.setRecordingLocalJsDocComments(false);
        boolean boolean14 = compilerEnvirons9.isGenerateDebugInfo();
        compilerEnvirons9.setRecordingLocalJsDocComments(true);
        boolean boolean17 = compilerEnvirons9.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        boolean boolean20 = compilerEnvirons18.getWarnTrailingComma();
        boolean boolean21 = compilerEnvirons18.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter22 = compilerEnvirons18.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser23 = new com.google.javascript.rhino.head.Parser(compilerEnvirons9, errorReporter22);
        compilerEnvirons6.setErrorReporter(errorReporter22);
        compilerEnvirons0.setErrorReporter(errorReporter22);
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setStrictMode(false);
        boolean boolean30 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 170 + "'", int8 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(errorReporter22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test03929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03929");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(100, (int) (byte) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot1, node5);
        int int9 = astRoot1.getIntProp((int) '4', (-110742292));
        int int10 = astRoot1.getEndLineno();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet11 = null;
        astRoot1.setComments(commentSet11);
        com.google.javascript.rhino.head.Node node13 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot1.removeChild(node13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-110742292) + "'", int9 == (-110742292));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test03930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03930");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.isGeneratingSource();
        int int12 = compilerEnvirons0.getOptimizationLevel();
        boolean boolean13 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean14 = compilerEnvirons0.isRecordingComments();
        boolean boolean15 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test03931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03931");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int22 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.ast.Scope scope23 = scriptNode12.getEnclosingScope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator24 = scope23.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope25 = scope23.getScope();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.Name");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(scope23);
        org.junit.Assert.assertNotNull(nodeSpliterator24);
    }

    @Test
    public void test03932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03932");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        java.lang.String str2 = astRoot0.getSourceName();
        boolean boolean3 = astRoot0.hasChildren();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList7 = scriptNode5.getChildScopes();
        int int8 = scriptNode5.getBaseLineno();
        com.google.javascript.rhino.head.Node node9 = scriptNode5.getLastSibling();
        scriptNode5.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList15 = scriptNode13.getFunctions();
        scriptNode13.setPosition((int) (byte) 10);
        java.lang.String str18 = scriptNode5.toStringTree(scriptNode13);
        int int19 = scriptNode5.getBaseLineno();
        boolean boolean20 = scriptNode5.hasConsistentReturnUsage();
        astRoot0.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode5);
        com.google.javascript.rhino.head.Node node23 = astRoot0.setType((int) (short) 1);
        com.google.javascript.rhino.head.Node node24 = node23.getLastSibling();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(scopeList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(functionNodeList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node24);
    }

    @Test
    public void test03933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03933");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean14 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean17 = compilerEnvirons0.getAllowSharpComments();
        int int18 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray25 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        compilerEnvirons19.setActivationNames((java.util.Set<java.lang.String>) strSet26);
        boolean boolean29 = compilerEnvirons19.getWarnTrailingComma();
        boolean boolean30 = compilerEnvirons19.isGenerateDebugInfo();
        java.lang.String[] strArray40 = new java.lang.String[] { "$0", "                      ", "                                                                                                                                                                                                        ", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n", "ScriptNode", "AstRoot", "136" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        compilerEnvirons19.setActivationNames((java.util.Set<java.lang.String>) strSet41);
        boolean boolean44 = compilerEnvirons19.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.ErrorReporter errorReporter45 = compilerEnvirons19.getErrorReporter();
        compilerEnvirons0.setErrorReporter(errorReporter45);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 170 + "'", int18 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons19);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(errorReporter45);
    }

    @Test
    public void test03934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03934");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray1 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList2 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList2, symbolArray1);
        scriptNode0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList2);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        boolean boolean19 = comment18.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType22, "");
        java.lang.String str26 = comment24.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray27 = new com.google.javascript.rhino.head.ast.Comment[] { comment12, comment18, comment24 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet28 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet28, commentArray27);
        astRoot6.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet28);
        boolean boolean31 = astRoot6.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType34 = null;
        com.google.javascript.rhino.head.ast.Comment comment36 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType34, "hi!");
        astRoot6.addComment(comment36);
        astRoot6.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode41 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode41);
        scriptNode41.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        com.google.javascript.rhino.head.Node node50 = scriptNode46.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList54 = scriptNode52.getChildScopes();
        java.lang.String str56 = scriptNode52.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode58);
        int int60 = scriptNode52.getType();
        scriptNode41.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        int int62 = scriptNode52.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray64 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList65 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList65, symbolArray64);
        scriptNode63.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList65);
        int int68 = scriptNode63.getEndLineno();
        boolean boolean69 = scriptNode63.hasSideEffects();
        com.google.javascript.rhino.head.Node node70 = new com.google.javascript.rhino.head.Node(13, (com.google.javascript.rhino.head.Node) astRoot6, (com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scriptNode63);
        scriptNode0.setParentScope((com.google.javascript.rhino.head.ast.Scope) scriptNode52);
        java.lang.String str73 = scriptNode0.makeIndent(24);
        com.google.javascript.rhino.head.ast.Symbol symbol74 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode0.putSymbol(symbol74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(symbolArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                                                                                                                                                        " + "'", str26, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(scopeList54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 136 + "'", int60 == 136);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(symbolArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "                                                " + "'", str73, "                                                ");
    }

    @Test
    public void test03935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03935");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment31 = astRoot0.getJsDocNode();
        astRoot0.setInStrictMode(false);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode34 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode34.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode35);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList37 = scriptNode35.getChildScopes();
        int int38 = scriptNode35.getBaseLineno();
        com.google.javascript.rhino.head.Node node39 = scriptNode35.getLastSibling();
        int int40 = scriptNode35.getLineno();
        com.google.javascript.rhino.head.ast.AstNode astNode41 = scriptNode35.getParent();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor42 = scriptNode35.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode43 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode43.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode44);
        scriptNode44.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode49 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap50 = scriptNode49.getSymbolTable();
        scriptNode44.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode49);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode53 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode52.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList55 = scriptNode53.getChildScopes();
        int int56 = scriptNode53.getBaseLineno();
        com.google.javascript.rhino.head.Node node57 = scriptNode53.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode58 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode59 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode58.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode59);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList61 = scriptNode59.getChildScopes();
        java.lang.String str63 = scriptNode59.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode53.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode59, (com.google.javascript.rhino.head.Node) scriptNode65);
        scriptNode44.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode53);
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList68 = scriptNode44.getSymbols();
        scriptNode35.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode44);
        com.google.javascript.rhino.head.ast.Scope scope71 = scriptNode35.getDefiningScope("23\t  ERROR 24 1\n");
        scriptNode35.setEncodedSourceEnd(4);
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.setContinue((com.google.javascript.rhino.head.Node) scriptNode35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(comment31);
        org.junit.Assert.assertNull(scopeList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(astNode41);
        org.junit.Assert.assertNotNull(nodeItor42);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(scopeList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertNull(scopeList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(symbolList68);
        org.junit.Assert.assertNull(scope71);
    }

    @Test
    public void test03936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03936");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        boolean boolean3 = compilerEnvirons0.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons4 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean5 = compilerEnvirons4.isReservedKeywordAsIdentifier();
        boolean boolean6 = compilerEnvirons4.getWarnTrailingComma();
        boolean boolean7 = compilerEnvirons4.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter8 = compilerEnvirons4.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory9 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter8);
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = iRFactory9.parse("          hi!", "1\tCOMMENT 1 0\n", 25);
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator14 = astRoot13.new NodeIterator();
        // The following exception was thrown during execution in test generation
        try {
            nodeIterator14.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: next() has not been called");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter8);
        org.junit.Assert.assertNotNull(astRoot13);
    }

    @Test
    public void test03937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03937");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons10 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean11 = compilerEnvirons10.isReservedKeywordAsIdentifier();
        int int12 = compilerEnvirons10.getLanguageVersion();
        int int13 = compilerEnvirons10.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        compilerEnvirons14.setStrictMode(true);
        compilerEnvirons14.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean21 = compilerEnvirons20.isReservedKeywordAsIdentifier();
        boolean boolean22 = compilerEnvirons20.getWarnTrailingComma();
        compilerEnvirons20.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet25 = compilerEnvirons20.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter26 = compilerEnvirons20.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory27 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons14, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory28 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons10, errorReporter26);
        com.google.javascript.rhino.head.IRFactory iRFactory29 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter26);
        compilerEnvirons0.setRecordingComments(true);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean34 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 170 + "'", int12 == 170);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 170 + "'", int13 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strSet25);
        org.junit.Assert.assertNotNull(errorReporter26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03938");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setXmlAvailable(true);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstRoot astRoot12 = iRFactory8.parse("-1\tSCRIPT -1 1\n", "129", 20);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet13 = astRoot12.getComments();
        boolean boolean14 = astRoot12.isInStrictMode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(astRoot12);
        org.junit.Assert.assertNull(commentSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03939");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd((-505759099));
        java.lang.Object obj5 = scriptNode1.getCompilerData();
        org.junit.Assert.assertNull(obj5);
    }

    @Test
    public void test03940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03940");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        boolean boolean11 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean12 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean13 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        boolean boolean14 = compilerEnvirons0.getAllowSharpComments();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03941");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType2, "");
        boolean boolean5 = comment4.hasSideEffects();
        int int6 = comment4.getLineno();
        com.google.javascript.rhino.head.Node node8 = comment4.setType(18);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor9 = node8.iterator();
        boolean boolean10 = nodeItor9.hasNext();
        java.lang.Class<?> wildcardClass11 = nodeItor9.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(nodeItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test03942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03942");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.getJsDoc();
        java.lang.String str3 = astRoot0.getNextTempName();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = astRoot0.getTop();
        boolean boolean5 = astRoot0.isInStrictMode();
        int int6 = astRoot0.getBaseLineno();
        com.google.javascript.rhino.head.ast.Comment comment7 = astRoot0.getJsDocNode();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope8 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) astRoot0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "$0" + "'", str3, "$0");
        org.junit.Assert.assertNotNull(scriptNode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(comment7);
    }

    @Test
    public void test03943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03943");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.lang.Object obj3 = scriptNode0.getCompilerData();
        com.google.javascript.rhino.head.ast.AstRoot astRoot4 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot4.getComments();
        int int6 = astRoot4.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        astRoot4.visitComments(nodeVisitor7);
        com.google.javascript.rhino.head.Node node9 = astRoot4.getFirstChild();
        com.google.javascript.rhino.head.ast.AstRoot astRoot10 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator11 = astRoot10.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType14, "");
        boolean boolean17 = comment16.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType20 = null;
        com.google.javascript.rhino.head.ast.Comment comment22 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType20, "");
        boolean boolean23 = comment22.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType26 = null;
        com.google.javascript.rhino.head.ast.Comment comment28 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType26, "");
        java.lang.String str30 = comment28.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray31 = new com.google.javascript.rhino.head.ast.Comment[] { comment16, comment22, comment28 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet32 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet32, commentArray31);
        astRoot10.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet32);
        boolean boolean35 = astRoot10.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType38 = null;
        com.google.javascript.rhino.head.ast.Comment comment40 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType38, "hi!");
        astRoot10.addComment(comment40);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode42 = comment40.getEnclosingFunction();
        astRoot4.addComment(comment40);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode44 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode44.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode45);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList47 = scriptNode45.getChildScopes();
        int int48 = scriptNode45.getBaseLineno();
        com.google.javascript.rhino.head.Node node49 = scriptNode45.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode50 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode50.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode51);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList53 = scriptNode51.getChildScopes();
        java.lang.String str55 = scriptNode51.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode57 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode45.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode51, (com.google.javascript.rhino.head.Node) scriptNode57);
        com.google.javascript.rhino.head.ast.AstRoot astRoot59 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int60 = astRoot59.getBaseLineno();
        int int61 = astRoot59.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode62 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode62.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList65 = scriptNode63.getChildScopes();
        int int66 = scriptNode63.getBaseLineno();
        com.google.javascript.rhino.head.Node node67 = scriptNode63.getLastSibling();
        scriptNode63.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList73 = scriptNode71.getFunctions();
        scriptNode71.setPosition((int) (byte) 10);
        java.lang.String str76 = scriptNode63.toStringTree(scriptNode71);
        int int77 = scriptNode63.getBaseLineno();
        astRoot59.target = scriptNode63;
        scriptNode51.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        astRoot4.replaceWith((com.google.javascript.rhino.head.ast.Scope) scriptNode63);
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode63);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons82 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean83 = compilerEnvirons82.isReservedKeywordAsIdentifier();
        int int84 = compilerEnvirons82.getLanguageVersion();
        boolean boolean85 = compilerEnvirons82.reportWarningAsError();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons86 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean87 = compilerEnvirons86.isReservedKeywordAsIdentifier();
        boolean boolean88 = compilerEnvirons86.getWarnTrailingComma();
        boolean boolean89 = compilerEnvirons86.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter90 = compilerEnvirons86.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory91 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons82, errorReporter90);
        com.google.javascript.rhino.head.ast.AstRoot astRoot95 = iRFactory91.parse("          hi!", "1\tCOMMENT 1 0\n", 25);
        astRoot95.setLength((int) (short) 10);
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator98 = astRoot95.spliterator();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode0, (com.google.javascript.rhino.head.ast.Scope) astRoot95);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "                                                                                                                                                                                                        " + "'", str30, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(functionNode42);
        org.junit.Assert.assertNull(scopeList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNull(scopeList53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(scopeList65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertNotNull(functionNodeList73);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(compilerEnvirons82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 170 + "'", int84 == 170);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(errorReporter90);
        org.junit.Assert.assertNotNull(astRoot95);
        org.junit.Assert.assertNotNull(nodeSpliterator98);
    }

    @Test
    public void test03944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03944");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(603173706);
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = astRoot2.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType6, "");
        boolean boolean9 = comment8.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        java.lang.String str22 = comment20.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] { comment8, comment14, comment20 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        boolean boolean27 = astRoot2.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType30, "hi!");
        astRoot2.addComment(comment32);
        astRoot2.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot36.getComments();
        int int38 = astRoot36.getEndLineno();
        com.google.javascript.rhino.head.Node node40 = astRoot36.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, (com.google.javascript.rhino.head.ast.Scope) astRoot36);
        astRoot2.setBaseLineno((int) (byte) 0);
        int int44 = astRoot2.depth();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot2);
        boolean boolean46 = astRoot2.hasConsistentReturnUsage();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                                                                                                                                                        " + "'", str22, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test03945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03945");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.Node node34 = new com.google.javascript.rhino.head.Node(603173706, 0);
        astRoot1.addChildrenToFront(node34);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode36.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode37);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList39 = scriptNode37.getChildScopes();
        int int40 = scriptNode37.getBaseLineno();
        com.google.javascript.rhino.head.Node node41 = scriptNode37.getLastSibling();
        int int42 = scriptNode37.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = scriptNode37.new NodeIterator();
        int int44 = scriptNode37.getLineno();
        com.google.javascript.rhino.head.Node node46 = new com.google.javascript.rhino.head.Node((-1101340812), node34, (com.google.javascript.rhino.head.Node) scriptNode37, 25);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor47 = scriptNode37.iterator();
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node48 = nodeItor47.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(scopeList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(nodeItor47);
    }

    @Test
    public void test03946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03946");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons1 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter2 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory3 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons1, errorReporter2);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode4.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList7 = scriptNode5.getFunctions();
        scriptNode5.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node10 = iRFactory3.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode5);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode5.getChildScopes();
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap12 = scriptNode5.getSymbolTable();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(12);
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        boolean boolean21 = comment20.hasSideEffects();
        int int22 = comment20.getLineno();
        java.lang.String str23 = comment20.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        comment20.setCommentType(commentType24);
        java.lang.String str27 = comment20.toSource((int) (short) 100);
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node(4, (com.google.javascript.rhino.head.Node) comment20);
        com.google.javascript.rhino.head.Node node30 = new com.google.javascript.rhino.head.Node(1010889788, (com.google.javascript.rhino.head.Node) scriptNode5, (com.google.javascript.rhino.head.Node) scriptNode14, node28, (int) ' ');
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getBaseLineno();
        java.lang.String str36 = astRoot34.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = astRoot37.new NodeIterator();
        int int39 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot34, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator41 = scriptNode40.spliterator();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator42 = scriptNode40.new NodeIterator();
        astRoot37.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        astRoot37.setInStrictMode(true);
        java.lang.String str46 = astRoot37.debugPrint();
        com.google.javascript.rhino.head.Token.CommentType commentType49 = null;
        com.google.javascript.rhino.head.ast.Comment comment51 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType49, "");
        boolean boolean52 = comment51.hasSideEffects();
        int int53 = comment51.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = comment51.getCommentType();
        java.lang.String str56 = comment51.makeIndent((int) '4');
        astRoot37.setJsDocNode(comment51);
        // The following exception was thrown during execution in test generation
        try {
            node28.setScope((com.google.javascript.rhino.head.ast.Scope) astRoot37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1\tCOMMENT 1 0\n" + "'", str23, "1\tCOMMENT 1 0\n");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                                                                                                                        " + "'", str27, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(nodeSpliterator41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1\tSCRIPT -1 1\n-1\t  SCRIPT 0 1\n" + "'", str46, "-1\tSCRIPT -1 1\n-1\t  SCRIPT 0 1\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(commentType54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                        " + "'", str56, "                                                                                                        ");
    }

    @Test
    public void test03947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03947");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode4.toSource((int) '4');
        com.google.javascript.rhino.head.Node node7 = scriptNode4.getFirstChild();
        java.lang.Object obj9 = scriptNode4.getProp(18);
        boolean boolean10 = scriptNode4.hasConsistentReturnUsage();
        java.lang.String str11 = astRoot0.toStringTree(scriptNode4);
        astRoot0.flattenSymbolTable(false);
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str6, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03948");
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator0 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator1 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator2 = positionComparator0.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator1);
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int4 = astRoot3.getBaseLineno();
        java.lang.String str5 = astRoot3.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = astRoot6.new NodeIterator();
        int int8 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot3, (com.google.javascript.rhino.head.ast.AstNode) astRoot6);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator10 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator11 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator10);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator12 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator13 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator14 = positionComparator12.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator13);
        com.google.javascript.rhino.head.ast.AstRoot astRoot15 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int16 = astRoot15.getBaseLineno();
        java.lang.String str17 = astRoot15.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot18 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator19 = astRoot18.new NodeIterator();
        int int20 = positionComparator13.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot15, (com.google.javascript.rhino.head.ast.AstNode) astRoot18);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator21 = positionComparator9.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator13);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator22 = positionComparator1.thenComparing(astNodeComparator21);
        com.google.javascript.rhino.head.Token.CommentType commentType25 = null;
        com.google.javascript.rhino.head.ast.Comment comment27 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType25, "");
        boolean boolean28 = comment27.hasSideEffects();
        int int29 = comment27.getLineno();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = comment27.getCommentType();
        com.google.javascript.rhino.head.ast.AstRoot astRoot31 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator32 = astRoot31.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType35 = null;
        com.google.javascript.rhino.head.ast.Comment comment37 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType35, "");
        boolean boolean38 = comment37.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType41 = null;
        com.google.javascript.rhino.head.ast.Comment comment43 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType41, "");
        boolean boolean44 = comment43.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType47 = null;
        com.google.javascript.rhino.head.ast.Comment comment49 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType47, "");
        java.lang.String str51 = comment49.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray52 = new com.google.javascript.rhino.head.ast.Comment[] { comment37, comment43, comment49 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet53 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet53, commentArray52);
        astRoot31.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet53);
        boolean boolean56 = astRoot31.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray57 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList58 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList58, symbolArray57);
        astRoot31.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList58);
        int int61 = astRoot31.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.Scope scope63 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator64 = scope63.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode65 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode65.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode66);
        scope63.setTop(scriptNode66);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = scope63.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType72 = null;
        com.google.javascript.rhino.head.ast.Comment comment74 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType72, "");
        boolean boolean75 = comment74.hasSideEffects();
        int int76 = comment74.getLineno();
        com.google.javascript.rhino.head.Node node78 = comment74.setType(18);
        com.google.javascript.rhino.head.Token.CommentType commentType81 = null;
        com.google.javascript.rhino.head.ast.Comment comment83 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType81, "");
        boolean boolean84 = comment83.hasSideEffects();
        int int85 = comment83.getLineno();
        com.google.javascript.rhino.head.Node node87 = comment83.setType(18);
        comment83.removeChildren();
        com.google.javascript.rhino.head.Node node90 = new com.google.javascript.rhino.head.Node((-1116244898), (com.google.javascript.rhino.head.Node) scope63, (com.google.javascript.rhino.head.Node) comment74, (com.google.javascript.rhino.head.Node) comment83, 15);
        astRoot31.addComment(comment74);
        int int92 = positionComparator1.compare((com.google.javascript.rhino.head.ast.AstNode) comment27, (com.google.javascript.rhino.head.ast.AstNode) astRoot31);
        int int93 = comment27.getType();
        com.google.javascript.rhino.head.Token.CommentType commentType94 = null;
        comment27.setCommentType(commentType94);
        org.junit.Assert.assertNotNull(astNodeComparator2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str5, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator11);
        org.junit.Assert.assertNotNull(astNodeComparator14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str17, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator21);
        org.junit.Assert.assertNotNull(astNodeComparator22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(commentType30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "                                                                                                                                                                                                        " + "'", str51, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(symbolArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(nodeSpliterator64);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 161 + "'", int93 == 161);
    }

    @Test
    public void test03949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03949");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator7 = scriptNode1.new NodeIterator();
        int int8 = scriptNode1.getLineno();
        scriptNode1.clearParentScope();
        int int10 = scriptNode1.depth();
        scriptNode1.setRelative(626782571);
        int int13 = scriptNode1.getLength();
        // The following exception was thrown during execution in test generation
        try {
            double double14 = scriptNode1.getDouble();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.ScriptNode cannot be cast to com.google.javascript.rhino.head.ast.NumberLiteral");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test03950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03950");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getBaseLineno();
        java.lang.String str2 = astRoot0.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot3 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator4 = astRoot3.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType7 = null;
        com.google.javascript.rhino.head.ast.Comment comment9 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType7, "");
        boolean boolean10 = comment9.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType13 = null;
        com.google.javascript.rhino.head.ast.Comment comment15 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType13, "");
        boolean boolean16 = comment15.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType19 = null;
        com.google.javascript.rhino.head.ast.Comment comment21 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType19, "");
        java.lang.String str23 = comment21.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray24 = new com.google.javascript.rhino.head.ast.Comment[] { comment9, comment15, comment21 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet25 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet25, commentArray24);
        astRoot3.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet25);
        boolean boolean28 = astRoot3.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType31, "hi!");
        astRoot3.addComment(comment33);
        astRoot0.addComment(comment33);
        int int36 = astRoot0.getPosition();
        int int37 = astRoot0.getFunctionCount();
        java.lang.String str38 = astRoot0.shortName();
        java.lang.String str39 = astRoot0.getSourceName();
        java.lang.String str40 = astRoot0.debugPrint();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet41 = astRoot0.getComments();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str2, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "                                                                                                                                                                                                        " + "'", str23, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AstRoot" + "'", str38, "AstRoot");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "-1\tSCRIPT -1 1\n35\t  COMMENT 36 2\n" + "'", str40, "-1\tSCRIPT -1 1\n35\t  COMMENT 36 2\n");
        org.junit.Assert.assertNotNull(commentSet41);
    }

    @Test
    public void test03951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03951");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        int int4 = compilerEnvirons0.getOptimizationLevel();
        int int5 = compilerEnvirons0.getLanguageVersion();
        boolean boolean6 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setIdeMode(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons9 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean10 = compilerEnvirons9.isReservedKeywordAsIdentifier();
        compilerEnvirons9.setStrictMode(true);
        int int13 = compilerEnvirons9.getOptimizationLevel();
        int int14 = compilerEnvirons9.getLanguageVersion();
        compilerEnvirons9.setXmlAvailable(true);
        boolean boolean17 = compilerEnvirons9.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons18 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean19 = compilerEnvirons18.isReservedKeywordAsIdentifier();
        compilerEnvirons18.setStrictMode(true);
        compilerEnvirons18.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons24 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean25 = compilerEnvirons24.isReservedKeywordAsIdentifier();
        boolean boolean26 = compilerEnvirons24.getWarnTrailingComma();
        compilerEnvirons24.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet29 = compilerEnvirons24.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter30 = compilerEnvirons24.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory31 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons18, errorReporter30);
        compilerEnvirons9.setErrorReporter(errorReporter30);
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter30);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter30.warning("15\tBLOCK 15 1\n", "<=", 342312986, "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  LSH 2 0\n", (-748307395));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 170 + "'", int5 == 170);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 170 + "'", int14 == 170);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strSet29);
        org.junit.Assert.assertNotNull(errorReporter30);
    }

    @Test
    public void test03952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03952");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        java.lang.String[] strArray21 = new java.lang.String[] { "$0", "                      ", "                                                                                                                                                                                                        ", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n", "ScriptNode", "AstRoot", "136" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        boolean boolean25 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setGeneratingSource(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.getWarnTrailingComma();
        compilerEnvirons28.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet33 = compilerEnvirons28.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter34 = compilerEnvirons28.getErrorReporter();
        boolean boolean35 = compilerEnvirons28.isRecordingComments();
        compilerEnvirons28.setGeneratingSource(false);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons38 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean39 = compilerEnvirons38.isReservedKeywordAsIdentifier();
        int int40 = compilerEnvirons38.getLanguageVersion();
        int int41 = compilerEnvirons38.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean43 = compilerEnvirons42.isReservedKeywordAsIdentifier();
        compilerEnvirons42.setStrictMode(true);
        compilerEnvirons42.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons48 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean49 = compilerEnvirons48.isReservedKeywordAsIdentifier();
        boolean boolean50 = compilerEnvirons48.getWarnTrailingComma();
        compilerEnvirons48.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet53 = compilerEnvirons48.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter54 = compilerEnvirons48.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory55 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter54);
        com.google.javascript.rhino.head.IRFactory iRFactory56 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons38, errorReporter54);
        com.google.javascript.rhino.head.IRFactory iRFactory57 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons28, errorReporter54);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons58 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean59 = compilerEnvirons58.isReservedKeywordAsIdentifier();
        boolean boolean60 = compilerEnvirons58.isIdeMode();
        compilerEnvirons58.setRecordingLocalJsDocComments(false);
        boolean boolean63 = compilerEnvirons58.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons64 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean65 = compilerEnvirons64.isReservedKeywordAsIdentifier();
        int int66 = compilerEnvirons64.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons67 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean68 = compilerEnvirons67.isReservedKeywordAsIdentifier();
        boolean boolean69 = compilerEnvirons67.isIdeMode();
        compilerEnvirons67.setRecordingLocalJsDocComments(false);
        boolean boolean72 = compilerEnvirons67.isGenerateDebugInfo();
        compilerEnvirons67.setRecordingLocalJsDocComments(true);
        boolean boolean75 = compilerEnvirons67.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons76 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean77 = compilerEnvirons76.isReservedKeywordAsIdentifier();
        boolean boolean78 = compilerEnvirons76.getWarnTrailingComma();
        boolean boolean79 = compilerEnvirons76.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter80 = compilerEnvirons76.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser81 = new com.google.javascript.rhino.head.Parser(compilerEnvirons67, errorReporter80);
        compilerEnvirons64.setErrorReporter(errorReporter80);
        compilerEnvirons58.setErrorReporter(errorReporter80);
        compilerEnvirons28.setErrorReporter(errorReporter80);
        com.google.javascript.rhino.head.Parser parser85 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter80);
        java.lang.Class<?> wildcardClass86 = parser85.getClass();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertNotNull(errorReporter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 170 + "'", int40 == 170);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 170 + "'", int41 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strSet53);
        org.junit.Assert.assertNotNull(errorReporter54);
        org.junit.Assert.assertNotNull(compilerEnvirons58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 170 + "'", int66 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(errorReporter80);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test03953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03953");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        int int5 = scriptNode1.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode6.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode7);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList9 = scriptNode7.getFunctions();
        scriptNode7.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope12 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode1.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode7, (com.google.javascript.rhino.head.Node) scope12);
        scriptNode7.setEncodedSourceEnd(18);
        java.lang.String str16 = scriptNode7.getJsDoc();
        int int17 = scriptNode7.depth();
        java.lang.String str19 = scriptNode7.toSource(3);
        scriptNode7.setEncodedSourceBounds((int) (short) -1, 22);
        com.google.javascript.rhino.head.Node node25 = com.google.javascript.rhino.head.Node.newString((-603115504), "                                                                                                                                                                                                  {\n                                                                                                                                                                                                    {\n                                                                                                                                                                                                    }\n                                                                                                                                                                                                  }\n");
        // The following exception was thrown during execution in test generation
        try {
            scriptNode7.setDefault(node25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(functionNodeList9);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "      {\n      }\n" + "'", str19, "      {\n      }\n");
        org.junit.Assert.assertNotNull(node25);
    }

    @Test
    public void test03954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03954");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        compilerEnvirons0.setRecordingComments(false);
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        int int16 = compilerEnvirons14.getLanguageVersion();
        compilerEnvirons14.setLanguageVersion((int) (byte) 100);
        boolean boolean19 = compilerEnvirons14.isGenerateObserverCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode20 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode21 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode20.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode21);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList23 = scriptNode21.getChildScopes();
        int int24 = scriptNode21.getBaseLineno();
        com.google.javascript.rhino.head.Node node25 = scriptNode21.getLastSibling();
        int int26 = scriptNode21.getLineno();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor27 = scriptNode21.iterator();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons28 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean29 = compilerEnvirons28.isReservedKeywordAsIdentifier();
        boolean boolean30 = compilerEnvirons28.isIdeMode();
        int int31 = compilerEnvirons28.getOptimizationLevel();
        scriptNode21.setCompilerData((java.lang.Object) compilerEnvirons28);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons33 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean34 = compilerEnvirons33.isReservedKeywordAsIdentifier();
        boolean boolean35 = compilerEnvirons33.isIdeMode();
        compilerEnvirons33.setRecordingLocalJsDocComments(false);
        boolean boolean38 = compilerEnvirons33.isGenerateObserverCount();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons39 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean40 = compilerEnvirons39.isReservedKeywordAsIdentifier();
        int int41 = compilerEnvirons39.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean43 = compilerEnvirons42.isReservedKeywordAsIdentifier();
        boolean boolean44 = compilerEnvirons42.isIdeMode();
        compilerEnvirons42.setRecordingLocalJsDocComments(false);
        boolean boolean47 = compilerEnvirons42.isGenerateDebugInfo();
        compilerEnvirons42.setRecordingLocalJsDocComments(true);
        boolean boolean50 = compilerEnvirons42.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons51 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean52 = compilerEnvirons51.isReservedKeywordAsIdentifier();
        boolean boolean53 = compilerEnvirons51.getWarnTrailingComma();
        boolean boolean54 = compilerEnvirons51.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter55 = compilerEnvirons51.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser56 = new com.google.javascript.rhino.head.Parser(compilerEnvirons42, errorReporter55);
        compilerEnvirons39.setErrorReporter(errorReporter55);
        compilerEnvirons33.setErrorReporter(errorReporter55);
        compilerEnvirons28.setErrorReporter(errorReporter55);
        com.google.javascript.rhino.head.Parser parser60 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter55);
        com.google.javascript.rhino.head.IRFactory iRFactory61 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter55);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter55.warning("$0", "23\t  ERROR 24 1\n", (-761991377), "                                                                                                                                                                                                                                                                                hi!", 842975161);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 170 + "'", int16 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(scopeList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(nodeItor27);
        org.junit.Assert.assertNotNull(compilerEnvirons28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(compilerEnvirons33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 170 + "'", int41 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(errorReporter55);
    }

    @Test
    public void test03955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03955");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        boolean boolean7 = compilerEnvirons0.isRecordingComments();
        compilerEnvirons0.setGeneratingSource(false);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons0.getErrorReporter();
        int int11 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 170 + "'", int11 == 170);
    }

    @Test
    public void test03956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03956");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol3 = astRoot0.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str6 = scriptNode4.toSource((int) '4');
        com.google.javascript.rhino.head.Node node7 = scriptNode4.getFirstChild();
        java.lang.Object obj9 = scriptNode4.getProp(18);
        boolean boolean10 = scriptNode4.hasConsistentReturnUsage();
        java.lang.String str11 = astRoot0.toStringTree(scriptNode4);
        int int12 = astRoot0.getEncodedSourceEnd();
        com.google.javascript.rhino.head.ast.AstRoot astRoot13 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet14 = astRoot13.getComments();
        int int15 = astRoot13.getEndLineno();
        com.google.javascript.rhino.head.Node node17 = astRoot13.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope scope18 = astRoot13.getParentScope();
        int int21 = astRoot13.getIntProp((-1), 18);
        com.google.javascript.rhino.head.ast.AstRoot astRoot22 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = astRoot22.getComments();
        int int24 = astRoot22.getEndLineno();
        com.google.javascript.rhino.head.Node node26 = astRoot22.setType((int) (short) 10);
        astRoot22.putIntProp(24, (int) 'a');
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode33 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator34 = scriptNode33.spliterator();
        com.google.javascript.rhino.head.Token.CommentType commentType37 = null;
        com.google.javascript.rhino.head.ast.Comment comment39 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType37, "");
        java.lang.String str41 = comment39.toSource(100);
        java.lang.String str42 = comment39.getValue();
        scriptNode33.setParent((com.google.javascript.rhino.head.ast.AstNode) comment39);
        com.google.javascript.rhino.head.ast.AstRoot astRoot44 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator45 = astRoot44.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        boolean boolean51 = comment50.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType54 = null;
        com.google.javascript.rhino.head.ast.Comment comment56 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType54, "");
        boolean boolean57 = comment56.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType60 = null;
        com.google.javascript.rhino.head.ast.Comment comment62 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType60, "");
        java.lang.String str64 = comment62.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray65 = new com.google.javascript.rhino.head.ast.Comment[] { comment50, comment56, comment62 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet66 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet66, commentArray65);
        astRoot44.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet66);
        boolean boolean69 = astRoot44.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray70 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList71 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList71, symbolArray70);
        astRoot44.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList71);
        com.google.javascript.rhino.head.Node node74 = astRoot44.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode75 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode76 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode75.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode76);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot44, (com.google.javascript.rhino.head.ast.Scope) scriptNode76);
        com.google.javascript.rhino.head.Node node79 = new com.google.javascript.rhino.head.Node(16, (com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) comment39, (com.google.javascript.rhino.head.Node) scriptNode76);
        astRoot22.addComment(comment39);
        com.google.javascript.rhino.head.Node node81 = astRoot22.getLastSibling();
        astRoot22.setPosition(16);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode85 = new com.google.javascript.rhino.head.ast.ScriptNode(24);
        astRoot22.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode85);
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet87 = astRoot22.getComments();
        astRoot13.setComments(commentSet87);
        astRoot0.setComments(commentSet87);
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(symbol3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str6, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(commentSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNull(scope18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 18 + "'", int21 == 18);
        org.junit.Assert.assertNull(commentSet23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(nodeSpliterator34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "                                                                                                                                                                                                        " + "'", str41, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                                                                                                                                        " + "'", str64, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(symbolArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(commentSet87);
    }

    @Test
    public void test03957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03957");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean3 = compilerEnvirons0.isRecordingComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter4 = compilerEnvirons0.getErrorReporter();
        boolean boolean5 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setReservedKeywordAsIdentifier(true);
        java.util.Set<java.lang.String> strSet8 = compilerEnvirons0.getActivationNames();
        compilerEnvirons0.setIdeMode(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(errorReporter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(strSet8);
    }

    @Test
    public void test03958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03958");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        compilerEnvirons0.setStrictMode(true);
        compilerEnvirons0.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons6 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean7 = compilerEnvirons6.isReservedKeywordAsIdentifier();
        compilerEnvirons6.setStrictMode(true);
        compilerEnvirons6.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons12 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean13 = compilerEnvirons12.isReservedKeywordAsIdentifier();
        boolean boolean14 = compilerEnvirons12.getWarnTrailingComma();
        compilerEnvirons12.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet17 = compilerEnvirons12.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter18 = compilerEnvirons12.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons6, errorReporter18);
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons21 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean22 = compilerEnvirons21.isReservedKeywordAsIdentifier();
        boolean boolean23 = compilerEnvirons21.isIdeMode();
        boolean boolean24 = compilerEnvirons21.getWarnTrailingComma();
        compilerEnvirons21.setAllowMemberExprAsFunctionName(true);
        compilerEnvirons21.setAllowSharpComments(true);
        boolean boolean29 = compilerEnvirons21.isRecordingLocalJsDocComments();
        compilerEnvirons21.setAllowMemberExprAsFunctionName(true);
        boolean boolean32 = compilerEnvirons21.reportWarningAsError();
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons21);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons34 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean35 = compilerEnvirons34.isReservedKeywordAsIdentifier();
        boolean boolean36 = compilerEnvirons34.isIdeMode();
        boolean boolean37 = compilerEnvirons34.getWarnTrailingComma();
        compilerEnvirons34.setAllowMemberExprAsFunctionName(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons40 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean41 = compilerEnvirons40.isReservedKeywordAsIdentifier();
        int int42 = compilerEnvirons40.getLanguageVersion();
        int int43 = compilerEnvirons40.getLanguageVersion();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons44 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean45 = compilerEnvirons44.isReservedKeywordAsIdentifier();
        compilerEnvirons44.setStrictMode(true);
        compilerEnvirons44.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons50 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean51 = compilerEnvirons50.isReservedKeywordAsIdentifier();
        boolean boolean52 = compilerEnvirons50.getWarnTrailingComma();
        compilerEnvirons50.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet55 = compilerEnvirons50.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter56 = compilerEnvirons50.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory57 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons44, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory58 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons40, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory59 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons34, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory60 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons21, errorReporter56);
        com.google.javascript.rhino.head.Parser parser61 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter56);
        com.google.javascript.rhino.head.IRFactory iRFactory62 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        java.io.Reader reader63 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot66 = iRFactory62.parse(reader63, "ScriptNode", 1490422031);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertNotNull(errorReporter18);
        org.junit.Assert.assertNotNull(compilerEnvirons21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 170 + "'", int42 == 170);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 170 + "'", int43 == 170);
        org.junit.Assert.assertNotNull(compilerEnvirons44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strSet55);
        org.junit.Assert.assertNotNull(errorReporter56);
    }

    @Test
    public void test03959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03959");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        boolean boolean26 = astRoot1.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray27 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList28 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList28, symbolArray27);
        astRoot1.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList28);
        int int31 = astRoot1.getLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator33 = astRoot32.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        boolean boolean39 = comment38.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType42 = null;
        com.google.javascript.rhino.head.ast.Comment comment44 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType42, "");
        boolean boolean45 = comment44.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType48 = null;
        com.google.javascript.rhino.head.ast.Comment comment50 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType48, "");
        java.lang.String str52 = comment50.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray53 = new com.google.javascript.rhino.head.ast.Comment[] { comment38, comment44, comment50 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet54 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet54, commentArray53);
        astRoot32.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet54);
        boolean boolean57 = astRoot32.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray58 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList59 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList59, symbolArray58);
        astRoot32.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList59);
        com.google.javascript.rhino.head.Node node62 = astRoot32.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode63 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode64 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode63.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode64);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot32, (com.google.javascript.rhino.head.ast.Scope) scriptNode64);
        com.google.javascript.rhino.head.ast.AstRoot astRoot67 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator68 = astRoot67.new NodeIterator();
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor69 = astRoot67.iterator();
        astRoot67.setInStrictMode(true);
        com.google.javascript.rhino.head.Node node73 = new com.google.javascript.rhino.head.Node(136, (com.google.javascript.rhino.head.Node) astRoot1, (com.google.javascript.rhino.head.Node) astRoot32, (com.google.javascript.rhino.head.Node) astRoot67, (int) (byte) 0);
        astRoot32.setInStrictMode(false);
        astRoot32.setSourceName("                                                                                                        {\n                                                                                                        }\n");
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList78 = astRoot32.getChildScopes();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor79 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot32.visit(nodeVisitor79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(symbolArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "                                                                                                                                                                                                        " + "'", str52, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(symbolArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(nodeItor69);
        org.junit.Assert.assertNull(scopeList78);
    }

    @Test
    public void test03960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03960");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node((-643276093), (-1116244898));
        com.google.javascript.rhino.head.Node node3 = node2.getLastChild();
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test03961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03961");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((int) (short) -1, "                                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                                    }\n");
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test03962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03962");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        int int6 = scriptNode1.getLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList11 = scriptNode9.getChildScopes();
        java.lang.String str13 = scriptNode9.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode14.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        scriptNode15.setEncodedSourceEnd(11);
        int int19 = scriptNode9.compareTo((com.google.javascript.rhino.head.ast.AstNode) scriptNode15);
        scriptNode1.putProp(8, (java.lang.Object) scriptNode15);
        scriptNode1.setEndLineno(14);
        java.lang.String str23 = scriptNode1.toSource();
        com.google.javascript.rhino.head.Node node24 = scriptNode1.getLastChild();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(scopeList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1224437762 + "'", int19 == 1224437762);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{\n}\n" + "'", str23, "{\n}\n");
        org.junit.Assert.assertNull(node24);
    }

    @Test
    public void test03963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03963");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setReservedKeywordAsIdentifier(false);
        boolean boolean9 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateDebugInfo(false);
        compilerEnvirons0.setGenerateObserverCount(false);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion(1782152993);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: 1782152993");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03964");
        com.google.javascript.rhino.head.ast.Scope scope1 = new com.google.javascript.rhino.head.ast.Scope(603173706);
        com.google.javascript.rhino.head.ast.AstRoot astRoot2 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator3 = astRoot2.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType6 = null;
        com.google.javascript.rhino.head.ast.Comment comment8 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType6, "");
        boolean boolean9 = comment8.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType12 = null;
        com.google.javascript.rhino.head.ast.Comment comment14 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType12, "");
        boolean boolean15 = comment14.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType18 = null;
        com.google.javascript.rhino.head.ast.Comment comment20 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType18, "");
        java.lang.String str22 = comment20.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray23 = new com.google.javascript.rhino.head.ast.Comment[] { comment8, comment14, comment20 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet24 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet24, commentArray23);
        astRoot2.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet24);
        boolean boolean27 = astRoot2.isInStrictMode();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType30, "hi!");
        astRoot2.addComment(comment32);
        astRoot2.setEncodedSource("typeof");
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet37 = astRoot36.getComments();
        int int38 = astRoot36.getEndLineno();
        com.google.javascript.rhino.head.Node node40 = astRoot36.setType((int) (short) 10);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot2, (com.google.javascript.rhino.head.ast.Scope) astRoot36);
        astRoot2.setBaseLineno((int) (byte) 0);
        int int44 = astRoot2.depth();
        scope1.addChild((com.google.javascript.rhino.head.ast.AstNode) astRoot2);
        int int46 = scope1.getLength();
        int int47 = scope1.depth();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "                                                                                                                                                                                                        " + "'", str22, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(commentSet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-603173706) + "'", int46 == (-603173706));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test03965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03965");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        com.google.javascript.rhino.head.Node node6 = scriptNode2.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList10 = scriptNode8.getChildScopes();
        java.lang.String str12 = scriptNode8.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode14 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode14);
        java.lang.Object obj17 = scriptNode8.getProp((int) (short) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        java.lang.String str20 = scriptNode18.toSource((int) '4');
        java.lang.String str21 = scriptNode8.toStringTree(scriptNode18);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons22 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter23 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory24 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons22, errorReporter23);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode25 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode25.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode26);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList28 = scriptNode26.getChildScopes();
        int int29 = scriptNode26.getBaseLineno();
        int int30 = scriptNode26.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList34 = scriptNode32.getFunctions();
        scriptNode32.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope37 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode26.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode32, (com.google.javascript.rhino.head.Node) scope37);
        scriptNode32.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node41 = iRFactory24.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons42 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter43 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory44 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons42, errorReporter43);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode45 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode46 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode45.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode46);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList48 = scriptNode46.getChildScopes();
        int int49 = scriptNode46.getBaseLineno();
        int int50 = scriptNode46.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode51 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode52 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode51.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList54 = scriptNode52.getFunctions();
        scriptNode52.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope57 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode46.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode52, (com.google.javascript.rhino.head.Node) scope57);
        scriptNode52.setEncodedSourceEnd(18);
        com.google.javascript.rhino.head.Node node61 = iRFactory44.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode52);
        scriptNode32.setTop(scriptNode52);
        com.google.javascript.rhino.head.Node node64 = new com.google.javascript.rhino.head.Node(2, (com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scriptNode32, 10);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode66 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode8.addChildToFront((com.google.javascript.rhino.head.Node) scriptNode66);
        com.google.javascript.rhino.head.Node node68 = scriptNode8.getNext();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode70 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode71 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode70.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode71);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList73 = scriptNode71.getChildScopes();
        int int74 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.Node node75 = scriptNode71.getLastSibling();
        scriptNode71.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode78 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode79 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode78.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode79);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList81 = scriptNode79.getFunctions();
        scriptNode79.setPosition((int) (byte) 10);
        java.lang.String str84 = scriptNode71.toStringTree(scriptNode79);
        int int85 = scriptNode71.getBaseLineno();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode87 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode87.removeProp(10);
        com.google.javascript.rhino.head.ast.Scope scope90 = scriptNode87.getParentScope();
        scriptNode71.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode87);
        java.lang.Object obj92 = scriptNode87.getCompilerData();
        scriptNode8.putProp(12, (java.lang.Object) scriptNode87);
        int int94 = scriptNode8.getFunctionCount();
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(node6);
        org.junit.Assert.assertNull(scopeList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                        {\n                                                                                                        }\n" + "'", str20, "                                                                                                        {\n                                                                                                        }\n");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(scopeList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(functionNodeList34);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(scopeList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(functionNodeList54);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(scopeList73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(functionNodeList81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(scope90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test03966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03966");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons3 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean4 = compilerEnvirons3.isReservedKeywordAsIdentifier();
        compilerEnvirons3.setStrictMode(true);
        int int7 = compilerEnvirons3.getOptimizationLevel();
        java.lang.String[] strArray28 = new java.lang.String[] { "-1\tSCRIPT -1 1\n", "                    ", "35\t  COMMENT 36 2\n", "typeof", "$0", "                    ", "Comment", "                    {\n                    }\n", "35\t  COMMENT 36 2\n", "                      ", "                                                                                                        ", "136", "$0", "                    {\n                    }\n", "                                                                                                        ", "{\n}\n", "ScriptNode", "                      ", "                      ", "typeof" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        compilerEnvirons3.setActivationNames((java.util.Set<java.lang.String>) strSet29);
        com.google.javascript.rhino.head.ErrorReporter errorReporter32 = compilerEnvirons3.getErrorReporter();
        com.google.javascript.rhino.head.Parser parser33 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = parser33.parse("                                                                {\n                                                                }\n", "161", 209601021);
        java.io.Reader reader38 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.AstRoot astRoot41 = parser33.parse(reader38, "1275261773", (-476424842));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: parser reused");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(compilerEnvirons3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(errorReporter32);
        org.junit.Assert.assertNotNull(astRoot37);
    }

    @Test
    public void test03967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03967");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        boolean boolean12 = compilerEnvirons0.isRecordingComments();
        boolean boolean13 = compilerEnvirons0.isAllowMemberExprAsFunctionName();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons14 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean15 = compilerEnvirons14.isReservedKeywordAsIdentifier();
        int int16 = compilerEnvirons14.getLanguageVersion();
        compilerEnvirons14.setLanguageVersion((int) (byte) 100);
        boolean boolean19 = compilerEnvirons14.isXmlAvailable();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons20 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean21 = compilerEnvirons20.isReservedKeywordAsIdentifier();
        compilerEnvirons20.setStrictMode(true);
        compilerEnvirons20.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons26 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean27 = compilerEnvirons26.isReservedKeywordAsIdentifier();
        compilerEnvirons26.setStrictMode(true);
        compilerEnvirons26.setXmlAvailable(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons32 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean33 = compilerEnvirons32.isReservedKeywordAsIdentifier();
        boolean boolean34 = compilerEnvirons32.getWarnTrailingComma();
        compilerEnvirons32.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet37 = compilerEnvirons32.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter38 = compilerEnvirons32.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory39 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons26, errorReporter38);
        com.google.javascript.rhino.head.IRFactory iRFactory40 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons20, errorReporter38);
        com.google.javascript.rhino.head.Parser parser41 = new com.google.javascript.rhino.head.Parser(compilerEnvirons14, errorReporter38);
        com.google.javascript.rhino.head.Parser parser42 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0, errorReporter38);
        // The following exception was thrown during execution in test generation
        try {
            errorReporter38.error("1\tCOMMENT 1 0\n", "                                                                                                                                                                                                                                                                                                                                                    {\n                                                                                                                                                                                                                                                                                                                                                    }\n", (-923688614), "  0;\n  SCRIPT;\n  0;\n  1;\n", (-1121952777));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(compilerEnvirons14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 170 + "'", int16 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strSet37);
        org.junit.Assert.assertNotNull(errorReporter38);
    }

    @Test
    public void test03968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03968");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        com.google.javascript.rhino.head.Node node30 = astRoot0.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode35 = scriptNode32.getEnclosingFunction();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = functionNode35.hasConsistentReturnUsage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(functionNode35);
    }

    @Test
    public void test03969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03969");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        boolean boolean16 = compilerEnvirons0.isStrictMode();
        compilerEnvirons0.setAllowSharpComments(true);
        com.google.javascript.rhino.head.IRFactory iRFactory19 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test03970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03970");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        java.lang.String[] strArray21 = new java.lang.String[] { "$0", "                      ", "                                                                                                                                                                                                        ", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n", "ScriptNode", "AstRoot", "136" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        boolean boolean25 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean26 = compilerEnvirons0.isGenerateObserverCount();
        boolean boolean27 = compilerEnvirons0.isGeneratingSource();
        compilerEnvirons0.setGenerateObserverCount(true);
        com.google.javascript.rhino.head.Context context30 = null;
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.initFromContext(context30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test03971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03971");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType2, "hi!");
        java.lang.String str6 = comment4.toSource(5);
        java.lang.String str8 = comment4.makeIndent(3);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        int int16 = scriptNode11.getLineno();
        com.google.javascript.rhino.head.ast.Scope scope19 = new com.google.javascript.rhino.head.ast.Scope(5, (int) '#');
        com.google.javascript.rhino.head.ast.AstRoot astRoot20 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator21 = astRoot20.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType24 = null;
        com.google.javascript.rhino.head.ast.Comment comment26 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType24, "");
        boolean boolean27 = comment26.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType30 = null;
        com.google.javascript.rhino.head.ast.Comment comment32 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType30, "");
        boolean boolean33 = comment32.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType36 = null;
        com.google.javascript.rhino.head.ast.Comment comment38 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType36, "");
        java.lang.String str40 = comment38.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray41 = new com.google.javascript.rhino.head.ast.Comment[] { comment26, comment32, comment38 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet42 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet42, commentArray41);
        astRoot20.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet42);
        boolean boolean45 = astRoot20.isInStrictMode();
        com.google.javascript.rhino.head.ast.AstNode astNode46 = astRoot20.getParent();
        astRoot20.setEndLineno((int) (short) 0);
        com.google.javascript.rhino.head.Node node50 = new com.google.javascript.rhino.head.Node(0, (com.google.javascript.rhino.head.Node) scriptNode11, (com.google.javascript.rhino.head.Node) scope19, (com.google.javascript.rhino.head.Node) astRoot20, 6);
        astRoot20.setLineno((int) '#');
        com.google.javascript.rhino.head.Token.CommentType commentType55 = null;
        com.google.javascript.rhino.head.ast.Comment comment57 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType55, "");
        com.google.javascript.rhino.head.Token.CommentType commentType58 = comment57.getCommentType();
        int int59 = comment57.depth();
        astRoot20.addComment(comment57);
        com.google.javascript.rhino.head.Token.CommentType commentType61 = null;
        comment57.setCommentType(commentType61);
        comment4.setJsDocNode(comment57);
        com.google.javascript.rhino.head.Token.CommentType commentType64 = null;
        comment4.setCommentType(commentType64);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons66 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean67 = compilerEnvirons66.isReservedKeywordAsIdentifier();
        boolean boolean68 = compilerEnvirons66.getWarnTrailingComma();
        compilerEnvirons66.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet71 = compilerEnvirons66.getActivationNames();
        compilerEnvirons66.setGenerateDebugInfo(true);
        compilerEnvirons66.setReservedKeywordAsIdentifier(false);
        com.google.javascript.rhino.head.IRFactory iRFactory76 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons66);
        com.google.javascript.rhino.head.ast.AstRoot astRoot80 = iRFactory76.parse("-1\tSCRIPT -1 1\n", "  {\n  }\n", 8);
        java.lang.String str81 = comment4.toStringTree((com.google.javascript.rhino.head.ast.ScriptNode) astRoot80);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral82 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot80.addRegExp(regExpLiteral82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "          hi!" + "'", str6, "          hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "      " + "'", str8, "      ");
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "                                                                                                                                                                                                        " + "'", str40, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(astNode46);
        org.junit.Assert.assertNull(commentType58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(compilerEnvirons66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(strSet71);
        org.junit.Assert.assertNotNull(astRoot80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test03972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03972");
        com.google.javascript.rhino.head.Token.CommentType commentType3 = null;
        com.google.javascript.rhino.head.ast.Comment comment5 = new com.google.javascript.rhino.head.ast.Comment(11, 36, commentType3, "Comment");
        comment5.setLineno(1936891202);
        com.google.javascript.rhino.head.ast.Scope scope8 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator9 = scope8.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        scope8.setTop(scriptNode11);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor14 = scope8.iterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode15 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode15.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode16);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList18 = scriptNode16.getChildScopes();
        int int19 = scriptNode16.getBaseLineno();
        com.google.javascript.rhino.head.Node node20 = scriptNode16.getLastSibling();
        int int21 = scriptNode16.getEncodedSourceEnd();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator22 = scriptNode16.new NodeIterator();
        java.lang.Object obj23 = scriptNode16.getCompilerData();
        scope8.addChildScope((com.google.javascript.rhino.head.ast.Scope) scriptNode16);
        com.google.javascript.rhino.head.Node node26 = new com.google.javascript.rhino.head.Node((-34), (com.google.javascript.rhino.head.Node) comment5, (com.google.javascript.rhino.head.Node) scope8, 136);
        node26.removeChildren();
        org.junit.Assert.assertNotNull(nodeSpliterator9);
        org.junit.Assert.assertNotNull(nodeItor14);
        org.junit.Assert.assertNull(scopeList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test03973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03973");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setOptimizationLevel((int) (short) 1);
        compilerEnvirons0.setAllowSharpComments(true);
        boolean boolean15 = compilerEnvirons0.getAllowSharpComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        int int17 = compilerEnvirons0.getLanguageVersion();
        com.google.javascript.rhino.head.Parser parser18 = new com.google.javascript.rhino.head.Parser(compilerEnvirons0);
        boolean boolean19 = compilerEnvirons0.isRecordingComments();
        boolean boolean20 = compilerEnvirons0.isIdeMode();
        boolean boolean21 = compilerEnvirons0.isRecordingLocalJsDocComments();
        boolean boolean22 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setRecordingComments(true);
        boolean boolean25 = compilerEnvirons0.reportWarningAsError();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 170 + "'", int17 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test03974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03974");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString(8, "                                                {\n                                                }\n");
        boolean boolean3 = node2.hasConsistentReturnUsage();
        org.junit.Assert.assertNotNull(node2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test03975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03975");
        com.google.javascript.rhino.head.Node node2 = com.google.javascript.rhino.head.Node.newString((-1171321573), "                                                ");
        node2.removeChildren();
        org.junit.Assert.assertNotNull(node2);
    }

    @Test
    public void test03976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03976");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        int int2 = compilerEnvirons0.getLanguageVersion();
        compilerEnvirons0.setLanguageVersion((int) (byte) 100);
        compilerEnvirons0.setXmlAvailable(false);
        int int7 = compilerEnvirons0.getOptimizationLevel();
        com.google.javascript.rhino.head.IRFactory iRFactory8 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        boolean boolean9 = compilerEnvirons0.isGeneratingSource();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 170 + "'", int2 == 170);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03977");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons0.isGenerateDebugInfo();
        java.lang.String[] strArray21 = new java.lang.String[] { "$0", "                      ", "                                                                                                                                                                                                        ", "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n", "ScriptNode", "AstRoot", "136" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setXmlAvailable(false);
        // The following exception was thrown during execution in test generation
        try {
            compilerEnvirons0.setLanguageVersion((-1034592013));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Bad language version: -1034592013");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test03978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03978");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.AstRoot astRoot6 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int7 = astRoot6.getBaseLineno();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) astRoot6);
        scriptNode1.setRelative(989140197);
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.Scope scope11 = com.google.javascript.rhino.head.ast.Scope.splitScope((com.google.javascript.rhino.head.ast.Scope) scriptNode1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: com.google.javascript.rhino.head.ast.Scope cannot be cast to com.google.javascript.rhino.head.ast.ScriptNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test03979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03979");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList8 = scriptNode6.getChildScopes();
        int int9 = scriptNode6.getBaseLineno();
        com.google.javascript.rhino.head.Node node10 = scriptNode6.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode11.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList14 = scriptNode12.getChildScopes();
        java.lang.String str16 = scriptNode12.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode6.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode12, (com.google.javascript.rhino.head.Node) scriptNode18);
        int int20 = scriptNode12.getType();
        scriptNode1.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode12);
        int int22 = scriptNode12.getParamCount();
        com.google.javascript.rhino.head.Node node23 = scriptNode12.getLastSibling();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor24 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode12.visit(nodeVisitor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(scopeList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(scopeList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 136 + "'", int20 == 136);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node23);
    }

    @Test
    public void test03980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03980");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode2.flattenSymbolTable(true);
        scriptNode2.setBounds((-1116244898), 3);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator8 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator9 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator10 = positionComparator8.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator9);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator11 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator12 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator13 = positionComparator11.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator12);
        com.google.javascript.rhino.head.ast.AstRoot astRoot14 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int15 = astRoot14.getBaseLineno();
        java.lang.String str16 = astRoot14.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator18 = astRoot17.new NodeIterator();
        int int19 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot14, (com.google.javascript.rhino.head.ast.AstNode) astRoot17);
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator20 = positionComparator8.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator12);
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        java.lang.String str27 = comment25.toSource(100);
        java.util.Iterator<com.google.javascript.rhino.head.Node> nodeItor28 = comment25.iterator();
        com.google.javascript.rhino.head.Token.CommentType commentType29 = null;
        comment25.setCommentType(commentType29);
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator31 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        com.google.javascript.rhino.head.ast.AstNode.PositionComparator positionComparator32 = new com.google.javascript.rhino.head.ast.AstNode.PositionComparator();
        java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode> astNodeComparator33 = positionComparator31.thenComparing((java.util.Comparator<com.google.javascript.rhino.head.ast.AstNode>) positionComparator32);
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int35 = astRoot34.getBaseLineno();
        java.lang.String str36 = astRoot34.debugPrint();
        com.google.javascript.rhino.head.ast.AstRoot astRoot37 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator38 = astRoot37.new NodeIterator();
        int int39 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) astRoot34, (com.google.javascript.rhino.head.ast.AstNode) astRoot37);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode40.putIntProp((int) (short) 1, 1);
        java.lang.String str44 = scriptNode40.getEncodedSource();
        com.google.javascript.rhino.head.ast.Scope scope45 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator46 = scope45.spliterator();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode47 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode48 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode47.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode48);
        scope45.setTop(scriptNode48);
        scope45.setLineno((int) (short) -1);
        int int53 = positionComparator32.compare((com.google.javascript.rhino.head.ast.AstNode) scriptNode40, (com.google.javascript.rhino.head.ast.AstNode) scope45);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode54 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode55 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode54.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode55);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList57 = scriptNode55.getChildScopes();
        int int58 = scriptNode55.getBaseLineno();
        int int59 = scriptNode55.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode60 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode61 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode60.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode61);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList63 = scriptNode61.getFunctions();
        scriptNode61.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope66 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode55.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode61, (com.google.javascript.rhino.head.Node) scope66);
        scriptNode61.setEncodedSource("-1\tSCRIPT -1 1\n");
        java.lang.String str70 = scriptNode40.toStringTree(scriptNode61);
        int int71 = positionComparator12.compare((com.google.javascript.rhino.head.ast.AstNode) comment25, (com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        scriptNode2.addChild((com.google.javascript.rhino.head.ast.AstNode) comment25);
        com.google.javascript.rhino.head.Node node74 = new com.google.javascript.rhino.head.Node((int) (byte) 1, (com.google.javascript.rhino.head.Node) scriptNode2, 0);
        com.google.javascript.rhino.head.ast.RegExpLiteral regExpLiteral75 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode2.addRegExp(regExpLiteral75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(astNodeComparator10);
        org.junit.Assert.assertNotNull(astNodeComparator13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str16, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(astNodeComparator20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                                                                                                                        " + "'", str27, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(nodeItor28);
        org.junit.Assert.assertNotNull(astNodeComparator33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "-1\tSCRIPT -1 1\n" + "'", str36, "-1\tSCRIPT -1 1\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(nodeSpliterator46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(scopeList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(functionNodeList63);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
    }

    @Test
    public void test03981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03981");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList3 = scriptNode1.getFunctions();
        scriptNode1.setEncodedSourceStart((int) 'a');
        java.lang.String str6 = scriptNode1.shortName();
        com.google.javascript.rhino.head.ast.AstRoot astRoot7 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator8 = astRoot7.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        boolean boolean20 = comment19.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType23, "");
        java.lang.String str27 = comment25.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray28 = new com.google.javascript.rhino.head.ast.Comment[] { comment13, comment19, comment25 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet29 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet29, commentArray28);
        astRoot7.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet29);
        boolean boolean32 = astRoot7.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray33 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList34, symbolArray33);
        astRoot7.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList34);
        java.lang.String str38 = astRoot7.toSource((-1));
        scriptNode1.target = astRoot7;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode1.setEndLineno((-2029807194));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ScriptNode" + "'", str6, "ScriptNode");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "                                                                                                                                                                                                        " + "'", str27, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(symbolArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test03982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03982");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode5 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode5.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode6);
        scriptNode6.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode10 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode11 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode10.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode11);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList13 = scriptNode11.getChildScopes();
        int int14 = scriptNode11.getBaseLineno();
        com.google.javascript.rhino.head.Node node15 = scriptNode11.getLastSibling();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode16 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode17 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode16.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList19 = scriptNode17.getChildScopes();
        java.lang.String str21 = scriptNode17.makeIndent((int) (byte) -1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode23 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode11.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode17, (com.google.javascript.rhino.head.Node) scriptNode23);
        int int25 = scriptNode17.getType();
        scriptNode6.setParent((com.google.javascript.rhino.head.ast.AstNode) scriptNode17);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode27.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode28);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList30 = scriptNode28.getChildScopes();
        int int31 = scriptNode28.getBaseLineno();
        com.google.javascript.rhino.head.Node node32 = scriptNode28.getLastSibling();
        scriptNode28.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode35 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode36 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode35.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode36);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList38 = scriptNode36.getFunctions();
        scriptNode36.setPosition((int) (byte) 10);
        java.lang.String str41 = scriptNode28.toStringTree(scriptNode36);
        int int42 = scriptNode28.getBaseLineno();
        scriptNode28.setEncodedSourceStart((int) '4');
        scriptNode17.addChildrenToFront((com.google.javascript.rhino.head.Node) scriptNode28);
        scriptNode1.setCompilerData((java.lang.Object) scriptNode28);
        java.lang.String str47 = scriptNode1.getJsDoc();
        java.lang.Object obj49 = scriptNode1.getProp((-748307395));
        com.google.javascript.rhino.head.ast.Scope scope51 = scriptNode1.getDefiningScope("          hi!");
        org.junit.Assert.assertNull(scopeList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(scopeList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 136 + "'", int25 == 136);
        org.junit.Assert.assertNull(scopeList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(functionNodeList38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(scope51);
    }

    @Test
    public void test03983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03983");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = null;
        com.google.javascript.rhino.head.ErrorReporter errorReporter1 = null;
        com.google.javascript.rhino.head.IRFactory iRFactory2 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0, errorReporter1);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode3 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode4 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode3.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList6 = scriptNode4.getFunctions();
        scriptNode4.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.Node node9 = iRFactory2.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode4);
        java.lang.String str10 = scriptNode4.getSourceName();
        int int11 = scriptNode4.getRegexpCount();
        java.lang.Object obj12 = scriptNode4.getCompilerData();
        java.lang.String str13 = scriptNode4.getSourceName();
        scriptNode4.setSourceName("                                                    hi!");
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.ast.FunctionNode functionNode17 = scriptNode4.getFunctionNode(1891424362);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(functionNodeList6);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test03984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03984");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        java.lang.String str2 = astRoot0.getSourceName();
        boolean boolean3 = astRoot0.hasChildren();
        com.google.javascript.rhino.head.Node node4 = astRoot0.getLastSibling();
        java.lang.String str5 = node4.toString();
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "136" + "'", str5, "136");
    }

    @Test
    public void test03985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03985");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator2 = astRoot1.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType5 = null;
        com.google.javascript.rhino.head.ast.Comment comment7 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType5, "");
        boolean boolean8 = comment7.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType11 = null;
        com.google.javascript.rhino.head.ast.Comment comment13 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType11, "");
        boolean boolean14 = comment13.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType17 = null;
        com.google.javascript.rhino.head.ast.Comment comment19 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType17, "");
        java.lang.String str21 = comment19.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray22 = new com.google.javascript.rhino.head.ast.Comment[] { comment7, comment13, comment19 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet23 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet23, commentArray22);
        astRoot1.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet23);
        com.google.javascript.rhino.head.Token.CommentType commentType28 = null;
        com.google.javascript.rhino.head.ast.Comment comment30 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType28, "");
        boolean boolean31 = comment30.hasSideEffects();
        int int32 = comment30.getLineno();
        com.google.javascript.rhino.head.Node node34 = comment30.setType(18);
        boolean boolean35 = comment30.hasSideEffects();
        astRoot1.addComment(comment30);
        com.google.javascript.rhino.head.Node node38 = new com.google.javascript.rhino.head.Node(14, (com.google.javascript.rhino.head.Node) comment30, (-1));
        comment30.setPosition(842975161);
        java.lang.String str42 = comment30.toSource(136);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "                                                                                                                                                                                                        " + "'", str21, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "                                                                                                                                                                                                                                                                                " + "'", str42, "                                                                                                                                                                                                                                                                                ");
    }

    @Test
    public void test03986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03986");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int1 = astRoot0.getParamCount();
        java.lang.String str2 = astRoot0.getNextTempName();
        int int3 = astRoot0.getEncodedSourceStart();
        java.lang.String str4 = astRoot0.shortName();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet5 = astRoot0.getComments();
        boolean boolean6 = astRoot0.hasChildren();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "$0" + "'", str2, "$0");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AstRoot" + "'", str4, "AstRoot");
        org.junit.Assert.assertNull(commentSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03987");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.getWarnTrailingComma();
        compilerEnvirons0.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet5 = compilerEnvirons0.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter6 = compilerEnvirons0.getErrorReporter();
        java.lang.String[] strArray12 = new java.lang.String[] { "-1\tSCRIPT -1 1\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n1\t  COMMENT 2 0\n", "                                ", "typeof", "                                                                                                                                                                                                        ", "{\n}\n" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet13);
        com.google.javascript.rhino.head.ErrorReporter errorReporter16 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
        boolean boolean19 = compilerEnvirons0.getWarnTrailingComma();
        com.google.javascript.rhino.head.IRFactory iRFactory20 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.AstNode astNode21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.google.javascript.rhino.head.Node node22 = iRFactory20.transform(astNode21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNotNull(errorReporter6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(errorReporter16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03988");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        int int35 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastSibling();
        scriptNode32.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode40.getFunctions();
        scriptNode40.setPosition((int) (byte) 10);
        java.lang.String str45 = scriptNode32.toStringTree(scriptNode40);
        int int46 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap48 = scriptNode32.getSymbolTable();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator49 = scriptNode32.new NodeIterator();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            scriptNode32.visit(nodeVisitor50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test03989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03989");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet2 = astRoot1.getComments();
        int int3 = astRoot1.getEndLineno();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor4 = null;
        astRoot1.visitComments(nodeVisitor4);
        com.google.javascript.rhino.head.Node node6 = astRoot1.getFirstChild();
        com.google.javascript.rhino.head.ast.Scope scope7 = astRoot1.getEnclosingScope();
        astRoot1.setEncodedSourceStart(23);
        java.lang.String str11 = astRoot1.toSource(95442629);
        com.google.javascript.rhino.head.Token.CommentType commentType14 = null;
        com.google.javascript.rhino.head.ast.Comment comment16 = new com.google.javascript.rhino.head.ast.Comment((int) '#', 2, commentType14, "hi!");
        java.lang.String str18 = comment16.toSource(5);
        astRoot1.setJsDocNode(comment16);
        com.google.javascript.rhino.head.Token.CommentType commentType22 = null;
        com.google.javascript.rhino.head.ast.Comment comment24 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType22, "");
        java.lang.String str26 = comment24.toSource(100);
        java.lang.String str27 = comment24.getValue();
        com.google.javascript.rhino.head.Node node28 = new com.google.javascript.rhino.head.Node((-476424842), (com.google.javascript.rhino.head.Node) comment16, (com.google.javascript.rhino.head.Node) comment24);
        com.google.javascript.rhino.head.Token.CommentType commentType31 = null;
        com.google.javascript.rhino.head.ast.Comment comment33 = new com.google.javascript.rhino.head.ast.Comment((-1116244898), 0, commentType31, "9\t  SCRIPT 10 1\n");
        com.google.javascript.rhino.head.ast.AstRoot astRoot34 = comment33.getAstRoot();
        comment16.setParent((com.google.javascript.rhino.head.ast.AstNode) astRoot34);
        org.junit.Assert.assertNull(commentSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(scope7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "          hi!" + "'", str18, "          hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "                                                                                                                                                                                                        " + "'", str26, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(astRoot34);
    }

    @Test
    public void test03990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03990");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        boolean boolean10 = compilerEnvirons0.isRecordingLocalJsDocComments();
        com.google.javascript.rhino.head.ErrorReporter errorReporter11 = compilerEnvirons0.getErrorReporter();
        compilerEnvirons0.setGenerateObserverCount(true);
        boolean boolean14 = compilerEnvirons0.isRecordingLocalJsDocComments();
        compilerEnvirons0.setIdeMode(true);
        boolean boolean17 = compilerEnvirons0.getAllowSharpComments();
        int int18 = compilerEnvirons0.getLanguageVersion();
        boolean boolean19 = compilerEnvirons0.isIdeMode();
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(errorReporter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 170 + "'", int18 == 170);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03991");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode2 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode1.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode2);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList4 = scriptNode2.getChildScopes();
        int int5 = scriptNode2.getBaseLineno();
        int int6 = scriptNode2.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode7 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode7.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode8);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList10 = scriptNode8.getFunctions();
        scriptNode8.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope13 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode2.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode8, (com.google.javascript.rhino.head.Node) scope13);
        scriptNode8.setLineno((int) 'a');
        com.google.javascript.rhino.head.Node node18 = new com.google.javascript.rhino.head.Node((-451814955), (com.google.javascript.rhino.head.Node) scriptNode8, 7);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons19 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray25 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        compilerEnvirons19.setActivationNames((java.util.Set<java.lang.String>) strSet26);
        boolean boolean29 = compilerEnvirons19.isGenerateDebugInfo();
        boolean boolean30 = compilerEnvirons19.isReservedKeywordAsIdentifier();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons31 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean32 = compilerEnvirons31.isReservedKeywordAsIdentifier();
        boolean boolean33 = compilerEnvirons31.getWarnTrailingComma();
        compilerEnvirons31.setXmlAvailable(true);
        java.util.Set<java.lang.String> strSet36 = compilerEnvirons31.getActivationNames();
        com.google.javascript.rhino.head.ErrorReporter errorReporter37 = compilerEnvirons31.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory38 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons19, errorReporter37);
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = iRFactory38.parse("9\t  SCRIPT 8 1\n", "                                                                {\n                                                                }\n", 9);
        scriptNode8.replaceWith((com.google.javascript.rhino.head.ast.Scope) astRoot42);
        org.junit.Assert.assertNull(scopeList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(functionNodeList10);
        org.junit.Assert.assertNotNull(compilerEnvirons19);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strSet36);
        org.junit.Assert.assertNotNull(errorReporter37);
        org.junit.Assert.assertNotNull(astRoot42);
    }

    @Test
    public void test03992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03992");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator1 = astRoot0.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType4 = null;
        com.google.javascript.rhino.head.ast.Comment comment6 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType4, "");
        boolean boolean7 = comment6.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType10 = null;
        com.google.javascript.rhino.head.ast.Comment comment12 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType10, "");
        boolean boolean13 = comment12.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType16 = null;
        com.google.javascript.rhino.head.ast.Comment comment18 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType16, "");
        java.lang.String str20 = comment18.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray21 = new com.google.javascript.rhino.head.ast.Comment[] { comment6, comment12, comment18 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet22 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet22, commentArray21);
        astRoot0.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet22);
        boolean boolean25 = astRoot0.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray26 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList27 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList27, symbolArray26);
        astRoot0.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList27);
        int int30 = astRoot0.getEncodedSourceStart();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode31 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode32 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode31.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode32);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList34 = scriptNode32.getChildScopes();
        int int35 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.Node node36 = scriptNode32.getLastSibling();
        scriptNode32.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode39 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode40 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode39.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode40);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList42 = scriptNode40.getFunctions();
        scriptNode40.setPosition((int) (byte) 10);
        java.lang.String str45 = scriptNode32.toStringTree(scriptNode40);
        int int46 = scriptNode32.getBaseLineno();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot0, (com.google.javascript.rhino.head.ast.Scope) scriptNode32);
        java.lang.String str49 = astRoot0.toSource(15);
        boolean boolean50 = astRoot0.isInStrictMode();
        java.lang.String str52 = astRoot0.toSource(41);
        astRoot0.setPosition((int) (short) -1);
        com.google.javascript.rhino.head.ast.Scope scope55 = new com.google.javascript.rhino.head.ast.Scope();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator56 = scope55.spliterator();
        com.google.javascript.rhino.head.ast.AstRoot astRoot57 = scope55.getAstRoot();
        com.google.javascript.rhino.head.ast.AstRoot astRoot58 = scope55.getAstRoot();
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.addChildScope((com.google.javascript.rhino.head.ast.Scope) astRoot58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "                                                                                                                                                                                                        " + "'", str20, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(symbolArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(scopeList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertNotNull(functionNodeList42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(nodeSpliterator56);
        org.junit.Assert.assertNull(astRoot57);
        org.junit.Assert.assertNull(astRoot58);
    }

    @Test
    public void test03993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03993");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray6 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet7);
        com.google.javascript.rhino.head.ErrorReporter errorReporter10 = compilerEnvirons0.getErrorReporter();
        com.google.javascript.rhino.head.IRFactory iRFactory11 = new com.google.javascript.rhino.head.IRFactory(compilerEnvirons0);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode12 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode13 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode12.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode13);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList15 = scriptNode13.getChildScopes();
        int int16 = scriptNode13.getBaseLineno();
        int int17 = scriptNode13.getParamCount();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode18 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode19 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode18.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode19);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList21 = scriptNode19.getFunctions();
        scriptNode19.setPosition((int) (byte) 10);
        com.google.javascript.rhino.head.ast.Scope scope24 = new com.google.javascript.rhino.head.ast.Scope();
        scriptNode13.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode19, (com.google.javascript.rhino.head.Node) scope24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode26 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode27 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode26.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList29 = scriptNode27.getChildScopes();
        int int30 = scriptNode27.getBaseLineno();
        com.google.javascript.rhino.head.Node node31 = scriptNode27.getLastSibling();
        com.google.javascript.rhino.head.ast.AstRoot astRoot32 = scriptNode27.getAstRoot();
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) scriptNode13, (com.google.javascript.rhino.head.ast.Scope) scriptNode27);
        com.google.javascript.rhino.head.Node node34 = iRFactory11.transform((com.google.javascript.rhino.head.ast.AstNode) scriptNode27);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode37 = new com.google.javascript.rhino.head.ast.ScriptNode(0);
        scriptNode37.flattenSymbolTable(true);
        com.google.javascript.rhino.head.Node node41 = new com.google.javascript.rhino.head.Node(538062289, (com.google.javascript.rhino.head.Node) scriptNode37, (-603115504));
        com.google.javascript.rhino.head.ast.AstRoot astRoot42 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator43 = astRoot42.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        boolean boolean55 = comment54.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType58 = null;
        com.google.javascript.rhino.head.ast.Comment comment60 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType58, "");
        java.lang.String str62 = comment60.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray63 = new com.google.javascript.rhino.head.ast.Comment[] { comment48, comment54, comment60 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet64 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet64, commentArray63);
        astRoot42.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet64);
        boolean boolean67 = astRoot42.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray68 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList69 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList69, symbolArray68);
        astRoot42.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList69);
        com.google.javascript.rhino.head.Node node72 = astRoot42.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode73 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode74 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode73.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode74);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot42, (com.google.javascript.rhino.head.ast.Scope) scriptNode74);
        com.google.javascript.rhino.head.ast.FunctionNode functionNode77 = scriptNode74.getEnclosingFunction();
        scriptNode74.setEndLineno(6);
        java.lang.Object obj80 = scriptNode74.getCompilerData();
        int int81 = scriptNode74.getRegexpCount();
        com.google.javascript.rhino.head.ast.Scope scope83 = new com.google.javascript.rhino.head.ast.Scope((int) 'a');
        scriptNode37.addChildAfter((com.google.javascript.rhino.head.Node) scriptNode74, (com.google.javascript.rhino.head.Node) scope83);
        // The following exception was thrown during execution in test generation
        try {
            scriptNode27.setJumpStatement((com.google.javascript.rhino.head.ast.Jump) scope83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(errorReporter10);
        org.junit.Assert.assertNull(scopeList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(functionNodeList21);
        org.junit.Assert.assertNull(scopeList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(astRoot32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "                                                                                                                                                                                                        " + "'", str62, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(symbolArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(functionNode77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test03994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03994");
        com.google.javascript.rhino.head.ast.AstRoot astRoot1 = new com.google.javascript.rhino.head.ast.AstRoot();
        int int2 = astRoot1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = new com.google.javascript.rhino.head.Node(100, (int) (byte) 1);
        com.google.javascript.rhino.head.Node node6 = new com.google.javascript.rhino.head.Node((int) (short) 100, (com.google.javascript.rhino.head.Node) astRoot1, node5);
        int int7 = astRoot1.getType();
        int int8 = astRoot1.getFunctionCount();
        int int9 = astRoot1.getRegexpCount();
        astRoot1.checkParentLinks();
        astRoot1.setLength(36);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 136 + "'", int7 == 136);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03995");
        com.google.javascript.rhino.head.Token.CommentType commentType2 = null;
        com.google.javascript.rhino.head.ast.Comment comment4 = new com.google.javascript.rhino.head.ast.Comment(1782152993, (-527128964), commentType2, "                                                    ");
        com.google.javascript.rhino.head.Node node5 = comment4.getNext();
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test03996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03996");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList3 = scriptNode1.getChildScopes();
        int int4 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.Node node5 = scriptNode1.getLastSibling();
        scriptNode1.setPosition(24);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode8 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode9 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode8.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode9);
        java.util.List<com.google.javascript.rhino.head.ast.FunctionNode> functionNodeList11 = scriptNode9.getFunctions();
        scriptNode9.setPosition((int) (byte) 10);
        java.lang.String str14 = scriptNode1.toStringTree(scriptNode9);
        int int15 = scriptNode1.getBaseLineno();
        com.google.javascript.rhino.head.ast.AstRoot astRoot17 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet18 = astRoot17.getComments();
        com.google.javascript.rhino.head.ast.Symbol symbol20 = astRoot17.getSymbol("                                                                                                                                                                                                        ");
        com.google.javascript.rhino.head.Token.CommentType commentType23 = null;
        com.google.javascript.rhino.head.ast.Comment comment25 = new com.google.javascript.rhino.head.ast.Comment(16, (int) (byte) 0, commentType23, "hi!");
        astRoot17.addChildrenToFront((com.google.javascript.rhino.head.Node) comment25);
        boolean boolean27 = astRoot17.hasSideEffects();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode28 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode29 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode28.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode29);
        java.util.List<com.google.javascript.rhino.head.ast.Scope> scopeList31 = scriptNode29.getChildScopes();
        int int32 = scriptNode29.getBaseLineno();
        int int33 = scriptNode29.getParamCount();
        java.util.List<com.google.javascript.rhino.head.ast.Symbol> symbolList34 = scriptNode29.getSymbols();
        int int35 = scriptNode29.getPosition();
        com.google.javascript.rhino.head.ast.AstRoot astRoot36 = new com.google.javascript.rhino.head.ast.AstRoot();
        com.google.javascript.rhino.head.Node.NodeIterator nodeIterator37 = astRoot36.new NodeIterator();
        com.google.javascript.rhino.head.Token.CommentType commentType40 = null;
        com.google.javascript.rhino.head.ast.Comment comment42 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType40, "");
        boolean boolean43 = comment42.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType46 = null;
        com.google.javascript.rhino.head.ast.Comment comment48 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType46, "");
        boolean boolean49 = comment48.hasSideEffects();
        com.google.javascript.rhino.head.Token.CommentType commentType52 = null;
        com.google.javascript.rhino.head.ast.Comment comment54 = new com.google.javascript.rhino.head.ast.Comment((int) (byte) 1, 0, commentType52, "");
        java.lang.String str56 = comment54.toSource(100);
        com.google.javascript.rhino.head.ast.Comment[] commentArray57 = new com.google.javascript.rhino.head.ast.Comment[] { comment42, comment48, comment54 };
        java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment> commentSet58 = new java.util.TreeSet<com.google.javascript.rhino.head.ast.Comment>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Comment>) commentSet58, commentArray57);
        astRoot36.setComments((java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment>) commentSet58);
        boolean boolean61 = astRoot36.isInStrictMode();
        com.google.javascript.rhino.head.ast.Symbol[] symbolArray62 = new com.google.javascript.rhino.head.ast.Symbol[] {};
        java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol> symbolList63 = new java.util.ArrayList<com.google.javascript.rhino.head.ast.Symbol>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.google.javascript.rhino.head.ast.Symbol>) symbolList63, symbolArray62);
        astRoot36.setSymbols((java.util.List<com.google.javascript.rhino.head.ast.Symbol>) symbolList63);
        com.google.javascript.rhino.head.Node node66 = astRoot36.getFirstChild();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode67 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode68 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode67.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode68);
        com.google.javascript.rhino.head.ast.Scope.joinScopes((com.google.javascript.rhino.head.ast.Scope) astRoot36, (com.google.javascript.rhino.head.ast.Scope) scriptNode68);
        com.google.javascript.rhino.head.Node node72 = new com.google.javascript.rhino.head.Node(19, (com.google.javascript.rhino.head.Node) astRoot17, (com.google.javascript.rhino.head.Node) scriptNode29, (com.google.javascript.rhino.head.Node) astRoot36, (int) (byte) 1);
        scriptNode1.setParentScope((com.google.javascript.rhino.head.ast.Scope) astRoot36);
        com.google.javascript.rhino.head.ast.Scope scope74 = scriptNode1.getParentScope();
        scope74.clearParentScope();
        org.junit.Assert.assertNull(scopeList3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(node5);
        org.junit.Assert.assertNotNull(functionNodeList11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(commentSet18);
        org.junit.Assert.assertNull(symbol20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(scopeList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(symbolList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "                                                                                                                                                                                                        " + "'", str56, "                                                                                                                                                                                                        ");
        org.junit.Assert.assertNotNull(commentArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(symbolArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(scope74);
    }

    @Test
    public void test03997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03997");
        com.google.javascript.rhino.head.ast.AstRoot astRoot0 = new com.google.javascript.rhino.head.ast.AstRoot();
        java.util.SortedSet<com.google.javascript.rhino.head.ast.Comment> commentSet1 = astRoot0.getComments();
        java.lang.String str2 = astRoot0.getSourceName();
        boolean boolean3 = astRoot0.hasChildren();
        com.google.javascript.rhino.head.Node node4 = astRoot0.getLastSibling();
        java.util.Spliterator<com.google.javascript.rhino.head.Node> nodeSpliterator5 = astRoot0.spliterator();
        com.google.javascript.rhino.head.ast.AstNode astNode6 = astRoot0.getParent();
        com.google.javascript.rhino.head.ast.NodeVisitor nodeVisitor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            astRoot0.visit(nodeVisitor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(commentSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(node4);
        org.junit.Assert.assertNotNull(nodeSpliterator5);
        org.junit.Assert.assertNull(astNode6);
    }

    @Test
    public void test03998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03998");
        com.google.javascript.rhino.head.Node node2 = new com.google.javascript.rhino.head.Node(1617059566, 22);
    }

    @Test
    public void test03999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03999");
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons0 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean1 = compilerEnvirons0.isReservedKeywordAsIdentifier();
        boolean boolean2 = compilerEnvirons0.isIdeMode();
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        boolean boolean5 = compilerEnvirons0.isGenerateDebugInfo();
        compilerEnvirons0.setRecordingLocalJsDocComments(true);
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons8 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        boolean boolean9 = compilerEnvirons8.isReservedKeywordAsIdentifier();
        boolean boolean10 = compilerEnvirons8.getWarnTrailingComma();
        boolean boolean11 = compilerEnvirons8.isRecordingComments();
        boolean boolean12 = compilerEnvirons8.getWarnTrailingComma();
        boolean boolean13 = compilerEnvirons8.isRecordingLocalJsDocComments();
        boolean boolean14 = compilerEnvirons8.isIdeMode();
        com.google.javascript.rhino.head.CompilerEnvirons compilerEnvirons15 = com.google.javascript.rhino.head.CompilerEnvirons.ideEnvirons();
        java.lang.String[] strArray21 = new java.lang.String[] { "                                                                                                        {\n                                                                                                        }\n", "                                                                                                        {\n                                                                                                        }\n", "", "-1\tSCRIPT -1 1\n", "-1\tSCRIPT -1 1\n" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        compilerEnvirons15.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons8.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setActivationNames((java.util.Set<java.lang.String>) strSet22);
        compilerEnvirons0.setStrictMode(false);
        compilerEnvirons0.setRecordingLocalJsDocComments(false);
        org.junit.Assert.assertNotNull(compilerEnvirons0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(compilerEnvirons15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test04000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test04000");
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode0 = new com.google.javascript.rhino.head.ast.ScriptNode();
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode1 = new com.google.javascript.rhino.head.ast.ScriptNode();
        scriptNode0.addChild((com.google.javascript.rhino.head.ast.AstNode) scriptNode1);
        scriptNode1.setEncodedSourceEnd(11);
        com.google.javascript.rhino.head.ast.ScriptNode scriptNode6 = new com.google.javascript.rhino.head.ast.ScriptNode((int) (short) 1);
        java.util.Map<java.lang.String, com.google.javascript.rhino.head.ast.Symbol> strMap7 = scriptNode6.getSymbolTable();
        scriptNode1.addChildToBack((com.google.javascript.rhino.head.Node) scriptNode6);
        int int9 = scriptNode6.getParamCount();
        int int10 = scriptNode6.getBaseLineno();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = scriptNode6.labelId();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: FAILED ASSERTION");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }
}
