import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest28 {

    public static boolean debug = false;

    @Test
    public void test14001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14001");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100.0f, (double) 100, 1.0d, (double) (byte) 100);
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, 35.0d, 98.48857801796105d, (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test14002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14002");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        double double26 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
    }

    @Test
    public void test14003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14003");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test14004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14004");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) '#', (double) (byte) 100, 10);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 100);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, (int) '#', 97.0d);
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double63 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test14005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14005");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (byte) 0, (-1.0d), (int) '4');
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) ' ', (int) (short) 10, (double) 10L);
        double double65 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test14006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14006");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (-1.0d), (double) 0L, 35.0d);
        graggBulirschStoerIntegrator4.setInitialStepSize(56.23413251903491d);
    }

    @Test
    public void test14007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14007");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (-0.0d), (double) 0.0f, (int) (byte) 1);
        double double58 = graggBulirschStoerIntegrator38.getMinStep();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test14008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14008");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        double double55 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, (double) ' ', (double) 0.0f, 0);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, 3.1622776601683795d, (double) 10.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test14009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14009");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 10, (int) (byte) 10, (double) (-1));
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', 56.23413251903491d, 6.841560230416328d, 38.3753555559862d);
        double double63 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test14010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14010");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray46, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray28, doubleArray46);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, 17.752843424574987d, 97.0d, (int) '4');
        boolean boolean76 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test14011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14011");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1.0f), 97.0d, (double) ' ', 4.161791450287818d);
        graggBulirschStoerIntegrator4.setInitialStepSize(6.928935924497552d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction7, 3.1622776601683795d, 43.25307727072111d, 0);
        double double12 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
    }

    @Test
    public void test14012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14012");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 2.514866859365871d, (double) 10L, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, 5.656854249492381d, (double) ' ');
        java.lang.String str60 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl((-1), 98.48857801796105d, 7.211102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14013");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        switchingFunctionsHandler18.stepAccepted((double) (short) 10, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray16, doubleArray40);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) (byte) 1, (double) (byte) 0, 3.1622776601683795d, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction49, (double) 100, (double) (-1.0f), (int) (short) 1);
        double double54 = graggBulirschStoerIntegrator43.getMinStep();
        graggBulirschStoerIntegrator43.setInterpolationControl(false, (int) (short) -1);
        graggBulirschStoerIntegrator43.setStepsizeControl(100.0d, 4.216965034285822d, 43.25307727072111d, 0.0d);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) (short) 10, 38.3753555559862d, (double) '4', 15.06756998238367d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test14014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14014");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray52);
        derivativeException45.addSuppressed((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test14015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14015");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) 2, (double) 100.0f, 9.898464007679532d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test14016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14016");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test14017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14017");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) (byte) 1, (double) ' ', (int) ' ');
        java.lang.String str63 = graggBulirschStoerIntegrator38.getName();
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double65 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str63, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test14018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14018");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        double[] doubleArray14 = new double[] { 100.0f, 100 };
        boolean boolean15 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        double double19 = switchingFunctionsHandler0.getEventTime();
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test14019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14019");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        derivativeException4.addSuppressed((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        derivativeException12.addSuppressed((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        java.lang.String str35 = derivativeException33.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException36);
        java.lang.Object[] objArray38 = integratorException36.getArguments();
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException36);
        java.lang.Throwable[] throwableArray40 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray40);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray59);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray59);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray59);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray59);
        java.lang.Throwable[] throwableArray69 = integratorException68.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray69);
        java.lang.String str72 = integratorException71.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException71);
        integratorException41.addSuppressed((java.lang.Throwable) integratorException71);
        java.lang.Object[] objArray75 = integratorException71.getArguments();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException" + "'", str72, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
    }

    @Test
    public void test14020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14020");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        double[] doubleArray40 = new double[] { 100.0f, 100 };
        boolean boolean41 = switchingFunctionsHandler26.reset(Double.NaN, doubleArray40);
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray40, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) 10, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray18, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray66, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 100L, doubleArray18, doubleArray66);
        graggBulirschStoerIntegrator85.setStepsizeControl((double) (-1), (double) 'a', (double) (byte) -1, (double) ' ');
        graggBulirschStoerIntegrator85.setInitialStepSize((double) 100.0f);
        java.lang.String str93 = graggBulirschStoerIntegrator85.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str93, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14021");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        double double39 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double40 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double41 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test14022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14022");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray25, doubleArray45);
        switchingFunctionsHandler5.stepAccepted((double) ' ', doubleArray45);
        double double49 = switchingFunctionsHandler5.getEventTime();
        double double50 = switchingFunctionsHandler5.getEventTime();
        double double51 = switchingFunctionsHandler5.getEventTime();
        boolean boolean52 = switchingFunctionsHandler5.stop();
        double[] doubleArray56 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double60 = switchingFunctionsHandler59.getEventTime();
        double[] doubleArray68 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean69 = switchingFunctionsHandler59.reset((double) (byte) 1, doubleArray68);
        boolean boolean70 = switchingFunctionsHandler57.reset(0.0d, doubleArray68);
        boolean boolean71 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double74 = switchingFunctionsHandler73.getEventTime();
        double[] doubleArray82 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean83 = switchingFunctionsHandler73.reset((double) (byte) 1, doubleArray82);
        double[] doubleArray87 = new double[] { 100.0f, 100 };
        boolean boolean88 = switchingFunctionsHandler73.reset(Double.NaN, doubleArray87);
        switchingFunctionsHandler57.stepAccepted((double) 'a', doubleArray87);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) (short) 0, doubleArray56, doubleArray87);
        boolean boolean91 = switchingFunctionsHandler5.reset((double) 10L, doubleArray87);
        switchingFunctionsHandler0.stepAccepted(1.7320508075688772d, doubleArray87);
        double double93 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test14023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14023");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, (double) 0L, (-0.0d), (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 'a', (double) (short) 0, (int) (short) 1);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction11, 3.0d, (double) (short) 0, (int) 'a');
        double double16 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double17 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 1, 8.366600265340756d, (double) 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test14024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14024");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((-1), (double) '4', (double) 0.0f);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test14025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14025");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str48 = graggBulirschStoerIntegrator38.getName();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 10, (double) 10, 52.0d, 13.37480609952844d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str48, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test14026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14026");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler0.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler0.add(switchingFunction56, 10.0d, 2.514866859365871d, 1);
        double double61 = switchingFunctionsHandler0.getEventTime();
        boolean boolean62 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test14027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14027");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        java.lang.String str26 = integratorException25.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test14028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14028");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException17);
        java.lang.Throwable[] throwableArray20 = derivativeException19.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray20);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test14029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14029");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) 'a', (double) '4', (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(3.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, 3.0d, (double) 10, 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler58);
    }

    @Test
    public void test14030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14030");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        double double24 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test14031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14031");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("", objArray9);
        java.lang.Object[] objArray11 = integratorException10.getArguments();
        java.lang.Object[] objArray12 = integratorException10.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
    }

    @Test
    public void test14032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14032");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) 100.0f, 59.16079783099616d, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14033");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        graggBulirschStoerIntegrator4.setStepsizeControl((double) '4', (double) 'a', (double) (short) 1, 56.23413251903491d);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 0);
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator4.getStepHandler();
        double double14 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (byte) -1, 1, 31.71666350274487d);
        org.junit.Assert.assertNotNull(stepHandler13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test14034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14034");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.Throwable[] throwableArray10 = derivativeException7.getSuppressed();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test14035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14035");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction37, (double) 'a', 3.1622776601683795d, (int) (short) 100);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 0.0f);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 1);
        double double46 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double47 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test14036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14036");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", objArray7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException10);
        java.lang.Object[] objArray12 = integratorException11.getArguments();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.String str22 = derivativeException20.getPattern();
        java.lang.String str23 = derivativeException20.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        integratorException11.addSuppressed((java.lang.Throwable) integratorException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test14037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14037");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 1, (double) '4');
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 10L);
        java.lang.String str67 = graggBulirschStoerIntegrator64.getName();
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        graggBulirschStoerIntegrator64.addSwitchingFunction(switchingFunction78, (double) (byte) 0, (double) (byte) -1, (int) (short) 10);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator87.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        stepHandler88.handleStep(stepInterpolator89, true);
        graggBulirschStoerIntegrator64.setStepHandler(stepHandler88);
        double double93 = graggBulirschStoerIntegrator64.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler94);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertNotNull(stepHandler94);
    }

    @Test
    public void test14038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14038");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 1, 10, (double) ' ');
        double double15 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray36, doubleArray52);
        graggBulirschStoerIntegrator54.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator54.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator54.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator54.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator54.setInterpolationControl(false, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator54.addSwitchingFunction(switchingFunction73, (double) (byte) 10, 1.0d, (int) 'a');
        graggBulirschStoerIntegrator54.setStepsizeControl((double) (byte) 100, (-0.0d), (double) (short) 1, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator54.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler83);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(stepHandler83);
    }

    @Test
    public void test14039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14039");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        java.lang.Class<?> wildcardClass23 = strArray14.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test14040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14040");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray21 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        derivativeException37.addSuppressed((java.lang.Throwable) derivativeException43);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        java.lang.String str47 = derivativeException46.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException46);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        java.lang.String str66 = derivativeException64.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        derivativeException60.addSuppressed((java.lang.Throwable) derivativeException64);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException64);
        java.lang.Object[] objArray70 = integratorException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray70);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!]");
    }

    @Test
    public void test14041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14041");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        double double17 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        boolean boolean26 = switchingFunctionsHandler24.isEmpty();
        boolean boolean27 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        switchingFunctionsHandler24.stepAccepted(10.0d, doubleArray49);
        boolean boolean69 = switchingFunctionsHandler19.reset((double) 1.0f, doubleArray49);
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray49);
        boolean boolean71 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, 9.848857801796104d, 38.3753555559862d, (int) (short) 10);
        double double77 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test14042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14042");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator19.getStepHandler();
        boolean boolean25 = stepHandler24.requiresDenseOutput();
        stepHandler24.reset();
        boolean boolean27 = stepHandler24.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test14043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14043");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, (double) 'a', (double) (-1L), 10);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 9.898464007679532d, (double) (-1L), 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler56);
    }

    @Test
    public void test14044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14044");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0.0f);
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 1, (double) (short) 1);
        double double65 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double66 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test14045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14045");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        double double46 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double47 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 10, 5.009970139234591d, 7.952707287670506d, (double) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test14046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14046");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 5.916079783099616d, (double) (short) 100, 10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) '4', (double) (short) 100, (int) '#');
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test14047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14047");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        double double17 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        boolean boolean26 = switchingFunctionsHandler24.isEmpty();
        boolean boolean27 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        switchingFunctionsHandler24.stepAccepted(10.0d, doubleArray49);
        boolean boolean69 = switchingFunctionsHandler19.reset((double) 1.0f, doubleArray49);
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray49);
        boolean boolean71 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, (double) 10L, 17.78279410038923d, (int) (byte) -1);
        boolean boolean77 = switchingFunctionsHandler0.isEmpty();
        double double78 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
    }

    @Test
    public void test14048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14048");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, (double) (short) 1, (double) 100.0f, (double) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        double[] doubleArray16 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean17 = switchingFunctionsHandler7.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray21 = new double[] { 100.0f, 100 };
        boolean boolean22 = switchingFunctionsHandler7.reset(Double.NaN, doubleArray21);
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray21, doubleArray23);
        graggBulirschStoerIntegrator24.setInterpolationControl(true, (int) '4');
        double double28 = graggBulirschStoerIntegrator24.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator24.addSwitchingFunction(switchingFunction29, 17.88854381999832d, (double) (-1L), (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator24.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler34);
        double double36 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test14049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14049");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double65 = switchingFunctionsHandler64.getEventTime();
        double[] doubleArray73 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean74 = switchingFunctionsHandler64.reset((double) (byte) 1, doubleArray73);
        double[] doubleArray78 = new double[] { 100.0f, 100 };
        boolean boolean79 = switchingFunctionsHandler64.reset(Double.NaN, doubleArray78);
        double[] doubleArray80 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray78, doubleArray80);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray60, doubleArray80);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator82.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler83.handleStep(stepInterpolator84, true);
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler83);
        graggBulirschStoerIntegrator42.setOrderControl((int) '4', 0.0d, (double) (byte) 1);
        java.lang.String str92 = graggBulirschStoerIntegrator42.getName();
        graggBulirschStoerIntegrator42.setStepsizeControl((double) 3, (double) (byte) -1, (double) 1, 42.661458015403085d);
        graggBulirschStoerIntegrator42.setInitialStepSize(13.92838827718412d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str92, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14050");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        java.lang.String str16 = derivativeException14.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException14);
        java.lang.Throwable[] throwableArray19 = derivativeException10.getSuppressed();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray32 = derivativeException23.getArguments();
        java.lang.String str33 = derivativeException23.getPattern();
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray35 = derivativeException10.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test14051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14051");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) '#', (double) 'a', (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) (short) 10, 5.477225575051661d, (int) (byte) -1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) (short) 1, 7.211102550927978d, 38.3753555559862d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test14052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14052");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException4.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Throwable[] throwableArray7 = derivativeException6.getSuppressed();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException6);
        java.lang.String str28 = derivativeException6.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException6);
        java.lang.String str30 = derivativeException6.getPattern();
        java.lang.String str31 = derivativeException6.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str31, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14053");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator59.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler64);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) 2, (double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction70, (double) 2, (double) ' ', 3);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test14054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14054");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, (double) 1.0f, 35.0d, Double.NaN);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 0, 8.366600265340756d, 42.661458015403085d);
        graggBulirschStoerIntegrator4.setStepsizeControl((-1.0d), 5.009970139234591d, 32.0d, (double) ' ');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.1622776601683795d + "'", double5 == 3.1622776601683795d);
    }

    @Test
    public void test14055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14055");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) (short) 0, (double) 100L, 10);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, (double) (-1L), (double) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean65 = stepHandler64.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test14056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14056");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, Double.NaN, (double) (short) 1, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, 5.477225575051661d, 1.0d, (int) (short) -1);
        graggBulirschStoerIntegrator38.setInitialStepSize(8.62834797213047d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test14057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14057");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray9);
        java.lang.Object[] objArray18 = derivativeException17.getArguments();
        java.lang.Throwable[] throwableArray19 = derivativeException17.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test14058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14058");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler0.evaluateStep(stepInterpolator11);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray28 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean29 = switchingFunctionsHandler19.reset((double) (byte) 1, doubleArray28);
        double[] doubleArray33 = new double[] { 100.0f, 100 };
        boolean boolean34 = switchingFunctionsHandler19.reset(Double.NaN, doubleArray33);
        double[] doubleArray35 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray33, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler37.evaluateStep(stepInterpolator38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray57, doubleArray59);
        switchingFunctionsHandler37.stepAccepted((double) (short) 10, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, 15.18214344379753d, doubleArray35, doubleArray59);
        switchingFunctionsHandler0.stepAccepted((double) 1, doubleArray59);
        double double64 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler0.add(switchingFunction65, 18.708286933869708d, 3.0d, 2);
        boolean boolean70 = switchingFunctionsHandler0.isEmpty();
        boolean boolean71 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test14059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14059");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 0, 0);
        java.lang.String str31 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 1, 100.0d, Double.NaN, (-0.0d));
        double double37 = graggBulirschStoerIntegrator19.getMinStep();
        double double38 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction39, (double) (byte) 1, (double) (byte) -1, (int) (short) 10);
        double double44 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
    }

    @Test
    public void test14060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14060");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.477225575051661d, (double) 10L, (double) (byte) 0, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 7.400828044922853d + "'", double6 == 7.400828044922853d);
    }

    @Test
    public void test14061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14061");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction62, (double) 1, (double) 'a', (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction67, 31.622776601683793d, (double) 100L, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction72, 15.18214344379753d, 0.0d, (int) ' ');
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator81.setInitialStepSize((double) 10L);
        java.lang.String str84 = graggBulirschStoerIntegrator81.getName();
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator81.getStepHandler();
        graggBulirschStoerIntegrator81.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator81.getStepHandler();
        graggBulirschStoerIntegrator81.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler95 = graggBulirschStoerIntegrator81.getStepHandler();
        boolean boolean96 = stepHandler95.requiresDenseOutput();
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler95);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str84, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertNotNull(stepHandler95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test14062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14062");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray23);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.String str28 = derivativeException13.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str28, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test14063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14063");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException4.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.Throwable[] throwableArray15 = derivativeException14.getSuppressed();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException14);
        java.lang.Object[] objArray37 = derivativeException6.getArguments();
        java.lang.Object[] objArray38 = derivativeException6.getArguments();
        java.lang.Object[] objArray39 = derivativeException6.getArguments();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test14064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14064");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.String str15 = derivativeException10.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str15, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test14065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14065");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        java.lang.Class<?> wildcardClass20 = strArray10.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test14066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14066");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray31, doubleArray33);
        switchingFunctionsHandler11.stepAccepted((double) (short) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) (short) 100, doubleArray33);
        boolean boolean37 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler0.evaluateStep(stepInterpolator38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test14067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14067");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray14);
        java.lang.String str23 = derivativeException22.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: " + "'", str23, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14068");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException24);
        java.lang.String str26 = derivativeException24.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray29 = derivativeException28.getSuppressed();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException49);
        derivativeException39.addSuppressed((java.lang.Throwable) derivativeException49);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException49);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException60);
        java.lang.String str62 = derivativeException60.getPattern();
        java.lang.Object[] objArray63 = derivativeException60.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray63);
        derivativeException54.addSuppressed((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException65);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray79);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray79);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray79);
        integratorException65.addSuppressed((java.lang.Throwable) integratorException85);
        derivativeException28.addSuppressed((java.lang.Throwable) integratorException85);
        java.lang.Throwable[] throwableArray88 = derivativeException28.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str26, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test14069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14069");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String str27 = integratorException26.getPattern();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        java.lang.Object[] objArray43 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        integratorException37.addSuppressed((java.lang.Throwable) derivativeException45);
        integratorException26.addSuppressed((java.lang.Throwable) derivativeException45);
        java.lang.String str48 = integratorException26.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        java.lang.Throwable[] throwableArray50 = derivativeException49.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException49);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test14070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14070");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100, (double) 0.0f, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (-1.0d), (double) 3, (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, 17.320508075688775d, 20.400469235504897d, 1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test14071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14071");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        java.lang.Throwable[] throwableArray22 = derivativeException21.getSuppressed();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", objArray23);
        java.lang.String str25 = integratorException24.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str25, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14072");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        double double28 = graggBulirschStoerIntegrator19.getMinStep();
        java.lang.String str29 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction30, 15.298193747370034d, 6.928935924497552d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction35, (double) 'a', 2.514866859365871d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str29, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14073");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction7, (double) 10, (double) (-1L), (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, (double) 3, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler17 = graggBulirschStoerIntegrator4.getStepHandler();
        double double18 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double24 = graggBulirschStoerIntegrator23.getCurrentStepStart();
        graggBulirschStoerIntegrator23.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator23.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator23.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        stepHandler30.handleStep(stepInterpolator32, false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 17.320508075688775d + "'", double5 == 17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler30);
    }

    @Test
    public void test14074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14074");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 0);
        double double14 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test14075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14075");
        double[] doubleArray4 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray27, doubleArray43);
        double[] doubleArray46 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray27, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray4, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray65, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) 100L, doubleArray4, doubleArray67);
        java.lang.String str70 = graggBulirschStoerIntegrator69.getName();
        graggBulirschStoerIntegrator69.setOrderControl((int) ' ', (double) ' ', 17.88854381999832d);
        graggBulirschStoerIntegrator69.setStepsizeControl((double) 10.0f, 38.3753555559862d, (double) 10.0f, 8.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str70, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14076");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(6.841560230416328d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test14077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14077");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100L, 17.320508075688775d, 5.277951928008462d, Double.NaN);
    }

    @Test
    public void test14078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14078");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        boolean boolean44 = switchingFunctionsHandler0.stop();
        boolean boolean45 = switchingFunctionsHandler0.stop();
        boolean boolean46 = switchingFunctionsHandler0.stop();
        double[] doubleArray52 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray52, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        switchingFunctionsHandler67.add(switchingFunction68, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler67.add(switchingFunction73, (double) 1L, (double) 1, 1);
        boolean boolean78 = switchingFunctionsHandler67.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double83 = switchingFunctionsHandler82.getEventTime();
        double[] doubleArray91 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean92 = switchingFunctionsHandler82.reset((double) (byte) 1, doubleArray91);
        boolean boolean93 = switchingFunctionsHandler80.reset(0.0d, doubleArray91);
        boolean boolean94 = switchingFunctionsHandler67.reset(52.0d, doubleArray91);
        boolean boolean95 = switchingFunctionsHandler65.reset(17.320508075688775d, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator96 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 0, doubleArray52, doubleArray91);
        boolean boolean97 = switchingFunctionsHandler0.reset((double) 100L, doubleArray91);
        double double98 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test14079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14079");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        double double50 = graggBulirschStoerIntegrator42.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) '#', 17.88854381999832d, (int) (short) 1);
        double double56 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction57, 4.161791450287818d, (double) 10.0f, 100);
        double double62 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction63, (double) '4', 42.661458015403085d, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test14080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14080");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (byte) 100, (double) 1L);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 100, 0, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) 0L, (double) 0.0f, 10);
        double double63 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double64 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test14081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14081");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        double double62 = graggBulirschStoerIntegrator61.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction63, (double) 100L, 35.0d, (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction68, 38.3753555559862d, 17.320508075688775d, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 100.0d + "'", double62 == 100.0d);
    }

    @Test
    public void test14082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14082");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        boolean boolean21 = stepHandler20.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        stepHandler20.handleStep(stepInterpolator22, true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test14083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14083");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler0.add(switchingFunction56, 1.7782794100389228d, 17.88854381999832d, 0);
        boolean boolean61 = switchingFunctionsHandler0.stop();
        boolean boolean62 = switchingFunctionsHandler0.stop();
        double double63 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test14084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14084");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 2, (double) (byte) 100, (double) (short) 100, (double) 10.0f);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) ' ');
        double double64 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test14085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14085");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 3.0d, 0.0d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14086");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        java.lang.String str24 = integratorException23.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException28);
        java.lang.String str30 = integratorException29.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str30, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14087");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray76 = new double[] { 100.0f, 100 };
        boolean boolean77 = switchingFunctionsHandler62.reset(Double.NaN, doubleArray76);
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray76, doubleArray78);
        graggBulirschStoerIntegrator79.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator79.getStepHandler();
        stepHandler84.reset();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler84);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, 15.18214344379753d, 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertNotNull(stepHandler84);
    }

    @Test
    public void test14088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14088");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(2.0d, 43.25307727072111d, 30.408967315912587d, 52.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.300868483181675d + "'", double5 == 9.300868483181675d);
    }

    @Test
    public void test14089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14089");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.Object[] objArray38 = integratorException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", objArray38);
        derivativeException9.addSuppressed((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String str43 = derivativeException42.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str43, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test14090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14090");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        graggBulirschStoerIntegrator42.setInitialStepSize(0.0d);
        double double52 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        java.lang.String str53 = graggBulirschStoerIntegrator42.getName();
        graggBulirschStoerIntegrator42.setStepsizeControl(15.06756998238367d, 30.408967315912587d, 2.514866859365871d, (double) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14091");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException32);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException52);
        java.lang.Object[] objArray54 = derivativeException42.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray54);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray74);
        derivativeException70.addSuppressed((java.lang.Throwable) derivativeException76);
        derivativeException66.addSuppressed((java.lang.Throwable) derivativeException76);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException76);
        java.lang.String str80 = derivativeException79.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException79);
        integratorException56.addSuppressed((java.lang.Throwable) derivativeException79);
        derivativeException32.addSuppressed((java.lang.Throwable) integratorException56);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.Object[] objArray85 = derivativeException32.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException86);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test14092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14092");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("", objArray6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException7);
        java.lang.Throwable[] throwableArray10 = integratorException7.getSuppressed();
        java.lang.Object[] objArray11 = integratorException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        java.lang.String str14 = integratorException12.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.String str16 = integratorException15.getPattern();
        java.lang.Throwable[] throwableArray17 = integratorException15.getSuppressed();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test14093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14093");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double69 = graggBulirschStoerIntegrator57.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator57.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        stepHandler70.handleStep(stepInterpolator71, true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1.0d) + "'", double69 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler70);
    }

    @Test
    public void test14094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14094");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator80.getStepHandler();
        double double82 = graggBulirschStoerIntegrator80.getMinStep();
        java.lang.String str83 = graggBulirschStoerIntegrator80.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str83, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14095");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (short) 1, (double) (short) 1, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction7, 3.0d, (double) (byte) 1, 100);
        java.lang.String str12 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction13, (double) (-1.0f), 17.78279410038923d, 0);
        org.apache.commons.math.ode.StepHandler stepHandler18 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.setStepHandler(stepHandler18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14096");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, 35.0d, 9.848857801796104d, 0.0d);
        graggBulirschStoerIntegrator38.setOrderControl((-1), 0.0d, (-0.0d));
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test14097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14097");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException28);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException28);
        java.lang.Object[] objArray33 = derivativeException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", objArray33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray33);
        java.lang.Throwable throwable37 = null;
        // The following exception was thrown during execution in test generation
        try {
            integratorException36.addSuppressed(throwable37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
    }

    @Test
    public void test14098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14098");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 1, 10, (double) ' ');
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 10, 5.916079783099616d, (double) 3, (double) (short) 1);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (byte) 10, 100, 52.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test14099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14099");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray7);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        java.lang.Throwable[] throwableArray31 = integratorException30.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test14100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14100");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl(9.26731744662116d, (double) (short) 10, (double) 10.0f, 7.400828044922853d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14101");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) '#', (double) 'a', (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) (short) 1, (double) 100L, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) (byte) -1, (double) (-1.0f), (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction65, (double) (byte) 10, (double) 10, (int) (byte) 10);
        java.lang.String str70 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction71, 17.78279410038923d, (double) 3, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str70, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14102");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        double[] doubleArray22 = new double[] { 100.0f, 100 };
        boolean boolean23 = switchingFunctionsHandler8.reset(Double.NaN, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray22, doubleArray24);
        switchingFunctionsHandler2.stepAccepted((double) (short) 10, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler2.reset(3.1622776601683795d, doubleArray37);
        double[] doubleArray40 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 4.449373890263558d, doubleArray37, doubleArray40);
        graggBulirschStoerIntegrator41.setInterpolationControl(false, 10);
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator41.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        stepHandler45.handleStep(stepInterpolator46, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler45);
    }

    @Test
    public void test14103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14103");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 0.0d, (double) (byte) 1, (-1));
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 10);
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(4.216965034285822d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(stepHandler63);
    }

    @Test
    public void test14104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14104");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler0.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        switchingFunctionsHandler14.stepAccepted((double) (short) 10, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler14.reset((double) 0L, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double56 = switchingFunctionsHandler55.getEventTime();
        double[] doubleArray64 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean65 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler53.reset(0.0d, doubleArray64);
        boolean boolean67 = switchingFunctionsHandler14.reset(0.0d, doubleArray64);
        switchingFunctionsHandler0.stepAccepted(8.366600265340756d, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, 5.623413251903491d, 18.708286933869708d, (int) (short) 10);
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test14105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14105");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100, (double) 0.0f, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 1.0d, (double) 100.0f, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 0);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, 38.3753555559862d, 31.622776601683793d, 5.916079783099616d);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test14106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14106");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(8.366600265340756d, 3.0d, 8.366600265340756d, (double) 2);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl(98.48857801796105d, 0.0d, (double) (-1L), 8.62834797213047d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.009970139234591d + "'", double5 == 5.009970139234591d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test14107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14107");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        switchingFunctionsHandler24.stepAccepted((double) (short) 10, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        boolean boolean61 = switchingFunctionsHandler24.reset((double) 0L, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, 10.0d, doubleArray20, doubleArray59);
        double[] doubleArray63 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, 8.62834797213047d, doubleArray20, doubleArray63);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test14108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14108");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) (short) 0, (double) (byte) 0, (-1));
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) 0, 5.623413251903491d, (double) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test14109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14109");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 3, (double) 10, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 9.848857801796104d, 2.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction11, (double) 1L, 56.568542494923804d, (int) (byte) 100);
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test14110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14110");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, true);
        stepHandler46.reset();
        stepHandler46.reset();
        stepHandler46.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test14111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14111");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler77.handleStep(stepInterpolator79, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction83, (double) 100, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator19.getStepHandler();
        double double90 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInitialStepSize(18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(stepHandler91);
    }

    @Test
    public void test14112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14112");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler3.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler3.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler3.evaluateStep(stepInterpolator9);
        boolean boolean11 = switchingFunctionsHandler3.isEmpty();
        boolean boolean12 = switchingFunctionsHandler3.stop();
        double double13 = switchingFunctionsHandler3.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray49, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray31, doubleArray49);
        switchingFunctionsHandler3.stepAccepted((double) 'a', doubleArray49);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, 15.18214344379753d, doubleArray2, doubleArray49);
        graggBulirschStoerIntegrator74.setStepsizeControl((double) 0, Double.NaN, 31.209033090201576d, 20.400469235504897d);
        graggBulirschStoerIntegrator74.setInitialStepSize(6.928935924497552d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
    }

    @Test
    public void test14113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14113");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.stop();
        double double4 = switchingFunctionsHandler0.getEventTime();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test14114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14114");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) (byte) -1, (double) 10L, (double) 1L, (double) 100.0f);
        double double64 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setInitialStepSize(6.928935924497552d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction67, 35.0d, 9.848857801796104d, (int) '#');
        graggBulirschStoerIntegrator57.setInitialStepSize(7.691605673134586d);
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 1L, (double) (byte) -1, 23.40347319320716d, (double) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction79, 30.408967315912587d, (double) 2, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
    }

    @Test
    public void test14115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14115");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler9.reset(0.0d, doubleArray20);
        boolean boolean23 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        switchingFunctionsHandler27.stepAccepted((double) (short) 10, doubleArray49);
        double[] doubleArray58 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        double[] doubleArray75 = new double[] { 100.0f, 100 };
        boolean boolean76 = switchingFunctionsHandler61.reset(Double.NaN, doubleArray75);
        double[] doubleArray77 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray75, doubleArray77);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray58, doubleArray75);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 1, 0.0d, doubleArray49, doubleArray75);
        boolean boolean81 = switchingFunctionsHandler0.reset(0.0d, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        switchingFunctionsHandler0.add(switchingFunction82, Double.NaN, (double) 100, (-1));
        boolean boolean87 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test14116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14116");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException10.getArguments();
        java.lang.Throwable[] throwableArray13 = derivativeException10.getSuppressed();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray20 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray22 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("", objArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Throwable[] throwableArray44 = derivativeException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray44);
        integratorException23.addSuppressed((java.lang.Throwable) integratorException45);
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException23);
        java.lang.Throwable[] throwableArray48 = integratorException23.getSuppressed();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray56);
        java.lang.String str59 = derivativeException58.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException58);
        java.lang.String str61 = integratorException60.getPattern();
        integratorException23.addSuppressed((java.lang.Throwable) integratorException60);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str59, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str61, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test14117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14117");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException41);
        derivativeException31.addSuppressed((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException44);
        derivativeException20.addSuppressed((java.lang.Throwable) integratorException45);
        java.lang.Object[] objArray47 = derivativeException20.getArguments();
        java.lang.Throwable[] throwableArray48 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray48);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException49);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test14118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14118");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException30);
        java.lang.Object[] objArray32 = derivativeException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("", objArray32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray32);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        derivativeException48.addSuppressed((java.lang.Throwable) derivativeException54);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException54);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        java.lang.String str58 = derivativeException57.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        integratorException34.addSuppressed((java.lang.Throwable) derivativeException57);
        java.lang.String str61 = derivativeException57.getPattern();
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException57);
        java.lang.Throwable[] throwableArray63 = integratorException11.getSuppressed();
        java.lang.String str64 = integratorException11.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str64, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14119");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = derivativeException18.getPattern();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException32);
        java.lang.String str35 = derivativeException32.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray42 = derivativeException40.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException46);
        java.lang.String str48 = derivativeException14.getPattern();
        java.lang.Throwable[] throwableArray49 = derivativeException14.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str35, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str48, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test14120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14120");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.477225575051661d, (-1.0d), (double) (short) 1, 52.0d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        double double10 = graggBulirschStoerIntegrator9.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        graggBulirschStoerIntegrator30.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler35 = graggBulirschStoerIntegrator30.getStepHandler();
        boolean boolean36 = stepHandler35.requiresDenseOutput();
        boolean boolean37 = stepHandler35.requiresDenseOutput();
        stepHandler35.reset();
        graggBulirschStoerIntegrator9.setStepHandler(stepHandler35);
        stepHandler35.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler35);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) ' ', 97.0d, 15.06756998238367d, 9.26731744662116d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test14121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14121");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.848857801796104d, 23.40347319320716d, (double) 100L, (double) 1L);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (short) 100, 100, 56.23413251903491d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.848857801796104d + "'", double5 == 9.848857801796104d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14122");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 8.366600265340756d, 8.62834797213047d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test14123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14123");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray9 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("", objArray9);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.Throwable[] throwableArray31 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray31);
        integratorException10.addSuppressed((java.lang.Throwable) integratorException32);
        java.lang.Object[] objArray34 = integratorException32.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[org.apache.commons.math.ode.DerivativeException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[org.apache.commons.math.ode.DerivativeException: hi!]");
    }

    @Test
    public void test14124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14124");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray31, doubleArray33);
        switchingFunctionsHandler11.stepAccepted((double) (short) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) (short) 100, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray41 = new double[] {};
        switchingFunctionsHandler38.stepAccepted(0.0d, doubleArray41);
        switchingFunctionsHandler0.stepAccepted(17.78279410038923d, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler0.add(switchingFunction44, (double) 0L, (double) (-1), (int) (short) 10);
        boolean boolean49 = switchingFunctionsHandler0.isEmpty();
        boolean boolean50 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test14125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14125");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 1.0d, Double.NaN, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean59 = stepHandler58.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test14126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14126");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(38.3753555559862d, (double) (-1L), (double) (short) -1, 31.71666350274487d);
    }

    @Test
    public void test14127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14127");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        double double44 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler0.evaluateStep(stepInterpolator45);
        double double47 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray49 = null;
        boolean boolean50 = switchingFunctionsHandler0.reset(98.48857801796105d, doubleArray49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test14128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14128");
        java.lang.String[] strArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test14129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14129");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100L, (double) (short) -1, (int) ' ');
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
    }

    @Test
    public void test14130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14130");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException22);
        java.lang.String str25 = integratorException24.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str25, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14131");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException4.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Throwable[] throwableArray7 = derivativeException6.getSuppressed();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException6);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException27);
        java.lang.String str29 = integratorException27.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException27);
        java.lang.String str32 = derivativeException31.getPattern();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test14132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14132");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        double[] doubleArray40 = new double[] { 100.0f, 100 };
        boolean boolean41 = switchingFunctionsHandler26.reset(Double.NaN, doubleArray40);
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray40, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) 10, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray18, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray66, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 100L, doubleArray18, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        graggBulirschStoerIntegrator85.addSwitchingFunction(switchingFunction86, (double) (byte) 1, (double) 2, 1);
        graggBulirschStoerIntegrator85.setInterpolationControl(false, (-1));
        double double94 = graggBulirschStoerIntegrator85.getMaxStep();
        double double95 = graggBulirschStoerIntegrator85.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 100.0d + "'", double94 == 100.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 10.0d + "'", double95 == 10.0d);
    }

    @Test
    public void test14133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14133");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler63 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator38.setStepHandler(stepHandler63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
    }

    @Test
    public void test14134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14134");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10L, 17.78279410038923d, (double) ' ', Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator9.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler10);
        graggBulirschStoerIntegrator4.setStepsizeControl(5.623413251903491d, 15.06756998238367d, 38.3753555559862d, 17.88854381999832d);
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test14135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14135");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        boolean boolean43 = switchingFunctionsHandler0.isEmpty();
        boolean boolean44 = switchingFunctionsHandler0.stop();
        double double45 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler0.evaluateStep(stepInterpolator46);
        boolean boolean48 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler0.evaluateStep(stepInterpolator49);
        double double51 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test14136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14136");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, 8.366600265340756d, 0.0d, (int) ' ');
        java.lang.String str60 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test14137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14137");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str48 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler49.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str48, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test14138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14138");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (byte) 100, (double) 1L);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 100, 0, 0.0d);
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14139");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 1, (double) 100, (-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (byte) 1, 100.0d, 3);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test14140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14140");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 10.0d, (-1.0d), (double) 100);
        graggBulirschStoerIntegrator4.setOrderControl((int) ' ', (double) (short) 0, (double) 0L);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        double double29 = graggBulirschStoerIntegrator28.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator28.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        graggBulirschStoerIntegrator28.addSwitchingFunction(switchingFunction35, (double) 100, (double) 2, (int) (byte) 10);
        java.lang.String str40 = graggBulirschStoerIntegrator28.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        double[] doubleArray61 = new double[] { 100.0f, 100 };
        boolean boolean62 = switchingFunctionsHandler47.reset(Double.NaN, doubleArray61);
        double[] doubleArray63 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray61, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double[] doubleArray74 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean75 = switchingFunctionsHandler65.reset((double) (byte) 1, doubleArray74);
        double[] doubleArray79 = new double[] { 100.0f, 100 };
        boolean boolean80 = switchingFunctionsHandler65.reset(Double.NaN, doubleArray79);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray63, doubleArray79);
        double[] doubleArray82 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray63, doubleArray82);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator83.setOrderControl((-1), 5.477225575051661d, (double) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator83.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        stepHandler89.handleStep(stepInterpolator90, true);
        graggBulirschStoerIntegrator28.setStepHandler(stepHandler89);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler89);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str40, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertNotNull(stepHandler89);
    }

    @Test
    public void test14141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14141");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.009970139234591d, 3.0d, 12.368586720951603d, (double) 0.0f);
    }

    @Test
    public void test14142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14142");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10L, 17.78279410038923d, (double) ' ', Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator9.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        stepHandler10.handleStep(stepInterpolator12, true);
        stepHandler10.reset();
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test14143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14143");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100, (double) 0.0f, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (-1.0d), (double) 3, (int) '#');
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 1, 0, (double) 0L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction64, (double) 1.0f, 1.0d, (int) (short) 0);
        double double69 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double70 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        double double73 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertNotNull(stepHandler75);
    }

    @Test
    public void test14144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14144");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) '#', (double) (short) -1, 17.88854381999832d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl(3, 17.752843424574987d, 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test14145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14145");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        double double51 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (-1), (int) (byte) 10, (double) 1);
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler57.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        stepHandler57.handleStep(stepInterpolator59, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test14146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14146");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, 2.514866859365871d, 13.37480609952844d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction66, 20.924600157413938d, 98.48857801796105d, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test14147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14147");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) '4', (int) '#');
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, 17.752843424574987d, 15.18214344379753d, (int) (short) 0);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test14148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14148");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler0.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray36, doubleArray54);
        boolean boolean78 = switchingFunctionsHandler8.reset((double) (short) 1, doubleArray54);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray54);
        boolean boolean80 = switchingFunctionsHandler0.stop();
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        boolean boolean82 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test14149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14149");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test14150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14150");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        double double57 = switchingFunctionsHandler0.getEventTime();
        boolean boolean58 = switchingFunctionsHandler0.stop();
        boolean boolean59 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler0.evaluateStep(stepInterpolator60);
        double double62 = switchingFunctionsHandler0.getEventTime();
        boolean boolean63 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test14151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14151");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test14152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14152");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 0, (double) (short) 1, (int) (short) 100);
        double double54 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test14153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14153");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction59, 100.0d, (double) 'a', 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction64, (double) (byte) 1, (double) 10.0f, (int) (byte) 1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator73.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator73.getStepHandler();
        boolean boolean79 = stepHandler78.requiresDenseOutput();
        graggBulirschStoerIntegrator57.setStepHandler(stepHandler78);
        graggBulirschStoerIntegrator57.setInitialStepSize((-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction83, 5.477225575051661d, (double) (-1L), 2);
        graggBulirschStoerIntegrator57.setOrderControl(1, (double) ' ', 6.841560230416328d);
        graggBulirschStoerIntegrator57.setStepsizeControl(18.708286933869708d, 97.0d, 13.37480609952844d, 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test14154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14154");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator48.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler49.handleStep(stepInterpolator50, false);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test14155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14155");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.Throwable[] throwableArray45 = derivativeException15.getSuppressed();
        java.lang.String str46 = derivativeException15.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray54);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException59);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException59);
        java.lang.String str62 = derivativeException15.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str62, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14156");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 100, (double) 100, (double) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, 0.0d, 3);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) 'a');
    }

    @Test
    public void test14157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14157");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException20);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        java.lang.String str25 = integratorException24.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        integratorException24.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        integratorException24.addSuppressed((java.lang.Throwable) derivativeException49);
        java.lang.Object[] objArray51 = derivativeException49.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", objArray51);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, , , hi!, ]");
    }

    @Test
    public void test14158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14158");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction29, (double) (byte) 0, 100.0d, (int) (byte) 1);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) '4');
        double double36 = graggBulirschStoerIntegrator19.getMinStep();
        double double37 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        java.lang.String str38 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str38, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14159");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler6.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler6.evaluateStep(stepInterpolator9);
        boolean boolean11 = switchingFunctionsHandler6.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler6.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler6.getEventTime();
        double double15 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray21 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray21, doubleArray31);
        double[] doubleArray41 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double45 = switchingFunctionsHandler44.getEventTime();
        double[] doubleArray53 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean54 = switchingFunctionsHandler44.reset((double) (byte) 1, doubleArray53);
        double[] doubleArray58 = new double[] { 100.0f, 100 };
        boolean boolean59 = switchingFunctionsHandler44.reset(Double.NaN, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray76 = new double[] { 100.0f, 100 };
        boolean boolean77 = switchingFunctionsHandler62.reset(Double.NaN, doubleArray76);
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray76, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray58, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray41, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 35.0d, doubleArray31, doubleArray78);
        switchingFunctionsHandler6.stepAccepted(1.7320508075688772d, doubleArray31);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
    }

    @Test
    public void test14160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14160");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test14161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14161");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double59 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10L, 97.0d, (int) (byte) 100);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double66 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str67 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str68 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str68, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14162");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, (double) 1, (double) (short) 0, (double) 100L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double7 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) (byte) -1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test14163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14163");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException29.addSuppressed((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        derivativeException18.addSuppressed((java.lang.Throwable) integratorException43);
        integratorException14.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException46);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test14164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14164");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test14165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14165");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 0.0d, 0.0d, (int) (short) 10);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (byte) 10, (double) 'a', (int) (short) 1);
        double double30 = switchingFunctionsHandler0.getEventTime();
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler33.isEmpty();
        double double45 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray54 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        double[] doubleArray89 = new double[] { 100.0f, 100 };
        boolean boolean90 = switchingFunctionsHandler75.reset(Double.NaN, doubleArray89);
        double[] doubleArray91 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray89, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray71, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator94 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray54, doubleArray91);
        boolean boolean95 = switchingFunctionsHandler33.reset((double) (-1L), doubleArray54);
        boolean boolean96 = switchingFunctionsHandler0.reset(3.1622776601683795d, doubleArray54);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test14166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14166");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str48 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str50 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str48, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14167");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        boolean boolean43 = switchingFunctionsHandler0.isEmpty();
        boolean boolean44 = switchingFunctionsHandler0.stop();
        double double45 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler0.evaluateStep(stepInterpolator46);
        boolean boolean48 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, (double) 10L, 56.568542494923804d, (int) (byte) 0);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test14168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14168");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray21 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.Throwable[] throwableArray38 = derivativeException37.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        java.lang.String str40 = integratorException39.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException39);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        integratorException39.addSuppressed((java.lang.Throwable) integratorException52);
        integratorException25.addSuppressed((java.lang.Throwable) integratorException52);
        java.lang.Object[] objArray55 = integratorException52.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException56);
        java.lang.Object[] objArray58 = integratorException56.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test14169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14169");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double54 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator49.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler55.handleStep(stepInterpolator56, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        stepHandler55.handleStep(stepInterpolator59, false);
        stepHandler55.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler55);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.Class<?> wildcardClass65 = stepHandler64.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test14170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14170");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        graggBulirschStoerIntegrator31.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator31.addSwitchingFunction(switchingFunction36, (double) 1L, (double) 100L, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler41 = graggBulirschStoerIntegrator31.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler42 = graggBulirschStoerIntegrator31.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        stepHandler42.handleStep(stepInterpolator43, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler42);
        double double47 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 1, (double) 10.0f, (double) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction52, (double) (short) 100, 1.0d, (int) (byte) 10);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction60, 5.916079783099616d, (double) (byte) 10, (int) (short) 100);
        double double65 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertNotNull(stepHandler42);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test14171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14171");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, (double) (-1.0f), (double) 0L, (int) (short) 10);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 9.26731744662116d, (double) 2, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test14172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14172");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler65.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test14173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14173");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (int) '4', 1, (double) 100);
        graggBulirschStoerIntegrator42.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction57, (double) (byte) 100, 9.848857801796104d, (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction62, 38.3753555559862d, 1.7782794100389228d, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator42.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test14174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14174");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        double double87 = graggBulirschStoerIntegrator80.getCurrentStepStart();
        double double88 = graggBulirschStoerIntegrator80.getCurrentStepStart();
        double double89 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        double double90 = graggBulirschStoerIntegrator80.getMinStep();
        double double91 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.916079783099616d + "'", double86 == 5.916079783099616d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 5.916079783099616d + "'", double89 == 5.916079783099616d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 5.916079783099616d + "'", double91 == 5.916079783099616d);
    }

    @Test
    public void test14175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14175");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str48 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 3, (double) 3, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 13.92838827718412d, 17.752843424574987d, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str48, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14176");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) (short) 0, (double) 100L, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, (double) 1.0f, (double) 10, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction64, (double) (short) -1, (double) 2, 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test14177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14177");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), 3.0d, (double) (short) 1, (double) (short) -1);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        double[] doubleArray19 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean20 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = new double[] { 100.0f, 100 };
        boolean boolean25 = switchingFunctionsHandler10.reset(Double.NaN, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray60, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray42, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray24, doubleArray42);
        graggBulirschStoerIntegrator65.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double70 = graggBulirschStoerIntegrator65.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator65.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        double double76 = graggBulirschStoerIntegrator65.getCurrentSignedStepsize();
        double double77 = graggBulirschStoerIntegrator65.getMinStep();
        graggBulirschStoerIntegrator65.setOrderControl(100, (double) (short) 1, (double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator65.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction85, 5.009970139234591d, 9.300868483181675d, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertNotNull(stepHandler84);
    }

    @Test
    public void test14178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14178");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray7);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test14179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14179");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getMinStep();
        double double77 = graggBulirschStoerIntegrator75.getMinStep();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
    }

    @Test
    public void test14180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14180");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction37, (double) 'a', 3.1622776601683795d, (int) (short) 100);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 0.0f);
        double double44 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 23.40347319320716d, (double) 1L, 13.92838827718412d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator55.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator55.addSwitchingFunction(switchingFunction57, 31.622776601683793d, (double) (short) 0, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator55.addSwitchingFunction(switchingFunction62, 3.1622776601683795d, (double) (-1), (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator55.addSwitchingFunction(switchingFunction67, 4.161791450287818d, 0.0d, (int) (byte) 10);
        double double72 = graggBulirschStoerIntegrator55.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator55.getStepHandler();
        graggBulirschStoerIntegrator50.setStepHandler(stepHandler73);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler73);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 3.1622776601683795d + "'", double72 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler73);
    }

    @Test
    public void test14181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14181");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray43 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler44.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler44.evaluateStep(stepInterpolator48);
        boolean boolean50 = switchingFunctionsHandler44.isEmpty();
        double double51 = switchingFunctionsHandler44.getEventTime();
        boolean boolean52 = switchingFunctionsHandler44.stop();
        double double53 = switchingFunctionsHandler44.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        switchingFunctionsHandler44.stepAccepted((double) 100L, doubleArray73);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.160740129524925d, (double) ' ', doubleArray43, doubleArray73);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.623413251903491d, (double) 2, doubleArray38, doubleArray73);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
    }

    @Test
    public void test14182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14182");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        double double54 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, (double) 10.0f, (double) 3);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, (double) '4', (double) 3, 3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test14183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14183");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray9);
        java.lang.Class<?> wildcardClass14 = strArray9.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test14184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14184");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double34 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double35 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setStepsizeControl(Double.NaN, (double) 0.0f, (double) (short) 10, (double) 'a');
        double double41 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test14185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14185");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray26);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException30);
        java.lang.String str32 = integratorException30.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str32, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14186");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean14 = switchingFunctionsHandler13.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler13.evaluateStep(stepInterpolator15);
        boolean boolean17 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double[] doubleArray74 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean75 = switchingFunctionsHandler65.reset((double) (byte) 1, doubleArray74);
        double[] doubleArray79 = new double[] { 100.0f, 100 };
        boolean boolean80 = switchingFunctionsHandler65.reset(Double.NaN, doubleArray79);
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray79, doubleArray81);
        switchingFunctionsHandler59.stepAccepted((double) (short) 10, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray57, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1), (double) 10.0f, doubleArray37, doubleArray81);
        switchingFunctionsHandler13.stepAccepted((double) (-1.0f), doubleArray81);
        boolean boolean87 = switchingFunctionsHandler0.reset((double) (short) 100, doubleArray81);
        boolean boolean88 = switchingFunctionsHandler0.isEmpty();
        boolean boolean89 = switchingFunctionsHandler0.isEmpty();
        double double90 = switchingFunctionsHandler0.getEventTime();
        double double91 = switchingFunctionsHandler0.getEventTime();
        boolean boolean92 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator93 = null;
        boolean boolean94 = switchingFunctionsHandler0.evaluateStep(stepInterpolator93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test14187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14187");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        double[] doubleArray44 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray25, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray2, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray65, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double70 = switchingFunctionsHandler69.getEventTime();
        double[] doubleArray78 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean79 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray78);
        double[] doubleArray83 = new double[] { 100.0f, 100 };
        boolean boolean84 = switchingFunctionsHandler69.reset(Double.NaN, doubleArray83);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray67, doubleArray83);
        graggBulirschStoerIntegrator85.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double90 = graggBulirschStoerIntegrator85.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator85.getStepHandler();
        graggBulirschStoerIntegrator85.setInterpolationControl(false, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler95 = graggBulirschStoerIntegrator85.getStepHandler();
        graggBulirschStoerIntegrator46.setStepHandler(stepHandler95);
        java.lang.String str97 = graggBulirschStoerIntegrator46.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertNotNull(stepHandler95);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str97, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14188");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        double double27 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction28, 9.848857801796104d, (double) (byte) 1, (int) (short) 100);
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        stepHandler33.handleStep(stepInterpolator34, false);
        java.lang.Class<?> wildcardClass37 = stepHandler33.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler33);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test14189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14189");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler0.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler20.add(switchingFunction26, (double) 1L, (double) 1, 1);
        boolean boolean31 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler33.reset(0.0d, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler20.reset(52.0d, doubleArray44);
        boolean boolean48 = switchingFunctionsHandler18.reset(17.320508075688775d, doubleArray44);
        boolean boolean49 = switchingFunctionsHandler0.reset(5.477225575051661d, doubleArray44);
        boolean boolean50 = switchingFunctionsHandler0.isEmpty();
        double double51 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray53 = null;
        switchingFunctionsHandler0.stepAccepted(5.623413251903491d, doubleArray53);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test14190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14190");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.78279410038923d, 2.0d, 17.320508075688775d, (double) 10L);
        graggBulirschStoerIntegrator4.setInitialStepSize(31.71666350274487d);
    }

    @Test
    public void test14191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14191");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        boolean boolean59 = switchingFunctionsHandler0.isEmpty();
        boolean boolean60 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler0.evaluateStep(stepInterpolator61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test14192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14192");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.lang.Throwable[] throwableArray11 = integratorException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray11);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test14193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14193");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray25);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException29);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.String str32 = derivativeException17.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str32, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14194");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean7 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler6.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler6.evaluateStep(stepInterpolator10);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        double double13 = switchingFunctionsHandler6.getEventTime();
        double double14 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler16.isEmpty();
        double double28 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray37 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray37, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler16.reset((double) (-1L), doubleArray37);
        switchingFunctionsHandler6.stepAccepted(56.23413251903491d, doubleArray37);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray37);
        double double81 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
        boolean boolean84 = switchingFunctionsHandler0.isEmpty();
        boolean boolean85 = switchingFunctionsHandler0.stop();
        boolean boolean86 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test14195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14195");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException4);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray10 = derivativeException8.getArguments();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray28 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.Throwable[] throwableArray32 = derivativeException26.getSuppressed();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str38 = derivativeException36.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray50 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException54);
        java.lang.Throwable[] throwableArray56 = derivativeException26.getSuppressed();
        java.lang.String str57 = derivativeException26.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray61 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException62);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!]");
    }

    @Test
    public void test14196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14196");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray24 = new double[] {};
        switchingFunctionsHandler21.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler15.stepAccepted(5.916079783099616d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test14197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14197");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', Double.NaN, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, (double) 100, (double) (-1), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) 'a', (int) (short) 1, 100.0d);
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str62 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14198");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray33 = derivativeException27.getSuppressed();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        derivativeException27.addSuppressed((java.lang.Throwable) derivativeException44);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        derivativeException53.addSuppressed((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.Object[] objArray66 = derivativeException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException65);
        derivativeException44.addSuppressed((java.lang.Throwable) integratorException67);
        java.lang.String str69 = integratorException67.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException67);
        java.lang.String str71 = integratorException67.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test14199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14199");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(56.568542494923804d, 0.0d, 0.0d, 4.161791450287818d);
    }

    @Test
    public void test14200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14200");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray57, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, 0.0d, doubleArray38, doubleArray59);
        double double62 = graggBulirschStoerIntegrator61.getMaxStep();
        double double63 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator68.addSwitchingFunction(switchingFunction69, (double) (-1), (-1.0d), 0);
        java.lang.String str74 = graggBulirschStoerIntegrator68.getName();
        double double75 = graggBulirschStoerIntegrator68.getCurrentSignedStepsize();
        java.lang.String str76 = graggBulirschStoerIntegrator68.getName();
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler77);
        graggBulirschStoerIntegrator61.setOrderControl((int) 'a', 1.7782794100389228d, 56.23413251903491d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction83, 38.3753555559862d, (double) (-1.0f), 3);
        double double88 = graggBulirschStoerIntegrator61.getMaxStep();
        java.lang.String str89 = graggBulirschStoerIntegrator61.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5.477225575051661d + "'", double75 == 5.477225575051661d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str89, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14201");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray31, doubleArray33);
        switchingFunctionsHandler11.stepAccepted((double) (short) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) (short) 100, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler0.add(switchingFunction37, 1.0d, 0.0d, (int) '4');
        double double42 = switchingFunctionsHandler0.getEventTime();
        double double43 = switchingFunctionsHandler0.getEventTime();
        double double44 = switchingFunctionsHandler0.getEventTime();
        double double45 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = switchingFunctionsHandler0.evaluateStep(stepInterpolator46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
    }

    @Test
    public void test14202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14202");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test14203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14203");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str57 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 6.928935924497552d, 2.514866859365871d, 0);
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test14204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14204");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, Double.NaN, (double) 100.0f, 5.477225575051661d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        graggBulirschStoerIntegrator43.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction46, 3.1622776601683795d, (double) (short) 10, 3);
        graggBulirschStoerIntegrator43.setInterpolationControl(false, (int) (byte) 0);
        double double54 = graggBulirschStoerIntegrator43.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator43.getStepHandler();
        stepHandler55.reset();
        stepHandler55.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test14205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14205");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray23 = derivativeException9.getSuppressed();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test14206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14206");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.477225575051661d, (double) 10L, (double) (byte) 0, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInitialStepSize(15.06756998238367d);
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test14207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14207");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        double double69 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator19.getStepHandler();
        double double71 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setOrderControl(3, (double) ' ', 10.0d);
        double double76 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
    }

    @Test
    public void test14208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14208");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) 10.0f, 97.0d, (double) 100);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, 15.06756998238367d, 9.300868483181675d, (int) '#');
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 18.708286933869708d + "'", double5 == 18.708286933869708d);
    }

    @Test
    public void test14209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14209");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        java.lang.String str18 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler19.reset();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test14210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14210");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        integratorException9.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray19 = derivativeException17.getSuppressed();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException31);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        integratorException31.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.String str56 = derivativeException55.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException55);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test14211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14211");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) (-1), 56.23413251903491d, (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 100L, (double) (-1L), (int) (short) -1);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test14212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14212");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, 38.3753555559862d, 5.916079783099616d, (int) '4');
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        boolean boolean15 = switchingFunctionsHandler13.isEmpty();
        boolean boolean16 = switchingFunctionsHandler13.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        switchingFunctionsHandler18.stepAccepted((double) (short) 10, doubleArray40);
        switchingFunctionsHandler13.stepAccepted((double) 100.0f, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        double[] doubleArray61 = new double[] { 100.0f, 100 };
        boolean boolean62 = switchingFunctionsHandler47.reset(Double.NaN, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler63.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler63.add(switchingFunction66, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double75 = switchingFunctionsHandler74.getEventTime();
        double[] doubleArray83 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean84 = switchingFunctionsHandler74.reset((double) (byte) 1, doubleArray83);
        boolean boolean85 = switchingFunctionsHandler72.reset(0.0d, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler63.reset((double) (byte) 100, doubleArray83);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray61, doubleArray83);
        boolean boolean88 = switchingFunctionsHandler13.reset((double) '4', doubleArray61);
        boolean boolean89 = switchingFunctionsHandler0.reset(100.0d, doubleArray61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test14213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14213");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(15.06756998238367d, 17.320508075688775d, (double) (short) -1, 13.160740129524925d);
    }

    @Test
    public void test14214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14214");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test14215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14215");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        switchingFunctionsHandler9.stepAccepted((double) (short) 10, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler9.reset((double) 0L, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler0.add(switchingFunction48, (double) 0.0f, 5.916079783099616d, (int) (short) 0);
        boolean boolean53 = switchingFunctionsHandler0.stop();
        double double54 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test14216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14216");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test14217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14217");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) 2, 100.0d, (int) 'a');
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 100);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(15.18214344379753d, (double) 'a', (double) (-1), (double) (short) 100);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator69.setInitialStepSize((double) 10L);
        java.lang.String str72 = graggBulirschStoerIntegrator69.getName();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator69.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator64.setStepHandler(stepHandler74);
        stepHandler74.reset();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler74);
        double double78 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str72, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test14218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14218");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.String str22 = integratorException21.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException" + "'", str22, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test14219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14219");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction59, 100.0d, (double) 'a', 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction64, (double) (byte) 1, (double) 10.0f, (int) (byte) 1);
        graggBulirschStoerIntegrator57.setOrderControl(1, 0.0d, (double) (short) 100);
        double double73 = graggBulirschStoerIntegrator57.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
    }

    @Test
    public void test14220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14220");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 10, (int) (short) 1, 4.161791450287818d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler80);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(stepHandler80);
    }

    @Test
    public void test14221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14221");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.Throwable[] throwableArray45 = derivativeException15.getSuppressed();
        java.lang.String str46 = derivativeException15.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray54);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException59);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException59);
        java.lang.Class<?> wildcardClass63 = derivativeException59.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test14222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14222");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test14223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14223");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        graggBulirschStoerIntegrator67.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler75);
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 3, (int) '4', 56.23413251903491d);
        double double82 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test14224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14224");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.623413251903491d, (double) 1, 0.0d, (double) 100.0f);
    }

    @Test
    public void test14225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14225");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(4.161791450287818d, (double) 100.0f, 1.0d, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (byte) 1);
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test14226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14226");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) 1L, (double) 10.0f, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 17.78279410038923d, (double) (-1L), (int) (byte) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14227");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler6.add(switchingFunction7, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double19 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray27 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean28 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray27);
        double[] doubleArray32 = new double[] { 100.0f, 100 };
        boolean boolean33 = switchingFunctionsHandler18.reset(Double.NaN, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray32, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray34, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler6.reset(100.0d, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        switchingFunctionsHandler54.stepAccepted((double) (short) 10, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray34, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler0.reset(0.0d, doubleArray34);
        double double81 = switchingFunctionsHandler0.getEventTime();
        boolean boolean82 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        switchingFunctionsHandler0.add(switchingFunction83, 23.40347319320716d, 100.0d, (int) '4');
        boolean boolean88 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test14228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14228");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        java.lang.String str24 = integratorException23.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.Throwable[] throwableArray39 = derivativeException37.getSuppressed();
        java.lang.String str40 = derivativeException37.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str40, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test14229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14229");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test14230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14230");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14231");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 1.0d, Double.NaN, (int) (short) 100);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test14232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14232");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, 4.216965034285822d, 23.40347319320716d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test14233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14233");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException6.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("", objArray7);
        java.lang.String str10 = integratorException9.getPattern();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test14234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14234");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        java.lang.String str24 = integratorException23.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.Throwable[] throwableArray39 = integratorException23.getSuppressed();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray47);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException53);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException65);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        java.lang.Object[] objArray72 = derivativeException70.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        derivativeException65.addSuppressed((java.lang.Throwable) derivativeException70);
        java.lang.Throwable[] throwableArray76 = derivativeException70.getSuppressed();
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException80);
        java.lang.String str82 = derivativeException80.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException80);
        derivativeException70.addSuppressed((java.lang.Throwable) derivativeException80);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException80);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException80);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test14235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14235");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test14236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14236");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (short) 1, (double) (short) 1, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) -1, 3.0d, (double) (short) 1);
        double double11 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) 1);
        double double15 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test14237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14237");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator49.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        graggBulirschStoerIntegrator77.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator77.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler82.handleStep(stepInterpolator84, true);
        stepHandler82.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 100);
        double double92 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test14238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14238");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        graggBulirschStoerIntegrator61.setInitialStepSize((double) (byte) 10);
        graggBulirschStoerIntegrator61.setOrderControl(0, (double) (byte) 1, (double) 0);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator61.getStepHandler();
        double double69 = graggBulirschStoerIntegrator61.getMaxStep();
        double double70 = graggBulirschStoerIntegrator61.getMinStep();
        graggBulirschStoerIntegrator61.setStepsizeControl(2.0d, 0.0d, 2.0d, (double) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 100.0d + "'", double70 == 100.0d);
    }

    @Test
    public void test14239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14239");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) (byte) 10, (double) (byte) 1, 0);
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction59, 17.320508075688775d, Double.NaN, 3);
        double double64 = graggBulirschStoerIntegrator42.getMinStep();
        graggBulirschStoerIntegrator42.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction67, 31.622776601683793d, 17.752843424574987d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test14240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14240");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.String str22 = derivativeException9.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        java.lang.String str24 = integratorException23.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test14241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14241");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        boolean boolean7 = switchingFunctionsHandler5.isEmpty();
        boolean boolean8 = switchingFunctionsHandler5.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        switchingFunctionsHandler5.stepAccepted(10.0d, doubleArray30);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray30);
        boolean boolean51 = switchingFunctionsHandler0.stop();
        boolean boolean52 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler0.evaluateStep(stepInterpolator53);
        boolean boolean55 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test14242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14242");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException16);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test14243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14243");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double67 = switchingFunctionsHandler66.getEventTime();
        double[] doubleArray75 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean76 = switchingFunctionsHandler66.reset((double) (byte) 1, doubleArray75);
        double[] doubleArray80 = new double[] { 100.0f, 100 };
        boolean boolean81 = switchingFunctionsHandler66.reset(Double.NaN, doubleArray80);
        double[] doubleArray82 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray80, doubleArray82);
        double double84 = graggBulirschStoerIntegrator83.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator83.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double90 = graggBulirschStoerIntegrator83.getMinStep();
        double double91 = graggBulirschStoerIntegrator83.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler92 = graggBulirschStoerIntegrator83.getStepHandler();
        java.lang.String str93 = graggBulirschStoerIntegrator83.getName();
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator83.getStepHandler();
        boolean boolean95 = stepHandler94.requiresDenseOutput();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler94);
        org.apache.commons.math.ode.StepHandler stepHandler97 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str98 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 10.0d + "'", double90 == 10.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-1.0d) + "'", double91 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str93, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(stepHandler97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str98, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14244");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.848857801796104d, Double.NaN, (double) (byte) 10, 0.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test14245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14245");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), 4.449373890263558d, (double) (short) 0, (double) (byte) -1);
    }

    @Test
    public void test14246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14246");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = integratorException43.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test14247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14247");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, Double.NaN, (double) (byte) 1, (int) (short) 10);
        double double64 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
    }

    @Test
    public void test14248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14248");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray45 = derivativeException5.getSuppressed();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException49);
        java.lang.String str51 = derivativeException49.getPattern();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray60);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException63);
        derivativeException49.addSuppressed((java.lang.Throwable) derivativeException63);
        java.lang.String str66 = derivativeException63.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        java.lang.Object[] objArray73 = derivativeException71.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException71);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        derivativeException67.addSuppressed((java.lang.Throwable) derivativeException71);
        java.lang.String str77 = derivativeException71.getPattern();
        java.lang.String str78 = derivativeException71.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException71);
        java.lang.Throwable[] throwableArray80 = derivativeException71.getSuppressed();
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException71);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str66, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[hi!]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(throwableArray80);
    }

    @Test
    public void test14249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14249");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        java.lang.String str63 = graggBulirschStoerIntegrator57.getName();
        double double64 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator57.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator57.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction67, 30.408967315912587d, (double) (short) 0, (int) ' ');
        java.lang.String str72 = graggBulirschStoerIntegrator57.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str63, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str72, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14250");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray26);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException30);
        java.lang.String str32 = derivativeException15.getPattern();
        java.lang.String str33 = derivativeException15.getPattern();
        java.lang.Object[] objArray34 = derivativeException15.getArguments();
        java.lang.Object[] objArray35 = derivativeException15.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str32, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str33, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
    }

    @Test
    public void test14251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14251");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 1, 10, (double) ' ');
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInitialStepSize(56.23413251903491d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction18, 4.449373890263558d, 17.78279410038923d, 0);
        double double23 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test14252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14252");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 0L, (double) (-1L));
        double double49 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (byte) 100, (double) 3);
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 23.40347319320716d, 31.622776601683793d, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double65 = switchingFunctionsHandler64.getEventTime();
        double[] doubleArray73 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean74 = switchingFunctionsHandler64.reset((double) (byte) 1, doubleArray73);
        double[] doubleArray78 = new double[] { 100.0f, 100 };
        boolean boolean79 = switchingFunctionsHandler64.reset(Double.NaN, doubleArray78);
        double[] doubleArray80 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray78, doubleArray80);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        graggBulirschStoerIntegrator81.addSwitchingFunction(switchingFunction82, (double) 100.0f, (double) 0, 0);
        double double87 = graggBulirschStoerIntegrator81.getCurrentStepStart();
        double double88 = graggBulirschStoerIntegrator81.getMaxStep();
        graggBulirschStoerIntegrator81.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator81.getStepHandler();
        stepHandler91.reset();
        boolean boolean93 = stepHandler91.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        stepHandler91.handleStep(stepInterpolator94, false);
        stepHandler91.reset();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-1.0d) + "'", double88 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test14253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14253");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 2, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 0.0d, (double) 10, 3);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1.0f, (double) 3, 0.0d, 2.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction67, 5.477225575051661d, 0.0d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
    }

    @Test
    public void test14254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14254");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(8.366600265340756d, 3.0d, 8.366600265340756d, (double) 2);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, 5.009970139234591d, 5.477225575051661d, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.009970139234591d + "'", double5 == 5.009970139234591d);
    }

    @Test
    public void test14255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14255");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) 100, (double) (byte) 100, (double) (short) 0);
        graggBulirschStoerIntegrator4.setOrderControl(1, 35.0d, (double) 100);
        double double9 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double10 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction13, (double) 100L, 5.916079783099616d, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 31.622776601683793d + "'", double9 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertNotNull(stepHandler12);
    }

    @Test
    public void test14256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14256");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', Double.NaN, (double) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) (short) 1, (double) 1L);
        double double56 = graggBulirschStoerIntegrator38.getMaxStep();
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test14257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14257");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler7.add(switchingFunction8, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean13 = switchingFunctionsHandler7.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray28 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean29 = switchingFunctionsHandler19.reset((double) (byte) 1, doubleArray28);
        double[] doubleArray33 = new double[] { 100.0f, 100 };
        boolean boolean34 = switchingFunctionsHandler19.reset(Double.NaN, doubleArray33);
        double[] doubleArray35 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray33, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double[] doubleArray46 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean47 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray46);
        double[] doubleArray51 = new double[] { 100.0f, 100 };
        boolean boolean52 = switchingFunctionsHandler37.reset(Double.NaN, doubleArray51);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray35, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler7.reset(100.0d, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler55.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        double[] doubleArray75 = new double[] { 100.0f, 100 };
        boolean boolean76 = switchingFunctionsHandler61.reset(Double.NaN, doubleArray75);
        double[] doubleArray77 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray75, doubleArray77);
        switchingFunctionsHandler55.stepAccepted((double) (short) 10, doubleArray77);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray35, doubleArray77);
        boolean boolean81 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray35);
        boolean boolean82 = switchingFunctionsHandler0.stop();
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test14258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14258");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) (short) 100, (double) (byte) 1, (double) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 4.161791450287818d, (double) 10, (int) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.String str11 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, 4.161791450287818d, 13.33521432163324d, 0);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14259");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(3.1622776601683795d);
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) '#', (double) 1.0f, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize(1.7320508075688772d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, 12.823355189994377d, 17.88854381999832d, (int) (short) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14260");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        java.lang.String str11 = derivativeException9.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test14261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14261");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (-1.0d), (double) 100L, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction63, (double) (byte) 100, (double) ' ', (int) (byte) 100);
        double double68 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test14262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14262");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInitialStepSize(97.0d);
        double double30 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test14263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14263");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        switchingFunctionsHandler5.stepAccepted((double) (short) 10, doubleArray27);
        switchingFunctionsHandler0.stepAccepted((double) 100.0f, doubleArray27);
        boolean boolean31 = switchingFunctionsHandler0.isEmpty();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        boolean boolean33 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler0.evaluateStep(stepInterpolator34);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test14264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14264");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", objArray13);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.Object[] objArray32 = derivativeException30.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        derivativeException25.addSuppressed((java.lang.Throwable) derivativeException30);
        java.lang.Throwable[] throwableArray36 = derivativeException30.getSuppressed();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        java.lang.String str42 = derivativeException40.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException30.addSuppressed((java.lang.Throwable) derivativeException40);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        derivativeException30.addSuppressed((java.lang.Throwable) derivativeException58);
        java.lang.Throwable[] throwableArray60 = derivativeException30.getSuppressed();
        java.lang.String str61 = derivativeException30.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        integratorException14.addSuppressed((java.lang.Throwable) integratorException63);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test14265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14265");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (byte) 10, 2.514866859365871d, 3.1622776601683795d);
    }

    @Test
    public void test14266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14266");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), 32.0d, (double) (short) 10, (double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (byte) 100, 0.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator49.setOrderControl((int) '#', (double) '#', (double) 100L);
        graggBulirschStoerIntegrator49.setStabilityCheck(true, (int) (byte) 1, 1, (double) 100.0f);
        java.lang.String str71 = graggBulirschStoerIntegrator49.getName();
        double double72 = graggBulirschStoerIntegrator49.getMinStep();
        graggBulirschStoerIntegrator49.setOrderControl((int) (short) 10, (double) 1L, 52.0d);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator49.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler77.handleStep(stepInterpolator80, false);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str71, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test14267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14267");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 10);
        java.lang.String str13 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (byte) -1);
        double double17 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction18, 6.841560230416328d, 15.298193747370034d, (int) (byte) 100);
        double double23 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str13, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 5.477225575051661d + "'", double23 == 5.477225575051661d);
    }

    @Test
    public void test14268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14268");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (byte) 100, (double) 1L);
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 5.477225575051661d, 5.656854249492381d, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14269");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 0L, (double) (short) -1, (double) 10L);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 100, (int) (byte) 0, (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) 3, 0.0d, (int) (byte) 10);
    }

    @Test
    public void test14270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14270");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("", objArray6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        java.lang.Object[] objArray9 = integratorException7.getArguments();
        java.lang.Object[] objArray10 = integratorException7.getArguments();
        java.lang.Throwable[] throwableArray11 = integratorException7.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException7);
        java.lang.String str13 = integratorException7.getPattern();
        java.lang.Class<?> wildcardClass14 = integratorException7.getClass();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test14271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14271");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 10, (-1.0d), Double.NaN);
    }

    @Test
    public void test14272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14272");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray14);
        java.lang.Throwable[] throwableArray23 = integratorException22.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException", (java.lang.Object[]) throwableArray23);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test14273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14273");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler0.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (double) 1L, 13.37480609952844d, (int) (short) -1);
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14274");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 1, (double) '4');
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str60 = graggBulirschStoerIntegrator38.getName();
        double double61 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
    }

    @Test
    public void test14275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14275");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.Throwable[] throwableArray17 = derivativeException16.getSuppressed();
        java.lang.Object[] objArray18 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        java.lang.String str21 = derivativeException20.getPattern();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str21, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test14276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14276");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray28 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray35 = derivativeException34.getArguments();
        java.lang.String str36 = derivativeException34.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str36, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14277");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        graggBulirschStoerIntegrator46.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator46.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator46.getStepHandler();
        graggBulirschStoerIntegrator46.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator46.getStepHandler();
        boolean boolean60 = stepHandler59.requiresDenseOutput();
        stepHandler59.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler59);
        double double63 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 10L, 4.216965034285822d, 1.7320508075688772d, 13.92838827718412d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test14278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14278");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test14279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14279");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(31.209033090201576d, 17.88854381999832d, 13.33521432163324d, (double) '4');
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double10 = graggBulirschStoerIntegrator9.getCurrentStepStart();
        graggBulirschStoerIntegrator9.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator9.getStepHandler();
        graggBulirschStoerIntegrator9.setStabilityCheck(false, 0, (-1), (-1.0d));
        double double21 = graggBulirschStoerIntegrator9.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator9.setOrderControl((int) (short) -1, (double) '4', 1.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray46, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray48, doubleArray64);
        double[] doubleArray67 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray48, doubleArray67);
        double double69 = graggBulirschStoerIntegrator68.getCurrentStepStart();
        double double70 = graggBulirschStoerIntegrator68.getCurrentStepStart();
        double double71 = graggBulirschStoerIntegrator68.getMaxStep();
        double double72 = graggBulirschStoerIntegrator68.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator68.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        stepHandler73.handleStep(stepInterpolator74, false);
        graggBulirschStoerIntegrator9.setStepHandler(stepHandler73);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler73);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.0d) + "'", double72 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler73);
    }

    @Test
    public void test14280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14280");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, 32.0d, 3.1622776601683795d, 0);
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double16 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double17 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double18 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInitialStepSize(5.009970139234591d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test14281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14281");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(98.48857801796105d, 0.0d, (double) 100L, 6.841560230416328d);
    }

    @Test
    public void test14282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14282");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray28);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        derivativeException29.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.Throwable[] throwableArray40 = derivativeException29.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray40);
        java.lang.Throwable throwable43 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException(throwable43);
        java.lang.Object[] objArray45 = derivativeException44.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        integratorException42.addSuppressed((java.lang.Throwable) derivativeException46);
        java.lang.Throwable[] throwableArray48 = integratorException42.getSuppressed();
        java.lang.String[] strArray57 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray57);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray57);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException59);
        java.lang.Throwable[] throwableArray61 = derivativeException60.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException60);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException62);
        integratorException42.addSuppressed((java.lang.Throwable) derivativeException63);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test14283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14283");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) '#', (double) 'a', (int) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, (double) 1.0f, 32.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, (double) 10.0f, (double) 100, (int) (short) 100);
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str65 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInitialStepSize(18.708286933869708d);
        double double68 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(5.009970139234591d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test14284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14284");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray9);
        java.lang.Object[] objArray18 = derivativeException17.getArguments();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!]");
    }

    @Test
    public void test14285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14285");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray69, doubleArray85);
        double[] doubleArray88 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray69, doubleArray88);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator89.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler90);
        org.apache.commons.math.ode.StepHandler stepHandler92 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction93, (double) (short) 10, (double) 0.0f, (int) (byte) 100);
        double double98 = graggBulirschStoerIntegrator38.getMaxStep();
        double double99 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertNotNull(stepHandler92);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test14286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14286");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException41);
        derivativeException31.addSuppressed((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException41);
        java.lang.Object[] objArray46 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException47);
        derivativeException13.addSuppressed((java.lang.Throwable) integratorException47);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!]");
    }

    @Test
    public void test14287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14287");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setStepsizeControl(18.708286933869708d, (double) '4', 0.0d, 13.37480609952844d);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0L, 10.0d, (double) (byte) 100, 17.752843424574987d);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test14288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14288");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.String str26 = derivativeException25.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        java.lang.String str28 = derivativeException25.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test14289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14289");
        double[] doubleArray7 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        double[] doubleArray19 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean20 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = new double[] { 100.0f, 100 };
        boolean boolean25 = switchingFunctionsHandler10.reset(Double.NaN, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray24, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray7, doubleArray44);
        double double48 = graggBulirschStoerIntegrator47.getMinStep();
        java.lang.String str49 = graggBulirschStoerIntegrator47.getName();
        graggBulirschStoerIntegrator47.setInterpolationControl(false, (int) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14290");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (short) 10, 2, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction36, (double) (-1L), (double) (-1L), (int) (byte) 1);
        java.lang.String str41 = graggBulirschStoerIntegrator19.getName();
        double double42 = graggBulirschStoerIntegrator19.getMinStep();
        double double43 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str41, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test14291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14291");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        java.lang.String str44 = graggBulirschStoerIntegrator42.getName();
        java.lang.String str45 = graggBulirschStoerIntegrator42.getName();
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (int) (short) 10, 10, (double) 0.0f);
        java.lang.String str51 = graggBulirschStoerIntegrator42.getName();
        graggBulirschStoerIntegrator42.setInterpolationControl(false, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14292");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, 4.216965034285822d, 9.898464007679532d, 17.320508075688775d);
    }

    @Test
    public void test14293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14293");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 1L, (double) 1, 1);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler13.reset(0.0d, doubleArray24);
        boolean boolean27 = switchingFunctionsHandler0.reset(52.0d, doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        double double29 = switchingFunctionsHandler0.getEventTime();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        boolean boolean31 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test14294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14294");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1), 15.18214344379753d, (double) (short) 0, 97.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass6 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test14295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14295");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', 30.408967315912587d, 0.0d, (double) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14296");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray19 = derivativeException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException41);
        derivativeException31.addSuppressed((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        java.lang.String str45 = derivativeException44.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        integratorException21.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException44);
        java.lang.Object[] objArray49 = integratorException48.getArguments();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        java.lang.Object[] objArray55 = derivativeException54.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        integratorException48.addSuppressed((java.lang.Throwable) derivativeException54);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray65);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException67);
        java.lang.String str69 = derivativeException67.getPattern();
        integratorException48.addSuppressed((java.lang.Throwable) derivativeException67);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException48);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str69, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test14297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14297");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        java.lang.String str29 = derivativeException28.getPattern();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str29, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test14298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14298");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 1, (double) (short) -1, (double) (short) 10, Double.NaN);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 1);
        double double8 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str9 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        graggBulirschStoerIntegrator48.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator48.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator48.getStepHandler();
        graggBulirschStoerIntegrator48.setInterpolationControl(true, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator48.addSwitchingFunction(switchingFunction60, (double) '#', (double) (byte) 100, 10);
        double double65 = graggBulirschStoerIntegrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator48.getStepHandler();
        boolean boolean67 = stepHandler66.requiresDenseOutput();
        stepHandler66.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        stepHandler66.handleStep(stepInterpolator70, true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str9, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test14299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14299");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        double double68 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        java.lang.String str74 = graggBulirschStoerIntegrator67.getName();
        double double75 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler78.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test14300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14300");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test14301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14301");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray33 = derivativeException27.getSuppressed();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        derivativeException27.addSuppressed((java.lang.Throwable) derivativeException44);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        derivativeException53.addSuppressed((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.Object[] objArray66 = derivativeException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException65);
        derivativeException44.addSuppressed((java.lang.Throwable) integratorException67);
        java.lang.Object[] objArray69 = integratorException67.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test14302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14302");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, (double) 0.0f, (double) 0.0f, (double) 10L);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (-1.0f), (double) 1.0f, (double) (-1), (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test14303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14303");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 0.0d, 0.0d, (int) (short) 10);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler0.add(switchingFunction25, (double) (byte) 10, (double) 'a', (int) (short) 1);
        double double30 = switchingFunctionsHandler0.getEventTime();
        boolean boolean31 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test14304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14304");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10L, (double) 10L, (double) (short) 0, (double) (short) 0);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (-1), 3.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) 'a');
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test14305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14305");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (short) 10, 2, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction36, (double) (-1L), (double) (-1L), (int) (byte) 1);
        double double41 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction42, 17.78279410038923d, 17.78279410038923d, (int) (short) -1);
        graggBulirschStoerIntegrator19.setInitialStepSize(12.368586720951603d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test14306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14306");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException17);
        java.lang.Throwable[] throwableArray19 = derivativeException18.getSuppressed();
        java.lang.Object[] objArray20 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray20);
        java.lang.Throwable[] throwableArray22 = integratorException21.getSuppressed();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test14307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14307");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.Throwable[] throwableArray15 = derivativeException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.Throwable[] throwableArray18 = derivativeException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test14308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14308");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        double double14 = switchingFunctionsHandler0.getEventTime();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test14309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14309");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction24, (double) 1L, (double) 100L, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator19.getStepHandler();
        boolean boolean30 = stepHandler29.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test14310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14310");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) 1L, 52.0d, (int) (short) 0);
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (-1), 10, (double) 10);
        java.lang.String str61 = graggBulirschStoerIntegrator42.getName();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) (short) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14311");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.92838827718412d, (double) 100, (double) '4', (double) 3);
    }

    @Test
    public void test14312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14312");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, 5.916079783099616d, 23.40347319320716d, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 0.0d, 35.0d, (int) (byte) -1);
    }

    @Test
    public void test14313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14313");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(56.23413251903491d, 17.320508075688775d, (double) (byte) 10, 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 35.0d, (double) (short) 100, (int) (byte) 0);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator14.addSwitchingFunction(switchingFunction15, (double) (-1), (-1.0d), 0);
        java.lang.String str20 = graggBulirschStoerIntegrator14.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double64 = graggBulirschStoerIntegrator59.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator59.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler65.handleStep(stepInterpolator66, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler65.handleStep(stepInterpolator69, false);
        stepHandler65.reset();
        graggBulirschStoerIntegrator14.setStepHandler(stepHandler65);
        boolean boolean74 = stepHandler65.requiresDenseOutput();
        stepHandler65.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        stepHandler65.handleStep(stepInterpolator76, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler65);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, 97.0d, 0.0d, 9.898464007679532d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str20, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test14314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14314");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test14315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14315");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.277951928008462d, 30.408967315912587d, (double) 100, 0.0d);
    }

    @Test
    public void test14316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14316");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        java.lang.String str11 = integratorException10.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str11, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14317");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction18, (double) (byte) 0, (double) (byte) -1, (int) (short) 10);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler28 = graggBulirschStoerIntegrator27.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        stepHandler28.handleStep(stepInterpolator29, true);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler28);
        double double33 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator4.getStepHandler();
        double double35 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
    }

    @Test
    public void test14318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14318");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double59 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10L, 97.0d, (int) (byte) 100);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double66 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test14319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14319");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1L, (double) (byte) 10, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler50.reset();
        stepHandler50.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler50.handleStep(stepInterpolator53, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler50);
    }

    @Test
    public void test14320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14320");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        double double12 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction14, 15.06756998238367d, 4.449373890263558d, 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test14321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14321");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (short) 1, (double) (short) 1, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, 31.622776601683793d, 1.7782794100389228d, (int) (short) 0);
        java.lang.String str11 = graggBulirschStoerIntegrator4.getName();
        double double12 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double13 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test14322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14322");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str51 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, (double) 1L, 12.368586720951603d, 2);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (-1), (int) (byte) 1, 17.752843424574987d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14323");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray28 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray35 = integratorException33.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
    }

    @Test
    public void test14324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14324");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler77.handleStep(stepInterpolator79, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction83, (double) 100, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (byte) 1);
        graggBulirschStoerIntegrator19.setOrderControl((int) '4', (double) 0L, (double) (short) 1);
        graggBulirschStoerIntegrator19.setInitialStepSize(17.88854381999832d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertNotNull(stepHandler89);
    }

    @Test
    public void test14325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14325");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        graggBulirschStoerIntegrator66.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator66.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler71);
        graggBulirschStoerIntegrator38.setOrderControl((int) 'a', (double) 1L, (double) (byte) 1);
        double double77 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) -1);
        double double81 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction85, 17.752843424574987d, (double) 0.0f, (-1));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test14326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14326");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test14327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14327");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.stop();
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray12 = new double[] { 97.0d, 56.23413251903491d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler13.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler13.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler13.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler13.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler13.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler44.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler44.add(switchingFunction47, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double56 = switchingFunctionsHandler55.getEventTime();
        double[] doubleArray64 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean65 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler53.reset(0.0d, doubleArray64);
        boolean boolean67 = switchingFunctionsHandler44.reset((double) (byte) 100, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray42, doubleArray64);
        boolean boolean69 = switchingFunctionsHandler13.reset(17.320508075688775d, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) (byte) 10, doubleArray12, doubleArray42);
        boolean boolean71 = switchingFunctionsHandler0.reset(31.71666350274487d, doubleArray42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler0.evaluateStep(stepInterpolator72);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[97.0, 56.23413251903491]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test14328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14328");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        java.lang.String str50 = graggBulirschStoerIntegrator38.getName();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test14329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14329");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test14330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14330");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction44, (double) 0L, (double) 10, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction49, (double) (short) 10, (double) (byte) 1, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction55, 56.23413251903491d, 4.161791450287818d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction60, (double) 10, (double) 1L, (int) (short) 0);
        graggBulirschStoerIntegrator42.setInitialStepSize(7.691605673134586d);
        double double67 = graggBulirschStoerIntegrator42.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1.0d) + "'", double67 == (-1.0d));
    }

    @Test
    public void test14331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14331");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, 0.0d, (double) (short) -1, (int) (byte) -1);
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 97.0d, 59.16079783099616d, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction63, (double) (byte) 1, 0.0d, (int) '4');
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test14332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14332");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) (byte) -1, (double) 10L, (double) 1L, (double) 100.0f);
        graggBulirschStoerIntegrator57.setStabilityCheck(false, (int) '#', (int) ' ', (double) (short) 1);
        double double69 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setInterpolationControl(true, (int) (byte) 1);
        java.lang.String str73 = graggBulirschStoerIntegrator57.getName();
        double double74 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str73, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
    }

    @Test
    public void test14333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14333");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 5.916079783099616d, (double) (short) 100, 10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) '4', (double) (short) 100, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        graggBulirschStoerIntegrator48.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double53 = graggBulirschStoerIntegrator48.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator48.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        stepHandler54.handleStep(stepInterpolator55, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction59, 1.0d, 15.298193747370034d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction64, 2.0d, 7.211102550927978d, (int) (short) 1);
        double double69 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test14334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14334");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 2);
        graggBulirschStoerIntegrator19.setStabilityCheck(false, 2, 10, 0.0d);
        graggBulirschStoerIntegrator19.setInterpolationControl(true, (int) (short) -1);
        graggBulirschStoerIntegrator19.setInterpolationControl(true, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14335");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        integratorException8.addSuppressed((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray24 = integratorException8.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str38 = derivativeException37.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException49);
        java.lang.Object[] objArray51 = derivativeException50.getArguments();
        java.lang.Object[] objArray52 = derivativeException50.getArguments();
        derivativeException37.addSuppressed((java.lang.Throwable) derivativeException50);
        java.lang.Object[] objArray54 = derivativeException50.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException50);
        java.lang.Throwable[] throwableArray57 = derivativeException50.getSuppressed();
        integratorException28.addSuppressed((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException50);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
    }

    @Test
    public void test14336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14336");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test14337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14337");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", objArray7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException10);
        java.lang.Throwable[] throwableArray13 = integratorException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException10);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test14338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14338");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test14339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14339");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (-1.0d), 32.0d, (int) '#');
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, 8.366600265340756d, (double) 0L, (int) ' ');
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 4.161791450287818d, 0.0d, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test14340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14340");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Throwable[] throwableArray8 = derivativeException3.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray10 = derivativeException3.getArguments();
        java.lang.String str11 = derivativeException3.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str11, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14341");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = integratorException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException16);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test14342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14342");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction65, 9.848857801796104d, (double) 0L, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction70, (double) 2, (double) '#', 1);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 0, (int) (byte) 0, 56.568542494923804d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test14343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14343");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14344");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test14345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14345");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        graggBulirschStoerIntegrator42.setInitialStepSize(32.0d);
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (int) (short) 0, (int) '#', (double) 10L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction57, (double) 100, (double) (short) 10, (int) (byte) 10);
        java.lang.String str62 = graggBulirschStoerIntegrator42.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction63, 1.7320508075688772d, 3.0d, (int) (byte) 10);
        double double68 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test14346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14346");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 3, (double) 1.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, 13.37480609952844d, 10.0d, 0);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test14347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14347");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.656854249492381d, 12.368586720951603d, (double) 'a', 31.71666350274487d);
    }

    @Test
    public void test14348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14348");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray24 = integratorException23.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test14349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14349");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.String str25 = derivativeException8.getPattern();
        java.lang.String str26 = derivativeException8.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test14350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14350");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double59 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, (double) (short) 100, 32.0d, 1);
        java.lang.String str67 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction68, 7.211102550927978d, 4.449373890263558d, (int) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14351");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        double[] doubleArray61 = new double[] { 100.0f, 100 };
        boolean boolean62 = switchingFunctionsHandler47.reset(Double.NaN, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double[] doubleArray74 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean75 = switchingFunctionsHandler65.reset((double) (byte) 1, doubleArray74);
        double[] doubleArray79 = new double[] { 100.0f, 100 };
        boolean boolean80 = switchingFunctionsHandler65.reset(Double.NaN, doubleArray79);
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray79, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray61, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray43, doubleArray61);
        double double85 = graggBulirschStoerIntegrator84.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        graggBulirschStoerIntegrator84.addSwitchingFunction(switchingFunction86, 100.0d, (double) 'a', 1);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator84.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler91);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction93, 97.0d, 17.78279410038923d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler91);
    }

    @Test
    public void test14352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14352");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) (short) 100, (double) (short) 0, (double) (short) 100);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 1, 32.0d, 17.320508075688775d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        double double29 = graggBulirschStoerIntegrator28.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator28.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        double double35 = graggBulirschStoerIntegrator28.getCurrentSignedStepsize();
        double double36 = graggBulirschStoerIntegrator28.getCurrentStepStart();
        double[] doubleArray39 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray60, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double65 = switchingFunctionsHandler64.getEventTime();
        double[] doubleArray73 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean74 = switchingFunctionsHandler64.reset((double) (byte) 1, doubleArray73);
        double[] doubleArray78 = new double[] { 100.0f, 100 };
        boolean boolean79 = switchingFunctionsHandler64.reset(Double.NaN, doubleArray78);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray62, doubleArray78);
        double[] doubleArray81 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray62, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray39, doubleArray62);
        graggBulirschStoerIntegrator83.setInterpolationControl(false, (int) (short) 0);
        double double87 = graggBulirschStoerIntegrator83.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator83.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        graggBulirschStoerIntegrator83.addSwitchingFunction(switchingFunction89, (double) 0L, (double) 10.0f, (int) 'a');
        double double94 = graggBulirschStoerIntegrator83.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler95 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator28.setStepHandler(stepHandler95);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler95);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 17.320508075688775d + "'", double94 == 17.320508075688775d);
        org.junit.Assert.assertNotNull(stepHandler95);
    }

    @Test
    public void test14353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14353");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        double double47 = graggBulirschStoerIntegrator38.getMaxStep();
        double double48 = graggBulirschStoerIntegrator38.getMinStep();
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 1, (int) (short) 10, (double) 'a');
        double double55 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test14354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14354");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        graggBulirschStoerIntegrator67.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction77, (double) (-1L), (double) ' ', (int) (short) 0);
        double double82 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double83 = graggBulirschStoerIntegrator19.getMinStep();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (short) 0, (int) '4', 3.1622776601683795d);
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 8.0d, 15.06756998238367d, 31.71666350274487d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 10.0d + "'", double83 == 10.0d);
    }

    @Test
    public void test14355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14355");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 'a', 5.916079783099616d, (double) ' ');
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 0, 10, (double) 100.0f);
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
    }

    @Test
    public void test14356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14356");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, 5.009970139234591d, 12.823355189994377d, (double) 100L);
    }

    @Test
    public void test14357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14357");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        java.lang.String str24 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str25 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str24, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str25, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14358");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        double double54 = graggBulirschStoerIntegrator38.getMaxStep();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test14359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14359");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        java.lang.String str19 = derivativeException17.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str19, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test14360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14360");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, (double) 0.0f, (double) (-1), 3.1622776601683795d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test14361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14361");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((-1), (double) '4', (double) 0.0f);
        double double54 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14362");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 0.0d, 4.161791450287818d, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 1, (int) '#', (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction63, (double) (byte) 10, (double) (byte) 10, (int) (byte) -1);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 0, (int) (short) 10, (double) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14363");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 2, 0.0d, (-0.0d));
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (short) 0, 0, 6.841560230416328d);
        double double11 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 2.0d + "'", double5 == 2.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.0d) + "'", double11 == (-0.0d));
    }

    @Test
    public void test14364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14364");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray28 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.String str33 = derivativeException26.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray36 = derivativeException26.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
    }

    @Test
    public void test14365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14365");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray24 = derivativeException19.getSuppressed();
        java.lang.Object[] objArray25 = derivativeException19.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
    }

    @Test
    public void test14366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14366");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(3.1622776601683795d);
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) '#', (double) 1.0f, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize(1.7320508075688772d);
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler63);
    }

    @Test
    public void test14367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14367");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction47, (double) 100.0f, (double) 1.0f, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, (double) (short) -1, (double) 3, 10);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 100, (int) (byte) 1, 7.952707287670506d);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test14368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14368");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test14369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14369");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, (double) (short) 0, 18.708286933869708d, 0);
        double double66 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test14370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14370");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 3, (double) 10, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction44, 1.0d, (double) '4', (int) ' ');
        double double49 = graggBulirschStoerIntegrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray66, doubleArray68);
        graggBulirschStoerIntegrator69.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        stepHandler74.handleStep(stepInterpolator76, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler74.handleStep(stepInterpolator79, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 2);
        double double87 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str88 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 17.320508075688775d + "'", double87 == 17.320508075688775d);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str88, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14371");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test14372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14372");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.String str19 = derivativeException17.getPattern();
        java.lang.Throwable[] throwableArray20 = derivativeException17.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test14373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14373");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        double double44 = switchingFunctionsHandler0.getEventTime();
        double double45 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler47.add(switchingFunction48, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler47.add(switchingFunction53, (double) 1L, (double) 1, 1);
        boolean boolean58 = switchingFunctionsHandler47.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler60.reset(0.0d, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler47.reset(52.0d, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler0.reset(23.40347319320716d, doubleArray71);
        double double76 = switchingFunctionsHandler0.getEventTime();
        boolean boolean77 = switchingFunctionsHandler0.isEmpty();
        boolean boolean78 = switchingFunctionsHandler0.stop();
        boolean boolean79 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction80 = null;
        switchingFunctionsHandler0.add(switchingFunction80, 38.3753555559862d, 9.300868483181675d, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test14374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14374");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) 10.0f, 97.0d, (double) 100);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, 15.06756998238367d, (double) (byte) 100, 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test14375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14375");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler77.handleStep(stepInterpolator79, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler77);
        java.lang.String str83 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction84, 1.0d, (double) (byte) 0, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (byte) 10, (int) (byte) 10, 8.62834797213047d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str83, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler89);
    }

    @Test
    public void test14376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14376");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, 4.216965034285822d, 56.23413251903491d, 0);
        double double11 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
    }

    @Test
    public void test14377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14377");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.String str45 = integratorException43.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        java.lang.String str47 = derivativeException46.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException46);
        java.lang.Throwable[] throwableArray49 = derivativeException46.getSuppressed();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test14378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14378");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException1 = new org.apache.commons.math.ode.DerivativeException(throwable0);
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException1);
    }

    @Test
    public void test14379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14379");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray30 = derivativeException25.getArguments();
        java.lang.Object[] objArray31 = derivativeException25.getArguments();
        java.lang.Object[] objArray32 = derivativeException25.getArguments();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
    }

    @Test
    public void test14380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14380");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 10, (int) (byte) 10, (double) (-1));
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', 56.23413251903491d, 6.841560230416328d, 38.3753555559862d);
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test14381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14381");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        double double48 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, 0, 100, 13.37480609952844d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test14382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14382");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, 0.0d, 6.841560230416328d, (int) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test14383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14383");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, Double.NaN, (double) 1L, 1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }

    @Test
    public void test14384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14384");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray31 = derivativeException26.getArguments();
        java.lang.Object[] objArray32 = derivativeException26.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException41);
        derivativeException33.addSuppressed((java.lang.Throwable) integratorException42);
        java.lang.Object[] objArray44 = derivativeException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException45);
        java.lang.Throwable[] throwableArray47 = derivativeException46.getSuppressed();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test14385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14385");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        double double77 = graggBulirschStoerIntegrator75.getMinStep();
        graggBulirschStoerIntegrator75.setInitialStepSize(56.568542494923804d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
    }

    @Test
    public void test14386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14386");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        double[] doubleArray14 = new double[] { 100.0f, 100 };
        boolean boolean15 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, 43.25307727072111d, 5.623413251903491d, 100);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = switchingFunctionsHandler0.evaluateStep(stepInterpolator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test14387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14387");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100.0f, (double) 100, 1.0d, (double) (byte) 100);
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, Double.NaN, 13.160740129524925d, (int) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test14388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14388");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(98.48857801796105d, 20.400469235504897d, 17.752843424574987d, 100.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) 'a', (int) (byte) 100, (-0.0d));
    }

    @Test
    public void test14389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14389");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler0.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14390");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) (byte) 10, (double) (byte) 1, 0);
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction59, 17.320508075688775d, Double.NaN, 3);
        graggBulirschStoerIntegrator42.setOrderControl((int) (byte) 0, (double) 'a', 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator42.getStepHandler();
        double double69 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.0d) + "'", double69 == (-0.0d));
    }

    @Test
    public void test14391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14391");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        java.lang.Object[] objArray14 = derivativeException12.getArguments();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray21 = derivativeException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", objArray21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        java.lang.Object[] objArray24 = integratorException22.getArguments();
        java.lang.Object[] objArray25 = integratorException22.getArguments();
        java.lang.Throwable[] throwableArray26 = integratorException22.getSuppressed();
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test14392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14392");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        java.lang.Throwable[] throwableArray19 = derivativeException18.getSuppressed();
        java.lang.Throwable[] throwableArray20 = derivativeException18.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.Class<?> wildcardClass22 = derivativeException21.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test14393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14393");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler0.add(switchingFunction38, (double) (byte) 0, (-1.0d), 3);
        double double43 = switchingFunctionsHandler0.getEventTime();
        boolean boolean44 = switchingFunctionsHandler0.stop();
        boolean boolean45 = switchingFunctionsHandler0.stop();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        double double47 = switchingFunctionsHandler0.getEventTime();
        boolean boolean48 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test14394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14394");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) -1, (double) 0, (double) (byte) 1);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 2);
        double double8 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test14395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14395");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray14);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = derivativeException39.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.Throwable[] throwableArray45 = derivativeException39.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray45);
        derivativeException22.addSuppressed((java.lang.Throwable) integratorException46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException46);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException48);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test14396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14396");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setOrderControl((int) (byte) 10, (double) 2, (-0.0d));
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setOrderControl(100, 13.160740129524925d, 9.300868483181675d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test14397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14397");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.Object[] objArray9 = derivativeException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        java.lang.String str11 = derivativeException7.getPattern();
        java.lang.Object[] objArray12 = derivativeException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray12);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException23);
        integratorException13.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray26 = integratorException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray26);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test14398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14398");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        double double68 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        java.lang.String str74 = graggBulirschStoerIntegrator67.getName();
        double double75 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction78, (double) (-1), 18.708286933869708d, (int) '4');
        double double83 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction84, 38.3753555559862d, (double) (short) 10, (int) 'a');
        double double89 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test14399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14399");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        boolean boolean16 = switchingFunctionsHandler13.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler13.add(switchingFunction17, 52.0d, (double) 1L, 2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler23.reset(0.0d, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean39 = switchingFunctionsHandler38.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler38.evaluateStep(stepInterpolator40);
        boolean boolean42 = switchingFunctionsHandler38.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean45 = switchingFunctionsHandler44.isEmpty();
        double[] doubleArray47 = new double[] {};
        switchingFunctionsHandler44.stepAccepted(0.0d, doubleArray47);
        switchingFunctionsHandler38.stepAccepted(5.916079783099616d, doubleArray47);
        switchingFunctionsHandler23.stepAccepted((double) (-1), doubleArray47);
        boolean boolean51 = switchingFunctionsHandler13.reset(4.449373890263558d, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(56.23413251903491d, 1.0d, doubleArray11, doubleArray47);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test14400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14400");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        double double47 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        stepHandler48.handleStep(stepInterpolator49, false);
        stepHandler48.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test14401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14401");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(8.366600265340756d, (double) 0.0f, 5.477225575051661d, 3.1622776601683795d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setStepsizeControl(12.368586720951603d, (double) '4', 13.845681461264668d, 17.752843424574987d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test14402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14402");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction46, (double) (byte) 10, 1.0d, (int) 'a');
        double double51 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        double double52 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction53, (double) 1, 3.1622776601683795d, (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.0d) + "'", double51 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.0d) + "'", double52 == (-0.0d));
    }

    @Test
    public void test14403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14403");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getMaxStep();
        double double63 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) (byte) 100, 0.0d, 1.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator68.addSwitchingFunction(switchingFunction69, (double) 0, (double) (byte) 1, (int) (short) 100);
        graggBulirschStoerIntegrator68.setStepsizeControl(0.0d, 100.0d, 5.477225575051661d, 17.88854381999832d);
        org.apache.commons.math.ode.StepHandler stepHandler79 = graggBulirschStoerIntegrator68.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler80);
        double double82 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
    }

    @Test
    public void test14404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14404");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray3 = new double[] {};
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler6.add(switchingFunction7, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler25.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        boolean boolean32 = switchingFunctionsHandler30.isEmpty();
        boolean boolean33 = switchingFunctionsHandler30.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double40 = switchingFunctionsHandler39.getEventTime();
        double[] doubleArray48 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean49 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray48);
        double[] doubleArray53 = new double[] { 100.0f, 100 };
        boolean boolean54 = switchingFunctionsHandler39.reset(Double.NaN, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray53, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray55, doubleArray71);
        switchingFunctionsHandler30.stepAccepted(10.0d, doubleArray55);
        boolean boolean75 = switchingFunctionsHandler25.reset((double) 1.0f, doubleArray55);
        boolean boolean76 = switchingFunctionsHandler13.reset((double) 0L, doubleArray55);
        boolean boolean77 = switchingFunctionsHandler6.reset(5.477225575051661d, doubleArray55);
        boolean boolean78 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test14405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14405");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        java.lang.String str16 = derivativeException15.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str16, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14406");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (-1L), 52.0d, 35.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler26 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, (int) (short) 1);
        java.lang.String str30 = graggBulirschStoerIntegrator19.getName();
        double double31 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInterpolationControl(true, 1);
        graggBulirschStoerIntegrator19.setInterpolationControl(true, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str30, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
    }

    @Test
    public void test14407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14407");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray26);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException30);
        java.lang.String str32 = derivativeException15.getPattern();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray40 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray42 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", objArray42);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", objArray42);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("", strArray56);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray68);
        derivativeException64.addSuppressed((java.lang.Throwable) derivativeException70);
        derivativeException60.addSuppressed((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        derivativeException50.addSuppressed((java.lang.Throwable) derivativeException70);
        java.lang.Object[] objArray75 = derivativeException70.getArguments();
        java.lang.Object[] objArray76 = derivativeException70.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        integratorException44.addSuppressed((java.lang.Throwable) integratorException78);
        java.lang.Throwable[] throwableArray80 = integratorException78.getSuppressed();
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException78);
        java.lang.String str82 = derivativeException15.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str32, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str82, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test14408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14408");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        switchingFunctionsHandler0.stepAccepted((double) 3, doubleArray64);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler0.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, 1.0d, (double) 1.0f, (int) 'a');
        boolean boolean76 = switchingFunctionsHandler0.isEmpty();
        double double77 = switchingFunctionsHandler0.getEventTime();
        double double78 = switchingFunctionsHandler0.getEventTime();
        boolean boolean79 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test14409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14409");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler65.handleStep(stepInterpolator66, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler65.handleStep(stepInterpolator69, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test14410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14410");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        java.lang.Object[] objArray21 = derivativeException20.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test14411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14411");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler0.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray36, doubleArray54);
        boolean boolean78 = switchingFunctionsHandler8.reset((double) (short) 1, doubleArray54);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray54);
        double double80 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        boolean boolean82 = switchingFunctionsHandler0.evaluateStep(stepInterpolator81);
        double double83 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test14412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14412");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (-1L), 52.0d, 35.0d, (double) 0L);
        graggBulirschStoerIntegrator19.setInterpolationControl(true, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction29, 100.0d, (double) 100, (int) (byte) 1);
        double double34 = graggBulirschStoerIntegrator19.getMaxStep();
        double double35 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 10.0d + "'", double35 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler36);
    }

    @Test
    public void test14413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14413");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        double double26 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction27, 9.848857801796104d, (double) (short) 1, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test14414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14414");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test14415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14415");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 5.916079783099616d, (double) ' ', (int) (short) -1);
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) 0, (double) (short) -1, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler15.evaluateStep(stepInterpolator18);
        boolean boolean20 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler15.evaluateStep(stepInterpolator21);
        boolean boolean23 = switchingFunctionsHandler15.isEmpty();
        boolean boolean24 = switchingFunctionsHandler15.stop();
        double double25 = switchingFunctionsHandler15.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler27.evaluateStep(stepInterpolator30);
        boolean boolean32 = switchingFunctionsHandler27.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray54, doubleArray56);
        switchingFunctionsHandler34.stepAccepted((double) (short) 10, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        boolean boolean71 = switchingFunctionsHandler34.reset((double) 0L, doubleArray69);
        boolean boolean72 = switchingFunctionsHandler27.reset(3.1622776601683795d, doubleArray69);
        boolean boolean73 = switchingFunctionsHandler15.reset(17.320508075688775d, doubleArray69);
        boolean boolean74 = switchingFunctionsHandler0.reset((-1.0d), doubleArray69);
        boolean boolean75 = switchingFunctionsHandler0.isEmpty();
        boolean boolean76 = switchingFunctionsHandler0.isEmpty();
        boolean boolean77 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test14416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14416");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray11);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.String str29 = derivativeException27.getPattern();
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException27.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Object[] objArray45 = derivativeException42.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException46);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test14417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14417");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("", objArray6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        java.lang.Object[] objArray9 = integratorException7.getArguments();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.String str15 = derivativeException13.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        integratorException7.addSuppressed((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray18 = derivativeException13.getArguments();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!]");
    }

    @Test
    public void test14418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14418");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test14419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14419");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.78279410038923d, (double) (short) 0, (-1.0d), (double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) 0, 13.92838827718412d, 100);
        graggBulirschStoerIntegrator4.setInitialStepSize(0.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test14420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14420");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray8);
        java.lang.Throwable[] throwableArray16 = derivativeException15.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test14421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14421");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler9.reset(0.0d, doubleArray20);
        boolean boolean23 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        switchingFunctionsHandler27.stepAccepted((double) (short) 10, doubleArray49);
        double[] doubleArray58 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        double[] doubleArray75 = new double[] { 100.0f, 100 };
        boolean boolean76 = switchingFunctionsHandler61.reset(Double.NaN, doubleArray75);
        double[] doubleArray77 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray75, doubleArray77);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray58, doubleArray75);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 1, 0.0d, doubleArray49, doubleArray75);
        boolean boolean81 = switchingFunctionsHandler0.reset(0.0d, doubleArray49);
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        boolean boolean83 = switchingFunctionsHandler0.isEmpty();
        boolean boolean84 = switchingFunctionsHandler0.stop();
        boolean boolean85 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = switchingFunctionsHandler0.evaluateStep(stepInterpolator86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test14422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14422");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) 100, (double) (byte) 100, (double) (short) 0);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, 3, (int) (short) 1, (double) 1L);
        double double12 = graggBulirschStoerIntegrator4.getMaxStep();
        java.lang.String str13 = graggBulirschStoerIntegrator4.getName();
        java.lang.String str14 = graggBulirschStoerIntegrator4.getName();
        java.lang.String str15 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 31.622776601683793d + "'", double6 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str13, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14423");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(31.209033090201576d, (double) 'a', (double) 10L, 5.656854249492381d);
    }

    @Test
    public void test14424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14424");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray65, doubleArray81);
        graggBulirschStoerIntegrator83.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator83.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        graggBulirschStoerIntegrator38.setOrderControl(1, 100.0d, (double) (short) 1);
        double double97 = graggBulirschStoerIntegrator38.getMaxStep();
        double double98 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test14425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14425");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test14426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14426");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        java.lang.Object[] objArray25 = derivativeException23.getArguments();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        derivativeException39.addSuppressed((java.lang.Throwable) derivativeException45);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException45);
        java.lang.Throwable[] throwableArray48 = derivativeException35.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException50);
        java.lang.Object[] objArray52 = derivativeException50.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
    }

    @Test
    public void test14427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14427");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 100, (double) 100, (double) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (short) 1, 0.0d, 3);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str11 = graggBulirschStoerIntegrator4.getName();
        double double12 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 32.0d + "'", double12 == 32.0d);
    }

    @Test
    public void test14428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14428");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (-1.0d), (double) 0L, 35.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 0, (double) 1.0f, (double) 0L, 35.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 0, (double) (short) -1, (double) 100.0f, 17.88854381999832d);
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, 100, (int) (byte) 1, 6.841560230416328d);
        double double21 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction22, Double.NaN, 17.752843424574987d, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test14429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14429");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test14430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14430");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) 10L, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) 100.0f, Double.NaN, (int) (byte) 10);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 1);
        double double61 = graggBulirschStoerIntegrator38.getMaxStep();
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test14431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14431");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 1.0d, (double) (short) 10, (double) (byte) 1);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test14432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14432");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) 1L, (double) (short) 0, 0);
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, (double) 10, (double) (byte) 0, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14433");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray24 = new double[] {};
        switchingFunctionsHandler21.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler15.stepAccepted(5.916079783099616d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        double[] doubleArray31 = null;
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray31);
        double double33 = switchingFunctionsHandler0.getEventTime();
        boolean boolean34 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test14434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14434");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl(20.400469235504897d, 0.0d, 20.400469235504897d, (double) (byte) -1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) (byte) 0, (double) (-1), (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator54.getStepHandler();
        boolean boolean56 = stepHandler55.requiresDenseOutput();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test14435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14435");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        double double54 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double58 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test14436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14436");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        switchingFunctionsHandler18.stepAccepted((double) (short) 10, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray16, doubleArray40);
        double double44 = graggBulirschStoerIntegrator43.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator43.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction46, 3.1622776601683795d, (double) 3, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction51, (double) (short) -1, (double) 1L, 3);
        java.lang.String str56 = graggBulirschStoerIntegrator43.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14437");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) (byte) 10, (double) (byte) 1, 0);
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) (byte) 100);
        graggBulirschStoerIntegrator42.setStepsizeControl((double) (short) 1, (double) 0.0f, 13.37480609952844d, (double) 10L);
        double double64 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.0d) + "'", double64 == (-0.0d));
    }

    @Test
    public void test14438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14438");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) 1L, (double) 10.0f, (int) (byte) 1);
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14439");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 1, (double) 1L, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test14440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14440");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        double double11 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test14441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14441");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.0d, (double) (byte) 1, 97.0d, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        graggBulirschStoerIntegrator43.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator43.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray68, doubleArray70);
        graggBulirschStoerIntegrator71.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator71.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        stepHandler76.handleStep(stepInterpolator78, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        stepHandler76.handleStep(stepInterpolator81, true);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator4.getStepHandler();
        boolean boolean86 = stepHandler85.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test14442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14442");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.Throwable[] throwableArray27 = integratorException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test14443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14443");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, (double) 0.0f, (double) (-1), 3.1622776601683795d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double49 = graggBulirschStoerIntegrator43.getCurrentStepStart();
        graggBulirschStoerIntegrator43.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator43.getStepHandler();
        stepHandler52.reset();
        boolean boolean54 = stepHandler52.requiresDenseOutput();
        stepHandler52.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler52);
        double double57 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double58 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test14444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14444");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        java.lang.Throwable[] throwableArray21 = integratorException20.getSuppressed();
        java.lang.Throwable[] throwableArray22 = integratorException20.getSuppressed();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.Object[] objArray32 = derivativeException30.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.String str34 = derivativeException33.getPattern();
        integratorException20.addSuppressed((java.lang.Throwable) derivativeException33);
        java.lang.String str36 = integratorException20.getPattern();
        java.lang.String[] strArray49 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray49);
        java.lang.Throwable[] throwableArray56 = derivativeException55.getSuppressed();
        java.lang.Throwable[] throwableArray57 = derivativeException55.getSuppressed();
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray64);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("", strArray64);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray64);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray64);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray64);
        derivativeException55.addSuppressed((java.lang.Throwable) derivativeException69);
        integratorException20.addSuppressed((java.lang.Throwable) derivativeException55);
        java.lang.String str72 = integratorException20.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException20);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test14445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14445");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler3.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler3.add(switchingFunction7, (double) 0.0f, (double) 3, (int) (byte) 10);
        boolean boolean12 = switchingFunctionsHandler3.isEmpty();
        double[] doubleArray21 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray21, doubleArray58);
        boolean boolean62 = switchingFunctionsHandler3.reset(1.0d, doubleArray21);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) (short) 10, doubleArray2, doubleArray21);
        double double64 = graggBulirschStoerIntegrator63.getCurrentStepStart();
        double double65 = graggBulirschStoerIntegrator63.getMaxStep();
        double double66 = graggBulirschStoerIntegrator63.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator63.setInitialStepSize(7.400828044922853d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 5.623413251903491d + "'", double66 == 5.623413251903491d);
    }

    @Test
    public void test14446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14446");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        double double27 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator47.addSwitchingFunction(switchingFunction48, (double) 100.0f, (double) 0, 0);
        double double53 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator47.getStepHandler();
        stepHandler54.reset();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler54);
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (byte) 10, 0, 12.823355189994377d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test14447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14447");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String str5 = derivativeException3.getPattern();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.String str20 = derivativeException17.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test14448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14448");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction28, (double) (short) 10, 0.0d, 0);
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0, (double) 2, (-0.0d), (double) (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction38, (double) 1.0f, 0.0d, (int) (byte) -1);
        double double43 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl(0, 12.368586720951603d, 9.26731744662116d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1.0d) + "'", double43 == (-1.0d));
    }

    @Test
    public void test14449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14449");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test14450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14450");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14451");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray69, doubleArray85);
        double[] doubleArray88 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray69, doubleArray88);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator89.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler90);
        org.apache.commons.math.ode.StepHandler stepHandler92 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler93 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean95 = stepHandler94.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertNotNull(stepHandler92);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test14452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14452");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray31 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray33 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", objArray33);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException53);
        java.lang.Throwable[] throwableArray55 = derivativeException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray55);
        integratorException34.addSuppressed((java.lang.Throwable) integratorException56);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException34);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray67);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray79);
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException83);
        derivativeException68.addSuppressed((java.lang.Throwable) derivativeException84);
        java.lang.String str86 = derivativeException84.getPattern();
        java.lang.Object[] objArray87 = derivativeException84.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException84);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException88);
        java.lang.Class<?> wildcardClass90 = derivativeException8.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str86, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test14453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14453");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException23);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException23);
        java.lang.Throwable[] throwableArray26 = derivativeException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray26);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test14454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14454");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = derivativeException18.toString();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException" + "'", str20, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test14455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14455");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (byte) 0, (-1.0d), (int) '4');
        double double58 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        double double60 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test14456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14456");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getMinStep();
        java.lang.String str87 = graggBulirschStoerIntegrator80.getName();
        graggBulirschStoerIntegrator80.setInitialStepSize((double) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str87, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14457");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction27, (-0.0d), (double) '4', 100);
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) 'a', 3, 5.623413251903491d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
    }

    @Test
    public void test14458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14458");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getMaxStep();
        double double46 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setStepsizeControl((double) (byte) -1, 52.0d, (double) 100, 6.928935924497552d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-0.0d) + "'", double46 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler47);
    }

    @Test
    public void test14459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14459");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 0.0f, 0.0d, (double) (short) 0);
        graggBulirschStoerIntegrator4.setInitialStepSize(0.0d);
    }

    @Test
    public void test14460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14460");
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray1);
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException2);
        java.lang.Object[] objArray4 = integratorException2.getArguments();
        java.lang.String str5 = integratorException2.getPattern();
        java.lang.String str6 = integratorException2.getPattern();
        java.lang.Object[] objArray7 = integratorException2.getArguments();
        java.lang.String str8 = integratorException2.getPattern();
        java.lang.Object[] objArray9 = integratorException2.getArguments();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test14461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14461");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (byte) 100, (int) '#', (double) 2);
        graggBulirschStoerIntegrator42.setInterpolationControl(false, (int) (byte) 0);
        graggBulirschStoerIntegrator42.setStabilityCheck(true, 2, (int) (short) 100, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator42.getStepHandler();
        double double58 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-0.0d) + "'", double58 == (-0.0d));
    }

    @Test
    public void test14462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14462");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, 31.622776601683793d, 31.622776601683793d, (int) ' ');
        double double53 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14463");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 100, (int) (byte) 100, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator38.getStepHandler();
        double[] doubleArray64 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double[] doubleArray74 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean75 = switchingFunctionsHandler65.reset((double) (byte) 1, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray64, doubleArray74);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator76.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler77);
        boolean boolean79 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler77.handleStep(stepInterpolator80, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test14464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14464");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        java.lang.Throwable[] throwableArray14 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray16 = integratorException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray16);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test14465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14465");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getMinStep();
        double double87 = graggBulirschStoerIntegrator80.getCurrentStepStart();
        double double88 = graggBulirschStoerIntegrator80.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        graggBulirschStoerIntegrator80.addSwitchingFunction(switchingFunction89, 9.26731744662116d, 18.708286933869708d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 35.0d + "'", double88 == 35.0d);
    }

    @Test
    public void test14466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14466");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.String str16 = integratorException15.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str16, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test14467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14467");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        double double12 = graggBulirschStoerIntegrator4.getMinStep();
        java.lang.Class<?> wildcardClass13 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test14468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14468");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(31.622776601683793d, 32.0d, 23.40347319320716d, 3.1622776601683795d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 32.0d + "'", double5 == 32.0d);
    }

    @Test
    public void test14469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14469");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        java.lang.String str50 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 1, (int) '#', (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, (double) 0L, 17.88854381999832d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, (double) (byte) 10, (double) 100L, 3);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean67 = stepHandler66.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test14470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14470");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.stop();
        double double4 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler6.isEmpty();
        double double18 = switchingFunctionsHandler6.getEventTime();
        boolean boolean19 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray41, doubleArray43);
        switchingFunctionsHandler21.stepAccepted((double) (short) 10, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler21.reset(3.1622776601683795d, doubleArray56);
        switchingFunctionsHandler6.stepAccepted((double) 100, doubleArray56);
        boolean boolean60 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray56);
        double[] doubleArray62 = null;
        switchingFunctionsHandler0.stepAccepted((double) (short) 1, doubleArray62);
        double double64 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test14471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14471");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 'a', (double) (byte) 0, (double) (short) 100);
        graggBulirschStoerIntegrator4.setOrderControl((int) ' ', 5.656854249492381d, 72.11102550927978d);
    }

    @Test
    public void test14472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14472");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.0d, 1.0d, 35.0d, 17.78279410038923d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 23.40347319320716d, (double) (byte) -1, (int) (short) 0);
    }

    @Test
    public void test14473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14473");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        java.lang.String str50 = graggBulirschStoerIntegrator42.getName();
        java.lang.String str51 = graggBulirschStoerIntegrator42.getName();
        double double52 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction53, 17.752843424574987d, (double) (short) 10, (int) (byte) 0);
        graggBulirschStoerIntegrator42.setStepsizeControl(15.298193747370034d, 6.841560230416328d, 13.160740129524925d, 43.25307727072111d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.0d) + "'", double52 == (-0.0d));
    }

    @Test
    public void test14474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14474");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        double double44 = switchingFunctionsHandler0.getEventTime();
        double double45 = switchingFunctionsHandler0.getEventTime();
        double double46 = switchingFunctionsHandler0.getEventTime();
        double double47 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        boolean boolean51 = switchingFunctionsHandler49.isEmpty();
        boolean boolean52 = switchingFunctionsHandler49.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        switchingFunctionsHandler54.stepAccepted((double) (short) 10, doubleArray76);
        switchingFunctionsHandler49.stepAccepted((double) 100.0f, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler0.reset((double) 1, doubleArray76);
        double double81 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        boolean boolean85 = switchingFunctionsHandler0.evaluateStep(stepInterpolator84);
        boolean boolean86 = switchingFunctionsHandler0.isEmpty();
        double double87 = switchingFunctionsHandler0.getEventTime();
        boolean boolean88 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test14475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14475");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test14476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14476");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(3.1622776601683795d);
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) '#', (double) 1.0f, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize(1.7320508075688772d);
        double double61 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, 18.708286933869708d, 13.37480609952844d, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
    }

    @Test
    public void test14477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14477");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, 100.0d, 35.0d, (int) (short) 100);
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 1L, (double) (short) 10, (double) 0.0f, (double) '4');
        double double79 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double80 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        graggBulirschStoerIntegrator57.setStepsizeControl(9.898464007679532d, (double) 10, 5.009970139234591d, 9.26731744662116d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test14478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14478");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str48 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler50 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator38.setStepHandler(stepHandler50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str48, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test14479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14479");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (-1L), 52.0d, 35.0d, (double) 0L);
        graggBulirschStoerIntegrator19.setInterpolationControl(true, (-1));
        double double29 = graggBulirschStoerIntegrator19.getMaxStep();
        double double30 = graggBulirschStoerIntegrator19.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
    }

    @Test
    public void test14480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14480");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        graggBulirschStoerIntegrator67.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler75);
        double double77 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction78, (double) (byte) 0, (double) (-1), 10);
        java.lang.String str83 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str83, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14481");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 100, 32.0d, 1);
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 17.88854381999832d, 1.0d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 7.400828044922853d, 0.0d, 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test14482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14482");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        java.lang.String str24 = integratorException23.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException28);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        derivativeException38.addSuppressed((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException48);
        java.lang.Object[] objArray51 = derivativeException50.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray51);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", objArray51);
        integratorException29.addSuppressed((java.lang.Throwable) integratorException54);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test14483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14483");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) (short) 0, 15.06756998238367d, (double) (short) 10);
    }

    @Test
    public void test14484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14484");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler24 = graggBulirschStoerIntegrator19.getStepHandler();
        boolean boolean25 = stepHandler24.requiresDenseOutput();
        boolean boolean26 = stepHandler24.requiresDenseOutput();
        stepHandler24.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        stepHandler24.handleStep(stepInterpolator28, false);
        stepHandler24.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test14485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14485");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator49.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        graggBulirschStoerIntegrator77.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator77.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler82.handleStep(stepInterpolator84, true);
        stepHandler82.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        double double89 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double90 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test14486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14486");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) '4', (double) (byte) 1, (double) 10.0f);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        double[] doubleArray19 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean20 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = new double[] { 100.0f, 100 };
        boolean boolean25 = switchingFunctionsHandler10.reset(Double.NaN, doubleArray24);
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray24, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray26, doubleArray42);
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str50 = graggBulirschStoerIntegrator44.getName();
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double56 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        double double58 = graggBulirschStoerIntegrator44.getCurrentSignedStepsize();
        double double59 = graggBulirschStoerIntegrator44.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction60, (double) (short) 0, (double) 100L, 10);
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator44.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler65);
        graggBulirschStoerIntegrator4.setStepsizeControl(15.06756998238367d, 8.0d, 15.298193747370034d, 43.25307727072111d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test14487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14487");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double26 = graggBulirschStoerIntegrator19.getMinStep();
        double double27 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = graggBulirschStoerIntegrator19.getStepHandler();
        java.lang.String str29 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator19.getStepHandler();
        java.lang.String str31 = graggBulirschStoerIntegrator19.getName();
        double double32 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double40 = switchingFunctionsHandler39.getEventTime();
        double[] doubleArray48 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean49 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray48);
        double[] doubleArray53 = new double[] { 100.0f, 100 };
        boolean boolean54 = switchingFunctionsHandler39.reset(Double.NaN, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray53, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray55, doubleArray71);
        double[] doubleArray74 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray55, doubleArray74);
        double double76 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double77 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double78 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator75.getStepHandler();
        double double84 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator75.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator86 = null;
        stepHandler85.handleStep(stepInterpolator86, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler85);
        double double90 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str29, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.0d) + "'", double78 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test14488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14488");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String str14 = integratorException13.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray27);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException54);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException54);
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException54);
        java.lang.Object[] objArray58 = derivativeException54.getArguments();
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException54);
        java.lang.String str60 = derivativeException54.getPattern();
        java.lang.Object[] objArray61 = derivativeException54.getArguments();
        java.lang.Throwable[] throwableArray62 = derivativeException54.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException54);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str60, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test14489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14489");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (-1), 4.449373890263558d, 15.18214344379753d);
    }

    @Test
    public void test14490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14490");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray24 = new double[] {};
        switchingFunctionsHandler21.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler15.stepAccepted(5.916079783099616d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        double double29 = switchingFunctionsHandler0.getEventTime();
        double double30 = switchingFunctionsHandler0.getEventTime();
        double double31 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }

    @Test
    public void test14491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14491");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator59.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, 32.0d, (double) 'a');
        double double84 = graggBulirschStoerIntegrator19.getMinStep();
        double double85 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str86 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction89, 5.009970139234591d, 98.48857801796105d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str86, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14492");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str57 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 1.7320508075688772d, (double) 0L, (int) (short) 10);
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test14493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14493");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, (double) 0L, (-0.0d), (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 'a', (double) (short) 0, (int) (short) 1);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        double double11 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, 17.78279410038923d, (double) (byte) 10, (int) '#');
        double double17 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction18, (double) 3, 0.0d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction23, 17.78279410038923d, (double) 10.0f, (int) '4');
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test14494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14494");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str21 = graggBulirschStoerIntegrator19.getName();
        double double22 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray41, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray43, doubleArray59);
        graggBulirschStoerIntegrator61.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double66 = graggBulirschStoerIntegrator61.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator61.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        stepHandler67.handleStep(stepInterpolator68, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        stepHandler67.handleStep(stepInterpolator71, false);
        boolean boolean74 = stepHandler67.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test14495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14495");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str51 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        double double53 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 3.1622776601683795d, 23.40347319320716d, (int) 'a');
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 1, (int) '#', (double) 100.0f);
        java.lang.String str64 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str64, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14496");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        double[] doubleArray44 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray25, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray2, doubleArray25);
        graggBulirschStoerIntegrator46.setInterpolationControl(false, (int) (short) 0);
        double double50 = graggBulirschStoerIntegrator46.getMaxStep();
        double double51 = graggBulirschStoerIntegrator46.getCurrentSignedStepsize();
        double double52 = graggBulirschStoerIntegrator46.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator46.addSwitchingFunction(switchingFunction53, 17.320508075688775d, 2.514866859365871d, (-1));
        double double58 = graggBulirschStoerIntegrator46.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator46.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 17.320508075688775d + "'", double51 == 17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 17.320508075688775d + "'", double58 == 17.320508075688775d);
        org.junit.Assert.assertNotNull(stepHandler59);
    }

    @Test
    public void test14497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14497");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        boolean boolean16 = switchingFunctionsHandler5.isEmpty();
        double double17 = switchingFunctionsHandler5.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler5.add(switchingFunction18, (double) 100L, (double) 1.0f, (int) (short) -1);
        boolean boolean23 = switchingFunctionsHandler5.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray45, doubleArray47);
        switchingFunctionsHandler25.stepAccepted((double) (short) 10, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler25.reset((double) 0L, doubleArray60);
        boolean boolean63 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray60);
        boolean boolean64 = switchingFunctionsHandler0.reset((double) 0L, doubleArray60);
        double double65 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler0.add(switchingFunction66, 10.0d, 20.400469235504897d, (int) (short) 1);
        boolean boolean71 = switchingFunctionsHandler0.stop();
        java.lang.Class<?> wildcardClass72 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test14498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14498");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) (-1.0f), 5.623413251903491d, 15.18214344379753d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, Double.NaN, 17.78279410038923d, (double) ' ');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        boolean boolean31 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator9.setStepHandler(stepHandler30);
        boolean boolean33 = stepHandler30.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler30);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test14499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14499");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray27, doubleArray43);
        graggBulirschStoerIntegrator45.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator45.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator45.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator45.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator45.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, false);
        stepHandler61.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler61);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 1, (double) 100.0f, (double) (short) 10, (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.String str73 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', 6.841560230416328d, 52.0d);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.String str79 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str73, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str79, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test14500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14500");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.String str45 = derivativeException43.getPattern();
        java.lang.String[] strArray54 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        java.lang.Throwable[] throwableArray58 = derivativeException57.getSuppressed();
        java.lang.Throwable[] throwableArray59 = derivativeException57.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException57);
        java.lang.String str62 = derivativeException57.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str45, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }
}

