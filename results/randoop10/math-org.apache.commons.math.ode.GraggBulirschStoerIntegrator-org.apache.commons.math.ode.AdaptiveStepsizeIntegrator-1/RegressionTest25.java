import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest25 {

    public static boolean debug = false;

    @Test
    public void test12501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12501");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double34 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double35 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        stepHandler36.reset();
        boolean boolean38 = stepHandler36.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test12502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12502");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) -1, (double) 0, (double) (byte) 1);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        stepHandler6.handleStep(stepInterpolator7, true);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test12503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12503");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction44, (double) 0L, (double) 10, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction49, (double) (short) 10, (double) (byte) 1, (int) (short) -1);
        graggBulirschStoerIntegrator42.setOrderControl(100, 5.477225575051661d, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) (short) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertNotNull(stepHandler58);
    }

    @Test
    public void test12504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12504");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str77 = graggBulirschStoerIntegrator75.getName();
        graggBulirschStoerIntegrator75.setOrderControl(0, (double) 0.0f, (double) 2);
        graggBulirschStoerIntegrator75.setInterpolationControl(false, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        graggBulirschStoerIntegrator75.addSwitchingFunction(switchingFunction85, (double) (short) 1, 5.916079783099616d, (-1));
        double double90 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test12505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12505");
        double[] doubleArray4 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray4, doubleArray14);
        double[] doubleArray24 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray59, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray41, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray24, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 35.0d, doubleArray14, doubleArray61);
        double double66 = graggBulirschStoerIntegrator65.getCurrentSignedStepsize();
        double double67 = graggBulirschStoerIntegrator65.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator65.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler68.handleStep(stepInterpolator69, false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.366600265340756d + "'", double66 == 8.366600265340756d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test12506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12506");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 100, (double) (byte) 1, 35.0d);
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, (double) (byte) 1, (double) 2);
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler56);
    }

    @Test
    public void test12507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12507");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException10);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray29);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException40);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test12508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12508");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str77 = graggBulirschStoerIntegrator75.getName();
        double double78 = graggBulirschStoerIntegrator75.getMaxStep();
        double double79 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        graggBulirschStoerIntegrator75.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator75.getStepHandler();
        double double83 = graggBulirschStoerIntegrator75.getMaxStep();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 10.0d + "'", double83 == 10.0d);
    }

    @Test
    public void test12509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12509");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        java.lang.String str19 = integratorException18.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: " + "'", str19, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test12510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12510");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 10, 5.916079783099616d, 10);
        double double10 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (double) 3, 31.622776601683793d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (-1.0d), (double) (byte) -1, (int) (byte) 1);
        double double21 = switchingFunctionsHandler0.getEventTime();
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test12511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12511");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction15, 1.0d, 10.0d, (int) (short) 0);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) '4', 0, (double) (byte) 100);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 0);
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', 0.0d, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction32, 9.898464007679532d, 5.623413251903491d, 3);
        org.apache.commons.math.ode.StepHandler stepHandler37 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler37);
    }

    @Test
    public void test12512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12512");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        derivativeException28.addSuppressed((java.lang.Throwable) derivativeException38);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray42 = derivativeException38.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.String str44 = derivativeException43.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException59);
        java.lang.Object[] objArray61 = derivativeException60.getArguments();
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException60);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str44, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
    }

    @Test
    public void test12513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12513");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray22 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray24 = derivativeException23.getSuppressed();
        java.lang.Throwable[] throwableArray25 = derivativeException23.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray27 = derivativeException23.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test12514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12514");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 100, (double) 100, (double) (byte) 0);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStepsizeControl(35.0d, 5.656854249492381d, 9.898464007679532d, 17.88854381999832d);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test12515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12515");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        java.lang.String str46 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction47, (double) 1L, 0.0d, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) -1, (int) (byte) -1, 2.514866859365871d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str46, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12516");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler77.handleStep(stepInterpolator79, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction83, (double) 100, (double) (short) -1, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction88 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction88, (double) 1.0f, (double) 0.0f, (int) (short) 0);
        java.lang.String str93 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str93, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12517");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), 1.7782794100389228d, 6.841560230416328d, 23.40347319320716d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test12518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12518");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, (-1));
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 10, (int) (byte) -1, 18.708286933869708d);
        double double36 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) 1, 32.0d, (double) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }

    @Test
    public void test12519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12519");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) '#', (double) '4', (double) 1);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) '4', 3, 97.0d);
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 0, (-1.0d), 1.7320508075688772d);
        double double22 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }

    @Test
    public void test12520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12520");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction47, (double) 100.0f, (double) 1.0f, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, (double) (short) -1, (double) 3, 10);
        graggBulirschStoerIntegrator38.setInitialStepSize(3.1622776601683795d);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 10);
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '#');
        double double66 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction67, 6.928935924497552d, (double) 100L, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test12521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12521");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (byte) 0, (-1.0d), (int) '4');
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        double double59 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double60 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
    }

    @Test
    public void test12522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12522");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction45, 12.368586720951603d, 13.37480609952844d, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test12523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12523");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        double double46 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test12524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12524");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, 0.0d, (double) 1, (double) (short) 10);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test12525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12525");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', (double) (byte) 100, (double) (short) 10);
        graggBulirschStoerIntegrator4.setOrderControl((-1), 3.0d, (double) 10);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 1, 38.3753555559862d, 20.400469235504897d);
        org.apache.commons.math.ode.StepHandler stepHandler23 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler23.reset();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler23);
    }

    @Test
    public void test12526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12526");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12527");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        double double37 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double38 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double39 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInterpolationControl(true, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1.0d) + "'", double39 == (-1.0d));
    }

    @Test
    public void test12528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12528");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        double double55 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 0, 100, 31.209033090201576d);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler67.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test12529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12529");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (-1.0d), 10.0d, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 59.16079783099616d, (double) 1.0f, (int) (short) 100);
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction11, (double) (byte) 100, 1.7320508075688772d, 3);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
    }

    @Test
    public void test12530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12530");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        double[] doubleArray28 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray49, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray51, doubleArray67);
        double[] doubleArray70 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray51, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray28, doubleArray51);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler0.evaluateStep(stepInterpolator74);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler0.add(switchingFunction76, (double) '4', 32.0d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler0.add(switchingFunction81, (double) (short) 1, (double) 1L, (int) '#');
        double double86 = switchingFunctionsHandler0.getEventTime();
        boolean boolean87 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = switchingFunctionsHandler0.evaluateStep(stepInterpolator88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test12531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12531");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(15.18214344379753d, 3.1622776601683795d, (double) 100, 0.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator46.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator46.addSwitchingFunction(switchingFunction48, 100.0d, (double) 0L, 2);
        double double53 = graggBulirschStoerIntegrator46.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator46.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler54);
        graggBulirschStoerIntegrator4.setStepsizeControl(15.298193747370034d, (double) (short) 1, 17.78279410038923d, 9.898464007679532d);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test12532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12532");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        double double77 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setStepsizeControl(5.916079783099616d, (double) (byte) 100, (double) 100, 31.622776601683793d);
        double double83 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double84 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double85 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.1622776601683795d + "'", double76 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 3.1622776601683795d + "'", double77 == 3.1622776601683795d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3.1622776601683795d + "'", double85 == 3.1622776601683795d);
    }

    @Test
    public void test12533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12533");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray28 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray34 = integratorException33.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str38 = derivativeException36.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str38, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12534");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray48 = derivativeException47.getArguments();
        java.lang.Class<?> wildcardClass49 = objArray48.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test12535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12535");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test12536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12536");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl(5.477225575051661d, (double) 0.0f, (double) (byte) 0, (double) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12537");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray25 = derivativeException23.getArguments();
        java.lang.Throwable[] throwableArray26 = derivativeException23.getSuppressed();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.Object[] objArray33 = derivativeException31.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException31);
        java.lang.Object[] objArray35 = derivativeException31.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("", objArray35);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        derivativeException46.addSuppressed((java.lang.Throwable) derivativeException55);
        java.lang.Throwable[] throwableArray57 = derivativeException46.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray57);
        integratorException36.addSuppressed((java.lang.Throwable) integratorException58);
        derivativeException23.addSuppressed((java.lang.Throwable) integratorException36);
        integratorException12.addSuppressed((java.lang.Throwable) integratorException36);
        java.lang.String str62 = integratorException12.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test12538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12538");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) 100.0f, 17.320508075688775d, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, 8.0d, 9.898464007679532d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test12539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12539");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator49.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        graggBulirschStoerIntegrator77.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator77.getStepHandler();
        graggBulirschStoerIntegrator49.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler82.handleStep(stepInterpolator84, true);
        stepHandler82.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (-1L), (double) (-1L), 0.0d, (double) (byte) -1);
        double double94 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test12540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12540");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', (double) 1.0f, (double) 2, 1.0d);
        graggBulirschStoerIntegrator38.setInitialStepSize((-1.0d));
        java.lang.String str66 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, 7.211102550927978d, (double) 10.0f, (double) (byte) -1);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, 98.48857801796105d, (double) (short) 100);
        graggBulirschStoerIntegrator38.setOrderControl(0, 0.0d, 4.449373890263558d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str66, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12541");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, 5.916079783099616d, (double) (short) 1, (double) 10L);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 1, 5.277951928008462d, 9.26731744662116d, 5.277951928008462d);
    }

    @Test
    public void test12542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12542");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (-0.0d), (double) 3, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test12543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12543");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 1L, (double) 1, 1);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler13.reset(0.0d, doubleArray24);
        boolean boolean27 = switchingFunctionsHandler0.reset(52.0d, doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test12544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12544");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        java.lang.String str46 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 1);
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 5.477225575051661d, 2.0d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, 1.7782794100389228d, 5.477225575051661d, 3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str46, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler50);
    }

    @Test
    public void test12545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12545");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, 56.23413251903491d, 42.661458015403085d, (-0.0d));
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) -1, 38.3753555559862d, 0.0d);
        java.lang.String str9 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        double[] doubleArray30 = new double[] { 100.0f, 100 };
        boolean boolean31 = switchingFunctionsHandler16.reset(Double.NaN, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray30, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double35 = switchingFunctionsHandler34.getEventTime();
        double[] doubleArray43 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean44 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray43);
        double[] doubleArray48 = new double[] { 100.0f, 100 };
        boolean boolean49 = switchingFunctionsHandler34.reset(Double.NaN, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray32, doubleArray48);
        double[] doubleArray51 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray32, doubleArray51);
        double double53 = graggBulirschStoerIntegrator52.getCurrentStepStart();
        double double54 = graggBulirschStoerIntegrator52.getCurrentStepStart();
        double double55 = graggBulirschStoerIntegrator52.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator52.setInterpolationControl(true, 2);
        double double59 = graggBulirschStoerIntegrator52.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator52.setStabilityCheck(false, (int) '4', 1, (double) 100);
        double double65 = graggBulirschStoerIntegrator52.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator52.getStepHandler();
        stepHandler66.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler66);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 1, (int) (short) 100, 31.209033090201576d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str9, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.0d) + "'", double55 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1.0d) + "'", double65 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test12546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12546");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12547");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException34);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException47);
        java.lang.String[] strArray57 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray57);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray57);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException69);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException75);
        java.lang.Object[] objArray77 = derivativeException75.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException75);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException75);
        derivativeException70.addSuppressed((java.lang.Throwable) derivativeException75);
        derivativeException59.addSuppressed((java.lang.Throwable) derivativeException75);
        integratorException47.addSuppressed((java.lang.Throwable) derivativeException75);
        integratorException34.addSuppressed((java.lang.Throwable) integratorException47);
        derivativeException19.addSuppressed((java.lang.Throwable) integratorException34);
        java.lang.Object[] objArray85 = integratorException34.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray85);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test12548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12548");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test12549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12549");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , hi!, ]");
    }

    @Test
    public void test12550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12550");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (short) 0, (double) 100);
        graggBulirschStoerIntegrator38.setStepsizeControl(Double.NaN, (double) 100L, (double) 10, (double) (short) 10);
        java.lang.String str49 = graggBulirschStoerIntegrator38.getName();
        double double50 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test12551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12551");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray30 = derivativeException25.getArguments();
        java.lang.Throwable[] throwableArray31 = derivativeException25.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test12552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12552");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray10);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.Object[] objArray37 = derivativeException35.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        derivativeException30.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.Throwable[] throwableArray41 = derivativeException35.getSuppressed();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        java.lang.String str47 = derivativeException45.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException45);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException62);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException63);
        java.lang.Throwable[] throwableArray65 = derivativeException35.getSuppressed();
        java.lang.String str66 = derivativeException35.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray74);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException79);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException79);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException79);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException79);
        java.lang.Throwable[] throwableArray84 = derivativeException79.getSuppressed();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test12553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12553");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) 10, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(4.449373890263558d, 15.298193747370034d, doubleArray20, doubleArray44);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
    }

    @Test
    public void test12554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12554");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (-1), 3.1622776601683795d, (double) (byte) -1, (double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, 0.0d, (double) (byte) 1, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) '4', 9.848857801796104d, 0);
        java.lang.String str60 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 1, (int) (byte) 1, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl(2, 72.11102550927978d, 1.7320508075688772d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test12555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12555");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray21 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray21, doubleArray58);
        boolean boolean62 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler0.evaluateStep(stepInterpolator63);
        boolean boolean65 = switchingFunctionsHandler0.stop();
        double[] doubleArray67 = null;
        boolean boolean68 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, (double) (short) 0, 59.16079783099616d, 3);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test12556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12556");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 1, 10, (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction15, 5.916079783099616d, (double) 1, 0);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) -1, (double) (short) 10, 31.622776601683793d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12557");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (short) 0, (double) 100);
        graggBulirschStoerIntegrator38.setStepsizeControl(Double.NaN, (double) 100L, (double) 10, (double) (short) 10);
        java.lang.String str49 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) (byte) 10, (double) 2, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12558");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler2.isEmpty();
        boolean boolean6 = switchingFunctionsHandler2.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator7 = null;
        boolean boolean8 = switchingFunctionsHandler2.evaluateStep(stepInterpolator7);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler2.add(switchingFunction9, (double) 10, 0.0d, 0);
        double double14 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        double[] doubleArray56 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray54, doubleArray56);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray36, doubleArray56);
        switchingFunctionsHandler16.stepAccepted((double) ' ', doubleArray56);
        boolean boolean60 = switchingFunctionsHandler16.stop();
        boolean boolean61 = switchingFunctionsHandler16.stop();
        boolean boolean62 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double65 = switchingFunctionsHandler64.getEventTime();
        boolean boolean66 = switchingFunctionsHandler64.isEmpty();
        boolean boolean67 = switchingFunctionsHandler64.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler69.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        double[] doubleArray89 = new double[] { 100.0f, 100 };
        boolean boolean90 = switchingFunctionsHandler75.reset(Double.NaN, doubleArray89);
        double[] doubleArray91 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray89, doubleArray91);
        switchingFunctionsHandler69.stepAccepted((double) (short) 10, doubleArray91);
        switchingFunctionsHandler64.stepAccepted((double) 100.0f, doubleArray91);
        boolean boolean95 = switchingFunctionsHandler16.reset((double) 0, doubleArray91);
        boolean boolean96 = switchingFunctionsHandler2.reset((double) (short) 10, doubleArray91);
        double[] doubleArray97 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator98 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 0.0d, doubleArray91, doubleArray97);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test12559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12559");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException15);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12560");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 1, 35.0d, (double) 1.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 9.848857801796104d, (double) (byte) 0, (int) (byte) 1);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test12561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12561");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.009970139234591d, 2.0d, (double) 10.0f, 8.366600265340756d);
    }

    @Test
    public void test12562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12562");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) 10L, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) 10.0f, 17.88854381999832d, (int) ' ');
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator65.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler66);
        graggBulirschStoerIntegrator38.setInitialStepSize(8.366600265340756d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test12563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12563");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 6.928935924497552d, 15.298193747370034d, (double) '4');
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations5 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        boolean boolean9 = switchingFunctionsHandler7.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler7.add(switchingFunction10, 5.916079783099616d, (double) ' ', (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler16.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler16.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        boolean boolean47 = switchingFunctionsHandler16.reset((double) (-1L), doubleArray45);
        boolean boolean48 = switchingFunctionsHandler7.reset((double) (-1), doubleArray45);
        double[] doubleArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations5, 72.11102550927978d, doubleArray45, 31.209033090201576d, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test12564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12564");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, 17.78279410038923d, 17.320508075688775d, 17.78279410038923d);
        graggBulirschStoerIntegrator4.setStepsizeControl(9.898464007679532d, (double) 0.0f, 38.3753555559862d, 97.0d);
    }

    @Test
    public void test12565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12565");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getMinStep();
        java.lang.String str87 = graggBulirschStoerIntegrator80.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction88 = null;
        graggBulirschStoerIntegrator80.addSwitchingFunction(switchingFunction88, (double) 0, 59.16079783099616d, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str87, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12566");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction2 = null;
        switchingFunctionsHandler0.add(switchingFunction2, Double.NaN, (double) 10.0f, 0);
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, (double) 10L, (double) 0, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test12567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12567");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray4);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.Throwable[] throwableArray14 = derivativeException13.getSuppressed();
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray28);
        java.lang.Throwable[] throwableArray34 = derivativeException33.getSuppressed();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException52);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException52);
        java.lang.String str55 = derivativeException33.getPattern();
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str55, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12568");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, (double) 1, (double) (short) 0, (double) 100L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double7 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str8 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl(31.209033090201576d, (double) 0.0f, 5.477225575051661d, 3.0d);
        java.lang.String str14 = graggBulirschStoerIntegrator4.getName();
        java.lang.String str15 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str8, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12569");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12570");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, 15.18214344379753d, 18.708286933869708d, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 15.298193747370034d, 4.161791450287818d, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) (short) 100, 17.320508075688775d, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray46, doubleArray66);
        boolean boolean69 = switchingFunctionsHandler0.reset(17.752843424574987d, doubleArray66);
        boolean boolean70 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test12571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12571");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        java.lang.String str51 = graggBulirschStoerIntegrator38.getName();
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) ' ');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 10);
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12572");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray12);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        derivativeException29.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.Throwable[] throwableArray43 = derivativeException17.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray43);
        java.lang.Throwable[] throwableArray45 = integratorException44.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        java.lang.Throwable[] throwableArray47 = integratorException44.getSuppressed();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test12573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12573");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException24);
        java.lang.String str26 = derivativeException24.getPattern();
        java.lang.Object[] objArray27 = derivativeException24.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        java.lang.String str29 = derivativeException28.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str26, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str29, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12574");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) 3, 17.320508075688775d, (double) '4');
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) 'a', (int) (short) 0, 13.33521432163324d);
    }

    @Test
    public void test12575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12575");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100L, (double) (short) -1, (int) ' ');
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 0, (double) 3);
        double double62 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        stepHandler63.handleStep(stepInterpolator64, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler63);
    }

    @Test
    public void test12576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12576");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction18, (double) (byte) 0, (double) (byte) -1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction23, 97.0d, 18.708286933869708d, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction28, (double) (byte) 1, (double) 100L, 0);
        java.lang.String str33 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray50, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator53.addSwitchingFunction(switchingFunction54, (double) 100.0f, (double) 0, 0);
        double double59 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator53.getMaxStep();
        java.lang.String str61 = graggBulirschStoerIntegrator53.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator53.addSwitchingFunction(switchingFunction62, (double) (short) 10, 0.0d, 0);
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0, (double) 2, (-0.0d), (double) (-1));
        double double72 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator53.addSwitchingFunction(switchingFunction73, (double) 1.0f, 0.0d, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator53.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler78);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler78.handleStep(stepInterpolator80, true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str33, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test12577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12577");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        graggBulirschStoerIntegrator67.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction77, (double) (-1L), (double) ' ', (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction82, (double) 'a', (double) (short) 0, (int) (byte) 1);
        double double87 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double88 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test12578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12578");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray11);
        java.lang.String str18 = derivativeException17.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: " + "'", str18, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test12579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12579");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray24 = derivativeException19.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
    }

    @Test
    public void test12580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12580");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.stop();
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, 17.320508075688775d, 9.848857801796104d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, 0.0d, (double) 1L, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler18.evaluateStep(stepInterpolator21);
        boolean boolean23 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler18.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler18.isEmpty();
        boolean boolean27 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler29.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray49, doubleArray51);
        switchingFunctionsHandler29.stepAccepted((double) (short) 10, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler18.reset((double) (short) 100, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean57 = switchingFunctionsHandler56.isEmpty();
        double[] doubleArray59 = new double[] {};
        switchingFunctionsHandler56.stepAccepted(0.0d, doubleArray59);
        switchingFunctionsHandler18.stepAccepted(17.78279410038923d, doubleArray59);
        boolean boolean62 = switchingFunctionsHandler0.reset(97.0d, doubleArray59);
        boolean boolean63 = switchingFunctionsHandler0.isEmpty();
        boolean boolean64 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler68.add(switchingFunction69, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler68.add(switchingFunction74, (double) 1L, (double) 1, 1);
        boolean boolean79 = switchingFunctionsHandler68.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler83 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double84 = switchingFunctionsHandler83.getEventTime();
        double[] doubleArray92 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean93 = switchingFunctionsHandler83.reset((double) (byte) 1, doubleArray92);
        boolean boolean94 = switchingFunctionsHandler81.reset(0.0d, doubleArray92);
        boolean boolean95 = switchingFunctionsHandler68.reset(52.0d, doubleArray92);
        boolean boolean96 = switchingFunctionsHandler66.reset(17.320508075688775d, doubleArray92);
        boolean boolean97 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray92);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test12581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12581");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 4.216965034285822d, (double) (short) 100, (double) (byte) -1);
    }

    @Test
    public void test12582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12582");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler11.add(switchingFunction12, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean17 = switchingFunctionsHandler11.isEmpty();
        double double18 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        double[] doubleArray40 = new double[] { 100.0f, 100 };
        boolean boolean41 = switchingFunctionsHandler26.reset(Double.NaN, doubleArray40);
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray40, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) 10, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        boolean boolean57 = switchingFunctionsHandler20.reset((double) 0L, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler11.reset((double) 1.0f, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        double[] doubleArray75 = new double[] { 100.0f, 100 };
        boolean boolean76 = switchingFunctionsHandler61.reset(Double.NaN, doubleArray75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double80 = switchingFunctionsHandler79.getEventTime();
        double[] doubleArray88 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean89 = switchingFunctionsHandler79.reset((double) (byte) 1, doubleArray88);
        double[] doubleArray93 = new double[] { 100.0f, 100 };
        boolean boolean94 = switchingFunctionsHandler79.reset(Double.NaN, doubleArray93);
        double[] doubleArray95 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator96 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray93, doubleArray95);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator97 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray75, doubleArray95);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator98 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100, (double) 10, doubleArray55, doubleArray95);
        boolean boolean99 = switchingFunctionsHandler0.reset(8.0d, doubleArray95);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test12583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12583");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (-1.0d), (-0.0d), (int) (byte) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test12584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12584");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, 38.3753555559862d, 5.916079783099616d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, 10.0d, (-1.0d), 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, 35.0d, 38.3753555559862d, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test12585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12585");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.Throwable[] throwableArray8 = derivativeException7.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray8);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.String str37 = derivativeException35.getPattern();
        java.lang.Throwable[] throwableArray38 = derivativeException35.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException35);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray50);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray50);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException55);
        java.lang.Object[] objArray57 = derivativeException35.getArguments();
        integratorException10.addSuppressed((java.lang.Throwable) derivativeException35);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str37, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test12586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12586");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler87 = graggBulirschStoerIntegrator80.getStepHandler();
        double double88 = graggBulirschStoerIntegrator80.getMaxStep();
        double double89 = graggBulirschStoerIntegrator80.getCurrentStepStart();
        double double90 = graggBulirschStoerIntegrator80.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.916079783099616d + "'", double86 == 5.916079783099616d);
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 35.0d + "'", double88 == 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
    }

    @Test
    public void test12587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12587");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException6.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException8);
        java.lang.Throwable[] throwableArray10 = integratorException8.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray10);
        java.lang.Object[] objArray12 = integratorException11.getArguments();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test12588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12588");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        double double14 = switchingFunctionsHandler0.getEventTime();
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test12589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12589");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        double double68 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        java.lang.String str74 = graggBulirschStoerIntegrator67.getName();
        double double75 = graggBulirschStoerIntegrator67.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler76);
        double double78 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double79 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler80);
    }

    @Test
    public void test12590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12590");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.String str47 = derivativeException15.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str47, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12591");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) '#');
        double double15 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction16, 9.898464007679532d, 52.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double65 = graggBulirschStoerIntegrator59.getCurrentStepStart();
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler68);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test12592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12592");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler0.add(switchingFunction44, (double) (byte) 0, 0.0d, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, 1.0d, 13.37480609952844d, (int) (byte) 100);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test12593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12593");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 10, (int) (byte) 10, (double) (-1));
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (-1), (int) (byte) 1, 5.916079783099616d);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler64);
    }

    @Test
    public void test12594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12594");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        double double54 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, (double) 10.0f, (double) 3);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) (byte) 0, (double) 100, (int) (byte) 10);
        java.lang.String str65 = graggBulirschStoerIntegrator38.getName();
        double double66 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test12595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12595");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray21 = derivativeException18.getArguments();
        java.lang.Throwable[] throwableArray22 = derivativeException18.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray22);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test12596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12596");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12597");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator80.getStepHandler();
        double double82 = graggBulirschStoerIntegrator80.getMinStep();
        graggBulirschStoerIntegrator80.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
    }

    @Test
    public void test12598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12598");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        java.lang.String str22 = derivativeException21.getPattern();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str22, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, , , hi!, ]");
    }

    @Test
    public void test12599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12599");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler18.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler18.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler18.isEmpty();
        double double25 = switchingFunctionsHandler18.getEventTime();
        boolean boolean26 = switchingFunctionsHandler18.stop();
        double double27 = switchingFunctionsHandler18.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray45, doubleArray47);
        switchingFunctionsHandler18.stepAccepted((double) 100L, doubleArray47);
        switchingFunctionsHandler0.stepAccepted(12.368586720951603d, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler52.add(switchingFunction55, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean62 = switchingFunctionsHandler61.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        boolean boolean64 = switchingFunctionsHandler61.evaluateStep(stepInterpolator63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler61.evaluateStep(stepInterpolator65);
        boolean boolean67 = switchingFunctionsHandler61.stop();
        double double68 = switchingFunctionsHandler61.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler61.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double75 = switchingFunctionsHandler74.getEventTime();
        double[] doubleArray83 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean84 = switchingFunctionsHandler74.reset((double) (byte) 1, doubleArray83);
        double[] doubleArray88 = new double[] { 100.0f, 100 };
        boolean boolean89 = switchingFunctionsHandler74.reset(Double.NaN, doubleArray88);
        double[] doubleArray90 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray88, doubleArray90);
        boolean boolean92 = switchingFunctionsHandler61.reset((double) (byte) -1, doubleArray88);
        boolean boolean93 = switchingFunctionsHandler52.reset(0.0d, doubleArray88);
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray88);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction95 = null;
        switchingFunctionsHandler0.add(switchingFunction95, 17.88854381999832d, 9.848857801796104d, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test12600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12600");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        stepHandler54.handleStep(stepInterpolator55, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test12601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12601");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler47);
    }

    @Test
    public void test12602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12602");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 10, (double) (short) 1, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction64, 17.320508075688775d, 1.0d, (int) (short) 1);
        graggBulirschStoerIntegrator38.setInitialStepSize(59.16079783099616d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(stepHandler59);
    }

    @Test
    public void test12603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12603");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) '#');
        double double15 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        double[] doubleArray55 = new double[] { 100.0f, 100 };
        boolean boolean56 = switchingFunctionsHandler41.reset(Double.NaN, doubleArray55);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray39, doubleArray55);
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double63 = graggBulirschStoerIntegrator57.getMinStep();
        java.lang.String str64 = graggBulirschStoerIntegrator57.getName();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator57.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler65.handleStep(stepInterpolator66, true);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler65);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction70, 2.0d, 100.0d, (int) (byte) 100);
        graggBulirschStoerIntegrator4.setInitialStepSize(12.368586720951603d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str64, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test12604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12604");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 0, (-1), (-1.0d));
        double double16 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) -1, (double) '4', 1.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double67 = graggBulirschStoerIntegrator59.getMaxStep();
        java.lang.String str68 = graggBulirschStoerIntegrator59.getName();
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator59.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        stepHandler69.handleStep(stepInterpolator70, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler69);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 2, (int) (short) -1, 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str68, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test12605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12605");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(6.841560230416328d, (-1.0d), 52.0d, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, 0.0d, 0.0d, (int) (short) 100);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 10, 1, 3.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, (double) (short) 100, 10.0d, (double) 1.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test12606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12606");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray60, doubleArray62);
        double double64 = graggBulirschStoerIntegrator63.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator63.getStepHandler();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler65);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction67, (double) 1, 100.0d, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test12607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12607");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler6.add(switchingFunction7, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double19 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray27 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean28 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray27);
        double[] doubleArray32 = new double[] { 100.0f, 100 };
        boolean boolean33 = switchingFunctionsHandler18.reset(Double.NaN, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray32, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray34, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler6.reset(100.0d, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        switchingFunctionsHandler54.stepAccepted((double) (short) 10, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray34, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler0.reset(0.0d, doubleArray34);
        boolean boolean81 = switchingFunctionsHandler0.stop();
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        double double83 = switchingFunctionsHandler0.getEventTime();
        boolean boolean84 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test12608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12608");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        double double39 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction40, (double) 1L, (double) (byte) 10, (int) (short) -1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0.0f);
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12609");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 5.477225575051661d, (double) (short) 1, (-1.0d));
    }

    @Test
    public void test12610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12610");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        double double87 = graggBulirschStoerIntegrator80.getCurrentStepStart();
        double double88 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        double double89 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator80.setOrderControl((int) (byte) -1, 4.161791450287818d, 5.477225575051661d);
        double double94 = graggBulirschStoerIntegrator80.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler95 = graggBulirschStoerIntegrator80.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.916079783099616d + "'", double86 == 5.916079783099616d);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 5.916079783099616d + "'", double88 == 5.916079783099616d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 5.916079783099616d + "'", double89 == 5.916079783099616d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler95);
    }

    @Test
    public void test12611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12611");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, 9.848857801796104d, 32.0d, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 17.320508075688775d, (double) (-1.0f), 100);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler22.reset(0.0d, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        boolean boolean41 = switchingFunctionsHandler37.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean44 = switchingFunctionsHandler43.isEmpty();
        double[] doubleArray46 = new double[] {};
        switchingFunctionsHandler43.stepAccepted(0.0d, doubleArray46);
        switchingFunctionsHandler37.stepAccepted(5.916079783099616d, doubleArray46);
        switchingFunctionsHandler22.stepAccepted((double) (-1), doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double71 = switchingFunctionsHandler70.getEventTime();
        double[] doubleArray79 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean80 = switchingFunctionsHandler70.reset((double) (byte) 1, doubleArray79);
        double[] doubleArray84 = new double[] { 100.0f, 100 };
        boolean boolean85 = switchingFunctionsHandler70.reset(Double.NaN, doubleArray84);
        double[] doubleArray86 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray84, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray66, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), 0.0d, doubleArray46, doubleArray66);
        boolean boolean90 = switchingFunctionsHandler0.reset(9.848857801796104d, doubleArray66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test12612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12612");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) '#');
        double double15 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction16, 9.898464007679532d, 52.0d, (int) 'a');
        double double21 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str22 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setOrderControl(2, 23.40347319320716d, 56.23413251903491d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str22, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12613");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 1);
        java.lang.String str48 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str50 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str48, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12614");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 5.477225575051661d, Double.NaN, (double) (byte) 1);
        graggBulirschStoerIntegrator4.setOrderControl(100, (double) 0.0f, 0.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl(23.40347319320716d, 5.477225575051661d, 0.0d, (double) (byte) 100);
        graggBulirschStoerIntegrator4.setInitialStepSize(5.623413251903491d);
        java.lang.Class<?> wildcardClass16 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test12615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12615");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler0.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray36, doubleArray54);
        boolean boolean78 = switchingFunctionsHandler8.reset((double) (short) 1, doubleArray54);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray54);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler0.evaluateStep(stepInterpolator80);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        switchingFunctionsHandler0.add(switchingFunction82, (double) 10, 0.0d, 3);
        boolean boolean87 = switchingFunctionsHandler0.stop();
        double double88 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test12616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12616");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler4.add(switchingFunction5, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler4.add(switchingFunction10, (double) 1L, (double) 1, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler16.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler16.isEmpty();
        boolean boolean25 = switchingFunctionsHandler16.stop();
        boolean boolean26 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler28.isEmpty();
        double double40 = switchingFunctionsHandler28.getEventTime();
        boolean boolean41 = switchingFunctionsHandler28.stop();
        double[] doubleArray49 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray66, doubleArray68);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray49, doubleArray66);
        boolean boolean71 = switchingFunctionsHandler28.reset(5.916079783099616d, doubleArray66);
        boolean boolean72 = switchingFunctionsHandler16.reset((double) 2, doubleArray66);
        boolean boolean73 = switchingFunctionsHandler4.reset(0.0d, doubleArray66);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray66);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test12617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12617");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String str5 = derivativeException3.getPattern();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.String str20 = derivativeException17.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray27 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException52);
        java.lang.Object[] objArray54 = derivativeException42.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray54);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException57);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException69);
        java.lang.Throwable[] throwableArray71 = derivativeException70.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        java.lang.String str73 = integratorException72.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException72);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray82);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray82);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException84);
        integratorException72.addSuppressed((java.lang.Throwable) integratorException85);
        integratorException58.addSuppressed((java.lang.Throwable) integratorException85);
        java.lang.Object[] objArray88 = integratorException85.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray88);
        integratorException31.addSuppressed((java.lang.Throwable) integratorException90);
        java.lang.Object[] objArray92 = integratorException90.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException90);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test12618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12618");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, 5.916079783099616d, 42.661458015403085d, 17.78279410038923d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        double[] doubleArray16 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean17 = switchingFunctionsHandler7.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray21 = new double[] { 100.0f, 100 };
        boolean boolean22 = switchingFunctionsHandler7.reset(Double.NaN, doubleArray21);
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray21, doubleArray23);
        double double25 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator24.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator24.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        graggBulirschStoerIntegrator24.addSwitchingFunction(switchingFunction32, (double) 10L, (-1.0d), (int) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler37 = graggBulirschStoerIntegrator24.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler37);
        double double39 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double40 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        java.lang.String str41 = graggBulirschStoerIntegrator4.getName();
        double double42 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str41, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 5.916079783099616d + "'", double42 == 5.916079783099616d);
    }

    @Test
    public void test12619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12619");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        java.lang.Object[] objArray26 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray28 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray28);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test12620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12620");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String str26 = integratorException25.getPattern();
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException45);
        java.lang.Throwable[] throwableArray47 = derivativeException45.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        integratorException25.addSuppressed((java.lang.Throwable) derivativeException48);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test12621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12621");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double48 = graggBulirschStoerIntegrator38.getMinStep();
        double double49 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, 0.0d, (double) (short) 0, 1);
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12622");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(18.708286933869708d, 72.11102550927978d, (-1.0d), (double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 17.78279410038923d, (double) (byte) -1, (int) (short) -1);
    }

    @Test
    public void test12623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12623");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        java.lang.Throwable[] throwableArray8 = derivativeException7.getSuppressed();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray23 = derivativeException22.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray23);
        derivativeException7.addSuppressed((java.lang.Throwable) integratorException26);
        java.lang.String str28 = integratorException26.getPattern();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str28, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test12624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12624");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double34 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double35 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler36);
    }

    @Test
    public void test12625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12625");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, 100.0d, 0.0d, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        double[] doubleArray22 = new double[] { 100.0f, 100 };
        boolean boolean23 = switchingFunctionsHandler8.reset(Double.NaN, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray22, doubleArray24);
        org.apache.commons.math.ode.StepHandler stepHandler26 = graggBulirschStoerIntegrator25.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray45, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray47, doubleArray63);
        graggBulirschStoerIntegrator65.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator65.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator65.getStepHandler();
        graggBulirschStoerIntegrator65.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator65.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator65.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator65.getStepHandler();
        graggBulirschStoerIntegrator25.setStepHandler(stepHandler82);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator25.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler84);
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler86.reset();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertNotNull(stepHandler82);
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertNotNull(stepHandler86);
    }

    @Test
    public void test12626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12626");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.stop();
        double double4 = switchingFunctionsHandler0.getEventTime();
        boolean boolean5 = switchingFunctionsHandler0.stop();
        double[] doubleArray15 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double19 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray27 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean28 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray27);
        double[] doubleArray32 = new double[] { 100.0f, 100 };
        boolean boolean33 = switchingFunctionsHandler18.reset(Double.NaN, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray32, doubleArray34);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray15, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double[] doubleArray46 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean47 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler37.isEmpty();
        double double49 = switchingFunctionsHandler37.getEventTime();
        boolean boolean50 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler52.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        switchingFunctionsHandler52.stepAccepted((double) (short) 10, doubleArray74);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double79 = switchingFunctionsHandler78.getEventTime();
        double[] doubleArray87 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean88 = switchingFunctionsHandler78.reset((double) (byte) 1, doubleArray87);
        boolean boolean89 = switchingFunctionsHandler52.reset(3.1622776601683795d, doubleArray87);
        switchingFunctionsHandler37.stepAccepted((double) 100, doubleArray87);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 1.0f, doubleArray15, doubleArray87);
        boolean boolean92 = switchingFunctionsHandler0.reset(43.25307727072111d, doubleArray87);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator93 = null;
        boolean boolean94 = switchingFunctionsHandler0.evaluateStep(stepInterpolator93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test12627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12627");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 3.1622776601683795d, (double) (-1), 5.916079783099616d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator9 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        double double10 = graggBulirschStoerIntegrator9.getMaxStep();
        graggBulirschStoerIntegrator9.setInterpolationControl(true, (int) ' ');
        double double14 = graggBulirschStoerIntegrator9.getCurrentStepStart();
        double double15 = graggBulirschStoerIntegrator9.getCurrentStepStart();
        double double16 = graggBulirschStoerIntegrator9.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler17 = graggBulirschStoerIntegrator9.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        stepHandler17.handleStep(stepInterpolator18, true);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler17);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) ' ', (int) '#', (double) ' ');
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler17);
    }

    @Test
    public void test12628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12628");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator4.getStepHandler();
        boolean boolean16 = stepHandler15.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        stepHandler15.handleStep(stepInterpolator17, false);
        boolean boolean20 = stepHandler15.requiresDenseOutput();
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test12629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12629");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100, (double) 100, (double) (short) 10, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction16, 3.1622776601683795d, (double) 0.0f, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction21, 43.25307727072111d, 0.0d, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test12630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12630");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double66 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction67, 32.0d, 30.408967315912587d, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction72, 10.0d, 5.009970139234591d, (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test12631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12631");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, (double) 1.0f, 35.0d, Double.NaN);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (short) 1, (-1), (double) (-1L));
        graggBulirschStoerIntegrator4.setOrderControl(100, (double) 0L, 4.161791450287818d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        double[] doubleArray55 = new double[] { 100.0f, 100 };
        boolean boolean56 = switchingFunctionsHandler41.reset(Double.NaN, doubleArray55);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray39, doubleArray55);
        graggBulirschStoerIntegrator57.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double65 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) (-1.0f), (double) (byte) 100, (double) (short) 10, (double) '4');
        double double71 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 10L, (-0.0d), (double) 1.0f, (double) 100.0f);
        graggBulirschStoerIntegrator57.setInitialStepSize(5.477225575051661d);
        double double79 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        double double80 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler81);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 3.1622776601683795d + "'", double5 == 3.1622776601683795d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler81);
    }

    @Test
    public void test12632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12632");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (-1.0d), (double) 10, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) 100, (double) 'a', (int) 'a');
        double[] doubleArray25 = null;
        boolean boolean26 = switchingFunctionsHandler0.reset(52.0d, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, 1.0d, 12.368586720951603d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test12633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12633");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 100L, 31.622776601683793d, 7.211102550927978d);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 3);
        java.lang.String str72 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str72, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12634");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray30);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException35);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!]");
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test12635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12635");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) 'a', (double) (byte) 10, (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 1.0d, 15.18214344379753d, (int) (short) 100);
    }

    @Test
    public void test12636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12636");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        double double37 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, 0, (int) (short) 100, (double) 0L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction43, (double) (short) 0, 17.78279410038923d, (int) (byte) 10);
        double double48 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test12637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12637");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (-0.0d), (double) 0.0f, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) (short) -1, 1.0d, 100);
        double double63 = graggBulirschStoerIntegrator38.getMinStep();
        double double64 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass66 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test12638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12638");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray46, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray48, doubleArray64);
        graggBulirschStoerIntegrator66.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator66.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator66.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator66.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator66.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        stepHandler82.handleStep(stepInterpolator83, false);
        stepHandler82.reset();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler82);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (short) -1);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) 0, 1.0d, 5.277951928008462d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(stepHandler82);
    }

    @Test
    public void test12639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12639");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) 100L, (double) 1L, (int) (short) -1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 100);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (byte) 10);
        graggBulirschStoerIntegrator38.setOrderControl((int) 'a', 5.623413251903491d, 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test12640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12640");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(5.623413251903491d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler63);
    }

    @Test
    public void test12641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12641");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 100, 32.0d, 1);
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler15.add(switchingFunction16, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean21 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray41, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray43, doubleArray59);
        boolean boolean62 = switchingFunctionsHandler15.reset(100.0d, doubleArray43);
        double double63 = switchingFunctionsHandler15.getEventTime();
        boolean boolean64 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        switchingFunctionsHandler15.add(switchingFunction65, (double) (byte) -1, (double) (byte) -1, 1);
        boolean boolean70 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double73 = switchingFunctionsHandler72.getEventTime();
        double[] doubleArray81 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean82 = switchingFunctionsHandler72.reset((double) (byte) 1, doubleArray81);
        double[] doubleArray86 = new double[] { 100.0f, 100 };
        boolean boolean87 = switchingFunctionsHandler72.reset(Double.NaN, doubleArray86);
        boolean boolean88 = switchingFunctionsHandler15.reset((double) 3, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 10.0f, doubleArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test12642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12642");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        double[] doubleArray6 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray59, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray41, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray23, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (byte) 1, doubleArray6, doubleArray41);
        switchingFunctionsHandler0.stepAccepted(5.916079783099616d, doubleArray41);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler0.evaluateStep(stepInterpolator67);
        double[] doubleArray70 = null;
        boolean boolean71 = switchingFunctionsHandler0.reset((double) 3, doubleArray70);
        double double72 = switchingFunctionsHandler0.getEventTime();
        double double73 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }

    @Test
    public void test12643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12643");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str21 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator19.getStepHandler();
        double double23 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double24 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction25, 4.449373890263558d, (-1.0d), (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
    }

    @Test
    public void test12644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12644");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 1, (double) '4');
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double61 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
    }

    @Test
    public void test12645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12645");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        boolean boolean4 = switchingFunctionsHandler2.isEmpty();
        boolean boolean5 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray27, doubleArray43);
        switchingFunctionsHandler2.stepAccepted(10.0d, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        double[] doubleArray83 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray81, doubleArray83);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray63, doubleArray83);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator86 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) (-1L), doubleArray27, doubleArray63);
        double double87 = graggBulirschStoerIntegrator86.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator86.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        graggBulirschStoerIntegrator86.addSwitchingFunction(switchingFunction89, 56.568542494923804d, 15.18214344379753d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 52.0d + "'", double87 == 52.0d);
        org.junit.Assert.assertNotNull(stepHandler88);
    }

    @Test
    public void test12646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12646");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        double double69 = graggBulirschStoerIntegrator19.getMinStep();
        double double70 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction71, (double) (byte) 100, (double) 1, 10);
        double double76 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction77, (double) 3, (double) (byte) -1, (int) 'a');
        java.lang.String str82 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.0d) + "'", double76 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str82, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12647");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) (byte) -1, (double) 10L, (double) 1L, (double) 100.0f);
        java.lang.String str64 = graggBulirschStoerIntegrator57.getName();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 0.0f, 15.298193747370034d, 6.841560230416328d, (double) 10);
        double double70 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        java.lang.String str71 = graggBulirschStoerIntegrator57.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str64, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str71, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12648");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12649");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String str28 = integratorException27.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str28, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12650");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize(3.1622776601683795d);
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, (int) (byte) 0, 18.708286933869708d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, 2.514866859365871d, 52.0d, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction64, 31.209033090201576d, 4.449373890263558d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12651");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.String str17 = integratorException16.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str17, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12652");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        double double37 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, 0, (int) (short) 100, (double) 0L);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator47.getStepHandler();
        boolean boolean49 = stepHandler48.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler48);
        boolean boolean51 = stepHandler48.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        stepHandler48.handleStep(stepInterpolator52, true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test12653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12653");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException28);
        java.lang.Throwable[] throwableArray30 = integratorException28.getSuppressed();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test12654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12654");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset(100.0d, doubleArray28);
        double double48 = switchingFunctionsHandler0.getEventTime();
        boolean boolean49 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, (double) (byte) -1, (double) (byte) -1, 1);
        boolean boolean55 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        boolean boolean73 = switchingFunctionsHandler0.reset((double) 3, doubleArray71);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler0.add(switchingFunction74, 0.0d, 7.691605673134586d, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test12655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12655");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray10 = derivativeException8.getSuppressed();
        java.lang.Throwable[] throwableArray11 = derivativeException8.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray11);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test12656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12656");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(42.661458015403085d, 12.368586720951603d, Double.NaN, 72.11102550927978d);
    }

    @Test
    public void test12657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12657");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException38);
        derivativeException28.addSuppressed((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException55);
        derivativeException18.addSuppressed((java.lang.Throwable) integratorException56);
        java.lang.Throwable[] throwableArray58 = derivativeException18.getSuppressed();
        integratorException12.addSuppressed((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.Throwable[] throwableArray61 = derivativeException60.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test12658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12658");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 5.477225575051661d, Double.NaN, (double) (byte) 1);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (-1.0f), (double) 10.0f, 5.916079783099616d, 3.0d);
        java.lang.String str12 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler13 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.setStepHandler(stepHandler13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12659");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException(throwable20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray22);
        derivativeException16.addSuppressed((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        derivativeException46.addSuppressed((java.lang.Throwable) derivativeException51);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException51);
        java.lang.String str58 = derivativeException51.getPattern();
        java.lang.Throwable[] throwableArray59 = derivativeException51.getSuppressed();
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray61 = integratorException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException62);
        java.lang.String str64 = integratorException63.toString();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str64, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12660");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 10, (double) 10.0f, 35.0d);
        java.lang.String str62 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12661");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test12662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12662");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler51.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler51.handleStep(stepInterpolator53, false);
        java.lang.Class<?> wildcardClass56 = stepHandler51.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test12663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12663");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray14);
        java.lang.Throwable[] throwableArray23 = integratorException22.getSuppressed();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test12664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12664");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 5.477225575051661d, Double.NaN, (double) (byte) 1);
        graggBulirschStoerIntegrator4.setOrderControl(100, (double) 0.0f, 0.0d);
        double double9 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, 0);
        double double13 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 5.477225575051661d + "'", double9 == 5.477225575051661d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 23.40347319320716d + "'", double13 == 23.40347319320716d);
    }

    @Test
    public void test12665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12665");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray15);
        java.lang.String str25 = integratorException24.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        java.lang.Object[] objArray27 = integratorException26.getArguments();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
    }

    @Test
    public void test12666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12666");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        double double60 = graggBulirschStoerIntegrator38.getMaxStep();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction65, 9.848857801796104d, (double) 0L, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction70, (double) 2, (double) '#', 1);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler75);
    }

    @Test
    public void test12667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12667");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler11.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        stepHandler11.handleStep(stepInterpolator13, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test12668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12668");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 1, (double) 1L, 0.0d);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
    }

    @Test
    public void test12669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12669");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12670");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        java.lang.String str18 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl((-0.0d), (double) (byte) 100, (double) 10.0f, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction24, 1.0d, 31.209033090201576d, 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12671");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray3 = new double[] {};
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray50, doubleArray52);
        switchingFunctionsHandler30.stepAccepted((double) (short) 10, doubleArray52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray26, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler56.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray76 = new double[] { 100.0f, 100 };
        boolean boolean77 = switchingFunctionsHandler62.reset(Double.NaN, doubleArray76);
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray76, doubleArray78);
        switchingFunctionsHandler56.stepAccepted((double) (short) 10, doubleArray78);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler82 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double83 = switchingFunctionsHandler82.getEventTime();
        double[] doubleArray91 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean92 = switchingFunctionsHandler82.reset((double) (byte) 1, doubleArray91);
        boolean boolean93 = switchingFunctionsHandler56.reset((double) 0L, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator94 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 5.477225575051661d, doubleArray52, doubleArray91);
        boolean boolean95 = switchingFunctionsHandler0.reset((double) 0L, doubleArray52);
        double double96 = switchingFunctionsHandler0.getEventTime();
        boolean boolean97 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator98 = null;
        boolean boolean99 = switchingFunctionsHandler0.evaluateStep(stepInterpolator98);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test12672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12672");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        double double53 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, 6.841560230416328d, (double) (-1), 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) (byte) -1, 0.0d, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
    }

    @Test
    public void test12673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12673");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) (short) -1, 9.848857801796104d, (int) ' ');
        double double17 = switchingFunctionsHandler0.getEventTime();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test12674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12674");
        java.lang.Throwable throwable0 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException1 = new org.apache.commons.math.ode.DerivativeException(throwable0);
        java.lang.Object[] objArray2 = derivativeException1.getArguments();
        java.lang.Throwable[] throwableArray3 = derivativeException1.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException1);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException4);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.String str30 = derivativeException29.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.Throwable[] throwableArray32 = derivativeException31.getSuppressed();
        integratorException5.addSuppressed((java.lang.Throwable) derivativeException31);
        java.lang.String str34 = derivativeException31.getPattern();
        java.lang.Object[] objArray35 = derivativeException31.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.Class<?> wildcardClass37 = derivativeException36.getClass();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test12675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12675");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) 1.0f, (double) 100, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction56, 0.0d, 35.0d, (int) (byte) 10);
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (int) ' ', 0, 5.916079783099616d);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        stepHandler66.handleStep(stepInterpolator67, false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test12676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12676");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray31 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray33 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", objArray33);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException53);
        java.lang.Throwable[] throwableArray55 = derivativeException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray55);
        integratorException34.addSuppressed((java.lang.Throwable) integratorException56);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException34);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray67);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray79);
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException83);
        derivativeException68.addSuppressed((java.lang.Throwable) derivativeException84);
        java.lang.String str86 = derivativeException84.getPattern();
        java.lang.Object[] objArray87 = derivativeException84.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException84);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException88);
        java.lang.String str91 = integratorException90.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException92 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException90);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str86, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str91, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12677");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        java.lang.String str31 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction32, (double) 10L, (double) 3, (int) (short) 10);
        graggBulirschStoerIntegrator19.setOrderControl(10, 3.1622776601683795d, (double) 10);
        java.lang.String str41 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction42, 2.514866859365871d, 30.408967315912587d, 100);
        graggBulirschStoerIntegrator19.setInitialStepSize(98.48857801796105d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str41, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12678");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        switchingFunctionsHandler5.stepAccepted((double) (short) 10, doubleArray27);
        switchingFunctionsHandler0.stepAccepted((double) 100.0f, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double35 = switchingFunctionsHandler34.getEventTime();
        double[] doubleArray43 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean44 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray43);
        double[] doubleArray48 = new double[] { 100.0f, 100 };
        boolean boolean49 = switchingFunctionsHandler34.reset(Double.NaN, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler50.add(switchingFunction53, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler59.reset(0.0d, doubleArray70);
        boolean boolean73 = switchingFunctionsHandler50.reset((double) (byte) 100, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray48, doubleArray70);
        boolean boolean75 = switchingFunctionsHandler0.reset((double) '4', doubleArray48);
        double double76 = switchingFunctionsHandler0.getEventTime();
        double double77 = switchingFunctionsHandler0.getEventTime();
        boolean boolean78 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test12679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12679");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1.0f));
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 0, (double) 0, 0.0d);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 1);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) '4', (int) (short) 1, 10.0d);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (short) 0, (double) (short) 0);
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12680");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test12681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12681");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        double double50 = graggBulirschStoerIntegrator42.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) '#', 17.88854381999832d, (int) (short) 1);
        double double56 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction57, 4.161791450287818d, (double) 10.0f, 100);
        double double62 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setInitialStepSize(17.88854381999832d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(stepHandler63);
    }

    @Test
    public void test12682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12682");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) (byte) 1, (double) ' ', (int) ' ');
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1.0f));
        double double66 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test12683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12683");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (short) 1, (double) (short) 1, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations7 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler9.add(switchingFunction12, (double) (short) 1, (double) '4', (int) '#');
        boolean boolean17 = switchingFunctionsHandler9.isEmpty();
        double double18 = switchingFunctionsHandler9.getEventTime();
        boolean boolean19 = switchingFunctionsHandler9.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        boolean boolean25 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray45, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler49.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double56 = switchingFunctionsHandler55.getEventTime();
        double[] doubleArray64 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean65 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray64);
        double[] doubleArray69 = new double[] { 100.0f, 100 };
        boolean boolean70 = switchingFunctionsHandler55.reset(Double.NaN, doubleArray69);
        double[] doubleArray71 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray69, doubleArray71);
        switchingFunctionsHandler49.stepAccepted((double) (short) 10, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray45, doubleArray71);
        switchingFunctionsHandler21.stepAccepted(5.656854249492381d, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations7, 17.88854381999832d, doubleArray71, (double) 100.0f, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test12684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12684");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 10, (int) (byte) 10, (double) (-1));
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', 56.23413251903491d, 6.841560230416328d, 38.3753555559862d);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) '4');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test12685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12685");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) 1L, (double) (short) 0, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 1.0f, 0.0d, (int) ' ');
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 1, 2, (double) (byte) 1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, 0.0d, (double) 2, (double) 100);
        java.lang.String str75 = graggBulirschStoerIntegrator74.getName();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator74.getStepHandler();
        boolean boolean77 = stepHandler76.requiresDenseOutput();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler76);
        stepHandler76.reset();
        boolean boolean80 = stepHandler76.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test12686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12686");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.848857801796104d, 10.0d, 35.0d, (double) '4');
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, (double) (byte) 10, (double) 1.0f, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test12687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12687");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', 43.25307727072111d, 52.0d, 13.37480609952844d);
    }

    @Test
    public void test12688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12688");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
    }

    @Test
    public void test12689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12689");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        java.lang.Class<?> wildcardClass16 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test12690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12690");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (short) 0, (double) 100);
        graggBulirschStoerIntegrator38.setStepsizeControl(Double.NaN, (double) 100L, (double) 10, (double) (short) 10);
        java.lang.String str49 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, 13.92838827718412d, 5.623413251903491d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12691");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 3, (double) 10, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 9.848857801796104d, 2.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double57 = graggBulirschStoerIntegrator49.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator49.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        stepHandler58.handleStep(stepInterpolator60, false);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler58);
    }

    @Test
    public void test12692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12692");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.33521432163324d, (double) 10L, 0.0d, (double) 100);
    }

    @Test
    public void test12693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12693");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction37, (double) 'a', 3.1622776601683795d, (int) (short) 100);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 0.0f);
        double double44 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        stepHandler46.handleStep(stepInterpolator50, false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test12694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12694");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double54 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator49.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler55.handleStep(stepInterpolator56, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        stepHandler55.handleStep(stepInterpolator59, false);
        stepHandler55.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler55);
        double double64 = graggBulirschStoerIntegrator4.getMaxStep();
        double double65 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.0d + "'", double64 == 3.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 3.0d + "'", double65 == 3.0d);
    }

    @Test
    public void test12695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12695");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0.0f, (double) 3, (int) (byte) 10);
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        double double10 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, 3.0d, (double) (-1), (int) (byte) 10);
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler18.add(switchingFunction19, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction30 = null;
        switchingFunctionsHandler27.add(switchingFunction30, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler36.reset(0.0d, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler27.reset((double) (byte) 100, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        double[] doubleArray87 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray85, doubleArray87);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray67, doubleArray87);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (-0.0d), doubleArray47, doubleArray87);
        boolean boolean91 = switchingFunctionsHandler18.reset(0.0d, doubleArray87);
        boolean boolean92 = switchingFunctionsHandler0.reset((double) ' ', doubleArray87);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = switchingFunctionsHandler0.evaluateStep(stepInterpolator93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test12696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12696");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler6.add(switchingFunction7, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double19 = switchingFunctionsHandler18.getEventTime();
        double[] doubleArray27 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean28 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray27);
        double[] doubleArray32 = new double[] { 100.0f, 100 };
        boolean boolean33 = switchingFunctionsHandler18.reset(Double.NaN, doubleArray32);
        double[] doubleArray34 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator35 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray32, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray34, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler6.reset(100.0d, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler54.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        switchingFunctionsHandler54.stepAccepted((double) (short) 10, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray34, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler0.reset(0.0d, doubleArray34);
        boolean boolean81 = switchingFunctionsHandler0.stop();
        boolean boolean82 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        switchingFunctionsHandler0.add(switchingFunction83, (double) 100L, 18.708286933869708d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction88 = null;
        switchingFunctionsHandler0.add(switchingFunction88, 13.92838827718412d, 7.211102550927978d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        switchingFunctionsHandler0.add(switchingFunction93, 59.16079783099616d, (double) 3, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test12697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12697");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray12);
        java.lang.String str14 = integratorException13.getPattern();
        java.lang.String str15 = integratorException13.getPattern();
        java.lang.Object[] objArray16 = integratorException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", objArray16);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str14, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str15, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test12698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12698");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) 100, 9.848857801796104d, 0.0d);
        double double38 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInitialStepSize(2.514866859365871d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test12699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12699");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 100, 0.0d, (double) 0L);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 'a');
    }

    @Test
    public void test12700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12700");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), 0.0d, (double) 10L, 3.1622776601683795d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test12701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12701");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        boolean boolean47 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler49.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double56 = switchingFunctionsHandler55.getEventTime();
        double[] doubleArray64 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean65 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray64);
        double[] doubleArray69 = new double[] { 100.0f, 100 };
        boolean boolean70 = switchingFunctionsHandler55.reset(Double.NaN, doubleArray69);
        double[] doubleArray71 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray69, doubleArray71);
        switchingFunctionsHandler49.stepAccepted((double) (short) 10, doubleArray71);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray71);
        boolean boolean75 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test12702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12702");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 23.40347319320716d, (double) (short) 1, (double) 0.0f);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray27, doubleArray43);
        double[] doubleArray46 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray27, doubleArray46);
        double double48 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        double double49 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator47.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator47.addSwitchingFunction(switchingFunction51, (double) (byte) 10, 1.0d, (int) 'a');
        double double56 = graggBulirschStoerIntegrator47.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator47.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler57);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) (short) 1, (int) (short) -1, 13.37480609952844d);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler64.handleStep(stepInterpolator65, false);
        stepHandler64.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertNotNull(stepHandler64);
    }

    @Test
    public void test12703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12703");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        double double51 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (-1), (int) (byte) 10, (double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl(52.0d, (double) 0L, 31.622776601683793d, 59.16079783099616d);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, (double) (-1.0f), 17.752843424574987d);
        java.lang.String str66 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str66, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12704");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double4 = switchingFunctionsHandler3.getEventTime();
        double[] doubleArray12 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean13 = switchingFunctionsHandler3.reset((double) (byte) 1, doubleArray12);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray2, doubleArray12);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        java.lang.String str16 = graggBulirschStoerIntegrator14.getName();
        graggBulirschStoerIntegrator14.setInitialStepSize(17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str16, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12705");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, 0.0d, 1.0d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test12706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12706");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        double double54 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1));
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(8.366600265340756d);
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(stepHandler60);
    }

    @Test
    public void test12707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12707");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException6);
        java.lang.Throwable[] throwableArray9 = integratorException8.getSuppressed();
        java.lang.String str10 = integratorException8.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str10, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12708");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray14);
        java.lang.String str23 = derivativeException22.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException" + "'", str23, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test12709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12709");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((-1), (double) '4', (double) 0.0f);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 31.622776601683793d, (double) 10L, 100);
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test12710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12710");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl(100, 0.0d, 52.0d);
        double double50 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, 4.161791450287818d, 15.298193747370034d, 10);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test12711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12711");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.916079783099616d, (double) (short) 100, (-0.0d), (double) 10.0f);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) -1, (double) 1.0f, 17.88854381999832d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, 100.0d, (double) (-1.0f), (int) (byte) 1);
        java.lang.String str15 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 100.0f);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.916079783099616d + "'", double5 == 5.916079783099616d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str15, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12712");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator80.setInterpolationControl(true, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        graggBulirschStoerIntegrator80.addSwitchingFunction(switchingFunction85, 0.0d, 17.78279410038923d, (int) (short) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler81);
    }

    @Test
    public void test12713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12713");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations44 = null;
        double[] doubleArray46 = null;
        double[] doubleArray50 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler69.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler69.add(switchingFunction72, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler80 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double81 = switchingFunctionsHandler80.getEventTime();
        double[] doubleArray89 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean90 = switchingFunctionsHandler80.reset((double) (byte) 1, doubleArray89);
        boolean boolean91 = switchingFunctionsHandler78.reset(0.0d, doubleArray89);
        boolean boolean92 = switchingFunctionsHandler69.reset((double) (byte) 100, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray67, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator94 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) (short) 1, doubleArray50, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator42.integrate(firstOrderDifferentialEquations44, 5.656854249492381d, doubleArray46, (-0.0d), doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test12714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12714");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100, (double) 0.0f, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (-1.0d), (double) 3, (int) '#');
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 1, 0, (double) 0L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction64, (double) 1.0f, 1.0d, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction69, (double) (byte) 0, 5.916079783099616d, (int) (short) 1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test12715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12715");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String str13 = integratorException12.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray15 = integratorException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray17 = integratorException12.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test12716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12716");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, (double) (byte) 10, 1.0d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) 'a', (double) 0.0f, (double) 0L);
        double double67 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test12717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12717");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, (double) (short) 0, 4.161791450287818d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test12718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12718");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 1, (double) (short) -1, (double) (short) 10, Double.NaN);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 1);
        double double8 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator13 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 100, 0.0d, (double) 0L);
        graggBulirschStoerIntegrator13.setOrderControl(0, (double) '4', 10.0d);
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator13.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler18);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler18);
    }

    @Test
    public void test12719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12719");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        graggBulirschStoerIntegrator61.setInitialStepSize((double) (byte) 10);
        java.lang.String str64 = graggBulirschStoerIntegrator61.getName();
        graggBulirschStoerIntegrator61.setOrderControl((int) 'a', 17.88854381999832d, (double) (byte) 1);
        double double69 = graggBulirschStoerIntegrator61.getMinStep();
        double double70 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str64, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 100.0d + "'", double69 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test12720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12720");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean60 = stepHandler59.requiresDenseOutput();
        boolean boolean61 = stepHandler59.requiresDenseOutput();
        boolean boolean62 = stepHandler59.requiresDenseOutput();
        stepHandler59.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test12721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12721");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) 10, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        boolean boolean59 = switchingFunctionsHandler22.reset((double) 0L, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, 10.0d, doubleArray18, doubleArray57);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator60.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator60.addSwitchingFunction(switchingFunction62, 1.7320508075688772d, (double) (byte) 0, 0);
        double double67 = graggBulirschStoerIntegrator60.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
    }

    @Test
    public void test12722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12722");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setOrderControl((int) ' ', 32.0d, (double) (short) 0);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 1, (double) 100, (-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        graggBulirschStoerIntegrator16.addSwitchingFunction(switchingFunction17, (double) (byte) 1, 100.0d, 3);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction42 = null;
        graggBulirschStoerIntegrator41.addSwitchingFunction(switchingFunction42, (double) 100.0f, (double) 0, 0);
        double double47 = graggBulirschStoerIntegrator41.getCurrentStepStart();
        double double48 = graggBulirschStoerIntegrator41.getMaxStep();
        double double49 = graggBulirschStoerIntegrator41.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator41.getStepHandler();
        graggBulirschStoerIntegrator16.setStepHandler(stepHandler50);
        double double52 = graggBulirschStoerIntegrator16.getMaxStep();
        double double53 = graggBulirschStoerIntegrator16.getCurrentStepStart();
        double double54 = graggBulirschStoerIntegrator16.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator16.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler55);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1.0d) + "'", double48 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.7320508075688772d + "'", double54 == 1.7320508075688772d);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test12723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12723");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, (double) 10L, 10.0d, (int) ' ');
        double double55 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double56 = graggBulirschStoerIntegrator42.getMaxStep();
        graggBulirschStoerIntegrator42.setOrderControl((int) (short) 0, Double.NaN, (double) (-1.0f));
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (byte) 100, (int) '#', 13.33521432163324d);
        java.lang.Class<?> wildcardClass66 = graggBulirschStoerIntegrator42.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test12724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12724");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        double double53 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double54 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean56 = stepHandler55.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test12725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12725");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.88854381999832d, (double) 100, (double) (short) 100, 56.568542494923804d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 98.48857801796105d, (double) (-1.0f), (int) (short) 100);
    }

    @Test
    public void test12726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12726");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean3 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler2.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler2.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler2.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler10.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler10.add(switchingFunction13, (double) (short) 10, (double) 0L, (int) (short) 1);
        boolean boolean18 = switchingFunctionsHandler10.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        double[] doubleArray24 = null;
        switchingFunctionsHandler20.stepAccepted((double) (byte) 100, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray45, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double70 = switchingFunctionsHandler69.getEventTime();
        double[] doubleArray78 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean79 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray78);
        double[] doubleArray83 = new double[] { 100.0f, 100 };
        boolean boolean84 = switchingFunctionsHandler69.reset(Double.NaN, doubleArray83);
        double[] doubleArray85 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator86 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray83, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray65, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray45, doubleArray85);
        boolean boolean89 = switchingFunctionsHandler20.reset(1.0d, doubleArray45);
        boolean boolean90 = switchingFunctionsHandler10.reset(32.0d, doubleArray45);
        boolean boolean91 = switchingFunctionsHandler2.reset(100.0d, doubleArray45);
        double[] doubleArray92 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, (double) 0, doubleArray45, doubleArray92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test12727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12727");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double34 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double40 = switchingFunctionsHandler39.getEventTime();
        double[] doubleArray48 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean49 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray48);
        double[] doubleArray53 = new double[] { 100.0f, 100 };
        boolean boolean54 = switchingFunctionsHandler39.reset(Double.NaN, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray53, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray55, doubleArray71);
        graggBulirschStoerIntegrator73.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator73.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator73.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        stepHandler89.handleStep(stepInterpolator90, false);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler89);
        graggBulirschStoerIntegrator19.setInterpolationControl(true, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(stepHandler89);
    }

    @Test
    public void test12728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12728");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (-1.0d), (double) 10, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) 100, (double) 'a', (int) 'a');
        double[] doubleArray25 = null;
        boolean boolean26 = switchingFunctionsHandler0.reset(52.0d, doubleArray25);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = switchingFunctionsHandler0.evaluateStep(stepInterpolator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test12729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12729");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) -1, (double) 0, (double) (byte) 1);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 0, (double) 0L, (double) 'a', (double) (short) 100);
        double double10 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setStepsizeControl(6.841560230416328d, (double) 100L, 5.477225575051661d, (double) '4');
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations16 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray60, doubleArray62);
        switchingFunctionsHandler40.stepAccepted((double) (short) 10, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double67 = switchingFunctionsHandler66.getEventTime();
        double[] doubleArray75 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean76 = switchingFunctionsHandler66.reset((double) (byte) 1, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler40.reset((double) 0L, doubleArray75);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, 10.0d, doubleArray36, doubleArray75);
        double[] doubleArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations16, (double) 3, doubleArray75, (-0.0d), doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test12730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12730");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, Double.NaN, (double) (short) 1, (int) (short) 1);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 10, (int) (byte) 0, 30.408967315912587d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test12731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12731");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator80.setOrderControl((int) (short) -1, 23.40347319320716d, (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator80.setStepsizeControl((double) 0L, (double) (byte) 1, 72.11102550927978d, 5.916079783099616d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction92 = null;
        graggBulirschStoerIntegrator80.addSwitchingFunction(switchingFunction92, 17.88854381999832d, (double) 'a', (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertNotNull(stepHandler86);
    }

    @Test
    public void test12732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12732");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.Throwable[] throwableArray32 = derivativeException31.getSuppressed();
        java.lang.Throwable[] throwableArray33 = derivativeException31.getSuppressed();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        derivativeException47.addSuppressed((java.lang.Throwable) derivativeException53);
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException53);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException53);
        derivativeException31.addSuppressed((java.lang.Throwable) integratorException56);
        java.lang.String str58 = integratorException56.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException56);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException59);
        java.lang.String str61 = derivativeException17.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str61, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12733");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        derivativeException38.addSuppressed((java.lang.Throwable) derivativeException44);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        derivativeException24.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String str49 = derivativeException44.getPattern();
        integratorException18.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        java.lang.Object[] objArray57 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException55);
        java.lang.Object[] objArray59 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray59);
        java.lang.String[] strArray69 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray69);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException78);
        derivativeException70.addSuppressed((java.lang.Throwable) derivativeException79);
        java.lang.Throwable[] throwableArray81 = derivativeException70.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray81);
        integratorException60.addSuppressed((java.lang.Throwable) integratorException82);
        integratorException18.addSuppressed((java.lang.Throwable) integratorException82);
        java.lang.Throwable[] throwableArray85 = integratorException82.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException82);
        java.lang.String str87 = integratorException82.getPattern();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test12734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12734");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, (double) (byte) 0, (double) (-1), (double) (short) 10);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        double[] doubleArray22 = new double[] { 100.0f, 100 };
        boolean boolean23 = switchingFunctionsHandler8.reset(Double.NaN, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray22, doubleArray24);
        double double26 = graggBulirschStoerIntegrator25.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator25.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        graggBulirschStoerIntegrator25.addSwitchingFunction(switchingFunction32, (double) 100, (double) 2, (int) (byte) 10);
        java.lang.String str37 = graggBulirschStoerIntegrator25.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double45 = switchingFunctionsHandler44.getEventTime();
        double[] doubleArray53 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean54 = switchingFunctionsHandler44.reset((double) (byte) 1, doubleArray53);
        double[] doubleArray58 = new double[] { 100.0f, 100 };
        boolean boolean59 = switchingFunctionsHandler44.reset(Double.NaN, doubleArray58);
        double[] doubleArray60 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray58, doubleArray60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray76 = new double[] { 100.0f, 100 };
        boolean boolean77 = switchingFunctionsHandler62.reset(Double.NaN, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray60, doubleArray76);
        double[] doubleArray79 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray60, doubleArray79);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator80.setOrderControl((-1), 5.477225575051661d, (double) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator80.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator87 = null;
        stepHandler86.handleStep(stepInterpolator87, true);
        graggBulirschStoerIntegrator25.setStepHandler(stepHandler86);
        boolean boolean91 = stepHandler86.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler86);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str37, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test12735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12735");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, (double) 100L, 12.368586720951603d, (int) (byte) -1);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test12736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12736");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray65, doubleArray81);
        graggBulirschStoerIntegrator83.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator83.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '#');
        double double96 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler97 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler97.reset();
        boolean boolean99 = stepHandler97.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertNotNull(stepHandler97);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test12737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12737");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-1.0d), (double) (byte) 0, (double) (byte) -1, 23.40347319320716d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 0.0d, 3.0d, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) 100, 15.298193747370034d, (int) ' ');
        double double15 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test12738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12738");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.7782794100389228d, 0.0d, 9.898464007679532d, 0.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 10, (int) (short) -1, 15.298193747370034d);
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        double double31 = graggBulirschStoerIntegrator30.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator30.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double37 = graggBulirschStoerIntegrator30.getMinStep();
        double double38 = graggBulirschStoerIntegrator30.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator30.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 10.0d + "'", double37 == 10.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test12739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12739");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double65 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStepsizeControl(35.0d, (double) 2, (double) 10, 17.320508075688775d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction73, 5.656854249492381d, (double) 3, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertNotNull(stepHandler67);
    }

    @Test
    public void test12740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12740");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, 3.1622776601683795d, (double) 1, (int) 'a');
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, (double) 0.0f, (double) 0L, (int) '#');
        graggBulirschStoerIntegrator57.setOrderControl((int) (short) 100, 5.623413251903491d, 4.449373890263558d);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator57.setInitialStepSize(59.16079783099616d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test12741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12741");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray18 = derivativeException17.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray20 = derivativeException17.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String str23 = derivativeException17.getPattern();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test12742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12742");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean7 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler6.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler6.evaluateStep(stepInterpolator10);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        double double13 = switchingFunctionsHandler6.getEventTime();
        double double14 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler16.isEmpty();
        double double28 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray37 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray37, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler16.reset((double) (-1L), doubleArray37);
        switchingFunctionsHandler6.stepAccepted(56.23413251903491d, doubleArray37);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray37);
        double double81 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        switchingFunctionsHandler0.add(switchingFunction84, (double) (short) 0, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = switchingFunctionsHandler0.evaluateStep(stepInterpolator89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test12743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12743");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException16);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        derivativeException37.addSuppressed((java.lang.Throwable) derivativeException43);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException60);
        derivativeException23.addSuppressed((java.lang.Throwable) integratorException61);
        integratorException16.addSuppressed((java.lang.Throwable) integratorException61);
        java.lang.Throwable[] throwableArray64 = integratorException16.getSuppressed();
        java.lang.Object[] objArray65 = integratorException16.getArguments();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test12744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12744");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12745");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12746");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray13 = derivativeException10.getArguments();
        java.lang.String str14 = derivativeException10.getPattern();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.Throwable[] throwableArray36 = derivativeException35.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        integratorException23.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.Object[] objArray39 = integratorException23.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        java.lang.Throwable[] throwableArray42 = integratorException41.getSuppressed();
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException41);
        java.lang.Class<?> wildcardClass44 = derivativeException10.getClass();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test12747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12747");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 0, 0);
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler32 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler33 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertNotNull(stepHandler33);
    }

    @Test
    public void test12748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12748");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        double double51 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 100);
        double double55 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInitialStepSize(5.656854249492381d);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 10.0d + "'", double51 == 10.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test12749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12749");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 2, (double) 3);
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 0, (double) (short) 1, (double) (byte) 1);
        double double62 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStepsizeControl(23.40347319320716d, 8.366600265340756d, 30.408967315912587d, 13.37480609952844d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
    }

    @Test
    public void test12750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12750");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 10, (double) 1L, (double) ' ');
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        double double11 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.7782794100389228d + "'", double5 == 1.7782794100389228d);
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test12751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12751");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12752");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test12753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12753");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStepsizeControl(5.916079783099616d, (double) 0.0f, (double) '#', (double) (-1.0f));
        graggBulirschStoerIntegrator38.setOrderControl(0, 3.1622776601683795d, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction65, (double) ' ', (double) ' ', (int) 'a');
        graggBulirschStoerIntegrator38.setStepsizeControl(0.0d, 15.18214344379753d, (double) 1, 1.7782794100389228d);
        java.lang.String str75 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12754");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray46, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray28, doubleArray46);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = switchingFunctionsHandler0.evaluateStep(stepInterpolator71);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test12755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12755");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', (double) 1.0f, (double) 2, 1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean65 = stepHandler64.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test12756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12756");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double34 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStepsizeControl((-0.0d), (double) (-1L), (double) (byte) -1, 5.916079783099616d);
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator19.getStepHandler();
        stepHandler40.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler40);
    }

    @Test
    public void test12757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12757");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12758");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray24 = new double[] {};
        switchingFunctionsHandler21.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler15.stepAccepted(5.916079783099616d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) 10L, 15.18214344379753d, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, (double) (-1.0f), 100.0d, (int) (byte) 10);
        boolean boolean39 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test12759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12759");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        double[] doubleArray44 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray25, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray2, doubleArray25);
        graggBulirschStoerIntegrator46.setInterpolationControl(false, (int) (short) 0);
        double double50 = graggBulirschStoerIntegrator46.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator46.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator46.addSwitchingFunction(switchingFunction52, (double) 0L, (double) 10.0f, (int) 'a');
        double double57 = graggBulirschStoerIntegrator46.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator46.getStepHandler();
        double double59 = graggBulirschStoerIntegrator46.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 17.320508075688775d + "'", double57 == 17.320508075688775d);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test12760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12760");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, 10.0d, 100.0d, (int) (short) 0);
        java.lang.Class<?> wildcardClass11 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test12761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12761");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) 0.0f, (double) 10.0f, (int) (short) 10);
        double double53 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double54 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12762");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray19 = derivativeException17.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        java.lang.Object[] objArray22 = integratorException20.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException20);
        java.lang.String str24 = integratorException20.getPattern();
        integratorException12.addSuppressed((java.lang.Throwable) integratorException20);
        java.lang.String str26 = integratorException12.getPattern();
        java.lang.Throwable[] throwableArray27 = integratorException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray29 = integratorException28.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test12763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12763");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler14.evaluateStep(stepInterpolator30);
        double double32 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double73 = switchingFunctionsHandler72.getEventTime();
        double[] doubleArray81 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean82 = switchingFunctionsHandler72.reset((double) (byte) 1, doubleArray81);
        double[] doubleArray86 = new double[] { 100.0f, 100 };
        boolean boolean87 = switchingFunctionsHandler72.reset(Double.NaN, doubleArray86);
        double[] doubleArray88 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray86, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray68, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray50, doubleArray68);
        switchingFunctionsHandler14.stepAccepted(9.848857801796104d, doubleArray50);
        switchingFunctionsHandler0.stepAccepted((double) 1.0f, doubleArray50);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]");
    }

    @Test
    public void test12764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12764");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction34, (double) (short) 100, (double) (byte) 10, (int) (byte) 100);
        double double39 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
    }

    @Test
    public void test12765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12765");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray22 = derivativeException20.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test12766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12766");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, 3.1622776601683795d, (double) 1, (int) 'a');
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStabilityCheck(true, (int) (byte) 100, (int) (short) 0, 97.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction74, (double) (byte) 100, 1.7782794100389228d, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction79, 4.161791450287818d, 6.928935924497552d, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
    }

    @Test
    public void test12767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12767");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(31.622776601683793d, (double) 100.0f, (double) ' ', 5.916079783099616d);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 10.0f, 0.0d, Double.NaN, (double) ' ');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator29.getStepHandler();
        double double31 = graggBulirschStoerIntegrator29.getCurrentStepStart();
        double double32 = graggBulirschStoerIntegrator29.getMaxStep();
        graggBulirschStoerIntegrator29.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray57, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        double[] doubleArray75 = new double[] { 100.0f, 100 };
        boolean boolean76 = switchingFunctionsHandler61.reset(Double.NaN, doubleArray75);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray59, doubleArray75);
        double[] doubleArray78 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray59, doubleArray78);
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator79.getStepHandler();
        graggBulirschStoerIntegrator79.setOrderControl((-1), 5.477225575051661d, (double) (byte) 10);
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator79.getStepHandler();
        graggBulirschStoerIntegrator29.setStepHandler(stepHandler85);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler85);
        graggBulirschStoerIntegrator4.setStepsizeControl(10.0d, 3.1622776601683795d, (double) 100, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler93 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        stepHandler93.handleStep(stepInterpolator94, true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler30);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertNotNull(stepHandler93);
    }

    @Test
    public void test12768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12768");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 0, (double) 2, 17.752843424574987d);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean59 = stepHandler58.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test12769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12769");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction62, (double) 1, (double) 'a', (int) 'a');
        graggBulirschStoerIntegrator61.setStepsizeControl((double) (-1.0f), (double) '#', (double) (short) -1, (double) '#');
        double double72 = graggBulirschStoerIntegrator61.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction73, 0.0d, (double) 0.0f, 100);
        java.lang.String str78 = graggBulirschStoerIntegrator61.getName();
        org.apache.commons.math.ode.StepHandler stepHandler79 = graggBulirschStoerIntegrator61.getStepHandler();
        stepHandler79.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str78, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler79);
    }

    @Test
    public void test12770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12770");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str46 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (byte) 100, (int) (byte) 1, 17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str46, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12771");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, (double) '#', (double) (-1.0f));
        graggBulirschStoerIntegrator38.setInterpolationControl(true, 10);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator61.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double67 = switchingFunctionsHandler66.getEventTime();
        double[] doubleArray75 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean76 = switchingFunctionsHandler66.reset((double) (byte) 1, doubleArray75);
        double[] doubleArray80 = new double[] { 100.0f, 100 };
        boolean boolean81 = switchingFunctionsHandler66.reset(Double.NaN, doubleArray80);
        double[] doubleArray82 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray80, doubleArray82);
        graggBulirschStoerIntegrator83.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator83.getStepHandler();
        boolean boolean89 = stepHandler88.requiresDenseOutput();
        boolean boolean90 = stepHandler88.requiresDenseOutput();
        stepHandler88.reset();
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler88);
        stepHandler88.reset();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler88);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator95 = null;
        stepHandler88.handleStep(stepInterpolator95, false);
        stepHandler88.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test12772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12772");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException24);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        derivativeException3.addSuppressed((java.lang.Throwable) integratorException28);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray38);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        java.lang.String str48 = derivativeException47.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str48, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12773");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException", strArray14);
        java.lang.Throwable throwable23 = null;
        // The following exception was thrown during execution in test generation
        try {
            derivativeException22.addSuppressed(throwable23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12774");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 5.916079783099616d, (double) ' ', (int) (short) -1);
        double double8 = switchingFunctionsHandler0.getEventTime();
        double double9 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray13 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, 9.848857801796104d, doubleArray34, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean56 = switchingFunctionsHandler55.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler55.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler55.evaluateStep(stepInterpolator59);
        boolean boolean61 = switchingFunctionsHandler55.isEmpty();
        double double62 = switchingFunctionsHandler55.getEventTime();
        boolean boolean63 = switchingFunctionsHandler55.stop();
        double double64 = switchingFunctionsHandler55.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        double[] doubleArray84 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray82, doubleArray84);
        switchingFunctionsHandler55.stepAccepted((double) 100L, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, (double) (byte) 100, doubleArray34, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) (short) 100, doubleArray13, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
    }

    @Test
    public void test12775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12775");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.String str34 = derivativeException32.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException35);
        java.lang.Object[] objArray37 = integratorException35.getArguments();
        derivativeException11.addSuppressed((java.lang.Throwable) integratorException35);
        java.lang.String str39 = integratorException35.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str39, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12776");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test12777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12777");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize(6.928935924497552d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test12778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12778");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 100.0d, (double) 100, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 100, Double.NaN);
        double double61 = graggBulirschStoerIntegrator38.getMinStep();
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction63, 31.209033090201576d, (double) '#', 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test12779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12779");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction7, 0.0d, 1.7782794100389228d, 2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 17.320508075688775d + "'", double5 == 17.320508075688775d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12780");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, 3.1622776601683795d, (double) 1, (int) 'a');
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, (double) 0.0f, (double) 0L, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator57.setInterpolationControl(false, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator57.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler78.handleStep(stepInterpolator79, true);
        stepHandler78.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test12781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12781");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, (double) (-1.0f), (double) 0L, (int) (short) 10);
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 20.400469235504897d, (double) 0.0f, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test12782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12782");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException10.getArguments();
        java.lang.Throwable[] throwableArray13 = derivativeException10.getSuppressed();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray20 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray22 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("", objArray22);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Throwable[] throwableArray44 = derivativeException33.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray44);
        integratorException23.addSuppressed((java.lang.Throwable) integratorException45);
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException23);
        java.lang.Throwable[] throwableArray48 = integratorException23.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        java.lang.String str50 = derivativeException49.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test12783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12783");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 2, (double) 3);
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler62);
    }

    @Test
    public void test12784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12784");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double54 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator49.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler55.handleStep(stepInterpolator56, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        stepHandler55.handleStep(stepInterpolator59, false);
        stepHandler55.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler55);
        double double64 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction65, Double.NaN, 5.277951928008462d, (int) (short) 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.0d + "'", double64 == 3.0d);
    }

    @Test
    public void test12785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12785");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler50.handleStep(stepInterpolator51, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler50.handleStep(stepInterpolator54, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
    }

    @Test
    public void test12786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12786");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        double[] doubleArray61 = new double[] { 100.0f, 100 };
        boolean boolean62 = switchingFunctionsHandler47.reset(Double.NaN, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray45, doubleArray61);
        graggBulirschStoerIntegrator63.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double69 = graggBulirschStoerIntegrator63.getCurrentStepStart();
        graggBulirschStoerIntegrator63.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator63.getStepHandler();
        boolean boolean76 = stepHandler75.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction78, (double) 1, 0.0d, 2);
        double double83 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator19.getStepHandler();
        java.lang.String str85 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction86, 31.622776601683793d, (double) (short) -1, (int) (short) -1);
        double double91 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test12787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12787");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler0.evaluateStep(stepInterpolator11);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) (byte) 0, 9.26731744662116d, 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test12788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12788");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray25);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test12789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12789");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray14);
        java.lang.String str23 = derivativeException22.getPattern();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str23, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12790");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        double double27 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler28 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction29, 0.0d, (double) 1.0f, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction34, (double) (short) -1, (double) (byte) 100, 0);
        double double39 = graggBulirschStoerIntegrator19.getMinStep();
        java.lang.String str40 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, 3, (int) ' ', 2.514866859365871d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 10.0d + "'", double39 == 10.0d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str40, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12791");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) '4');
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test12792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12792");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        double[] doubleArray28 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray49, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray51, doubleArray67);
        double[] doubleArray70 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray51, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray28, doubleArray51);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray28);
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        boolean boolean75 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler77 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double80 = switchingFunctionsHandler79.getEventTime();
        double[] doubleArray88 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean89 = switchingFunctionsHandler79.reset((double) (byte) 1, doubleArray88);
        boolean boolean90 = switchingFunctionsHandler77.reset(0.0d, doubleArray88);
        boolean boolean91 = switchingFunctionsHandler0.reset(20.400469235504897d, doubleArray88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test12793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12793");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12794");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 100, (double) 100, (double) (byte) 0);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 0L, 17.752843424574987d, 6.928935924497552d, (double) (byte) 0);
    }

    @Test
    public void test12795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12795");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        switchingFunctionsHandler9.stepAccepted((double) (short) 10, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler9.reset((double) 0L, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray44);
        double double48 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, 5.477225575051661d, (double) (byte) 0, (int) (byte) -1);
        double double54 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }

    @Test
    public void test12796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12796");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        java.lang.String str17 = integratorException16.getPattern();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12797");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double59 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (short) -1, (double) 1L, (double) (short) 1, (double) 1.0f);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler68.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        stepHandler68.handleStep(stepInterpolator70, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test12798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12798");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) 10, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray18, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction68 = null;
        graggBulirschStoerIntegrator67.addSwitchingFunction(switchingFunction68, (double) 100.0f, (double) 0, 0);
        double double73 = graggBulirschStoerIntegrator67.getCurrentStepStart();
        double double74 = graggBulirschStoerIntegrator67.getMaxStep();
        graggBulirschStoerIntegrator67.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator67.getStepHandler();
        stepHandler77.reset();
        boolean boolean79 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler77.handleStep(stepInterpolator80, false);
        graggBulirschStoerIntegrator47.setStepHandler(stepHandler77);
        double double84 = graggBulirschStoerIntegrator47.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator47.setInitialStepSize(38.3753555559862d);
        java.lang.Class<?> wildcardClass87 = graggBulirschStoerIntegrator47.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test12799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12799");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 10, 5.477225575051661d, (double) (byte) 100, (double) (byte) 10);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 1);
        double double60 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction61 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction61, 56.23413251903491d, 7.211102550927978d, (int) 'a');
        double double66 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 10.0d + "'", double60 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test12800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12800");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '#', 38.3753555559862d, 100.0d, (double) 0L);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12801");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean52 = stepHandler51.requiresDenseOutput();
        stepHandler51.reset();
        stepHandler51.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        stepHandler51.handleStep(stepInterpolator55, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test12802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12802");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str77 = graggBulirschStoerIntegrator75.getName();
        double double78 = graggBulirschStoerIntegrator75.getMaxStep();
        graggBulirschStoerIntegrator75.setInterpolationControl(false, (int) (short) -1);
        java.lang.String str82 = graggBulirschStoerIntegrator75.getName();
        double double83 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        graggBulirschStoerIntegrator75.setStabilityCheck(false, (int) '#', (int) 'a', 13.160740129524925d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str82, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double83));
    }

    @Test
    public void test12803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12803");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12804");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 1.0d, (double) 'a', 100);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        double double57 = graggBulirschStoerIntegrator38.getMaxStep();
        double double58 = graggBulirschStoerIntegrator38.getMinStep();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test12805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12805");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray11);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        java.lang.Class<?> wildcardClass18 = objArray17.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test12806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12806");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str57 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 6.928935924497552d, 2.514866859365871d, 0);
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl(3.0d, (double) (short) 0, Double.NaN, 17.752843424574987d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction69, 15.18214344379753d, 17.752843424574987d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test12807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12807");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, 5.477225575051661d, (double) (short) 1, 1);
        double double50 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test12808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12808");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        double double12 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction13, (double) ' ', (double) 10, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator4.getStepHandler();
        java.lang.Class<?> wildcardClass19 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test12809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12809");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        double double27 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction28, (double) 10.0f, 0.0d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test12810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12810");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100, (double) 100, (double) (short) 10, (double) (byte) 1);
        double double16 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double17 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler18);
    }

    @Test
    public void test12811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12811");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        switchingFunctionsHandler24.stepAccepted((double) (short) 10, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray20, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) 10, doubleArray20, doubleArray59);
        graggBulirschStoerIntegrator61.setStabilityCheck(true, (int) 'a', (int) '#', (double) 0L);
        java.lang.String str67 = graggBulirschStoerIntegrator61.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12812");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray12);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        derivativeException29.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.Throwable[] throwableArray43 = derivativeException17.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray43);
        java.lang.Throwable[] throwableArray45 = integratorException44.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException44);
        java.lang.String str47 = integratorException44.getPattern();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str47, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12813");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String str11 = derivativeException9.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str11, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test12814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12814");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 3, (double) 10, (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction44, 1.0d, (double) '4', (int) ' ');
        double double49 = graggBulirschStoerIntegrator43.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray66, doubleArray68);
        graggBulirschStoerIntegrator69.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        stepHandler74.handleStep(stepInterpolator76, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler74.handleStep(stepInterpolator79, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler74);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 2);
        graggBulirschStoerIntegrator4.setInitialStepSize((-1.0d));
        double double89 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 10, 0.0d, (double) (short) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test12815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12815");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean25 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler24.evaluateStep(stepInterpolator26);
        boolean boolean28 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean31 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray33 = new double[] {};
        switchingFunctionsHandler30.stepAccepted(0.0d, doubleArray33);
        switchingFunctionsHandler24.stepAccepted(5.916079783099616d, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        boolean boolean47 = switchingFunctionsHandler36.isEmpty();
        double double48 = switchingFunctionsHandler36.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler36.evaluateStep(stepInterpolator49);
        double double51 = switchingFunctionsHandler36.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler36.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        switchingFunctionsHandler36.stepAccepted((double) (byte) -1, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, 15.298193747370034d, doubleArray33, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.623413251903491d, 42.661458015403085d, doubleArray20, doubleArray71);
        graggBulirschStoerIntegrator77.setInterpolationControl(true, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
    }

    @Test
    public void test12816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12816");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1, (double) '#', (double) (-1.0f), 97.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, 23.40347319320716d, (double) (short) 1, (int) '#');
        graggBulirschStoerIntegrator38.setInitialStepSize(4.449373890263558d);
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test12817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12817");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction7, (double) 10, (double) (-1L), (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, (double) 3, (double) 2, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler17 = graggBulirschStoerIntegrator4.getStepHandler();
        double double18 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInitialStepSize(31.209033090201576d);
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 17.320508075688775d + "'", double5 == 17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(stepHandler17);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(stepHandler21);
        org.junit.Assert.assertNotNull(stepHandler22);
    }

    @Test
    public void test12818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12818");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 100, (double) '4', (double) (short) 100);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 0, (double) 3, 3.1622776601683795d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler11.add(switchingFunction12, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean17 = switchingFunctionsHandler11.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        double[] doubleArray55 = new double[] { 100.0f, 100 };
        boolean boolean56 = switchingFunctionsHandler41.reset(Double.NaN, doubleArray55);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray39, doubleArray55);
        boolean boolean58 = switchingFunctionsHandler11.reset(100.0d, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler59.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double[] doubleArray74 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean75 = switchingFunctionsHandler65.reset((double) (byte) 1, doubleArray74);
        double[] doubleArray79 = new double[] { 100.0f, 100 };
        boolean boolean80 = switchingFunctionsHandler65.reset(Double.NaN, doubleArray79);
        double[] doubleArray81 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray79, doubleArray81);
        switchingFunctionsHandler59.stepAccepted((double) (short) 10, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray39, doubleArray81);
        java.lang.String str85 = graggBulirschStoerIntegrator84.getName();
        java.lang.String str86 = graggBulirschStoerIntegrator84.getName();
        double double87 = graggBulirschStoerIntegrator84.getMaxStep();
        graggBulirschStoerIntegrator84.setInterpolationControl(false, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator84.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler91);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator93 = null;
        stepHandler91.handleStep(stepInterpolator93, false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str86, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 10.0d + "'", double87 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler91);
    }

    @Test
    public void test12819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12819");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 32.0d, (double) (byte) 100, 0.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test12820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12820");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 100.0d, (double) 100, (int) (byte) 100);
        double double56 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, 7.691605673134586d, 42.661458015403085d, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test12821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12821");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) 100, (double) (byte) 100, (double) (short) 0);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        double[] doubleArray19 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean20 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = new double[] { 100.0f, 100 };
        boolean boolean25 = switchingFunctionsHandler10.reset(Double.NaN, doubleArray24);
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray24, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray26, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction45, 1.0d, (double) '4', (int) ' ');
        double double50 = graggBulirschStoerIntegrator44.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction51, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator44.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator44.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler61.handleStep(stepInterpolator65, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler61);
        boolean boolean69 = stepHandler61.requiresDenseOutput();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test12822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12822");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) '#');
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 2, (int) (byte) 10, (double) 3);
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction16, (-0.0d), (double) (byte) -1, 100);
        org.apache.commons.math.ode.StepHandler stepHandler21 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(stepHandler21);
    }

    @Test
    public void test12823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12823");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 10, 5.916079783099616d, 10);
        double double10 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, 0.0d, (double) '4', (int) (short) 10);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test12824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12824");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 1.0d, Double.NaN, (int) (short) -1);
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        stepHandler60.handleStep(stepInterpolator61, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(stepHandler60);
    }

    @Test
    public void test12825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12825");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray65, doubleArray81);
        graggBulirschStoerIntegrator83.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator83.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '#');
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(stepHandler91);
    }

    @Test
    public void test12826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12826");
        double[] doubleArray4 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray4, doubleArray14);
        double[] doubleArray24 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray59, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray41, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray24, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 35.0d, doubleArray14, doubleArray61);
        double double66 = graggBulirschStoerIntegrator65.getCurrentSignedStepsize();
        double double67 = graggBulirschStoerIntegrator65.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator65.getStepHandler();
        stepHandler68.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.366600265340756d + "'", double66 == 8.366600265340756d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test12827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12827");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler13.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray28 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean29 = switchingFunctionsHandler19.reset((double) (byte) 1, doubleArray28);
        double[] doubleArray33 = new double[] { 100.0f, 100 };
        boolean boolean34 = switchingFunctionsHandler19.reset(Double.NaN, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double[] doubleArray46 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean47 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray46);
        double[] doubleArray51 = new double[] { 100.0f, 100 };
        boolean boolean52 = switchingFunctionsHandler37.reset(Double.NaN, doubleArray51);
        double[] doubleArray53 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray51, doubleArray53);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray33, doubleArray53);
        switchingFunctionsHandler13.stepAccepted((double) ' ', doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double60 = switchingFunctionsHandler59.getEventTime();
        double[] doubleArray68 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean69 = switchingFunctionsHandler59.reset((double) (byte) 1, doubleArray68);
        double[] doubleArray73 = new double[] { 100.0f, 100 };
        boolean boolean74 = switchingFunctionsHandler59.reset(Double.NaN, doubleArray73);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler77 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double78 = switchingFunctionsHandler77.getEventTime();
        double[] doubleArray86 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean87 = switchingFunctionsHandler77.reset((double) (byte) 1, doubleArray86);
        double[] doubleArray91 = new double[] { 100.0f, 100 };
        boolean boolean92 = switchingFunctionsHandler77.reset(Double.NaN, doubleArray91);
        double[] doubleArray93 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator94 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray91, doubleArray93);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator95 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray73, doubleArray93);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator96 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.916079783099616d, 52.0d, doubleArray53, doubleArray73);
        boolean boolean97 = switchingFunctionsHandler0.reset(52.0d, doubleArray73);
        double double98 = switchingFunctionsHandler0.getEventTime();
        boolean boolean99 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test12828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12828");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12829");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, 10.0d, (double) 100.0f, (double) 100);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler6);
    }

    @Test
    public void test12830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12830");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray11 = null;
        boolean boolean12 = switchingFunctionsHandler0.reset((double) 10L, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        boolean boolean15 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test12831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12831");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) (byte) 10, (double) ' ');
        java.lang.String str50 = graggBulirschStoerIntegrator38.getName();
        double double51 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test12832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12832");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double21 = graggBulirschStoerIntegrator19.getMinStep();
        double double22 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double23 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator28.getStepHandler();
        boolean boolean30 = stepHandler29.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler29);
        double double32 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStepsizeControl(Double.NaN, (double) '4', (-0.0d), (double) (byte) 100);
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) 10, Double.NaN, (double) 100);
        double double42 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double42));
    }

    @Test
    public void test12833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12833");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (-1), (double) 0.0f, 2);
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, 4.449373890263558d, 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test12834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12834");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray65, doubleArray81);
        graggBulirschStoerIntegrator83.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str89 = graggBulirschStoerIntegrator83.getName();
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler90);
        double double92 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction93, (double) 100L, (double) 0.0f, (int) '4');
        double double98 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str89, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test12835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12835");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double8 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator28.addSwitchingFunction(switchingFunction29, (double) 100.0f, (double) 0, 0);
        double double34 = graggBulirschStoerIntegrator28.getCurrentStepStart();
        double double35 = graggBulirschStoerIntegrator28.getMaxStep();
        graggBulirschStoerIntegrator28.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler38 = graggBulirschStoerIntegrator28.getStepHandler();
        stepHandler38.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler38);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler38);
    }

    @Test
    public void test12836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12836");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test12837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12837");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (-1.0f), (double) (byte) 100, (double) (short) 10, (double) '4');
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10L, (-0.0d), (double) 1.0f, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl(13.37480609952844d, 5.009970139234591d, 38.3753555559862d, 3.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test12838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12838");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12839");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) 10L, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 0, 12.368586720951603d, 4.161791450287818d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test12840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12840");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12841");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray17 = derivativeException16.getSuppressed();
        java.lang.String str18 = derivativeException16.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.DerivativeException" + "'", str18, "org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test12842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12842");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100, (double) 0.0f, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (-1.0d), (double) 3, (int) '#');
        graggBulirschStoerIntegrator38.setOrderControl(100, (double) 10.0f, (double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        double double64 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 3);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test12843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12843");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12844");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double11 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
    }

    @Test
    public void test12845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12845");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray7);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray15 = derivativeException13.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        integratorException9.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray19 = derivativeException17.getSuppressed();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException31);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        integratorException31.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException(throwable50);
        java.lang.Object[] objArray52 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException53);
        derivativeException43.addSuppressed((java.lang.Throwable) integratorException53);
        java.lang.String str56 = integratorException53.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str56, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12846");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 100, 32.0d, 1);
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler14.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler14.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        boolean boolean22 = switchingFunctionsHandler20.isEmpty();
        boolean boolean23 = switchingFunctionsHandler20.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler25.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        double[] doubleArray47 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray45, doubleArray47);
        switchingFunctionsHandler25.stepAccepted((double) (short) 10, doubleArray47);
        switchingFunctionsHandler20.stepAccepted((double) 100.0f, doubleArray47);
        boolean boolean51 = switchingFunctionsHandler14.reset((double) (byte) 100, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double75 = switchingFunctionsHandler74.getEventTime();
        double[] doubleArray83 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean84 = switchingFunctionsHandler74.reset((double) (byte) 1, doubleArray83);
        double[] doubleArray88 = new double[] { 100.0f, 100 };
        boolean boolean89 = switchingFunctionsHandler74.reset(Double.NaN, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, 9.848857801796104d, doubleArray70, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.78279410038923d, (double) (-1.0f), doubleArray47, doubleArray88);
        boolean boolean92 = switchingFunctionsHandler0.reset(9.26731744662116d, doubleArray88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test12847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12847");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.898464007679532d, 72.11102550927978d, (double) 10.0f, 5.916079783099616d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        double[] doubleArray16 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean17 = switchingFunctionsHandler7.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray21 = new double[] { 100.0f, 100 };
        boolean boolean22 = switchingFunctionsHandler7.reset(Double.NaN, doubleArray21);
        double[] doubleArray23 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray21, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        graggBulirschStoerIntegrator24.addSwitchingFunction(switchingFunction25, (double) 100.0f, (double) 0, 0);
        double double30 = graggBulirschStoerIntegrator24.getCurrentSignedStepsize();
        double double31 = graggBulirschStoerIntegrator24.getMaxStep();
        graggBulirschStoerIntegrator24.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double40 = switchingFunctionsHandler39.getEventTime();
        double[] doubleArray48 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean49 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray48);
        double[] doubleArray53 = new double[] { 100.0f, 100 };
        boolean boolean54 = switchingFunctionsHandler39.reset(Double.NaN, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray53, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray55, doubleArray71);
        graggBulirschStoerIntegrator73.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator73.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator73.getStepHandler();
        double double87 = graggBulirschStoerIntegrator73.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator73.getStepHandler();
        double double89 = graggBulirschStoerIntegrator73.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator24.setStepHandler(stepHandler90);
        stepHandler90.reset();
        boolean boolean93 = stepHandler90.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler90);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction95 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction95, 6.841560230416328d, 3.0d, 3);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(stepHandler88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test12848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12848");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12849");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 1, (double) '4', (int) '#');
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        switchingFunctionsHandler0.add(switchingFunction9, 38.3753555559862d, 4.161791450287818d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, 20.400469235504897d, 20.924600157413938d, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test12850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12850");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        double double31 = graggBulirschStoerIntegrator19.getMinStep();
        double double32 = graggBulirschStoerIntegrator19.getMinStep();
        double double33 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double34 = graggBulirschStoerIntegrator19.getMinStep();
        double double35 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler37 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator19.setStepHandler(stepHandler37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(stepHandler36);
    }

    @Test
    public void test12851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12851");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, (double) 'a', (double) 100, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double22 = switchingFunctionsHandler21.getEventTime();
        double[] doubleArray30 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean31 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray30);
        double[] doubleArray35 = new double[] { 100.0f, 100 };
        boolean boolean36 = switchingFunctionsHandler21.reset(Double.NaN, doubleArray35);
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray35, doubleArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double40 = switchingFunctionsHandler39.getEventTime();
        double[] doubleArray48 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean49 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray48);
        double[] doubleArray53 = new double[] { 100.0f, 100 };
        boolean boolean54 = switchingFunctionsHandler39.reset(Double.NaN, doubleArray53);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray37, doubleArray53);
        graggBulirschStoerIntegrator55.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator55.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator55.getStepHandler();
        graggBulirschStoerIntegrator55.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator55.getStepHandler();
        double double69 = graggBulirschStoerIntegrator55.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator55.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler70);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertNotNull(stepHandler72);
    }

    @Test
    public void test12852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12852");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12853");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, 32.0d, 3.1622776601683795d, 0);
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator54 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray36, doubleArray52);
        graggBulirschStoerIntegrator54.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator54.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator54.getStepHandler();
        graggBulirschStoerIntegrator54.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator54.getStepHandler();
        double double68 = graggBulirschStoerIntegrator54.getMaxStep();
        double double69 = graggBulirschStoerIntegrator54.getMaxStep();
        double double70 = graggBulirschStoerIntegrator54.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        graggBulirschStoerIntegrator54.addSwitchingFunction(switchingFunction71, (double) 1L, (double) (short) 0, 0);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator54.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler76);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test12854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12854");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator59.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStepsizeControl(7.691605673134586d, 17.78279410038923d, 5.656854249492381d, 3.0d);
        double double84 = graggBulirschStoerIntegrator19.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1.0d) + "'", double84 == (-1.0d));
    }

    @Test
    public void test12855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12855");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        double double59 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator57.getMinStep();
        graggBulirschStoerIntegrator57.setOrderControl((int) (short) 10, (double) 0L, 72.11102550927978d);
        graggBulirschStoerIntegrator57.setStepsizeControl(17.88854381999832d, 13.33521432163324d, 98.48857801796105d, (double) (-1));
        graggBulirschStoerIntegrator57.setStabilityCheck(true, (-1), 2, 97.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
    }

    @Test
    public void test12856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12856");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1L, 9.848857801796104d, 9.848857801796104d, 20.924600157413938d);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test12857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12857");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        double[] doubleArray61 = new double[] { 100.0f, 100 };
        boolean boolean62 = switchingFunctionsHandler47.reset(Double.NaN, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray45, doubleArray61);
        graggBulirschStoerIntegrator63.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double69 = graggBulirschStoerIntegrator63.getCurrentStepStart();
        graggBulirschStoerIntegrator63.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator63.getStepHandler();
        boolean boolean76 = stepHandler75.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction78 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction78, (double) 1, 0.0d, 2);
        double double83 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator19.getStepHandler();
        java.lang.String str85 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction86, 31.622776601683793d, (double) (short) -1, (int) (short) -1);
        double double91 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
    }

    @Test
    public void test12858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12858");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) 'a', (double) '4', (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStepsizeControl(1.0d, (double) ' ', Double.NaN, 0.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 100, (int) ' ', (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler69);
    }

    @Test
    public void test12859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12859");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double26 = graggBulirschStoerIntegrator19.getMinStep();
        double double27 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler28 = graggBulirschStoerIntegrator19.getStepHandler();
        double double29 = graggBulirschStoerIntegrator19.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
    }

    @Test
    public void test12860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12860");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12861");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean7 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler6.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler6.evaluateStep(stepInterpolator10);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        double double13 = switchingFunctionsHandler6.getEventTime();
        double double14 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler16.isEmpty();
        double double28 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray37 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray37, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler16.reset((double) (-1L), doubleArray37);
        switchingFunctionsHandler6.stepAccepted(56.23413251903491d, doubleArray37);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray37);
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        switchingFunctionsHandler0.add(switchingFunction83, 52.0d, (double) ' ', (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test12862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12862");
        java.lang.Object[] objArray3 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException4);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException5);
        java.lang.Throwable[] throwableArray8 = derivativeException7.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray10 = integratorException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", objArray10);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test12863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12863");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getMinStep();
        java.lang.String str51 = graggBulirschStoerIntegrator42.getName();
        double double52 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        java.lang.String str53 = graggBulirschStoerIntegrator42.getName();
        double double54 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setStabilityCheck(false, 10, 2, 15.18214344379753d);
        double double60 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double61 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.0d) + "'", double54 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue(Double.isNaN(double61));
    }

    @Test
    public void test12864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12864");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (-1L), 42.661458015403085d, 98.48857801796105d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test12865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12865");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12866");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction9, (double) 1L, (double) 0.0f, 3);
        org.apache.commons.math.ode.StepHandler stepHandler14 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setOrderControl(2, (double) ' ', (double) 10.0f);
        double double19 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(stepHandler14);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
    }

    @Test
    public void test12867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12867");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        double double37 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double38 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) ' ', 10.0d, 0.0d);
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (short) 0, (int) (short) 1, (double) 0.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
    }

    @Test
    public void test12868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12868");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(18.708286933869708d, 17.78279410038923d, 32.0d, 6.841560230416328d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setOrderControl((int) ' ', 0.0d, 59.16079783099616d);
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test12869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12869");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12870");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(4.216965034285822d, 4.216965034285822d, 43.25307727072111d, 17.752843424574987d);
    }

    @Test
    public void test12871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12871");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction7, (double) (-1.0f), 3.1622776601683795d, (int) (byte) 0);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, 0);
        graggBulirschStoerIntegrator4.setInitialStepSize(23.40347319320716d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction17, 13.33521432163324d, 0.0d, (int) ' ');
        graggBulirschStoerIntegrator4.setStepsizeControl(15.18214344379753d, 0.0d, 8.0d, 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test12872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12872");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, (double) (byte) -1, 1.0d, (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 10, (double) 0, (double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction65, (double) 10, 1.7320508075688772d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler53);
    }

    @Test
    public void test12873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12873");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 10, (int) (byte) 10, (double) (-1));
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) 2, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, (double) ' ', (double) 0.0f, 1);
        double double67 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test12874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12874");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12875");
        double[] doubleArray2 = null;
        double[] doubleArray3 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.88854381999832d, 100.0d, doubleArray2, doubleArray3);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (-1));
    }

    @Test
    public void test12876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12876");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, 35.0d, (double) (-1), 3.1622776601683795d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test12877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12877");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (byte) 0, (-1.0d), (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) 100.0f, 43.25307727072111d, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test12878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12878");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        java.lang.String str51 = graggBulirschStoerIntegrator38.getName();
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test12879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12879");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray21 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray21);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        derivativeException29.addSuppressed((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray42 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException41);
        java.lang.Object[] objArray44 = derivativeException41.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray44);
        integratorException22.addSuppressed((java.lang.Throwable) integratorException45);
        java.lang.String str47 = integratorException22.getPattern();
        java.lang.String str48 = integratorException22.getPattern();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str47, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str48, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test12880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12880");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler77.handleStep(stepInterpolator79, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler77);
        java.lang.String str83 = graggBulirschStoerIntegrator19.getName();
        double double84 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double85 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str83, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(stepHandler86);
    }

    @Test
    public void test12881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12881");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        double[] doubleArray19 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean20 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = new double[] { 100.0f, 100 };
        boolean boolean25 = switchingFunctionsHandler10.reset(Double.NaN, doubleArray24);
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray24, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray26, doubleArray42);
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str50 = graggBulirschStoerIntegrator44.getName();
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator44.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator44.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double65 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction66, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double71 = graggBulirschStoerIntegrator44.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator44.getStepHandler();
        stepHandler72.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler72);
        double double75 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double76 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction77, 97.0d, 17.88854381999832d, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler82 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 9.848857801796104d + "'", double5 == 9.848857801796104d);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(stepHandler82);
    }

    @Test
    public void test12882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12882");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler3.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler3.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler3.evaluateStep(stepInterpolator9);
        boolean boolean11 = switchingFunctionsHandler3.isEmpty();
        boolean boolean12 = switchingFunctionsHandler3.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        switchingFunctionsHandler14.stepAccepted((double) (short) 10, doubleArray36);
        boolean boolean39 = switchingFunctionsHandler3.reset((double) (short) 100, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1), 5.277951928008462d, doubleArray2, doubleArray36);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test12883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12883");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) 10, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray18, doubleArray44);
        graggBulirschStoerIntegrator47.setStepsizeControl(100.0d, (double) 10, (double) 1, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator47.getStepHandler();
        java.lang.String str54 = graggBulirschStoerIntegrator47.getName();
        graggBulirschStoerIntegrator47.setStabilityCheck(true, (-1), (int) (short) 100, 18.708286933869708d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator47.addSwitchingFunction(switchingFunction60, (double) (byte) 10, 23.40347319320716d, (int) (byte) 10);
        java.lang.String str65 = graggBulirschStoerIntegrator47.getName();
        double double66 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test12884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12884");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) (short) -1, (double) 2, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test12885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12885");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 3, (double) 1.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, 13.37480609952844d, 10.0d, 0);
        java.lang.Class<?> wildcardClass17 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test12886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12886");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException22);
        derivativeException12.addSuppressed((java.lang.Throwable) derivativeException22);
        java.lang.Throwable[] throwableArray25 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray25);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException38);
        java.lang.String str40 = integratorException38.getPattern();
        integratorException28.addSuppressed((java.lang.Throwable) integratorException38);
        java.lang.Object[] objArray42 = integratorException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException38);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , hi!, ]");
    }

    @Test
    public void test12887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12887");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", objArray7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException10);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray21);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray46);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray46);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException55);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test12888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12888");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, (double) 0.0f, 0.0d, 0.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 10, (int) '4', (double) 1.0f);
        graggBulirschStoerIntegrator4.setStepsizeControl(5.477225575051661d, 13.37480609952844d, (double) 10, (double) (byte) 100);
    }

    @Test
    public void test12889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12889");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        switchingFunctionsHandler18.stepAccepted((double) (short) 10, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray16, doubleArray40);
        org.apache.commons.math.ode.StepHandler stepHandler44 = graggBulirschStoerIntegrator43.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction45, (double) (short) 10, (-0.0d), 0);
        java.lang.String str50 = graggBulirschStoerIntegrator43.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12890");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100.0f, 3.1622776601683795d, 5.477225575051661d, (double) (-1L));
        double double10 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator49.addSwitchingFunction(switchingFunction55, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator49.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator49.addSwitchingFunction(switchingFunction64, (double) (short) 10, (double) 1L, 3);
        double double69 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        double double70 = graggBulirschStoerIntegrator49.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator49.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator49.addSwitchingFunction(switchingFunction73, (double) (short) 100, 32.0d, 1);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator49.getStepHandler();
        stepHandler78.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler78.handleStep(stepInterpolator80, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler78);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction84, (double) 1, 20.400469235504897d, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test12891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12891");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException7.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        java.lang.Object[] objArray11 = integratorException10.getArguments();
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray24);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray24);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        derivativeException50.addSuppressed((java.lang.Throwable) derivativeException56);
        derivativeException46.addSuppressed((java.lang.Throwable) derivativeException56);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException56);
        java.lang.String str61 = derivativeException56.getPattern();
        integratorException30.addSuppressed((java.lang.Throwable) derivativeException56);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        integratorException10.addSuppressed((java.lang.Throwable) derivativeException63);
        java.lang.String str65 = derivativeException63.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test12892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12892");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test12893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12893");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        double double57 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12894");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray10 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException8.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Throwable[] throwableArray13 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray13);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = derivativeException18.getPattern();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException32);
        java.lang.String str35 = derivativeException32.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray42 = derivativeException40.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException40);
        java.lang.String str46 = derivativeException40.getPattern();
        java.lang.String str47 = derivativeException40.getPattern();
        integratorException14.addSuppressed((java.lang.Throwable) derivativeException40);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str35, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test12895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12895");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray14 = derivativeException13.getArguments();
        java.lang.Throwable[] throwableArray15 = derivativeException13.getSuppressed();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        java.lang.String str26 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        java.lang.Object[] objArray39 = derivativeException38.getArguments();
        java.lang.Object[] objArray40 = derivativeException38.getArguments();
        derivativeException25.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray42 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray42);
        derivativeException13.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException43);
        java.lang.Throwable[] throwableArray46 = integratorException43.getSuppressed();
        java.lang.Throwable[] throwableArray47 = integratorException43.getSuppressed();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test12896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12896");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.Object[] objArray25 = derivativeException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray40);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        derivativeException49.addSuppressed((java.lang.Throwable) derivativeException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException49);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray65);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException67);
        derivativeException57.addSuppressed((java.lang.Throwable) derivativeException67);
        derivativeException45.addSuppressed((java.lang.Throwable) derivativeException67);
        java.lang.Throwable[] throwableArray71 = derivativeException45.getSuppressed();
        java.lang.Throwable[] throwableArray72 = derivativeException45.getSuppressed();
        derivativeException28.addSuppressed((java.lang.Throwable) derivativeException45);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test12897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12897");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        boolean boolean55 = switchingFunctionsHandler0.evaluateStep(stepInterpolator54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler0.add(switchingFunction56, (double) (short) 1, (double) '4', 0);
        boolean boolean61 = switchingFunctionsHandler0.isEmpty();
        double double62 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test12898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12898");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.stop();
        double double19 = switchingFunctionsHandler0.getEventTime();
        double double20 = switchingFunctionsHandler0.getEventTime();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test12899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12899");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) 10L, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) 100.0f, Double.NaN, (int) (byte) 10);
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (byte) 10, 0, (double) 10L);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12900");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) 'a', (double) (short) 10, 5.916079783099616d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction6, 10.0d, 17.78279410038923d, 3);
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        double double12 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 97.0d + "'", double5 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 97.0d + "'", double12 == 97.0d);
    }

    @Test
    public void test12901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12901");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray66, doubleArray82);
        boolean boolean85 = switchingFunctionsHandler0.reset(3.1622776601683795d, doubleArray82);
        boolean boolean86 = switchingFunctionsHandler0.stop();
        boolean boolean87 = switchingFunctionsHandler0.isEmpty();
        boolean boolean88 = switchingFunctionsHandler0.isEmpty();
        boolean boolean89 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test12902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12902");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.stop();
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, 17.78279410038923d, (double) 0.0f, (int) ' ');
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 35.0d, 3.1622776601683795d, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        boolean boolean25 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean28 = switchingFunctionsHandler27.isEmpty();
        double[] doubleArray30 = new double[] {};
        switchingFunctionsHandler27.stepAccepted(0.0d, doubleArray30);
        switchingFunctionsHandler21.stepAccepted(5.916079783099616d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler33.isEmpty();
        double double45 = switchingFunctionsHandler33.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler33.evaluateStep(stepInterpolator46);
        double double48 = switchingFunctionsHandler33.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler33.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray68, doubleArray70);
        switchingFunctionsHandler33.stepAccepted((double) (byte) -1, doubleArray68);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, 15.298193747370034d, doubleArray30, doubleArray68);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
    }

    @Test
    public void test12903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12903");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) 1L, (double) (short) 0, 0);
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator38.getStepHandler();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double62 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction63, 9.26731744662116d, (double) 0, 100);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
    }

    @Test
    public void test12904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12904");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (short) 1, (double) (short) 1, 100.0d);
        double double51 = graggBulirschStoerIntegrator50.getMaxStep();
        double double52 = graggBulirschStoerIntegrator50.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator50.setOrderControl(0, (double) (-1), (double) (short) 100);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator61.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction67, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator61.getStepHandler();
        graggBulirschStoerIntegrator50.setStepHandler(stepHandler72);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler72);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler72);
    }

    @Test
    public void test12905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12905");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction40, 0.0d, 0.0d, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str46 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str46, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler47);
    }

    @Test
    public void test12906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12906");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler7 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (byte) -1);
        double double11 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 97.0d + "'", double6 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 97.0d + "'", double11 == 97.0d);
        org.junit.Assert.assertNotNull(stepHandler12);
    }

    @Test
    public void test12907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12907");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, (double) (short) 100, (double) (short) 1, (int) (short) -1);
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str62 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str62, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12908");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction47, (double) 100.0f, (double) 1.0f, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, (double) (short) -1, (double) 3, 10);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 3, (double) 10, (double) ' ', (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, 17.88854381999832d, 10.0d, (int) (byte) 0);
        double double67 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
    }

    @Test
    public void test12909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12909");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray24 = new double[] {};
        switchingFunctionsHandler21.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler15.stepAccepted(5.916079783099616d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        double double29 = switchingFunctionsHandler0.getEventTime();
        double double30 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        boolean boolean34 = switchingFunctionsHandler32.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler32.add(switchingFunction35, 5.916079783099616d, (double) ' ', (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler41.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler41.evaluateStep(stepInterpolator44);
        boolean boolean46 = switchingFunctionsHandler41.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler41.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler41.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray68, doubleArray70);
        boolean boolean72 = switchingFunctionsHandler41.reset((double) (-1L), doubleArray70);
        boolean boolean73 = switchingFunctionsHandler32.reset((double) (-1), doubleArray70);
        switchingFunctionsHandler0.stepAccepted(9.848857801796104d, doubleArray70);
        double double75 = switchingFunctionsHandler0.getEventTime();
        boolean boolean76 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test12910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12910");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInitialStepSize(1.7782794100389228d);
        double double30 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str31 = graggBulirschStoerIntegrator19.getName();
        double double32 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double40 = switchingFunctionsHandler39.getEventTime();
        double[] doubleArray48 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean49 = switchingFunctionsHandler39.reset((double) (byte) 1, doubleArray48);
        double[] doubleArray53 = new double[] { 100.0f, 100 };
        boolean boolean54 = switchingFunctionsHandler39.reset(Double.NaN, doubleArray53);
        double[] doubleArray55 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray53, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray55, doubleArray71);
        double[] doubleArray74 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray55, doubleArray74);
        double double76 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double77 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        graggBulirschStoerIntegrator75.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double83 = graggBulirschStoerIntegrator75.getMaxStep();
        graggBulirschStoerIntegrator75.setStabilityCheck(true, (int) '#', 3, (double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator75.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler89);
        double double91 = graggBulirschStoerIntegrator19.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-1.0d) + "'", double83 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
    }

    @Test
    public void test12911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12911");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        double double27 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction28, 18.708286933869708d, (double) ' ', (int) (short) 0);
        java.lang.String str33 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction34, (double) 10L, (-1.0d), (int) (short) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str33, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12912");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (byte) 100, (double) (short) -1);
        graggBulirschStoerIntegrator4.setInitialStepSize((-0.0d));
        java.lang.String str14 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12913");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        java.lang.String str19 = derivativeException17.getPattern();
        java.lang.String str20 = derivativeException17.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str20, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test12914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12914");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test12915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12915");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(56.23413251903491d, 17.320508075688775d, (double) (byte) 10, 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 35.0d, (double) (short) 100, (int) (byte) 0);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator14.addSwitchingFunction(switchingFunction15, (double) (-1), (-1.0d), 0);
        java.lang.String str20 = graggBulirschStoerIntegrator14.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double64 = graggBulirschStoerIntegrator59.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator59.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler65.handleStep(stepInterpolator66, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler65.handleStep(stepInterpolator69, false);
        stepHandler65.reset();
        graggBulirschStoerIntegrator14.setStepHandler(stepHandler65);
        boolean boolean74 = stepHandler65.requiresDenseOutput();
        stepHandler65.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator76 = null;
        stepHandler65.handleStep(stepInterpolator76, false);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler65);
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        stepHandler80.handleStep(stepInterpolator81, true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str20, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(stepHandler80);
    }

    @Test
    public void test12916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12916");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (byte) 100, (double) (byte) 1, (double) '#');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setOrderControl((int) (short) 100, (double) 10L, (double) (-1L));
        org.apache.commons.math.ode.StepHandler stepHandler10 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler10.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler10);
    }

    @Test
    public void test12917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12917");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        java.lang.String str10 = derivativeException9.getPattern();
        java.lang.Throwable[] throwableArray11 = derivativeException9.getSuppressed();
        java.lang.Object[] objArray12 = derivativeException9.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str10, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , hi!, ]");
    }

    @Test
    public void test12918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12918");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        java.lang.Throwable[] throwableArray18 = derivativeException16.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test12919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12919");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double4 = switchingFunctionsHandler3.getEventTime();
        double[] doubleArray12 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean13 = switchingFunctionsHandler3.reset((double) (byte) 1, doubleArray12);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray2, doubleArray12);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        double double16 = graggBulirschStoerIntegrator14.getCurrentStepStart();
        double double17 = graggBulirschStoerIntegrator14.getCurrentSignedStepsize();
        double double18 = graggBulirschStoerIntegrator14.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 17.88854381999832d + "'", double17 == 17.88854381999832d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test12920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12920");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        graggBulirschStoerIntegrator26.addSwitchingFunction(switchingFunction27, (double) 100.0f, (double) 0, 0);
        double double32 = graggBulirschStoerIntegrator26.getCurrentStepStart();
        double double33 = graggBulirschStoerIntegrator26.getMaxStep();
        graggBulirschStoerIntegrator26.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator26.addSwitchingFunction(switchingFunction36, (double) (byte) 0, 100.0d, (int) (byte) 1);
        graggBulirschStoerIntegrator26.setInitialStepSize((double) '4');
        java.lang.String str43 = graggBulirschStoerIntegrator26.getName();
        java.lang.String str44 = graggBulirschStoerIntegrator26.getName();
        double double45 = graggBulirschStoerIntegrator26.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        double[] doubleArray64 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray62, doubleArray64);
        double double66 = graggBulirschStoerIntegrator65.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator65.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str72 = graggBulirschStoerIntegrator65.getName();
        java.lang.String str73 = graggBulirschStoerIntegrator65.getName();
        java.lang.String str74 = graggBulirschStoerIntegrator65.getName();
        graggBulirschStoerIntegrator65.setOrderControl((int) (byte) 10, (double) 1L, 0.0d);
        graggBulirschStoerIntegrator65.setStepsizeControl(17.88854381999832d, (double) 100L, (double) 10L, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator65.getStepHandler();
        graggBulirschStoerIntegrator26.setStepHandler(stepHandler84);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler84);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.161791450287818d + "'", double6 == 4.161791450287818d);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str43, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.0d) + "'", double45 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str72, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str73, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler84);
    }

    @Test
    public void test12921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12921");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (byte) 1, (int) '4', (-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction33, (double) (byte) 0, (double) 1.0f, (int) (short) 10);
        graggBulirschStoerIntegrator19.setInterpolationControl(false, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12922");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12923");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, 3.1622776601683795d, (double) 1, (int) 'a');
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, (double) 0.0f, (double) 0L, (int) '#');
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator57.setInterpolationControl(false, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator57.getStepHandler();
        stepHandler78.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler78.handleStep(stepInterpolator80, true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test12924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12924");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException24);
        java.lang.Object[] objArray26 = derivativeException8.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test12925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12925");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, 32.0d, 5.277951928008462d, 5.477225575051661d);
    }

    @Test
    public void test12926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12926");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test12927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12927");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.Throwable[] throwableArray14 = derivativeException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray16 = derivativeException13.getArguments();
        java.lang.Class<?> wildcardClass17 = derivativeException13.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test12928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12928");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String str23 = derivativeException22.getPattern();
        java.lang.Object[] objArray24 = derivativeException22.getArguments();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        derivativeException46.addSuppressed((java.lang.Throwable) derivativeException51);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException51);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.Throwable[] throwableArray60 = derivativeException35.getSuppressed();
        java.lang.Object[] objArray61 = derivativeException35.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test12929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12929");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 1);
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction58, (double) (-1), (-1.0d), 0);
        java.lang.String str63 = graggBulirschStoerIntegrator57.getName();
        double double64 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        java.lang.String str65 = graggBulirschStoerIntegrator57.getName();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler66);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 100, (double) 100L, (double) (byte) 100);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 10, (double) 'a', (double) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str63, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 5.477225575051661d + "'", double64 == 5.477225575051661d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test12930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12930");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        java.lang.String str6 = derivativeException3.getPattern();
        java.lang.String str7 = derivativeException3.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.Object[] objArray32 = derivativeException31.getArguments();
        integratorException20.addSuppressed((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException31);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test12931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12931");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException38);
        derivativeException28.addSuppressed((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException55);
        derivativeException18.addSuppressed((java.lang.Throwable) integratorException56);
        java.lang.Throwable[] throwableArray58 = derivativeException18.getSuppressed();
        integratorException12.addSuppressed((java.lang.Throwable) derivativeException18);
        java.lang.String str60 = integratorException12.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.String[] strArray78 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray78);
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException87 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray78);
        java.lang.Throwable[] throwableArray89 = derivativeException88.getSuppressed();
        integratorException61.addSuppressed((java.lang.Throwable) derivativeException88);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test12932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12932");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 0.0f, (double) 3, (int) (byte) 10);
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray49, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray31, doubleArray49);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (byte) 1, doubleArray14, doubleArray49);
        boolean boolean74 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler0.add(switchingFunction75, (double) '#', 3.0d, (int) (short) -1);
        boolean boolean80 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test12933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12933");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        graggBulirschStoerIntegrator4.setOrderControl(0, (double) 2, (double) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray29, doubleArray45);
        graggBulirschStoerIntegrator47.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator47.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator47.getStepHandler();
        graggBulirschStoerIntegrator47.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator47.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator47.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator47.getStepHandler();
        double double65 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        double double66 = graggBulirschStoerIntegrator47.getCurrentStepStart();
        graggBulirschStoerIntegrator47.setStepsizeControl((double) 1, (double) (-1), (double) 100.0f, (double) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator47.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        stepHandler72.handleStep(stepInterpolator73, true);
        stepHandler72.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler72);
        stepHandler72.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(stepHandler72);
    }

    @Test
    public void test12934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12934");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) 100, 9.848857801796104d, 0.0d);
        double double38 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, (int) (short) -1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (-1.0d), (double) 0L, 35.0d);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator46.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator46.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler48);
        stepHandler48.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test12935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12935");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 100, 32.0d, 1);
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, 17.88854381999832d, 1.0d, 2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test12936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12936");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String str14 = integratorException13.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        java.lang.String str16 = integratorException13.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str16, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12937");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        switchingFunctionsHandler0.stepAccepted((double) 3, doubleArray64);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler0.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction71 = null;
        switchingFunctionsHandler0.add(switchingFunction71, 1.0d, (double) 1.0f, (int) 'a');
        boolean boolean76 = switchingFunctionsHandler0.isEmpty();
        double double77 = switchingFunctionsHandler0.getEventTime();
        double double78 = switchingFunctionsHandler0.getEventTime();
        boolean boolean79 = switchingFunctionsHandler0.stop();
        double double80 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
    }

    @Test
    public void test12938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12938");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 1.0d, Double.NaN, (int) (short) 100);
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test12939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12939");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 12.368586720951603d, 4.449373890263558d, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test12940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12940");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        switchingFunctionsHandler5.stepAccepted((double) (short) 10, doubleArray27);
        switchingFunctionsHandler0.stepAccepted((double) 100.0f, doubleArray27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler0.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler0.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler0.getEventTime();
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray40 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        boolean boolean54 = switchingFunctionsHandler41.reset(0.0d, doubleArray52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 0L, doubleArray40, doubleArray52);
        switchingFunctionsHandler0.stepAccepted(1.7320508075688772d, doubleArray52);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        double double59 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test12941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12941");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String str23 = derivativeException22.getPattern();
        java.lang.Object[] objArray24 = derivativeException22.getArguments();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray41);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException46);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        derivativeException46.addSuppressed((java.lang.Throwable) derivativeException51);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException51);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException35);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
    }

    @Test
    public void test12942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12942");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) (byte) 100, 0.0d, (int) (short) 1);
        double double63 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    }

    @Test
    public void test12943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12943");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) 1.0f, (double) 100, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction56, (double) 'a', 0.0d, (int) (byte) 10);
        java.lang.String str61 = graggBulirschStoerIntegrator42.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12944");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray7);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.String str32 = derivativeException30.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException30);
        java.lang.Throwable[] throwableArray35 = derivativeException26.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray39 = integratorException37.getSuppressed();
        derivativeException13.addSuppressed((java.lang.Throwable) integratorException37);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test12945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12945");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray9);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray31 = derivativeException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray31);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        derivativeException47.addSuppressed((java.lang.Throwable) derivativeException53);
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException53);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        java.lang.String str57 = derivativeException56.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        integratorException33.addSuppressed((java.lang.Throwable) derivativeException56);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException74);
        java.lang.String str76 = derivativeException74.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException74);
        derivativeException70.addSuppressed((java.lang.Throwable) derivativeException74);
        integratorException33.addSuppressed((java.lang.Throwable) derivativeException74);
        java.lang.Object[] objArray80 = integratorException33.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray80);
        java.lang.String str82 = integratorException81.getPattern();
        integratorException10.addSuppressed((java.lang.Throwable) integratorException81);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException10);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException10);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str82, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12946");
        double[] doubleArray4 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray4, doubleArray14);
        double[] doubleArray24 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray59, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray41, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray24, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 35.0d, doubleArray14, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        double[] doubleArray84 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray82, doubleArray84);
        double double86 = graggBulirschStoerIntegrator85.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator85.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        java.lang.String str92 = graggBulirschStoerIntegrator85.getName();
        double double93 = graggBulirschStoerIntegrator85.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator85.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator95 = null;
        stepHandler94.handleStep(stepInterpolator95, false);
        graggBulirschStoerIntegrator65.setStepHandler(stepHandler94);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str92, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertNotNull(stepHandler94);
    }

    @Test
    public void test12947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12947");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction46, (double) (-1), (double) 1L, 100);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, 3, (-1), 17.88854381999832d);
        double double57 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.0d) + "'", double57 == (-0.0d));
    }

    @Test
    public void test12948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12948");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException21);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray24 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        java.lang.Throwable[] throwableArray36 = derivativeException35.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException35);
        derivativeException27.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray51);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray61);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("", strArray69);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray81);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("", strArray81);
        derivativeException77.addSuppressed((java.lang.Throwable) derivativeException83);
        derivativeException73.addSuppressed((java.lang.Throwable) derivativeException83);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException83);
        derivativeException63.addSuppressed((java.lang.Throwable) derivativeException83);
        java.lang.String str88 = derivativeException83.getPattern();
        integratorException57.addSuppressed((java.lang.Throwable) derivativeException83);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException83);
        derivativeException27.addSuppressed((java.lang.Throwable) derivativeException83);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test12949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12949");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str77 = graggBulirschStoerIntegrator75.getName();
        graggBulirschStoerIntegrator75.setOrderControl(0, (double) 0.0f, (double) 2);
        double double82 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        double double83 = graggBulirschStoerIntegrator75.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator75.getStepHandler();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 3.1622776601683795d + "'", double82 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 10.0d + "'", double83 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler84);
    }

    @Test
    public void test12950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12950");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        graggBulirschStoerIntegrator57.setStabilityCheck(false, (int) (short) 100, (int) ' ', 3.1622776601683795d);
        graggBulirschStoerIntegrator57.setOrderControl(10, (double) (byte) 1, 3.1622776601683795d);
        graggBulirschStoerIntegrator57.setInterpolationControl(false, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction80 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction80, 5.623413251903491d, (double) 3, 0);
        graggBulirschStoerIntegrator57.setInterpolationControl(true, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
    }

    @Test
    public void test12951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12951");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean52 = stepHandler51.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler51.handleStep(stepInterpolator53, true);
        java.lang.Class<?> wildcardClass56 = stepHandler51.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test12952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12952");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.7782794100389228d, 0.0d, 9.898464007679532d, 0.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 10, (int) (short) -1, 15.298193747370034d);
        double double10 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test12953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12953");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException(throwable1);
        java.lang.Object[] objArray3 = derivativeException2.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray3);
        java.lang.String str5 = integratorException4.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str5, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test12954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12954");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException29);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.String str33 = derivativeException32.getPattern();
        java.lang.Object[] objArray34 = derivativeException32.getArguments();
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException61);
        java.lang.Object[] objArray63 = derivativeException61.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException61);
        derivativeException56.addSuppressed((java.lang.Throwable) derivativeException61);
        derivativeException45.addSuppressed((java.lang.Throwable) derivativeException61);
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException69);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException69);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
    }

    @Test
    public void test12955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12955");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", objArray7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray9);
        java.lang.String str11 = integratorException10.getPattern();
        java.lang.Throwable[] throwableArray12 = integratorException10.getSuppressed();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str11, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test12956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12956");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator19.getStepHandler();
        double double30 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction31, 0.0d, 9.848857801796104d, (int) (byte) 1);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) 100, 100.0d, 17.88854381999832d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
    }

    @Test
    public void test12957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12957");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) -1, (double) 0, (double) (byte) 1);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 3);
        graggBulirschStoerIntegrator4.setStepsizeControl(3.0d, 5.916079783099616d, 5.009970139234591d, 0.0d);
        java.lang.String str14 = graggBulirschStoerIntegrator4.getName();
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStepsizeControl(56.23413251903491d, (double) (byte) 1, (-0.0d), 12.368586720951603d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test12958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12958");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (byte) 100, (int) '#', (double) 2);
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (int) '#', (-1), 100.0d);
        graggBulirschStoerIntegrator42.setInitialStepSize((double) 0);
        graggBulirschStoerIntegrator42.setInitialStepSize(32.0d);
        double double58 = graggBulirschStoerIntegrator42.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
    }

    @Test
    public void test12959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12959");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, 3.1622776601683795d, (double) 1, (int) 'a');
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStabilityCheck(true, (int) (byte) 100, (int) (short) 0, 97.0d);
        double double74 = graggBulirschStoerIntegrator57.getMinStep();
        java.lang.String str75 = graggBulirschStoerIntegrator57.getName();
        java.lang.String str76 = graggBulirschStoerIntegrator57.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12960");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) 'a', (double) '4', (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 100, (double) (short) -1, (double) 2);
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler66);
    }

    @Test
    public void test12961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12961");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String str12 = derivativeException11.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test12962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12962");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (byte) 1, (double) (-1), (int) (short) 1);
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, (int) 'a', (double) (short) 0);
        graggBulirschStoerIntegrator38.setStepsizeControl(18.708286933869708d, 0.0d, 15.18214344379753d, (-1.0d));
        java.lang.String str69 = graggBulirschStoerIntegrator38.getName();
        double double70 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str69, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
    }

    @Test
    public void test12963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12963");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        switchingFunctionsHandler9.stepAccepted((double) (short) 10, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler9.reset((double) 0L, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray44);
        double double48 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray52 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean54 = switchingFunctionsHandler53.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler53.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler53.evaluateStep(stepInterpolator57);
        boolean boolean59 = switchingFunctionsHandler53.isEmpty();
        double double60 = switchingFunctionsHandler53.getEventTime();
        boolean boolean61 = switchingFunctionsHandler53.stop();
        double double62 = switchingFunctionsHandler53.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double67 = switchingFunctionsHandler66.getEventTime();
        double[] doubleArray75 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean76 = switchingFunctionsHandler66.reset((double) (byte) 1, doubleArray75);
        double[] doubleArray80 = new double[] { 100.0f, 100 };
        boolean boolean81 = switchingFunctionsHandler66.reset(Double.NaN, doubleArray80);
        double[] doubleArray82 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray80, doubleArray82);
        switchingFunctionsHandler53.stepAccepted((double) 100L, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.160740129524925d, (double) ' ', doubleArray52, doubleArray82);
        boolean boolean86 = switchingFunctionsHandler0.reset(4.161791450287818d, doubleArray82);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test12964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12964");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler20.add(switchingFunction21, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler20.add(switchingFunction26, (double) 1L, (double) 1, 1);
        boolean boolean31 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler33.reset(0.0d, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler20.reset(52.0d, doubleArray44);
        boolean boolean48 = switchingFunctionsHandler18.reset(17.320508075688775d, doubleArray44);
        boolean boolean49 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray44);
        boolean boolean50 = switchingFunctionsHandler0.stop();
        boolean boolean51 = switchingFunctionsHandler0.isEmpty();
        double double52 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
    }

    @Test
    public void test12965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12965");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1), 15.18214344379753d, (double) (short) 0, 97.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, 0);
    }

    @Test
    public void test12966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12966");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = derivativeException39.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException39);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray47 = derivativeException39.getArguments();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.String str53 = derivativeException51.getPattern();
        derivativeException39.addSuppressed((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException55);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray62);
        integratorException55.addSuppressed((java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException55);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test12967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12967");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler87 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator80.setInterpolationControl(false, 10);
        double double91 = graggBulirschStoerIntegrator80.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler92 = graggBulirschStoerIntegrator80.getStepHandler();
        graggBulirschStoerIntegrator80.setInitialStepSize((double) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.916079783099616d + "'", double86 == 5.916079783099616d);
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 35.0d + "'", double91 == 35.0d);
        org.junit.Assert.assertNotNull(stepHandler92);
    }

    @Test
    public void test12968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12968");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInitialStepSize(100.0d);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 1, 10, (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction15, 5.916079783099616d, (double) 1, 0);
        double double20 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInitialStepSize(17.78279410038923d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test12969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12969");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
    }

    @Test
    public void test12970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12970");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 5.916079783099616d, (double) (short) 100, 10.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) '4', (double) (short) 100, (int) '#');
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        double double12 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test12971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12971");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler0.add(switchingFunction38, (double) (byte) 0, (-1.0d), 3);
        double double43 = switchingFunctionsHandler0.getEventTime();
        boolean boolean44 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test12972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12972");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        double double12 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction13, (double) ' ', (double) 10, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator4.getStepHandler();
        boolean boolean19 = stepHandler18.requiresDenseOutput();
        stepHandler18.reset();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test12973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12973");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Throwable[] throwableArray27 = derivativeException11.getSuppressed();
        java.lang.String str28 = derivativeException11.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str28, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test12974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12974");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 1, (double) 10L, 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
    }

    @Test
    public void test12975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12975");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        graggBulirschStoerIntegrator26.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler31 = graggBulirschStoerIntegrator26.getStepHandler();
        boolean boolean32 = stepHandler31.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler31);
        java.lang.String str34 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction35, 9.26731744662116d, 42.661458015403085d, 10);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertNotNull(stepHandler31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str34, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12976");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, 42.661458015403085d, (double) 1L, (int) (byte) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = switchingFunctionsHandler0.evaluateStep(stepInterpolator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test12977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12977");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12978");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        java.lang.String str39 = graggBulirschStoerIntegrator38.getName();
        double double40 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, (double) 0.0f, 9.848857801796104d, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction46, (double) (short) 100, 0.0d, (int) '4');
        double double51 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str39, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test12979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12979");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12980");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction47, (double) 100.0f, (double) 1.0f, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, (double) (short) -1, (double) 3, 10);
        graggBulirschStoerIntegrator38.setInitialStepSize(3.1622776601683795d);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 10);
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '#');
        double double66 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction67, (double) 100, (double) (byte) 1, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 10.0d + "'", double66 == 10.0d);
    }

    @Test
    public void test12981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12981");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        double double31 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        java.lang.String str32 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction33, 23.40347319320716d, (double) (byte) 100, (int) (byte) 100);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (byte) 0);
        double double40 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str32, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test12982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12982");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        double[] doubleArray16 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean17 = switchingFunctionsHandler7.reset((double) (byte) 1, doubleArray16);
        double[] doubleArray21 = new double[] { 100.0f, 100 };
        boolean boolean22 = switchingFunctionsHandler7.reset(Double.NaN, doubleArray21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray21, doubleArray41);
        switchingFunctionsHandler2.stepAccepted(0.0d, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray65, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) (short) 1, doubleArray41, doubleArray65);
        double double85 = graggBulirschStoerIntegrator84.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        graggBulirschStoerIntegrator84.addSwitchingFunction(switchingFunction86, 0.0d, (double) 'a', 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction91 = null;
        graggBulirschStoerIntegrator84.addSwitchingFunction(switchingFunction91, (double) 100, (double) (short) 0, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 3.1622776601683795d + "'", double85 == 3.1622776601683795d);
    }

    @Test
    public void test12983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12983");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) -1, 0, (double) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) 0, (double) (-1), (int) (byte) -1);
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction64, (double) (-1), 5.656854249492381d, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
    }

    @Test
    public void test12984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12984");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInitialStepSize(1.7782794100389228d);
        double double30 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction31, (double) 1L, (double) (-1.0f), (-1));
        java.lang.String str36 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str36, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test12985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12985");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray13);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test12986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12986");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, (double) 0L, (-0.0d), (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 'a', (double) (short) 0, (int) (short) 1);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction13, (double) (byte) -1, 52.0d, 1);
        double double18 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl(17.78279410038923d, 8.366600265340756d, 17.88854381999832d, 72.11102550927978d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
    }

    @Test
    public void test12987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12987");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        boolean boolean43 = switchingFunctionsHandler0.isEmpty();
        boolean boolean44 = switchingFunctionsHandler0.stop();
        double double45 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler0.evaluateStep(stepInterpolator46);
        boolean boolean48 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler0.evaluateStep(stepInterpolator49);
        boolean boolean51 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test12988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12988");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 0.0f, 0.0d, (double) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) ' ', (double) (short) 1, (int) '4');
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double11 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test12989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12989");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double56 = switchingFunctionsHandler55.getEventTime();
        double[] doubleArray64 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean65 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray64);
        double[] doubleArray69 = new double[] { 100.0f, 100 };
        boolean boolean70 = switchingFunctionsHandler55.reset(Double.NaN, doubleArray69);
        double[] doubleArray71 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray69, doubleArray71);
        double double73 = graggBulirschStoerIntegrator72.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator72.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str79 = graggBulirschStoerIntegrator72.getName();
        java.lang.String str80 = graggBulirschStoerIntegrator72.getName();
        java.lang.String str81 = graggBulirschStoerIntegrator72.getName();
        graggBulirschStoerIntegrator72.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double87 = graggBulirschStoerIntegrator72.getCurrentStepStart();
        graggBulirschStoerIntegrator72.setStepsizeControl((-0.0d), (double) (-1L), (double) (byte) -1, 5.916079783099616d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        graggBulirschStoerIntegrator72.addSwitchingFunction(switchingFunction93, 97.0d, (double) (byte) 100, (int) '4');
        org.apache.commons.math.ode.StepHandler stepHandler98 = graggBulirschStoerIntegrator72.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler98);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str79, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str80, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str81, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(stepHandler98);
    }

    @Test
    public void test12990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12990");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean3 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler2.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler2.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler2.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler14.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler14.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler14.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        double[] doubleArray55 = new double[] { 100.0f, 100 };
        boolean boolean56 = switchingFunctionsHandler41.reset(Double.NaN, doubleArray55);
        double[] doubleArray57 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator58 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray55, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray37, doubleArray57);
        switchingFunctionsHandler14.stepAccepted((double) 0L, doubleArray57);
        double[] doubleArray61 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (byte) 10, doubleArray57, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean64 = switchingFunctionsHandler63.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler63.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler63.evaluateStep(stepInterpolator67);
        boolean boolean69 = switchingFunctionsHandler63.stop();
        double double70 = switchingFunctionsHandler63.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = switchingFunctionsHandler63.evaluateStep(stepInterpolator71);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double77 = switchingFunctionsHandler76.getEventTime();
        double[] doubleArray85 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean86 = switchingFunctionsHandler76.reset((double) (byte) 1, doubleArray85);
        double[] doubleArray90 = new double[] { 100.0f, 100 };
        boolean boolean91 = switchingFunctionsHandler76.reset(Double.NaN, doubleArray90);
        double[] doubleArray92 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray90, doubleArray92);
        boolean boolean94 = switchingFunctionsHandler63.reset((double) (byte) -1, doubleArray90);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator95 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', 5.477225575051661d, doubleArray57, doubleArray90);
        switchingFunctionsHandler2.stepAccepted((double) (short) -1, doubleArray90);
        double[] doubleArray97 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator98 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 0, (double) 10, doubleArray90, doubleArray97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test12991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12991");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 2);
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        double double47 = graggBulirschStoerIntegrator46.getCurrentStepStart();
        double double48 = graggBulirschStoerIntegrator46.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator46.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test12992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12992");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        double double27 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test12993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12993");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        double double31 = graggBulirschStoerIntegrator19.getMinStep();
        double double32 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double33 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double34 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (byte) 100, (int) (byte) 100, 15.298193747370034d);
        double double40 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 10.0d + "'", double31 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test12994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12994");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        java.lang.String str14 = derivativeException11.getPattern();
        java.lang.Throwable[] throwableArray15 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str14, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test12995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12995");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12996");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) (byte) 10, (double) (byte) 1, 0);
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction59, 17.320508075688775d, Double.NaN, 3);
        graggBulirschStoerIntegrator42.setOrderControl((int) (byte) 0, (double) 'a', 0.0d);
        double double68 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test12997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12997");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setInitialStepSize((double) (byte) 100);
        double double79 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator75.getStepHandler();
        java.lang.String str81 = graggBulirschStoerIntegrator75.getName();
        double double82 = graggBulirschStoerIntegrator75.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator75.getStepHandler();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.1622776601683795d + "'", double76 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 3.1622776601683795d + "'", double79 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str81, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler83);
    }

    @Test
    public void test12998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12998");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset(3.1622776601683795d, doubleArray35);
        double double38 = switchingFunctionsHandler0.getEventTime();
        boolean boolean39 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler0.add(switchingFunction40, 0.0d, 52.0d, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test12999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12999");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray11);
        java.lang.String str13 = integratorException12.getPattern();
        java.lang.Throwable[] throwableArray14 = integratorException12.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str13, "org.apache.commons.math.ode.IntegratorException: ");
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test13000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test13000");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        boolean boolean8 = switchingFunctionsHandler0.stop();
        boolean boolean9 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        double[] doubleArray30 = new double[] { 100.0f, 100 };
        boolean boolean31 = switchingFunctionsHandler16.reset(Double.NaN, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double35 = switchingFunctionsHandler34.getEventTime();
        double[] doubleArray43 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean44 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray43);
        double[] doubleArray48 = new double[] { 100.0f, 100 };
        boolean boolean49 = switchingFunctionsHandler34.reset(Double.NaN, doubleArray48);
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray48, doubleArray50);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray30, doubleArray50);
        switchingFunctionsHandler11.stepAccepted(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler11.isEmpty();
        boolean boolean55 = switchingFunctionsHandler11.stop();
        boolean boolean56 = switchingFunctionsHandler11.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler58.evaluateStep(stepInterpolator62);
        boolean boolean64 = switchingFunctionsHandler58.stop();
        double double65 = switchingFunctionsHandler58.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler58.evaluateStep(stepInterpolator66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        double[] doubleArray87 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray85, doubleArray87);
        boolean boolean89 = switchingFunctionsHandler58.reset((double) (byte) -1, doubleArray85);
        boolean boolean90 = switchingFunctionsHandler11.reset(56.23413251903491d, doubleArray85);
        switchingFunctionsHandler0.stepAccepted(17.88854381999832d, doubleArray85);
        boolean boolean92 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }
}

