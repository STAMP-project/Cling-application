import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 0L, (double) (short) -1, (double) 10L);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl(4.449373890263558d, 1.7782794100389228d, (double) 1L, 7.211102550927978d);
        java.lang.Class<?> wildcardClass12 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) '#', (double) 100L);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) '4', (double) (short) -1, 0.0d, 10.0d);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, 0.0d, (double) (byte) 100, (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray11);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        derivativeException28.addSuppressed((java.lang.Throwable) derivativeException38);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray42 = derivativeException38.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.String str44 = derivativeException43.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException45);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray60);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException65);
        java.lang.Throwable[] throwableArray67 = derivativeException66.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray67);
        java.lang.Object[] objArray69 = integratorException68.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", objArray69);
        derivativeException45.addSuppressed((java.lang.Throwable) integratorException70);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str44, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("", objArray6);
        java.lang.Object[] objArray8 = integratorException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException7);
        java.lang.Throwable[] throwableArray10 = integratorException7.getSuppressed();
        java.lang.Object[] objArray11 = integratorException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException7);
        java.lang.Object[] objArray13 = integratorException12.getArguments();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 1, (double) (-1.0f), 56.23413251903491d, 1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler12 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.setStepHandler(stepHandler12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 97.0d + "'", double6 == 97.0d);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) 10, 17.320508075688775d, 17.88854381999832d);
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator19.getStepHandler();
        double double74 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Throwable[] throwableArray8 = derivativeException3.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String str21 = derivativeException19.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException31);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        java.lang.Throwable[] throwableArray44 = derivativeException43.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        integratorException31.addSuppressed((java.lang.Throwable) derivativeException45);
        java.lang.Object[] objArray47 = integratorException31.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException31);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException48);
        integratorException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        java.lang.Object[] objArray57 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException55);
        java.lang.Object[] objArray59 = derivativeException55.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("", objArray59);
        java.lang.String[] strArray69 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray69);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException78);
        derivativeException70.addSuppressed((java.lang.Throwable) derivativeException79);
        java.lang.Throwable[] throwableArray81 = derivativeException70.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray81);
        integratorException60.addSuppressed((java.lang.Throwable) integratorException82);
        java.lang.String str84 = integratorException60.getPattern();
        java.lang.Object[] objArray85 = integratorException60.getArguments();
        derivativeException19.addSuppressed((java.lang.Throwable) integratorException60);
        java.lang.String str87 = derivativeException19.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[hi!]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str87, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = derivativeException18.getPattern();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException32);
        java.lang.String str35 = derivativeException32.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray42 = derivativeException40.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException46);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException14);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray54);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException60);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException72);
        integratorException60.addSuppressed((java.lang.Throwable) derivativeException72);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException72);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException72);
        java.lang.Object[] objArray77 = integratorException76.getArguments();
        java.lang.String str78 = integratorException76.getPattern();
        integratorException48.addSuppressed((java.lang.Throwable) integratorException76);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray89);
        org.apache.commons.math.ode.IntegratorException integratorException94 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException95 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException96 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray89);
        org.apache.commons.math.ode.IntegratorException integratorException97 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray89);
        integratorException76.addSuppressed((java.lang.Throwable) integratorException97);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str35, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray57, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, 0.0d, doubleArray38, doubleArray59);
        double double62 = graggBulirschStoerIntegrator61.getCurrentSignedStepsize();
        double double63 = graggBulirschStoerIntegrator61.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator61.setInterpolationControl(true, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction67, (double) (byte) 0, 17.88854381999832d, 0);
        double double72 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction73, 0.0d, (double) '4', 10);
        graggBulirschStoerIntegrator61.setStabilityCheck(false, 3, (int) (byte) -1, (double) 1.0f);
        double double83 = graggBulirschStoerIntegrator61.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 10.0d + "'", double83 == 10.0d);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        java.lang.String str11 = derivativeException10.getPattern();
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str11, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double[] doubleArray17 = null;
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray17);
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        double double20 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) 0, (-1.0d), (int) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction52, (double) (byte) -1, (double) 100.0f, 2);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (byte) 0, 97.0d, (double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction62, 17.78279410038923d, (-0.0d), (int) (byte) 1);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator71.setInitialStepSize((double) 10L);
        graggBulirschStoerIntegrator71.setStabilityCheck(true, (int) (byte) 0, (int) (byte) 100, (double) (short) -1);
        graggBulirschStoerIntegrator71.setInitialStepSize((-0.0d));
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator85.setInitialStepSize((double) 10L);
        double double88 = graggBulirschStoerIntegrator85.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator85.getStepHandler();
        graggBulirschStoerIntegrator71.setStepHandler(stepHandler89);
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler89);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler89);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertNotNull(stepHandler89);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) 100, (double) 1.0f, (int) '4');
        graggBulirschStoerIntegrator38.setInitialStepSize(17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray19 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        java.lang.Object[] objArray21 = derivativeException18.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray21);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray32);
        integratorException22.addSuppressed((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.String str43 = derivativeException42.toString();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str43, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (-1.0d), (double) 10, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) 100, (double) 'a', (int) 'a');
        double double24 = switchingFunctionsHandler0.getEventTime();
        boolean boolean25 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, 0.0d, (double) 0.0f, (int) (byte) 10);
        boolean boolean31 = switchingFunctionsHandler0.stop();
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        double double33 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        java.lang.String str51 = graggBulirschStoerIntegrator38.getName();
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler53 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.Class<?> wildcardClass57 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(stepHandler53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException6);
        java.lang.Object[] objArray8 = derivativeException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.String str37 = derivativeException36.getPattern();
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.Object[] objArray39 = derivativeException36.getArguments();
        integratorException10.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.Throwable[] throwableArray41 = integratorException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray41);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str37, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 100, (double) (short) -1, 52.0d);
        java.lang.Class<?> wildcardClass52 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException12);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        integratorException12.addSuppressed((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException28);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        derivativeException38.addSuppressed((java.lang.Throwable) derivativeException48);
        java.lang.Object[] objArray50 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray50);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException53);
        integratorException29.addSuppressed((java.lang.Throwable) integratorException53);
        java.lang.Object[] objArray56 = integratorException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", objArray56);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) '#', (double) 100L);
        double double55 = graggBulirschStoerIntegrator38.getMinStep();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, (double) 2, 98.48857801796105d, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(6.841560230416328d, (double) (byte) 0, 7.211102550927978d, (double) 0);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray17);
        java.lang.Throwable[] throwableArray27 = integratorException26.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) throwableArray27);
        java.lang.String str30 = integratorException29.getPattern();
        java.lang.String str31 = integratorException29.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException" + "'", str30, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException" + "'", str31, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = derivativeException39.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException39);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        integratorException58.addSuppressed((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        integratorException11.addSuppressed((java.lang.Throwable) integratorException77);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray68);
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double22 = switchingFunctionsHandler21.getEventTime();
        double[] doubleArray30 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean31 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray30);
        double[] doubleArray35 = new double[] { 100.0f, 100 };
        boolean boolean36 = switchingFunctionsHandler21.reset(Double.NaN, doubleArray35);
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray35, doubleArray37);
        switchingFunctionsHandler15.stepAccepted((double) (short) 10, doubleArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler15.reset(3.1622776601683795d, doubleArray50);
        switchingFunctionsHandler0.stepAccepted((double) 100, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler0.add(switchingFunction54, 1.0d, 10.0d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, (double) 2, (double) 3, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        switchingFunctionsHandler0.add(switchingFunction64, 31.622776601683793d, 32.0d, 10);
        double double69 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler0.add(switchingFunction70, (double) 0, (double) (byte) 1, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        switchingFunctionsHandler0.add(switchingFunction75, (double) '4', 4.449373890263558d, (int) (byte) -1);
        double double80 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction40, 0.0d, 0.0d, (int) (byte) 0);
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (short) 100, 4.161791450287818d, (double) 1, 35.0d);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) '4');
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        double double69 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator19.getStepHandler();
        double double71 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator19.getStepHandler();
        double double74 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str75 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 10.0d + "'", double69 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 2, (double) (byte) 100, (double) (short) 100, (double) 10.0f);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 1, 3.1622776601683795d, (double) (-1.0f), 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (byte) -1, 13.33521432163324d, 100);
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.7782794100389228d + "'", double10 == 1.7782794100389228d);
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        java.lang.String str46 = graggBulirschStoerIntegrator42.getName();
        graggBulirschStoerIntegrator42.setStepsizeControl(0.0d, (double) (byte) 100, (double) (short) 10, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction52, 17.88854381999832d, (double) (short) 100, 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str46, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        double[] doubleArray4 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator16 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray4, doubleArray14);
        double[] doubleArray24 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray59, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray41, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray24, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 35.0d, doubleArray14, doubleArray61);
        graggBulirschStoerIntegrator65.setStabilityCheck(false, 1, (int) 'a', 1.0d);
        double double71 = graggBulirschStoerIntegrator65.getMinStep();
        double double72 = graggBulirschStoerIntegrator65.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2.0d + "'", double71 == 2.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double69 = graggBulirschStoerIntegrator57.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator57.getStepHandler();
        double double71 = graggBulirschStoerIntegrator57.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator57.getStepHandler();
        java.lang.String str73 = graggBulirschStoerIntegrator57.getName();
        double double74 = graggBulirschStoerIntegrator57.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1.0d) + "'", double69 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1.0d) + "'", double71 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str73, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, 1, (int) (short) 1, 10.0d);
        java.lang.Class<?> wildcardClass71 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator40.addSwitchingFunction(switchingFunction41, (double) 100.0f, (double) 0, 0);
        double double46 = graggBulirschStoerIntegrator40.getCurrentStepStart();
        double double47 = graggBulirschStoerIntegrator40.getMaxStep();
        graggBulirschStoerIntegrator40.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator40.getStepHandler();
        stepHandler50.reset();
        boolean boolean52 = stepHandler50.requiresDenseOutput();
        boolean boolean53 = stepHandler50.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler50.handleStep(stepInterpolator54, false);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler50);
        double double58 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1.0d) + "'", double47 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray19 = derivativeException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", objArray19);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException41);
        derivativeException31.addSuppressed((java.lang.Throwable) derivativeException41);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException41);
        java.lang.String str45 = derivativeException44.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        integratorException21.addSuppressed((java.lang.Throwable) derivativeException44);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException44);
        java.lang.Object[] objArray49 = integratorException48.getArguments();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        java.lang.Object[] objArray55 = derivativeException54.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        integratorException48.addSuppressed((java.lang.Throwable) derivativeException54);
        java.lang.Throwable[] throwableArray58 = integratorException48.getSuppressed();
        java.lang.String str59 = integratorException48.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str59, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 3, (int) ' ', (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, (double) 10.0f, (double) (byte) 0, (int) (short) -1);
        double double67 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (short) 0, Double.NaN);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double63 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction64, (double) (short) 10, 5.477225575051661d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, (double) 2, 4.161791450287818d, 0);
        double double74 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 1L, (double) 0.0f, 100.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl(5.916079783099616d, (double) (short) 0, (double) 0L, 0.0d);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler11 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction12, 52.0d, 31.622776601683793d, (int) (short) 100);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler11);
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        derivativeException24.addSuppressed((java.lang.Throwable) derivativeException45);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (double) 'a', (double) (byte) 10, (double) 100L);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 97.0d + "'", double5 == 97.0d);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize(18.708286933869708d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        double double51 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStepsizeControl((double) 2, 38.3753555559862d, 8.366600265340756d, 17.320508075688775d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        double double31 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        java.lang.String str32 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction33, 23.40347319320716d, (double) (byte) 100, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction38, 17.78279410038923d, 35.0d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction43, (double) '#', Double.NaN, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str32, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) 10, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        boolean boolean59 = switchingFunctionsHandler22.reset((double) 0L, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, 10.0d, doubleArray18, doubleArray57);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator60.getStepHandler();
        graggBulirschStoerIntegrator60.setInterpolationControl(true, 3);
        graggBulirschStoerIntegrator60.setStepsizeControl((double) (short) 1, 23.40347319320716d, (double) (byte) 0, (double) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("", objArray29);
        java.lang.Object[] objArray31 = integratorException30.getArguments();
        java.lang.Object[] objArray32 = integratorException30.getArguments();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str38 = derivativeException36.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        integratorException30.addSuppressed((java.lang.Throwable) derivativeException36);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray49);
        java.lang.Object[] objArray52 = derivativeException51.getArguments();
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray54 = derivativeException51.getArguments();
        java.lang.Throwable[] throwableArray55 = derivativeException51.getSuppressed();
        java.lang.Object[] objArray56 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        java.lang.String str58 = derivativeException51.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str58, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        java.lang.String str24 = integratorException23.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        java.lang.String str27 = integratorException23.getPattern();
        java.lang.String str28 = integratorException23.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, 10.0d, (double) 'a', (int) (byte) 0);
        double double53 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        java.lang.String str57 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String str12 = derivativeException10.getPattern();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        java.lang.Object[] objArray30 = derivativeException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException28);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException28);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException28);
        java.lang.Throwable[] throwableArray34 = derivativeException28.getSuppressed();
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException45);
        derivativeException28.addSuppressed((java.lang.Throwable) derivativeException45);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException28);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("", strArray56);
        derivativeException52.addSuppressed((java.lang.Throwable) derivativeException58);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray68);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        derivativeException60.addSuppressed((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException60);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException77);
        java.lang.String str79 = derivativeException77.getPattern();
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray88);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray88);
        org.apache.commons.math.ode.IntegratorException integratorException92 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException91);
        derivativeException77.addSuppressed((java.lang.Throwable) derivativeException91);
        java.lang.String str94 = derivativeException91.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException95 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException91);
        derivativeException73.addSuppressed((java.lang.Throwable) derivativeException91);
        java.lang.Throwable[] throwableArray97 = derivativeException91.getSuppressed();
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException91);
        org.apache.commons.math.ode.DerivativeException derivativeException99 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str12, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str94, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, (double) 10.0f, 3.1622776601683795d, 0.0d);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.916079783099616d, (double) 100.0f, 5.009970139234591d, (double) 'a');
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray14);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.String str32 = derivativeException30.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException30);
        derivativeException22.addSuppressed((java.lang.Throwable) integratorException33);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.898464007679532d, 20.400469235504897d, (double) 0L, 2.514866859365871d);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction31 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction31, (double) 10.0f, (double) (byte) 10, 10);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator40.addSwitchingFunction(switchingFunction41, (double) (-1), (-1.0d), 0);
        java.lang.String str46 = graggBulirschStoerIntegrator40.getName();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator40.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler47.handleStep(stepInterpolator48, true);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        stepHandler47.handleStep(stepInterpolator51, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler47);
        java.lang.Class<?> wildcardClass55 = graggBulirschStoerIntegrator19.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str46, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 20.400469235504897d, 4.161791450287818d, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 2, (double) (byte) 100, (double) (short) 100, (double) 10.0f);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        stepHandler59.handleStep(stepInterpolator60, false);
        boolean boolean63 = stepHandler59.requiresDenseOutput();
        boolean boolean64 = stepHandler59.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        double double69 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        java.lang.String str70 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str71 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str70, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str71, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((-1), (double) '4', (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl(10, (double) 1, (double) (short) 0);
        graggBulirschStoerIntegrator38.setStepsizeControl(0.0d, (double) 100, (double) 'a', 17.88854381999832d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        double[] doubleArray30 = new double[] { 100.0f, 100 };
        boolean boolean31 = switchingFunctionsHandler16.reset(Double.NaN, doubleArray30);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray30);
        boolean boolean33 = switchingFunctionsHandler0.stop();
        double double34 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        double double16 = switchingFunctionsHandler0.getEventTime();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) 10, (double) 100L, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) 'a', (double) 1, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, Double.NaN, (double) 100.0f, (double) 2);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, (double) 1, (double) (-1L), (double) 1);
        double double10 = graggBulirschStoerIntegrator4.getMinStep();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 3);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 3.1622776601683795d + "'", double10 == 3.1622776601683795d);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, 1.0d, (double) (-1), (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction65, (-1.0d), (-0.0d), (int) '#');
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (byte) 10);
        double double72 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize(6.928935924497552d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        java.lang.String str15 = derivativeException14.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str15, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        double double17 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        boolean boolean26 = switchingFunctionsHandler24.isEmpty();
        boolean boolean27 = switchingFunctionsHandler24.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        switchingFunctionsHandler24.stepAccepted(10.0d, doubleArray49);
        boolean boolean69 = switchingFunctionsHandler19.reset((double) 1.0f, doubleArray49);
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray49);
        boolean boolean71 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler0.add(switchingFunction72, (double) 1.0f, 23.40347319320716d, (int) (byte) 100);
        boolean boolean77 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = switchingFunctionsHandler0.evaluateStep(stepInterpolator78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.848857801796104d, 10.0d, 35.0d, (double) '4');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        graggBulirschStoerIntegrator43.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator43.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray68, doubleArray70);
        graggBulirschStoerIntegrator71.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator71.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler76);
        stepHandler76.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler76);
        java.lang.Class<?> wildcardClass80 = stepHandler76.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 0, (-1), (double) 100.0f);
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, Double.NaN, (double) (byte) 1, 31.622776601683793d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray8 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("", objArray8);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException28);
        java.lang.Throwable[] throwableArray30 = derivativeException19.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray30);
        integratorException9.addSuppressed((java.lang.Throwable) integratorException31);
        java.lang.Object[] objArray33 = integratorException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException9);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray13);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray69, doubleArray85);
        graggBulirschStoerIntegrator87.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double92 = graggBulirschStoerIntegrator87.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler93 = graggBulirschStoerIntegrator87.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler93);
        double double95 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler96 = graggBulirschStoerIntegrator38.getStepHandler();
        double double97 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler98 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
        org.junit.Assert.assertNotNull(stepHandler96);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertNotNull(stepHandler98);
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        stepHandler67.handleStep(stepInterpolator69, false);
        boolean boolean72 = stepHandler67.requiresDenseOutput();
        java.lang.Class<?> wildcardClass73 = stepHandler67.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        graggBulirschStoerIntegrator64.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator64.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator64.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator64.getStepHandler();
        boolean boolean78 = stepHandler77.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        stepHandler77.handleStep(stepInterpolator79, true);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler77);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction83, (double) 100, (double) (short) -1, (int) (byte) 1);
        double double88 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 100.0f, (double) (short) 100, 17.78279410038923d, (double) (byte) -1);
        double double94 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = derivativeException39.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException39);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.String str47 = integratorException11.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException11);
        java.lang.String str49 = integratorException11.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException27);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray32 = derivativeException27.getSuppressed();
        java.lang.Object[] objArray33 = derivativeException27.getArguments();
        java.lang.Object[] objArray34 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", objArray34);
        java.lang.String str37 = integratorException36.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: " + "'", str37, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        double double7 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler8 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler8.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        stepHandler8.handleStep(stepInterpolator10, true);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(stepHandler8);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(4.161791450287818d, (double) (short) 100, (double) 10L, 0.0d);
        java.lang.Class<?> wildcardClass5 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException5.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("", objArray7);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        java.lang.Object[] objArray10 = integratorException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray10);
        java.lang.Object[] objArray12 = integratorException11.getArguments();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray27);
        double double32 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = derivativeException39.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException39);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray47 = derivativeException39.getArguments();
        java.lang.Throwable[] throwableArray48 = derivativeException39.getSuppressed();
        java.lang.Object[] objArray49 = derivativeException39.getArguments();
        java.lang.Throwable[] throwableArray50 = derivativeException39.getSuppressed();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        graggBulirschStoerIntegrator19.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction24, (double) 1L, (double) 100L, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        stepHandler29.handleStep(stepInterpolator30, false);
        boolean boolean33 = stepHandler29.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        stepHandler29.handleStep(stepInterpolator34, true);
        boolean boolean37 = stepHandler29.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100L, (double) 10L, 0.0d, (double) (short) -1);
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 10, 5.477225575051661d, (double) (byte) 100, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, 97.0d, (double) ' ', (int) 'a');
        double double61 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, (double) '#', (double) (-1.0f));
        graggBulirschStoerIntegrator38.setInterpolationControl(true, 10);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction9, (double) 0, 3.0d, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        double[] doubleArray30 = new double[] { 100.0f, 100 };
        boolean boolean31 = switchingFunctionsHandler16.reset(Double.NaN, doubleArray30);
        double[] doubleArray32 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator33 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray30, doubleArray32);
        double double34 = graggBulirschStoerIntegrator33.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator33.setStepsizeControl((double) (-1L), 52.0d, 35.0d, (double) 0L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        graggBulirschStoerIntegrator33.addSwitchingFunction(switchingFunction40, 0.0d, (double) '4', 10);
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator33.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler45);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(stepHandler45);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray49, doubleArray65);
        graggBulirschStoerIntegrator67.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator67.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator67.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler76);
        graggBulirschStoerIntegrator19.setInitialStepSize((double) 100.0f);
        double double80 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(stepHandler75);
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(stepHandler81);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 6.928935924497552d, 15.298193747370034d, (double) '4');
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) (byte) 100, 0.0d, 1.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 0, (double) (byte) 1, (int) (short) 100);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, 100.0d, 5.477225575051661d, 17.88854381999832d);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler16 = graggBulirschStoerIntegrator4.getStepHandler();
        stepHandler16.reset();
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertNotNull(stepHandler16);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        double double10 = switchingFunctionsHandler0.getEventTime();
        double double11 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction12 = null;
        switchingFunctionsHandler0.add(switchingFunction12, (double) 1.0f, (double) (short) 0, 0);
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        graggBulirschStoerIntegrator4.setOrderControl(0, (double) 2, (double) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        graggBulirschStoerIntegrator28.addSwitchingFunction(switchingFunction29, (double) 100.0f, (double) 0, 0);
        double double34 = graggBulirschStoerIntegrator28.getCurrentSignedStepsize();
        double double35 = graggBulirschStoerIntegrator28.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator28.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler36);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler36);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, 5.916079783099616d, 100.0d, (int) '#');
        boolean boolean25 = switchingFunctionsHandler0.stop();
        double[] doubleArray29 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray54, doubleArray70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        double[] doubleArray89 = new double[] { 100.0f, 100 };
        boolean boolean90 = switchingFunctionsHandler75.reset(Double.NaN, doubleArray89);
        double[] doubleArray91 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray89, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, 0.0d, doubleArray70, doubleArray91);
        boolean boolean94 = switchingFunctionsHandler30.reset(3.1622776601683795d, doubleArray91);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator95 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1), 1.0d, doubleArray29, doubleArray91);
        boolean boolean96 = switchingFunctionsHandler0.reset(0.0d, doubleArray91);
        double double97 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setInitialStepSize((double) (byte) 100);
        double double79 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator75.getStepHandler();
        java.lang.String str81 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str82 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str83 = graggBulirschStoerIntegrator75.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        graggBulirschStoerIntegrator75.addSwitchingFunction(switchingFunction84, 2.514866859365871d, 6.928935924497552d, 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.1622776601683795d + "'", double76 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 3.1622776601683795d + "'", double79 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str81, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str82, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str83, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, (double) 'a', (double) (-1L), 10);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler56.reset();
        boolean boolean58 = stepHandler56.requiresDenseOutput();
        stepHandler56.reset();
        stepHandler56.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 100.0d, (double) 10.0f, (-0.0d));
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) -1, 100, (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray58, doubleArray74);
        double[] doubleArray77 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray58, doubleArray77);
        double double79 = graggBulirschStoerIntegrator78.getCurrentStepStart();
        double double80 = graggBulirschStoerIntegrator78.getCurrentStepStart();
        double double81 = graggBulirschStoerIntegrator78.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        graggBulirschStoerIntegrator78.addSwitchingFunction(switchingFunction82, (double) (byte) 10, 1.0d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler87 = graggBulirschStoerIntegrator78.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler87);
        boolean boolean89 = stepHandler87.requiresDenseOutput();
        stepHandler87.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.0d) + "'", double81 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction15, 1.0d, 10.0d, (int) (short) 0);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator24 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100L, (double) 10.0f, (double) '4', (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler25 = graggBulirschStoerIntegrator24.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler25);
        graggBulirschStoerIntegrator4.setStepsizeControl(0.0d, 15.18214344379753d, (double) 'a', Double.NaN);
        double double32 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler25);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.isEmpty();
        double double9 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler11.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray31, doubleArray33);
        switchingFunctionsHandler11.stepAccepted((double) (short) 10, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double[] doubleArray46 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean47 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler11.reset((double) 0L, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset((double) 1.0f, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double71 = switchingFunctionsHandler70.getEventTime();
        double[] doubleArray79 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean80 = switchingFunctionsHandler70.reset((double) (byte) 1, doubleArray79);
        double[] doubleArray84 = new double[] { 100.0f, 100 };
        boolean boolean85 = switchingFunctionsHandler70.reset(Double.NaN, doubleArray84);
        double[] doubleArray86 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray84, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray66, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100, (double) 10, doubleArray46, doubleArray86);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator89.getStepHandler();
        graggBulirschStoerIntegrator89.setOrderControl((int) (short) -1, 23.40347319320716d, (double) 3);
        double double95 = graggBulirschStoerIntegrator89.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        java.lang.String str16 = integratorException14.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str16, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray7 = derivativeException6.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray7);
        java.lang.Object[] objArray10 = integratorException9.getArguments();
        java.lang.Class<?> wildcardClass11 = objArray10.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 32.0d, (double) (-1L), 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) 3, (double) (short) 0, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction63, 97.0d, 5.623413251903491d, (int) (byte) 10);
        java.lang.String str68 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str68, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (-0.0d), 0.0d, (double) '4');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str49 = graggBulirschStoerIntegrator43.getName();
        graggBulirschStoerIntegrator43.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        graggBulirschStoerIntegrator74.addSwitchingFunction(switchingFunction75, (double) 100.0f, (double) 0, 0);
        double double80 = graggBulirschStoerIntegrator74.getCurrentStepStart();
        double double81 = graggBulirschStoerIntegrator74.getMaxStep();
        graggBulirschStoerIntegrator74.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator74.getStepHandler();
        graggBulirschStoerIntegrator43.setStepHandler(stepHandler84);
        stepHandler84.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator87 = null;
        stepHandler84.handleStep(stepInterpolator87, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        stepHandler84.handleStep(stepInterpolator90, false);
        boolean boolean93 = stepHandler84.requiresDenseOutput();
        stepHandler84.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler84);
        boolean boolean96 = stepHandler84.requiresDenseOutput();
        stepHandler84.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-1.0d) + "'", double81 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        java.lang.Object[] objArray10 = integratorException9.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException9);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100L, 35.0d, (double) (-1L), 5.916079783099616d);
        graggBulirschStoerIntegrator4.setStepsizeControl((-1.0d), (double) 100, 0.0d, 3.1622776601683795d);
        graggBulirschStoerIntegrator4.setOrderControl(100, 0.0d, 10.0d);
        java.lang.String str14 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double20 = switchingFunctionsHandler19.getEventTime();
        double[] doubleArray28 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean29 = switchingFunctionsHandler19.reset((double) (byte) 1, doubleArray28);
        double[] doubleArray33 = new double[] { 100.0f, 100 };
        boolean boolean34 = switchingFunctionsHandler19.reset(Double.NaN, doubleArray33);
        double[] doubleArray35 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray33, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double[] doubleArray46 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean47 = switchingFunctionsHandler37.reset((double) (byte) 1, doubleArray46);
        double[] doubleArray51 = new double[] { 100.0f, 100 };
        boolean boolean52 = switchingFunctionsHandler37.reset(Double.NaN, doubleArray51);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray35, doubleArray51);
        graggBulirschStoerIntegrator53.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator53.getStepHandler();
        stepHandler61.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler61.handleStep(stepInterpolator63, true);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.78279410038923d, (double) (short) 0, (-1.0d), (double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler72 = graggBulirschStoerIntegrator71.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler72);
        boolean boolean74 = stepHandler72.requiresDenseOutput();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertNotNull(stepHandler72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.Object[] objArray36 = derivativeException34.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray36);
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray39 = integratorException37.getSuppressed();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", strArray53);
        integratorException37.addSuppressed((java.lang.Throwable) derivativeException65);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strArray53);
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException9);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        java.lang.Object[] objArray23 = derivativeException22.getArguments();
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray25 = derivativeException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        java.lang.String str46 = derivativeException45.getPattern();
        java.lang.Object[] objArray47 = derivativeException45.getArguments();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double59 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (short) -1, (double) 1L, (double) (short) 1, (double) 1.0f);
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 10, (-0.0d), 6.928935924497552d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double66 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl(31.622776601683793d, 5.009970139234591d, (double) 100, 13.92838827718412d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler57);
        org.junit.Assert.assertNotNull(stepHandler61);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.92838827718412d, 13.37480609952844d, 17.88854381999832d, 52.0d);
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray10);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException41);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Object[] objArray13 = derivativeException11.getArguments();
        java.lang.Throwable[] throwableArray14 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray14);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String str21 = derivativeException19.getPattern();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray30);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException33);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException33);
        java.lang.String str36 = derivativeException33.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        integratorException15.addSuppressed((java.lang.Throwable) derivativeException38);
        java.lang.Throwable[] throwableArray40 = derivativeException38.getSuppressed();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str36, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) 1L, (double) (-1.0f), (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler16.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler16.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler16.evaluateStep(stepInterpolator22);
        boolean boolean24 = switchingFunctionsHandler16.isEmpty();
        boolean boolean25 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        switchingFunctionsHandler27.stepAccepted((double) (short) 10, doubleArray49);
        boolean boolean52 = switchingFunctionsHandler16.reset((double) (short) 100, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (short) 100, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) (short) 0, (-0.0d), (double) (byte) 0);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (-1), 3.1622776601683795d, (double) (byte) -1, (double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, 0.0d, (double) (byte) 1, (int) (short) -1);
        double[] doubleArray57 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray57, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler70);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) -1, 10, (double) '#');
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        double double79 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str80 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInitialStepSize(20.400469235504897d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str80, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        double double6 = switchingFunctionsHandler0.getEventTime();
        boolean boolean7 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler9.reset(0.0d, doubleArray20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler9.evaluateStep(stepInterpolator23);
        double double25 = switchingFunctionsHandler9.getEventTime();
        double double26 = switchingFunctionsHandler9.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler28.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        boolean boolean35 = switchingFunctionsHandler33.isEmpty();
        boolean boolean36 = switchingFunctionsHandler33.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray58, doubleArray74);
        switchingFunctionsHandler33.stepAccepted(10.0d, doubleArray58);
        boolean boolean78 = switchingFunctionsHandler28.reset((double) 1.0f, doubleArray58);
        switchingFunctionsHandler9.stepAccepted((double) 0, doubleArray58);
        boolean boolean80 = switchingFunctionsHandler0.reset((double) 1, doubleArray58);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray25 = integratorException24.getSuppressed();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100L, (double) (short) -1, (int) ' ');
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        double double55 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double60 = switchingFunctionsHandler59.getEventTime();
        double[] doubleArray68 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean69 = switchingFunctionsHandler59.reset((double) (byte) 1, doubleArray68);
        double[] doubleArray73 = new double[] { 100.0f, 100 };
        boolean boolean74 = switchingFunctionsHandler59.reset(Double.NaN, doubleArray73);
        double[] doubleArray75 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray73, doubleArray75);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        graggBulirschStoerIntegrator76.addSwitchingFunction(switchingFunction77, (double) 100.0f, (double) 0, 0);
        double double82 = graggBulirschStoerIntegrator76.getCurrentStepStart();
        double double83 = graggBulirschStoerIntegrator76.getMaxStep();
        graggBulirschStoerIntegrator76.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator76.getStepHandler();
        stepHandler86.reset();
        boolean boolean88 = stepHandler86.requiresDenseOutput();
        boolean boolean89 = stepHandler86.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        stepHandler86.handleStep(stepInterpolator90, false);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler86);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction94 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction94, 0.0d, 5.916079783099616d, 100);
        java.lang.Class<?> wildcardClass99 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-1.0d) + "'", double83 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (byte) 0, 97.0d, (double) (short) 10);
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) ' ', 3, (double) (-1.0f));
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations10 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler12.evaluateStep(stepInterpolator14);
        boolean boolean16 = switchingFunctionsHandler12.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.isEmpty();
        double[] doubleArray21 = new double[] {};
        switchingFunctionsHandler18.stepAccepted(0.0d, doubleArray21);
        switchingFunctionsHandler12.stepAccepted(5.916079783099616d, doubleArray21);
        double[] doubleArray32 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray49, doubleArray69);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray32, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator4.integrate(firstOrderDifferentialEquations10, (double) 0, doubleArray21, (double) (short) 1, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double47 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 1, 100, Double.NaN);
        graggBulirschStoerIntegrator38.setOrderControl((int) 'a', 4.161791450287818d, 56.23413251903491d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 10.0d + "'", double47 == 10.0d);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray19 = derivativeException17.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        derivativeException12.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray23 = derivativeException17.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException25);
        java.lang.Class<?> wildcardClass27 = integratorException25.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setOrderControl(0, 3.1622776601683795d, (double) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, 1.7782794100389228d, (double) 100L, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, 100.0d, 100.0d, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction40, 0.0d, 0.0d, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler45 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler45.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler45);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException4);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray10 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException8.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray11);
        java.lang.Throwable[] throwableArray13 = integratorException12.getSuppressed();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        double[] doubleArray22 = new double[] { 100.0f, 100 };
        boolean boolean23 = switchingFunctionsHandler8.reset(Double.NaN, doubleArray22);
        double[] doubleArray24 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator25 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray22, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler26.evaluateStep(stepInterpolator27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray46, doubleArray48);
        switchingFunctionsHandler26.stepAccepted((double) (short) 10, doubleArray48);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray22, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) 10, doubleArray22, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler64.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler64.add(switchingFunction67, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler73.reset(0.0d, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler64.reset((double) (byte) 100, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) '#', doubleArray22, doubleArray84);
        graggBulirschStoerIntegrator88.setOrderControl((int) (byte) 0, 56.23413251903491d, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction93 = null;
        graggBulirschStoerIntegrator88.addSwitchingFunction(switchingFunction93, 35.0d, 2.514866859365871d, (int) (byte) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, 31.622776601683793d, 56.23413251903491d, 100);
        boolean boolean11 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray25 = derivativeException24.getArguments();
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.String str40 = derivativeException39.getPattern();
        derivativeException24.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray44 = derivativeException39.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str40, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.Throwable[] throwableArray17 = derivativeException16.getSuppressed();
        java.lang.Object[] objArray18 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double46 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 0);
        java.lang.String str50 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean7 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler6.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler6.evaluateStep(stepInterpolator10);
        boolean boolean12 = switchingFunctionsHandler6.stop();
        double double13 = switchingFunctionsHandler6.getEventTime();
        double double14 = switchingFunctionsHandler6.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray25 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean26 = switchingFunctionsHandler16.reset((double) (byte) 1, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler16.isEmpty();
        double double28 = switchingFunctionsHandler16.getEventTime();
        double[] doubleArray37 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray37, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler16.reset((double) (-1L), doubleArray37);
        switchingFunctionsHandler6.stepAccepted(56.23413251903491d, doubleArray37);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray37);
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        boolean boolean82 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator83 = null;
        boolean boolean84 = switchingFunctionsHandler0.evaluateStep(stepInterpolator83);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 1L, (double) 1, 1);
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double64 = switchingFunctionsHandler63.getEventTime();
        double[] doubleArray72 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean73 = switchingFunctionsHandler63.reset((double) (byte) 1, doubleArray72);
        double[] doubleArray77 = new double[] { 100.0f, 100 };
        boolean boolean78 = switchingFunctionsHandler63.reset(Double.NaN, doubleArray77);
        double[] doubleArray79 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray77, doubleArray79);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray59, doubleArray79);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray39, doubleArray79);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray19, doubleArray39);
        boolean boolean84 = switchingFunctionsHandler0.reset((double) (short) 0, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        switchingFunctionsHandler0.add(switchingFunction85, (double) 100L, 9.848857801796104d, (int) (short) 0);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = switchingFunctionsHandler0.evaluateStep(stepInterpolator90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        switchingFunctionsHandler18.stepAccepted((double) (short) 10, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray16, doubleArray40);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) (byte) 1, (double) (byte) 0, 3.1622776601683795d, (double) (byte) 1);
        double double49 = graggBulirschStoerIntegrator43.getMaxStep();
        graggBulirschStoerIntegrator43.setStepsizeControl(0.0d, 20.400469235504897d, 5.623413251903491d, (double) 2);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (-1.0d), (double) 0L, 35.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 0, (double) 1.0f, (double) 0L, 35.0d);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (byte) 0, (double) (short) -1, (double) 100.0f, 17.88854381999832d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        double double20 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 10, (double) 100, (double) (-1), 32.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray46, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator64.addSwitchingFunction(switchingFunction65, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator64.addSwitchingFunction(switchingFunction70, Double.NaN, (double) (short) 1, (int) (short) 1);
        graggBulirschStoerIntegrator64.setStabilityCheck(true, 10, 100, 10.0d);
        graggBulirschStoerIntegrator64.setStepsizeControl(52.0d, (-1.0d), (double) 0, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler85);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler85);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction88 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction88, (double) '4', (double) 1.0f, (int) (short) 100);
        double double93 = graggBulirschStoerIntegrator4.getMaxStep();
        double double94 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str95 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler96 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-1.0d) + "'", double93 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str95, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler96);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.37480609952844d, 98.48857801796105d, (double) (short) 0, (double) 10L);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler2.evaluateStep(stepInterpolator5);
        boolean boolean7 = switchingFunctionsHandler2.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray25, doubleArray45);
        switchingFunctionsHandler2.stepAccepted((double) 0L, doubleArray45);
        double[] doubleArray49 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) (byte) 10, doubleArray45, doubleArray49);
        double double51 = graggBulirschStoerIntegrator50.getMinStep();
        graggBulirschStoerIntegrator50.setOrderControl(2, (double) 10, (double) 10.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator50.addSwitchingFunction(switchingFunction56, 10.0d, (double) 100, 10);
        graggBulirschStoerIntegrator50.setOrderControl((int) 'a', (double) (-1L), (double) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException17);
        java.lang.String str19 = derivativeException18.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException" + "'", str19, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, 59.16079783099616d, 13.33521432163324d, 0.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 1.0d, (double) 'a', 100);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        double double57 = graggBulirschStoerIntegrator38.getMaxStep();
        double double58 = graggBulirschStoerIntegrator38.getMinStep();
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 10.0d + "'", double58 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.String str13 = derivativeException12.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) (short) 10, (double) 0L, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) 100, (double) (-1L), 3);
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(3.1622776601683795d, (-1.0d), (double) 0L, 35.0d);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = derivativeException39.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        derivativeException34.addSuppressed((java.lang.Throwable) derivativeException39);
        derivativeException23.addSuppressed((java.lang.Throwable) derivativeException39);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        java.lang.String str48 = derivativeException39.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str48, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        double[] doubleArray6 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray6, doubleArray23);
        double double28 = graggBulirschStoerIntegrator27.getCurrentSignedStepsize();
        java.lang.String str29 = graggBulirschStoerIntegrator27.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray46, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator49.addSwitchingFunction(switchingFunction50, (double) 100.0f, (double) 0, 0);
        double double55 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        double double56 = graggBulirschStoerIntegrator49.getMaxStep();
        graggBulirschStoerIntegrator49.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator49.getStepHandler();
        stepHandler59.reset();
        boolean boolean61 = stepHandler59.requiresDenseOutput();
        stepHandler59.reset();
        boolean boolean63 = stepHandler59.requiresDenseOutput();
        graggBulirschStoerIntegrator27.setStepHandler(stepHandler59);
        graggBulirschStoerIntegrator27.setStepsizeControl((double) (-1), (double) (short) 1, 1.0d, (double) 0L);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) -1, (double) 0, (double) (byte) 1);
        graggBulirschStoerIntegrator74.setStepsizeControl((double) 0, (double) 0L, (double) 'a', (double) (short) 100);
        double double80 = graggBulirschStoerIntegrator74.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator74.getStepHandler();
        graggBulirschStoerIntegrator27.setStepHandler(stepHandler81);
        boolean boolean83 = stepHandler81.requiresDenseOutput();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 5.916079783099616d + "'", double28 == 5.916079783099616d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str29, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1.0d) + "'", double80 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        stepHandler47.handleStep(stepInterpolator48, false);
        boolean boolean51 = stepHandler47.requiresDenseOutput();
        boolean boolean52 = stepHandler47.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator59.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler64);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) 2, (double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction70, (double) 2, (double) ' ', 3);
        org.apache.commons.math.ode.StepHandler stepHandler75 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler75);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException8.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException21.getArguments();
        java.lang.Object[] objArray23 = derivativeException21.getArguments();
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray31 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray33 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", objArray33);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException53);
        java.lang.Throwable[] throwableArray55 = derivativeException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray55);
        integratorException34.addSuppressed((java.lang.Throwable) integratorException56);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException34);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("", strArray67);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray79);
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray79);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException83);
        derivativeException68.addSuppressed((java.lang.Throwable) derivativeException84);
        java.lang.String str86 = derivativeException84.getPattern();
        java.lang.Object[] objArray87 = derivativeException84.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException88 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException84);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException88);
        java.lang.Object[] objArray91 = derivativeException88.getArguments();
        java.lang.String str92 = derivativeException88.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str86, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str92, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.Throwable[] throwableArray45 = derivativeException15.getSuppressed();
        java.lang.String str46 = derivativeException15.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException48);
        java.lang.String str50 = integratorException48.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) -1);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, 18.708286933869708d, 17.88854381999832d, (double) (byte) 100);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) ' ');
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator12 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        double double13 = graggBulirschStoerIntegrator12.getCurrentStepStart();
        graggBulirschStoerIntegrator12.setStepsizeControl((double) (short) 10, (double) 100, (double) (-1), 32.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        double[] doubleArray55 = new double[] { 100.0f, 100 };
        boolean boolean56 = switchingFunctionsHandler41.reset(Double.NaN, doubleArray55);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray39, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction58, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, Double.NaN, (double) (short) 1, (int) (short) 1);
        graggBulirschStoerIntegrator57.setStabilityCheck(true, 10, 100, 10.0d);
        graggBulirschStoerIntegrator57.setStepsizeControl(52.0d, (-1.0d), (double) 0, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator57.getStepHandler();
        graggBulirschStoerIntegrator12.setStepHandler(stepHandler78);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler78);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        java.lang.Throwable[] throwableArray45 = derivativeException15.getSuppressed();
        java.lang.String str46 = derivativeException15.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        java.lang.String str49 = integratorException48.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double68 = switchingFunctionsHandler67.getEventTime();
        double[] doubleArray76 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean77 = switchingFunctionsHandler67.reset((double) (byte) 1, doubleArray76);
        double[] doubleArray81 = new double[] { 100.0f, 100 };
        boolean boolean82 = switchingFunctionsHandler67.reset(Double.NaN, doubleArray81);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator83 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray65, doubleArray81);
        graggBulirschStoerIntegrator83.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator83.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator83.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        java.lang.String str93 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str94 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str93, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str94, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        double double59 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str60 = graggBulirschStoerIntegrator38.getName();
        double double61 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator5 = null;
        boolean boolean6 = switchingFunctionsHandler0.evaluateStep(stepInterpolator5);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double9 = switchingFunctionsHandler8.getEventTime();
        double[] doubleArray17 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean18 = switchingFunctionsHandler8.reset((double) (byte) 1, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double41 = switchingFunctionsHandler40.getEventTime();
        double[] doubleArray49 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean50 = switchingFunctionsHandler40.reset((double) (byte) 1, doubleArray49);
        double[] doubleArray54 = new double[] { 100.0f, 100 };
        boolean boolean55 = switchingFunctionsHandler40.reset(Double.NaN, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray54, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray36, doubleArray54);
        boolean boolean78 = switchingFunctionsHandler8.reset((double) (short) 1, doubleArray54);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray54);
        boolean boolean80 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler0.add(switchingFunction81, 100.0d, 97.0d, (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler24.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        switchingFunctionsHandler24.stepAccepted((double) (short) 10, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray20, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double77 = switchingFunctionsHandler76.getEventTime();
        double[] doubleArray85 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean86 = switchingFunctionsHandler76.reset((double) (byte) 1, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler50.reset((double) 0L, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 5.477225575051661d, doubleArray46, doubleArray85);
        double double89 = graggBulirschStoerIntegrator88.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        double[] doubleArray8 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray8, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        boolean boolean41 = switchingFunctionsHandler30.isEmpty();
        double double42 = switchingFunctionsHandler30.getEventTime();
        boolean boolean43 = switchingFunctionsHandler30.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator46 = null;
        boolean boolean47 = switchingFunctionsHandler45.evaluateStep(stepInterpolator46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray65, doubleArray67);
        switchingFunctionsHandler45.stepAccepted((double) (short) 10, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        boolean boolean82 = switchingFunctionsHandler45.reset(3.1622776601683795d, doubleArray80);
        switchingFunctionsHandler30.stepAccepted((double) 100, doubleArray80);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, (double) 1.0f, doubleArray8, doubleArray80);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        graggBulirschStoerIntegrator89.setStepsizeControl((double) 1.0f, (double) (byte) 0, (double) '#', (double) 2);
        org.apache.commons.math.ode.StepHandler stepHandler95 = graggBulirschStoerIntegrator89.getStepHandler();
        graggBulirschStoerIntegrator84.setStepHandler(stepHandler95);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(stepHandler95);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        java.lang.String str19 = integratorException18.toString();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str19, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 9.898464007679532d, (double) (-1L), 52.0d);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        double double8 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray25, doubleArray45);
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator47.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator47.addSwitchingFunction(switchingFunction49, 0.0d, 0.0d, (int) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator47.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler54);
        boolean boolean56 = stepHandler54.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        stepHandler54.handleStep(stepInterpolator57, false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 2, (double) 3);
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator63.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator63.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        stepHandler65.handleStep(stepInterpolator66, true);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler65);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException28);
        derivativeException4.addSuppressed((java.lang.Throwable) integratorException29);
        java.lang.Object[] objArray31 = derivativeException4.getArguments();
        java.lang.Throwable[] throwableArray32 = derivativeException4.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray32);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (byte) -1);
        double double53 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.Class<?> wildcardClass54 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 10.0d + "'", double50 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        java.lang.String str63 = graggBulirschStoerIntegrator57.getName();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) '#', 10.0d, (double) 3, (double) 10);
        graggBulirschStoerIntegrator57.setInitialStepSize((double) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator57.getStepHandler();
        boolean boolean72 = stepHandler71.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator73 = null;
        stepHandler71.handleStep(stepInterpolator73, false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str63, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        java.lang.Class<?> wildcardClass15 = derivativeException13.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(42.661458015403085d, (double) 0, (double) 10, (double) 100L);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray7 = derivativeException3.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException15);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 0.0f, (double) ' ', (double) (short) 10);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator30.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler35 = graggBulirschStoerIntegrator30.getStepHandler();
        boolean boolean36 = stepHandler35.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler35);
        graggBulirschStoerIntegrator19.setStepsizeControl(Double.NaN, 4.161791450287818d, (double) (byte) -1, (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertNotNull(stepHandler35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, (double) 10L, 10.0d, (int) ' ');
        double double55 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setOrderControl((int) (byte) 100, 17.88854381999832d, 2.0d);
        graggBulirschStoerIntegrator42.setStepsizeControl(100.0d, 17.78279410038923d, 5.477225575051661d, 42.661458015403085d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction65, 15.18214344379753d, 56.23413251903491d, (int) (byte) 1);
        graggBulirschStoerIntegrator42.setOrderControl(3, (-1.0d), 23.40347319320716d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) -1, (int) (byte) 10, (double) (-1.0f));
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler55.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 100, 35.0d, 0.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 1, 100, 56.568542494923804d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, 32.0d, (double) 2, (-1));
        graggBulirschStoerIntegrator42.setStepsizeControl(6.928935924497552d, (double) (-1.0f), 1.0d, (double) 100L);
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        boolean boolean47 = switchingFunctionsHandler0.isEmpty();
        boolean boolean48 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, 100.0d, 35.0d, (int) (short) 100);
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 1L, (double) (short) 10, (double) 0.0f, (double) '4');
        double double79 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double80 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double81 = graggBulirschStoerIntegrator57.getCurrentStepStart();
        graggBulirschStoerIntegrator57.setInterpolationControl(false, (int) '4');
        graggBulirschStoerIntegrator57.setInterpolationControl(false, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 2, (double) (byte) 100, (double) (short) 100, (double) 10.0f);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray57, doubleArray59);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(10.0d, 0.0d, doubleArray38, doubleArray59);
        double double62 = graggBulirschStoerIntegrator61.getMaxStep();
        double double63 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator68.addSwitchingFunction(switchingFunction69, (double) (-1), (-1.0d), 0);
        java.lang.String str74 = graggBulirschStoerIntegrator68.getName();
        double double75 = graggBulirschStoerIntegrator68.getCurrentSignedStepsize();
        java.lang.String str76 = graggBulirschStoerIntegrator68.getName();
        org.apache.commons.math.ode.StepHandler stepHandler77 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator61.setStepHandler(stepHandler77);
        double double79 = graggBulirschStoerIntegrator61.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str74, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5.477225575051661d + "'", double75 == 5.477225575051661d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler77);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction44, (double) 0L, (double) 10, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction49, (double) 100L, (double) 1.0f, (int) '4');
        graggBulirschStoerIntegrator42.setOrderControl(0, 52.0d, 0.0d);
        double double58 = graggBulirschStoerIntegrator42.getMaxStep();
        graggBulirschStoerIntegrator42.setInitialStepSize((double) 100L);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray19 = derivativeException8.getSuppressed();
        java.lang.Object[] objArray20 = derivativeException8.getArguments();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.Object[] objArray38 = derivativeException36.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        derivativeException31.addSuppressed((java.lang.Throwable) derivativeException36);
        java.lang.Throwable[] throwableArray42 = derivativeException36.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException53);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException53);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException53);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str21 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.StepHandler stepHandler22 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInitialStepSize(23.40347319320716d);
        org.apache.commons.math.ode.StepHandler stepHandler25 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator19.setStepHandler(stepHandler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler22);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String str20 = derivativeException18.getPattern();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException32);
        java.lang.String str35 = derivativeException32.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray42 = derivativeException40.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException36.addSuppressed((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException46);
        java.lang.String str48 = derivativeException14.getPattern();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        java.lang.Object[] objArray56 = derivativeException55.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException62);
        java.lang.Object[] objArray64 = derivativeException63.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.Throwable[] throwableArray66 = derivativeException65.getSuppressed();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException("", strArray70);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray78);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("", strArray78);
        derivativeException72.addSuppressed((java.lang.Throwable) derivativeException82);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException82);
        derivativeException65.addSuppressed((java.lang.Throwable) derivativeException84);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException65);
        derivativeException57.addSuppressed((java.lang.Throwable) derivativeException65);
        java.lang.Throwable[] throwableArray88 = derivativeException57.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException89 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray88);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException", (java.lang.Object[]) throwableArray88);
        derivativeException14.addSuppressed((java.lang.Throwable) integratorException90);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str35, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str48, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str77 = graggBulirschStoerIntegrator75.getName();
        double double78 = graggBulirschStoerIntegrator75.getMaxStep();
        double double79 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        graggBulirschStoerIntegrator75.setInitialStepSize(0.0d);
        double double82 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double83 = graggBulirschStoerIntegrator75.getMinStep();
        double double84 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3.1622776601683795d + "'", double84 == 3.1622776601683795d);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("", strArray4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        derivativeException20.addSuppressed((java.lang.Throwable) derivativeException26);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray31 = derivativeException26.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException32);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        java.lang.Object[] objArray39 = derivativeException37.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        derivativeException33.addSuppressed((java.lang.Throwable) derivativeException37);
        java.lang.Class<?> wildcardClass43 = derivativeException33.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray66, doubleArray68);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator69.addSwitchingFunction(switchingFunction70, (double) 100.0f, (double) 0, 0);
        double double75 = graggBulirschStoerIntegrator69.getCurrentStepStart();
        double double76 = graggBulirschStoerIntegrator69.getMaxStep();
        graggBulirschStoerIntegrator69.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler79 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler79);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction81, 52.0d, 1.0d, (int) (short) -1);
        double double86 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) '4', (int) (byte) 0, 97.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction92 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction92, (double) 100, (double) 10L, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.0d) + "'", double76 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler79);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler22.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        double[] doubleArray44 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray42, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) 10, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, 15.18214344379753d, doubleArray20, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator47.addSwitchingFunction(switchingFunction48, (double) 0L, 12.368586720951603d, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 100, (double) (short) 1, 0.0d, 10.0d);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        java.lang.String str58 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double63 = graggBulirschStoerIntegrator38.getMinStep();
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str58, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 10.0d + "'", double63 == 10.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setInterpolationControl(false, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double66 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(2.514866859365871d, 35.0d, 0.0d, 12.368586720951603d);
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, 5.916079783099616d, (double) ' ', (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) (short) 10, (double) 0L, (int) 'a');
        double double13 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) 10.0f, 97.0d, (double) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction44, 1.0d, (double) '4', (int) ' ');
        double double49 = graggBulirschStoerIntegrator43.getCurrentSignedStepsize();
        java.lang.String str50 = graggBulirschStoerIntegrator43.getName();
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator43.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler51);
        graggBulirschStoerIntegrator4.setStepsizeControl(42.661458015403085d, 52.0d, 0.0d, 52.0d);
        graggBulirschStoerIntegrator4.setOrderControl(1, 17.752843424574987d, (double) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler51);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) '4', (double) 'a', (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 0, (double) (short) 1, (int) (short) 100);
        double double54 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((-1.0d), (double) 1L, (double) (-1L), (double) 10);
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.Throwable[] throwableArray33 = derivativeException27.getSuppressed();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException44);
        derivativeException27.addSuppressed((java.lang.Throwable) derivativeException44);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException44);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        derivativeException53.addSuppressed((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        java.lang.Object[] objArray66 = derivativeException65.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException65);
        derivativeException44.addSuppressed((java.lang.Throwable) integratorException67);
        java.lang.String str69 = integratorException67.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException67);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException67);
        java.lang.Throwable[] throwableArray72 = integratorException67.getSuppressed();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        java.lang.Class<?> wildcardClass7 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        stepHandler55.handleStep(stepInterpolator56, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler55);
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray46, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray28, doubleArray46);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray46);
        double[] doubleArray72 = null;
        switchingFunctionsHandler0.stepAccepted(52.0d, doubleArray72);
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        boolean boolean75 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler0.add(switchingFunction76, (double) 100.0f, 18.708286933869708d, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, (double) 10L, 10.0d, (int) ' ');
        double double55 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double56 = graggBulirschStoerIntegrator42.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction57, (double) 0L, 7.211102550927978d, 2);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String str14 = derivativeException13.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str14, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray18 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException16);
        java.lang.Throwable[] throwableArray22 = derivativeException16.getSuppressed();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        java.lang.String str28 = derivativeException26.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException26);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.String str31 = derivativeException16.getPattern();
        java.lang.Throwable[] throwableArray32 = derivativeException16.getSuppressed();
        java.lang.Object[] objArray33 = derivativeException16.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray33);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '#', (double) (byte) -1, 9.848857801796104d, 31.209033090201576d);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertNotNull(stepHandler9);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 'a', (double) 1.0f, (double) 1.0f, (double) 0.0f);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 1.0f, (double) (byte) 0, (double) '#', (double) 2);
        double double10 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str11 = graggBulirschStoerIntegrator4.getName();
        double double12 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler13 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 9.848857801796104d + "'", double10 == 9.848857801796104d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str11, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(stepHandler13);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (-1.0d), (double) 10, (int) (short) 0);
        double[] doubleArray20 = null;
        boolean boolean21 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = switchingFunctionsHandler0.evaluateStep(stepInterpolator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler48.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        double double40 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (short) 10, 2, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction36 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction36, (double) (-1L), (double) (-1L), (int) (byte) 1);
        java.lang.String str41 = graggBulirschStoerIntegrator19.getName();
        double double42 = graggBulirschStoerIntegrator19.getMinStep();
        java.lang.String str43 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str41, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 10.0d + "'", double42 == 10.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str43, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray22 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        java.lang.Object[] objArray24 = integratorException23.getArguments();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException32);
        java.lang.String str34 = derivativeException32.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException35);
        integratorException23.addSuppressed((java.lang.Throwable) integratorException35);
        java.lang.Object[] objArray38 = integratorException35.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException4.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Throwable[] throwableArray7 = derivativeException6.getSuppressed();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException6.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException6.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException6);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        java.lang.Class<?> wildcardClass16 = objArray15.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray14 = derivativeException10.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray22 = derivativeException9.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray43);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray43);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        derivativeException32.addSuppressed((java.lang.Throwable) derivativeException48);
        java.lang.String str50 = derivativeException48.getPattern();
        java.lang.String str51 = derivativeException48.getPattern();
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException48);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException64);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException65);
        java.lang.String[] strArray75 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException77);
        integratorException65.addSuppressed((java.lang.Throwable) derivativeException77);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException65);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException91 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray89);
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException92);
        org.apache.commons.math.ode.IntegratorException integratorException94 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException93);
        integratorException65.addSuppressed((java.lang.Throwable) integratorException94);
        integratorException53.addSuppressed((java.lang.Throwable) integratorException65);
        java.lang.Object[] objArray97 = integratorException53.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str50, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str51, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[]");
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray41, doubleArray57);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator59.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator59.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator59.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator59.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, 32.0d, (double) 'a');
        double double84 = graggBulirschStoerIntegrator19.getMinStep();
        double double85 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator19.getStepHandler();
        stepHandler86.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator88 = null;
        stepHandler86.handleStep(stepInterpolator88, true);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(stepHandler86);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        switchingFunctionsHandler9.stepAccepted((double) (short) 10, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler9.reset((double) 0L, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler0.add(switchingFunction48, (double) 10L, (double) 1L, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler0.add(switchingFunction53, 0.0d, 31.622776601683793d, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler0.add(switchingFunction58, (double) 0, (double) 0.0f, (-1));
        boolean boolean63 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, (double) (-1), (double) (byte) 0, (double) (-1));
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100, (double) 0, (double) 1, (double) (-1L));
        double double11 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler27.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        double[] doubleArray49 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator50 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray47, doubleArray49);
        switchingFunctionsHandler27.stepAccepted((double) (short) 10, doubleArray49);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray25, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        double[] doubleArray89 = new double[] { 100.0f, 100 };
        boolean boolean90 = switchingFunctionsHandler75.reset(Double.NaN, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray73, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 100L, doubleArray25, doubleArray73);
        boolean boolean93 = switchingFunctionsHandler0.reset(0.0d, doubleArray25);
        boolean boolean94 = switchingFunctionsHandler0.isEmpty();
        double double95 = switchingFunctionsHandler0.getEventTime();
        boolean boolean96 = switchingFunctionsHandler0.stop();
        boolean boolean97 = switchingFunctionsHandler0.isEmpty();
        boolean boolean98 = switchingFunctionsHandler0.isEmpty();
        boolean boolean99 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        java.lang.String str26 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str27 = graggBulirschStoerIntegrator19.getName();
        java.lang.String str28 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 100, (double) (short) -1, 5.916079783099616d, 100.0d);
        double double34 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStepsizeControl((-0.0d), (double) (-1L), (double) (byte) -1, 5.916079783099616d);
        java.lang.String str40 = graggBulirschStoerIntegrator19.getName();
        double double41 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str26, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str27, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str28, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str40, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        boolean boolean36 = switchingFunctionsHandler33.isEmpty();
        boolean boolean37 = switchingFunctionsHandler33.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double[] doubleArray52 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean53 = switchingFunctionsHandler43.reset((double) (byte) 1, doubleArray52);
        double[] doubleArray57 = new double[] { 100.0f, 100 };
        boolean boolean58 = switchingFunctionsHandler43.reset(Double.NaN, doubleArray57);
        double[] doubleArray59 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray57, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        double[] doubleArray75 = new double[] { 100.0f, 100 };
        boolean boolean76 = switchingFunctionsHandler61.reset(Double.NaN, doubleArray75);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray59, doubleArray75);
        switchingFunctionsHandler33.stepAccepted(2.0d, doubleArray59);
        boolean boolean79 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray59);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler0.evaluateStep(stepInterpolator80);
        double[] doubleArray83 = null;
        boolean boolean84 = switchingFunctionsHandler0.reset(18.708286933869708d, doubleArray83);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException24);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException4.addSuppressed((java.lang.Throwable) derivativeException29);
        java.lang.String str31 = derivativeException29.getPattern();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray40);
        derivativeException29.addSuppressed((java.lang.Throwable) derivativeException47);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        double double7 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction8, (double) (short) 10, Double.NaN, 1);
        double double13 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double14 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler15);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator4.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler9 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        graggBulirschStoerIntegrator48.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator48.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator48.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator48.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator48.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler64.handleStep(stepInterpolator65, false);
        stepHandler64.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler64);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (byte) -1, (double) '4');
        double double75 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction76, 1.0d, (double) (short) 0, (int) (byte) 0);
        org.junit.Assert.assertNotNull(stepHandler9);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 10.0d + "'", double75 == 10.0d);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (-1.0d), 32.0d, (int) '#');
        boolean boolean16 = switchingFunctionsHandler0.stop();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler21.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler21.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler21.isEmpty();
        boolean boolean30 = switchingFunctionsHandler21.stop();
        double double31 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator34 = null;
        boolean boolean35 = switchingFunctionsHandler33.evaluateStep(stepInterpolator34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler33.evaluateStep(stepInterpolator36);
        boolean boolean38 = switchingFunctionsHandler33.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler40.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray60, doubleArray62);
        switchingFunctionsHandler40.stepAccepted((double) (short) 10, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler66 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double67 = switchingFunctionsHandler66.getEventTime();
        double[] doubleArray75 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean76 = switchingFunctionsHandler66.reset((double) (byte) 1, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler40.reset((double) 0L, doubleArray75);
        boolean boolean78 = switchingFunctionsHandler33.reset(3.1622776601683795d, doubleArray75);
        boolean boolean79 = switchingFunctionsHandler21.reset(17.320508075688775d, doubleArray75);
        boolean boolean80 = switchingFunctionsHandler0.reset(9.898464007679532d, doubleArray75);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (byte) 100, (int) '#', (double) 2);
        graggBulirschStoerIntegrator42.setInterpolationControl(false, (int) (byte) 0);
        graggBulirschStoerIntegrator42.setInitialStepSize((double) 10);
        graggBulirschStoerIntegrator42.setOrderControl(0, 43.25307727072111d, 42.661458015403085d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler59);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double46 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize(23.40347319320716d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) (short) 1, 31.622776601683793d, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset(100.0d, doubleArray28);
        double double48 = switchingFunctionsHandler0.getEventTime();
        double double49 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray51 = null;
        boolean boolean52 = switchingFunctionsHandler0.reset(5.477225575051661d, doubleArray51);
        double double53 = switchingFunctionsHandler0.getEventTime();
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler0.add(switchingFunction55, 4.449373890263558d, 52.0d, 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        double double31 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double32 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) 0, (double) 3, (double) (short) -1, (double) (short) 10);
        graggBulirschStoerIntegrator38.setInitialStepSize(0.0d);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 3, (int) ' ', (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, (double) 10.0f, (double) (byte) 0, (int) (short) -1);
        double double67 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 1, (double) (short) 0, Double.NaN);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction72, (double) 0, 9.898464007679532d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) (byte) 1, 100.0d, 9.848857801796104d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray76 = new double[] { 100.0f, 100 };
        boolean boolean77 = switchingFunctionsHandler62.reset(Double.NaN, doubleArray76);
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray76, doubleArray78);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction80 = null;
        graggBulirschStoerIntegrator79.addSwitchingFunction(switchingFunction80, (double) 100.0f, (double) 0, 0);
        double double85 = graggBulirschStoerIntegrator79.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator79.getStepHandler();
        graggBulirschStoerIntegrator59.setStepHandler(stepHandler86);
        stepHandler86.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        stepHandler86.handleStep(stepInterpolator89, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator92 = null;
        stepHandler86.handleStep(stepInterpolator92, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator95 = null;
        stepHandler86.handleStep(stepInterpolator95, true);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler86);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(stepHandler86);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, 1.0d, (double) 1L, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) 'a', (double) '4', (int) ' ');
        graggBulirschStoerIntegrator38.setStabilityCheck(true, 0, (int) (short) 0, (double) 100);
        double double64 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double65 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str66 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl(3.0d, 3.0d, 1.0d, 5.477225575051661d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str66, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(15.18214344379753d, 3.1622776601683795d, (double) 100, 0.0d);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator46.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator46.addSwitchingFunction(switchingFunction48, 100.0d, (double) 0L, 2);
        double double53 = graggBulirschStoerIntegrator46.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator46.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler54);
        double double56 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 6.928935924497552d + "'", double56 == 6.928935924497552d);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 2, Double.NaN, (double) 0.0f, (double) 1);
        double double10 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double11 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler9.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        switchingFunctionsHandler9.stepAccepted((double) (short) 10, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler9.reset((double) 0L, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler0.add(switchingFunction48, (double) 10L, (double) 1L, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler0.add(switchingFunction53, 56.23413251903491d, (double) (short) 10, 100);
        double double58 = switchingFunctionsHandler0.getEventTime();
        boolean boolean59 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.stop();
        double double4 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler6.isEmpty();
        double double18 = switchingFunctionsHandler6.getEventTime();
        boolean boolean19 = switchingFunctionsHandler6.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        double[] doubleArray43 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray41, doubleArray43);
        switchingFunctionsHandler21.stepAccepted((double) (short) 10, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double48 = switchingFunctionsHandler47.getEventTime();
        double[] doubleArray56 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean57 = switchingFunctionsHandler47.reset((double) (byte) 1, doubleArray56);
        boolean boolean58 = switchingFunctionsHandler21.reset(3.1622776601683795d, doubleArray56);
        switchingFunctionsHandler6.stepAccepted((double) 100, doubleArray56);
        boolean boolean60 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray56);
        boolean boolean61 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        switchingFunctionsHandler0.add(switchingFunction62, (double) 1.0f, 35.0d, (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray21 = derivativeException15.getSuppressed();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.String str27 = derivativeException25.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strArray39);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        boolean boolean5 = switchingFunctionsHandler0.isEmpty();
        double double6 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) (-1), 17.88854381999832d, 1);
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        integratorException11.addSuppressed((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray26 = integratorException11.getArguments();
        java.lang.Throwable[] throwableArray27 = integratorException11.getSuppressed();
        java.lang.String str28 = integratorException11.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.Object[] objArray9 = derivativeException7.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str11 = derivativeException7.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str11, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        java.lang.Object[] objArray1 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray1);
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException2);
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException4);
        java.lang.String str6 = derivativeException5.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        java.lang.Object[] objArray8 = derivativeException5.getArguments();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1.0f));
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (byte) -1, (double) (byte) 100, (double) 1L, (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction47, 23.40347319320716d, (double) (byte) 100, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (byte) 1, 1, (double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction57, (double) 'a', 2.514866859365871d, (int) (byte) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, 7.211102550927978d, (double) (byte) 10, (double) (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler39);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) -1, 100, (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator76 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray58, doubleArray74);
        double[] doubleArray77 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray58, doubleArray77);
        double double79 = graggBulirschStoerIntegrator78.getCurrentStepStart();
        double double80 = graggBulirschStoerIntegrator78.getCurrentStepStart();
        double double81 = graggBulirschStoerIntegrator78.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction82 = null;
        graggBulirschStoerIntegrator78.addSwitchingFunction(switchingFunction82, (double) (byte) 10, 1.0d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler87 = graggBulirschStoerIntegrator78.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler87);
        boolean boolean89 = stepHandler87.requiresDenseOutput();
        boolean boolean90 = stepHandler87.requiresDenseOutput();
        stepHandler87.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.0d) + "'", double81 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 1, (double) '4');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 1, 0.0d, (double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) '#', (int) (short) 1, 0.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction69, (double) (short) 100, 100.0d, (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction74, 10.0d, 31.209033090201576d, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler63);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double22 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setOrderControl((int) (short) -1, (-0.0d), 100.0d);
        double double27 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction28, 18.708286933869708d, (double) ' ', (int) (short) 0);
        double double33 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray54, doubleArray70);
        graggBulirschStoerIntegrator72.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator72.setInterpolationControl(false, (int) '4');
        double double81 = graggBulirschStoerIntegrator72.getCurrentSignedStepsize();
        double double82 = graggBulirschStoerIntegrator72.getMinStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator87.setInitialStepSize((double) 10L);
        double double90 = graggBulirschStoerIntegrator87.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator87.getStepHandler();
        graggBulirschStoerIntegrator72.setStepHandler(stepHandler91);
        double double93 = graggBulirschStoerIntegrator72.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator72.getStepHandler();
        boolean boolean95 = stepHandler94.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler94);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 10.0d + "'", double82 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray66, doubleArray82);
        boolean boolean85 = switchingFunctionsHandler0.reset(3.1622776601683795d, doubleArray82);
        double double86 = switchingFunctionsHandler0.getEventTime();
        boolean boolean87 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator88 = null;
        boolean boolean89 = switchingFunctionsHandler0.evaluateStep(stepInterpolator88);
        double double90 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        boolean boolean92 = switchingFunctionsHandler0.evaluateStep(stepInterpolator91);
        boolean boolean93 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction94 = null;
        switchingFunctionsHandler0.add(switchingFunction94, (-1.0d), (double) 100, (-1));
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        double[] doubleArray6 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray6, doubleArray23);
        double double28 = graggBulirschStoerIntegrator27.getCurrentStepStart();
        double double29 = graggBulirschStoerIntegrator27.getCurrentStepStart();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double35 = switchingFunctionsHandler34.getEventTime();
        double[] doubleArray43 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean44 = switchingFunctionsHandler34.reset((double) (byte) 1, doubleArray43);
        double[] doubleArray48 = new double[] { 100.0f, 100 };
        boolean boolean49 = switchingFunctionsHandler34.reset(Double.NaN, doubleArray48);
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray48, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray50, doubleArray66);
        graggBulirschStoerIntegrator68.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator68.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator68.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator68.getStepHandler();
        double double82 = graggBulirschStoerIntegrator68.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator68.getStepHandler();
        double double84 = graggBulirschStoerIntegrator68.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator68.getStepHandler();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler85);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction87 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction87, (double) (short) 100, 5.916079783099616d, 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction92 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction92, (double) 0.0f, 9.898464007679532d, (int) (byte) 1);
        graggBulirschStoerIntegrator19.setInitialStepSize(0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(stepHandler76);
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler85);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray47 = null;
        switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray47);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, 17.78279410038923d, 35.0d, (int) (byte) 0);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler0.add(switchingFunction55, 98.48857801796105d, 31.622776601683793d, (int) (short) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, Double.NaN, 17.78279410038923d, (double) ' ');
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(52.0d, 20.400469235504897d, 42.661458015403085d, (double) 100.0f);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 1, (int) (byte) 10, (double) (-1L));
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 0, 9.898464007679532d, (double) 100);
        double double55 = graggBulirschStoerIntegrator38.getMaxStep();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        stepHandler46.handleStep(stepInterpolator47, true);
        java.lang.Class<?> wildcardClass50 = stepHandler46.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        integratorException8.addSuppressed((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray24 = integratorException8.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException8);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        java.lang.String str28 = integratorException27.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray12);
        java.lang.Throwable[] throwableArray18 = derivativeException17.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 0, 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray49, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray51, doubleArray67);
        graggBulirschStoerIntegrator69.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator69.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator69.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator69.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator89 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator89.getStepHandler();
        graggBulirschStoerIntegrator69.setStepHandler(stepHandler90);
        boolean boolean92 = stepHandler90.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler90);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Throwable[] throwableArray8 = derivativeException3.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.String str10 = derivativeException3.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str10, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.Throwable[] throwableArray8 = integratorException7.getSuppressed();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        double double7 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler0.reset((double) (byte) -1, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler0.add(switchingFunction32, (double) (-1.0f), 3.1622776601683795d, 1);
        double double37 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String str5 = derivativeException3.getPattern();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.String str20 = derivativeException17.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray27 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Throwable[] throwableArray32 = derivativeException25.getSuppressed();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 1, (double) '4');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 1, 0.0d, (double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        double double64 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) (short) 100, 5.916079783099616d, (int) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, (double) '#', (double) (-1.0f));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 42.661458015403085d, (double) 100, (int) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(9.898464007679532d, 9.848857801796104d, 2.0d, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator64.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler65);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(stepHandler65);
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        boolean boolean44 = switchingFunctionsHandler0.stop();
        boolean boolean45 = switchingFunctionsHandler0.stop();
        boolean boolean46 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction47 = null;
        switchingFunctionsHandler0.add(switchingFunction47, 100.0d, 17.752843424574987d, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException27);
        derivativeException17.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.Throwable[] throwableArray33 = derivativeException32.getSuppressed();
        java.lang.Object[] objArray34 = derivativeException32.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", objArray34);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray15 = derivativeException14.getArguments();
        java.lang.String str16 = derivativeException14.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str16, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        double[] doubleArray40 = new double[] { 100.0f, 100 };
        boolean boolean41 = switchingFunctionsHandler26.reset(Double.NaN, doubleArray40);
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray40, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) 10, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray18, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray66, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 100L, doubleArray18, doubleArray66);
        graggBulirschStoerIntegrator85.setStepsizeControl((double) (-1), (double) 'a', (double) (byte) -1, (double) ' ');
        graggBulirschStoerIntegrator85.setStabilityCheck(false, 3, (int) (short) 100, 5.477225575051661d);
        org.apache.commons.math.ode.StepHandler stepHandler96 = graggBulirschStoerIntegrator85.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(stepHandler96);
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) 0, (-1.0d), (int) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) ' ');
        double double52 = graggBulirschStoerIntegrator38.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        derivativeException14.addSuppressed((java.lang.Throwable) derivativeException20);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray23 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray25 = derivativeException24.getSuppressed();
        java.lang.Throwable[] throwableArray26 = derivativeException24.getSuppressed();
        java.lang.Object[] objArray27 = derivativeException24.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", objArray27);
        java.lang.String str29 = integratorException28.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer" + "'", str29, "org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInitialStepSize(100.0d);
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.Throwable[] throwableArray15 = derivativeException14.getSuppressed();
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException14);
        java.lang.String str17 = derivativeException14.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str17, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (byte) 1);
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) '4');
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 52.0d, (double) 1.0f);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator67.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator67.addSwitchingFunction(switchingFunction73, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator67.getStepHandler();
        boolean boolean79 = stepHandler78.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        stepHandler78.handleStep(stepInterpolator80, false);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler78);
        graggBulirschStoerIntegrator38.setInitialStepSize(31.622776601683793d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(stepHandler58);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        boolean boolean46 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler0.evaluateStep(stepInterpolator47);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 0.0d, 0.0d, (int) (short) 10);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        java.lang.Class<?> wildcardClass25 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getMinStep();
        double double51 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        java.lang.String str52 = graggBulirschStoerIntegrator42.getName();
        double double53 = graggBulirschStoerIntegrator42.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction54, 9.898464007679532d, 9.898464007679532d, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1.0d) + "'", double53 == (-1.0d));
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 100, (double) 100, (double) (byte) 0);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        java.lang.String str6 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str6, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) 10L, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) 1L, (double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, 1.7782794100389228d, (-0.0d), 10);
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1), 31.622776601683793d, (double) (byte) 0, 0.0d);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        double double53 = graggBulirschStoerIntegrator38.getMinStep();
        double double54 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 10, (double) (-1L), 17.320508075688775d);
        java.lang.String str59 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 3, 31.209033090201576d, 10);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 10, 59.16079783099616d, 17.78279410038923d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str59, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray23);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.Throwable[] throwableArray40 = derivativeException39.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        java.lang.String str42 = integratorException41.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException41);
        java.lang.String[] strArray55 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray55);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("", strArray68);
        derivativeException64.addSuppressed((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray80);
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray80);
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException82);
        derivativeException72.addSuppressed((java.lang.Throwable) derivativeException82);
        derivativeException60.addSuppressed((java.lang.Throwable) derivativeException82);
        java.lang.Object[] objArray86 = derivativeException82.getArguments();
        derivativeException43.addSuppressed((java.lang.Throwable) derivativeException82);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException82);
        java.lang.Object[] objArray89 = derivativeException82.getArguments();
        java.lang.String str90 = derivativeException82.getPattern();
        java.lang.String str91 = derivativeException82.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str90, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: " + "'", str91, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        java.lang.Object[] objArray17 = derivativeException16.getArguments();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[, hi!, hi!, hi!, hi!, hi!]");
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) 100, (double) (byte) 100, (double) (short) 0);
        graggBulirschStoerIntegrator4.setOrderControl(1, 35.0d, (double) 100);
        double double9 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double10 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, 0, (int) (byte) 1, 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 31.622776601683793d + "'", double9 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, 3, (int) 'a', (double) (byte) 100);
        java.lang.String str49 = graggBulirschStoerIntegrator42.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler44 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (short) 10, 10, (double) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler44);
        org.junit.Assert.assertNotNull(stepHandler48);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) 100L, (double) (-1.0f), (int) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        switchingFunctionsHandler0.add(switchingFunction8, (double) 3, 17.320508075688775d, 0);
        double[] doubleArray16 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        double[] doubleArray55 = new double[] { 100.0f, 100 };
        boolean boolean56 = switchingFunctionsHandler41.reset(Double.NaN, doubleArray55);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, 9.848857801796104d, doubleArray37, doubleArray55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean59 = switchingFunctionsHandler58.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler58.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler58.evaluateStep(stepInterpolator62);
        boolean boolean64 = switchingFunctionsHandler58.isEmpty();
        double double65 = switchingFunctionsHandler58.getEventTime();
        boolean boolean66 = switchingFunctionsHandler58.stop();
        double double67 = switchingFunctionsHandler58.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        double[] doubleArray87 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray85, doubleArray87);
        switchingFunctionsHandler58.stepAccepted((double) 100L, doubleArray87);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, (double) (byte) 100, doubleArray37, doubleArray87);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) '4', (double) (short) 100, doubleArray16, doubleArray87);
        boolean boolean92 = switchingFunctionsHandler0.reset(43.25307727072111d, doubleArray87);
        double double93 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.String str7 = derivativeException3.getPattern();
        java.lang.Object[] objArray8 = derivativeException3.getArguments();
        java.lang.Class<?> wildcardClass9 = objArray8.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.isEmpty();
        double[] doubleArray24 = new double[] {};
        switchingFunctionsHandler21.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler15.stepAccepted(5.916079783099616d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray24);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (double) (-1L), 0.0d, (int) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler34.evaluateStep(stepInterpolator35);
        boolean boolean37 = switchingFunctionsHandler34.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler34.add(switchingFunction38, (double) 0.0f, (double) 3, (int) (byte) 10);
        boolean boolean43 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray52 = new double[] { (short) 1, 3.1622776601683795d, '#', 0.0d, 0.0d };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double56 = switchingFunctionsHandler55.getEventTime();
        double[] doubleArray64 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean65 = switchingFunctionsHandler55.reset((double) (byte) 1, doubleArray64);
        double[] doubleArray69 = new double[] { 100.0f, 100 };
        boolean boolean70 = switchingFunctionsHandler55.reset(Double.NaN, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double74 = switchingFunctionsHandler73.getEventTime();
        double[] doubleArray82 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean83 = switchingFunctionsHandler73.reset((double) (byte) 1, doubleArray82);
        double[] doubleArray87 = new double[] { 100.0f, 100 };
        boolean boolean88 = switchingFunctionsHandler73.reset(Double.NaN, doubleArray87);
        double[] doubleArray89 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray87, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray69, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator92 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 0, 10.0d, doubleArray52, doubleArray89);
        boolean boolean93 = switchingFunctionsHandler34.reset(1.0d, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) 100L, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[1.0, 3.1622776601683795, 35.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        java.lang.Throwable[] throwableArray13 = derivativeException12.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException12.addSuppressed((java.lang.Throwable) derivativeException26);
        java.lang.Object[] objArray28 = derivativeException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray28);
        java.lang.Object[] objArray30 = integratorException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray30);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(10, (double) '#', (double) 100.0f);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, 1.0d, (double) (-1), (-1));
        double double65 = graggBulirschStoerIntegrator38.getMinStep();
        double double66 = graggBulirschStoerIntegrator38.getMaxStep();
        double double67 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 10.0d + "'", double65 == 10.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) 100, (double) (byte) 100, (double) (short) 0);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, 3, (int) (short) 1, (double) 1L);
        double double12 = graggBulirschStoerIntegrator4.getMaxStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator17 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        double double18 = graggBulirschStoerIntegrator17.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double22 = switchingFunctionsHandler21.getEventTime();
        double[] doubleArray30 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean31 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray30);
        double[] doubleArray35 = new double[] { 100.0f, 100 };
        boolean boolean36 = switchingFunctionsHandler21.reset(Double.NaN, doubleArray35);
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray35, doubleArray37);
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean44 = stepHandler43.requiresDenseOutput();
        boolean boolean45 = stepHandler43.requiresDenseOutput();
        stepHandler43.reset();
        graggBulirschStoerIntegrator17.setStepHandler(stepHandler43);
        double double48 = graggBulirschStoerIntegrator17.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator17.addSwitchingFunction(switchingFunction49, (double) 2, 0.0d, (int) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator17.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler54);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 31.622776601683793d + "'", double6 == 31.622776601683793d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) -1, (double) 3, (double) (-1.0f), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 2, (int) (byte) 10);
        java.lang.String str31 = graggBulirschStoerIntegrator19.getName();
        org.apache.commons.math.ode.StepHandler stepHandler32 = graggBulirschStoerIntegrator19.getStepHandler();
        java.lang.String str33 = graggBulirschStoerIntegrator19.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str33, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str10 = derivativeException9.getPattern();
        java.lang.String str11 = derivativeException9.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str11, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray7);
        java.lang.String str14 = derivativeException13.getPattern();
        java.lang.Throwable[] throwableArray15 = derivativeException13.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction46, (double) (byte) 10, 1.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction51, (double) (short) -1, (double) (byte) 10, 10);
        double double56 = graggBulirschStoerIntegrator42.getMaxStep();
        graggBulirschStoerIntegrator42.setInitialStepSize(4.161791450287818d);
        graggBulirschStoerIntegrator42.setInitialStepSize((double) (short) -1);
        graggBulirschStoerIntegrator42.setStepsizeControl(3.1622776601683795d, 17.88854381999832d, 2.0d, 1.7320508075688772d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100.0f, 3.1622776601683795d, 5.477225575051661d, (double) (-1L));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        graggBulirschStoerIntegrator29.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler34 = graggBulirschStoerIntegrator29.getStepHandler();
        boolean boolean35 = stepHandler34.requiresDenseOutput();
        boolean boolean36 = stepHandler34.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler34);
        double double38 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertNotNull(stepHandler34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String str23 = derivativeException22.getPattern();
        java.lang.Object[] objArray24 = derivativeException22.getArguments();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray28);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        derivativeException30.addSuppressed((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray43 = derivativeException42.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException42);
        java.lang.Object[] objArray45 = derivativeException42.getArguments();
        java.lang.Throwable[] throwableArray46 = derivativeException42.getSuppressed();
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.String str48 = derivativeException22.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (-1L), 52.0d, 35.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler26 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, (int) (short) 1);
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) (byte) 100, 17.78279410038923d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler26);
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (byte) 10, 5.916079783099616d, 10);
        double double10 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (double) 3, 31.622776601683793d, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (-1.0d), (double) (byte) -1, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double double24 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray46, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray46, doubleArray72);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler76 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double77 = switchingFunctionsHandler76.getEventTime();
        double[] doubleArray85 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean86 = switchingFunctionsHandler76.reset((double) (byte) 1, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (double) 10, doubleArray46, doubleArray85);
        boolean boolean88 = switchingFunctionsHandler22.reset((double) 'a', doubleArray85);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) (-1), doubleArray85);
        boolean boolean90 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.Throwable[] throwableArray8 = derivativeException7.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException10);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        double double4 = switchingFunctionsHandler0.getEventTime();
        double double5 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double8 = switchingFunctionsHandler7.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler7.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        boolean boolean23 = switchingFunctionsHandler12.isEmpty();
        double double24 = switchingFunctionsHandler12.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction25 = null;
        switchingFunctionsHandler12.add(switchingFunction25, (double) 100L, (double) 1.0f, (int) (short) -1);
        boolean boolean30 = switchingFunctionsHandler12.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler32.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        switchingFunctionsHandler32.stepAccepted((double) (short) 10, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler32.reset((double) 0L, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler12.reset((double) (byte) 10, doubleArray67);
        boolean boolean71 = switchingFunctionsHandler7.reset((double) 0L, doubleArray67);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray67);
        boolean boolean73 = switchingFunctionsHandler0.stop();
        boolean boolean74 = switchingFunctionsHandler0.stop();
        boolean boolean75 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler0.add(switchingFunction76, 97.0d, (double) (-1L), 3);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (byte) 1);
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, 9.848857801796104d, (-0.0d), (int) '4');
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.Object[] objArray5 = derivativeException3.getArguments();
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        java.lang.Throwable[] throwableArray15 = derivativeException14.getSuppressed();
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException31);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException43);
        java.lang.Object[] objArray45 = derivativeException43.getArguments();
        java.lang.Throwable[] throwableArray46 = derivativeException43.getSuppressed();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray53 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException51);
        java.lang.Object[] objArray55 = derivativeException51.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("", objArray55);
        java.lang.String[] strArray65 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("", strArray65);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException74);
        derivativeException66.addSuppressed((java.lang.Throwable) derivativeException75);
        java.lang.Throwable[] throwableArray77 = derivativeException66.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray77);
        integratorException56.addSuppressed((java.lang.Throwable) integratorException78);
        derivativeException43.addSuppressed((java.lang.Throwable) integratorException56);
        integratorException32.addSuppressed((java.lang.Throwable) integratorException56);
        integratorException18.addSuppressed((java.lang.Throwable) integratorException32);
        java.lang.String str83 = integratorException18.toString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str83, "org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) '#', (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, 10.0d, 0.0d, (int) (short) 100);
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler62);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray27, doubleArray43);
        graggBulirschStoerIntegrator45.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator45.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator45.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator45.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator45.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        stepHandler61.handleStep(stepInterpolator62, false);
        stepHandler61.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler61);
        double double67 = graggBulirschStoerIntegrator4.getMinStep();
        double double68 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double71 = switchingFunctionsHandler70.getEventTime();
        double[] doubleArray79 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean80 = switchingFunctionsHandler70.reset((double) (byte) 1, doubleArray79);
        double[] doubleArray84 = new double[] { 100.0f, 100 };
        boolean boolean85 = switchingFunctionsHandler70.reset(Double.NaN, doubleArray84);
        double[] doubleArray86 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray84, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray66, doubleArray86);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator88.getStepHandler();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler89);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator42.getStepHandler();
        double double92 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(stepHandler89);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException21);
        derivativeException11.addSuppressed((java.lang.Throwable) derivativeException21);
        java.lang.Throwable[] throwableArray24 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray33);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        derivativeException41.addSuppressed((java.lang.Throwable) derivativeException47);
        derivativeException37.addSuppressed((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException50);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray63);
        integratorException50.addSuppressed((java.lang.Throwable) derivativeException68);
        integratorException26.addSuppressed((java.lang.Throwable) integratorException50);
        org.apache.commons.math.ode.IntegratorException integratorException71 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException26);
        java.lang.String str72 = integratorException71.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer" + "'", str72, "org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction27, (double) 10.0f, (double) (-1L), 0);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator36 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator36.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler41 = graggBulirschStoerIntegrator36.getStepHandler();
        boolean boolean42 = stepHandler41.requiresDenseOutput();
        stepHandler41.reset();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler41);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        double double58 = graggBulirschStoerIntegrator57.getMaxStep();
        graggBulirschStoerIntegrator57.setOrderControl((int) (short) 10, (double) 100, (double) 1);
        double double63 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1.0d) + "'", double58 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double26 = graggBulirschStoerIntegrator19.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        double[] doubleArray48 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray46, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray48, doubleArray64);
        graggBulirschStoerIntegrator66.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator66.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double74 = graggBulirschStoerIntegrator66.getMaxStep();
        java.lang.String str75 = graggBulirschStoerIntegrator66.getName();
        org.apache.commons.math.ode.StepHandler stepHandler76 = graggBulirschStoerIntegrator66.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        stepHandler76.handleStep(stepInterpolator77, false);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator81 = null;
        stepHandler76.handleStep(stepInterpolator81, false);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler76);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize(6.928935924497552d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator59.addSwitchingFunction(switchingFunction60, (double) (-1), (-1.0d), 0);
        java.lang.String str65 = graggBulirschStoerIntegrator59.getName();
        graggBulirschStoerIntegrator59.setOrderControl((int) 'a', (double) (byte) 100, (double) (short) 10);
        graggBulirschStoerIntegrator59.setOrderControl((-1), 3.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator59.getStepHandler();
        boolean boolean75 = stepHandler74.requiresDenseOutput();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler74);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str65, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10, (double) (short) 1, (int) (byte) 10);
        double double65 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler66 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler67 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStepsizeControl(35.0d, (double) 2, (double) 10, 17.320508075688775d);
        double double73 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler74 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator38.setStepHandler(stepHandler74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(stepHandler66);
        org.junit.Assert.assertNotNull(stepHandler67);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler36 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler37 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator42.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        double double48 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, (double) 'a', (double) 100, 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        graggBulirschStoerIntegrator74.addSwitchingFunction(switchingFunction75, (double) 100.0f, (double) 0, 0);
        double double80 = graggBulirschStoerIntegrator74.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator74.setStabilityCheck(true, 1, (int) (byte) 0, (-1.0d));
        graggBulirschStoerIntegrator74.setStepsizeControl(0.0d, 1.0d, (double) (short) -1, (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator74.getStepHandler();
        stepHandler91.reset();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler91);
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler91);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(stepHandler36);
        org.junit.Assert.assertNotNull(stepHandler37);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(stepHandler91);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 2, 23.40347319320716d, (double) (short) 1, (double) 0.0f);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 6.841560230416328d + "'", double5 == 6.841560230416328d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        double[] doubleArray46 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray44, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        double[] doubleArray84 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray82, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator86 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray64, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray44, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler0.reset((double) (-1), doubleArray44);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        switchingFunctionsHandler0.add(switchingFunction89, (double) (byte) -1, (double) 100.0f, (int) (short) 10);
        boolean boolean94 = switchingFunctionsHandler0.stop();
        boolean boolean95 = switchingFunctionsHandler0.stop();
        double double96 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        double double11 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        java.lang.String str12 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double[] doubleArray26 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean27 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray26);
        double[] doubleArray31 = new double[] { 100.0f, 100 };
        boolean boolean32 = switchingFunctionsHandler17.reset(Double.NaN, doubleArray31);
        double[] doubleArray33 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator34 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray31, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator51 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray33, doubleArray49);
        graggBulirschStoerIntegrator51.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator51.addSwitchingFunction(switchingFunction57, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator51.getStepHandler();
        stepHandler62.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler62);
        double double65 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 5.477225575051661d + "'", double11 == 5.477225575051661d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str12, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) '#', (double) 100L);
        double double55 = graggBulirschStoerIntegrator38.getMinStep();
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double57 = graggBulirschStoerIntegrator38.getMaxStep();
        double[] doubleArray60 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double62 = switchingFunctionsHandler61.getEventTime();
        double[] doubleArray70 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean71 = switchingFunctionsHandler61.reset((double) (byte) 1, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray60, doubleArray70);
        org.apache.commons.math.ode.StepHandler stepHandler73 = graggBulirschStoerIntegrator72.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler73);
        java.lang.String str75 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 10.0d + "'", double55 == 10.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(stepHandler73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        graggBulirschStoerIntegrator38.setOrderControl((int) ' ', (double) '4', 100.0d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, (double) (short) 10, (double) 1L, 3);
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double59 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler60 = graggBulirschStoerIntegrator38.getStepHandler();
        double double61 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler62 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator38.setStepHandler(stepHandler62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String str5 = derivativeException3.getPattern();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.String str20 = derivativeException17.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray27 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray40 = derivativeException38.getArguments();
        java.lang.Throwable[] throwableArray41 = derivativeException38.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        derivativeException25.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Object[] objArray44 = derivativeException42.getArguments();
        java.lang.String[] strArray53 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        java.lang.Throwable[] throwableArray57 = derivativeException55.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException55);
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException59);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray73);
        derivativeException42.addSuppressed((java.lang.Throwable) derivativeException80);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", strArray8);
        java.lang.String str16 = derivativeException15.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer" + "'", str16, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction62, (double) 1, (double) 'a', (int) 'a');
        java.lang.String str67 = graggBulirschStoerIntegrator61.getName();
        graggBulirschStoerIntegrator61.setInitialStepSize(5.477225575051661d);
        java.lang.String str70 = graggBulirschStoerIntegrator61.getName();
        double double71 = graggBulirschStoerIntegrator61.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str70, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.916079783099616d, (double) (short) 100, (-0.0d), (double) 10.0f);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 5.916079783099616d + "'", double5 == 5.916079783099616d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (-1), 3.1622776601683795d, (double) (byte) -1, (double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, 0.0d, (double) (byte) 1, (int) (short) -1);
        double[] doubleArray57 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray57, doubleArray67);
        org.apache.commons.math.ode.StepHandler stepHandler70 = graggBulirschStoerIntegrator69.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler70);
        stepHandler70.reset();
        boolean boolean73 = stepHandler70.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(stepHandler70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler21.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler21.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler21.evaluateStep(stepInterpolator27);
        boolean boolean29 = switchingFunctionsHandler21.isEmpty();
        boolean boolean30 = switchingFunctionsHandler21.stop();
        boolean boolean31 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler33.isEmpty();
        double double45 = switchingFunctionsHandler33.getEventTime();
        boolean boolean46 = switchingFunctionsHandler33.stop();
        double[] doubleArray54 = new double[] { 0.0f, (-1L), (-0.0d), (-1.0f) };
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1, (double) '#', doubleArray54, doubleArray71);
        boolean boolean76 = switchingFunctionsHandler33.reset(5.916079783099616d, doubleArray71);
        boolean boolean77 = switchingFunctionsHandler21.reset((double) 2, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted(15.298193747370034d, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, -1.0, -0.0, -1.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        derivativeException7.addSuppressed((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.Object[] objArray20 = derivativeException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        java.lang.Object[] objArray22 = derivativeException19.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", objArray22);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        java.lang.Throwable[] throwableArray31 = derivativeException30.getSuppressed();
        java.lang.Throwable[] throwableArray32 = derivativeException30.getSuppressed();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) 1L, (double) (short) 0, 0);
        double double60 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double61 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double62 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1.0f);
        org.apache.commons.math.ode.StepHandler stepHandler65 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str66 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str66, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.Object[] objArray10 = derivativeException9.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", objArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!]");
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) 1L, (double) (short) 0, 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 1.0f, 0.0d, (int) ' ');
        graggBulirschStoerIntegrator38.setOrderControl(10, 0.0d, (double) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        double[] doubleArray44 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray25, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray2, doubleArray25);
        graggBulirschStoerIntegrator46.setInterpolationControl(false, (int) (short) 0);
        graggBulirschStoerIntegrator46.setStepsizeControl((double) (-1.0f), (-1.0d), (double) (byte) 10, 32.0d);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator46.getStepHandler();
        double double56 = graggBulirschStoerIntegrator46.getMinStep();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 3.0d + "'", double56 == 3.0d);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler2.evaluateStep(stepInterpolator3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler2.add(switchingFunction5, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler11.reset(0.0d, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler2.reset((double) (byte) 100, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        double[] doubleArray62 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator63 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray60, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator64 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray42, doubleArray62);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator65 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) -1, (-0.0d), doubleArray22, doubleArray62);
        double double66 = graggBulirschStoerIntegrator65.getCurrentStepStart();
        double double67 = graggBulirschStoerIntegrator65.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator65.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler69 = graggBulirschStoerIntegrator65.getStepHandler();
        java.lang.String str70 = graggBulirschStoerIntegrator65.getName();
        org.apache.commons.math.ode.StepHandler stepHandler71 = graggBulirschStoerIntegrator65.getStepHandler();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(stepHandler68);
        org.junit.Assert.assertNotNull(stepHandler69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str70, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler71);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset(100.0d, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        switchingFunctionsHandler0.add(switchingFunction48, (double) 100, (double) (-1), (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        java.lang.Object[] objArray10 = derivativeException8.getArguments();
        java.lang.Throwable[] throwableArray11 = derivativeException8.getSuppressed();
        java.lang.Object[] objArray12 = derivativeException8.getArguments();
        java.lang.Object[] objArray13 = derivativeException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", objArray13);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, , , hi!, ]");
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        double[] doubleArray58 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray56, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray38, doubleArray58);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray18, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction62, (double) 1, (double) 'a', (int) 'a');
        java.lang.String str67 = graggBulirschStoerIntegrator61.getName();
        graggBulirschStoerIntegrator61.setInitialStepSize((double) (byte) 0);
        graggBulirschStoerIntegrator61.setOrderControl((int) ' ', (double) (short) 10, 100.0d);
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator61.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction75 = null;
        graggBulirschStoerIntegrator61.addSwitchingFunction(switchingFunction75, (double) ' ', 31.622776601683793d, 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str67, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler74);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str57 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler18.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        switchingFunctionsHandler18.stepAccepted((double) (short) 10, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray16, doubleArray40);
        graggBulirschStoerIntegrator43.setStepsizeControl((double) (byte) 1, (double) (byte) 0, 3.1622776601683795d, (double) (byte) 1);
        double double49 = graggBulirschStoerIntegrator43.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction50, (double) 0.0f, (double) (short) -1, (int) (byte) 1);
        double double55 = graggBulirschStoerIntegrator43.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction63, 3.1622776601683795d, (double) 1, (int) 'a');
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStabilityCheck(true, (int) (byte) 100, (int) (short) 0, 97.0d);
        double double74 = graggBulirschStoerIntegrator57.getMinStep();
        java.lang.String str75 = graggBulirschStoerIntegrator57.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction76, (double) (byte) 0, (double) 0L, (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str75, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.isEmpty();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        switchingFunctionsHandler5.stepAccepted((double) (short) 10, doubleArray27);
        switchingFunctionsHandler0.stepAccepted((double) 100.0f, doubleArray27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler0.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler0.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler0.getEventTime();
        boolean boolean36 = switchingFunctionsHandler0.isEmpty();
        boolean boolean37 = switchingFunctionsHandler0.stop();
        boolean boolean38 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInitialStepSize((double) (byte) 10);
        double double8 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction9, 42.661458015403085d, 10.0d, (int) (short) -1);
        java.lang.String str14 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.0d) + "'", double8 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str14, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1.0f), (double) 100, (int) (byte) 1);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 100);
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double57 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, 97.0d, 13.92838827718412d, 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (-1.0d), 32.0d, (int) '#');
        boolean boolean16 = switchingFunctionsHandler0.stop();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, 9.848857801796104d, (double) 1L, (int) (byte) -1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String str5 = derivativeException3.getPattern();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException3.addSuppressed((java.lang.Throwable) derivativeException17);
        java.lang.String str20 = derivativeException17.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray27 = derivativeException25.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException21.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        java.lang.Object[] objArray40 = derivativeException38.getArguments();
        java.lang.Throwable[] throwableArray41 = derivativeException38.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        derivativeException25.addSuppressed((java.lang.Throwable) derivativeException42);
        java.lang.Object[] objArray44 = derivativeException42.getArguments();
        java.lang.String str45 = derivativeException42.getPattern();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, , , hi!, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, , , hi!, ]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, 0.0d, (double) (byte) 10, 3.1622776601683795d);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (byte) -1);
        double double8 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction9, 17.752843424574987d, (double) (byte) 100, (int) ' ');
        double double14 = graggBulirschStoerIntegrator4.getMinStep();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.0d + "'", double8 == 3.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 3.0d + "'", double14 == 3.0d);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        double double44 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler64.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler64.add(switchingFunction67, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler73.reset(0.0d, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler64.reset((double) (byte) 100, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray62, doubleArray84);
        boolean boolean89 = switchingFunctionsHandler0.reset(0.0d, doubleArray62);
        boolean boolean90 = switchingFunctionsHandler0.isEmpty();
        boolean boolean91 = switchingFunctionsHandler0.isEmpty();
        boolean boolean92 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double53 = switchingFunctionsHandler52.getEventTime();
        double[] doubleArray61 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean62 = switchingFunctionsHandler52.reset((double) (byte) 1, doubleArray61);
        double[] doubleArray66 = new double[] { 100.0f, 100 };
        boolean boolean67 = switchingFunctionsHandler52.reset(Double.NaN, doubleArray66);
        double[] doubleArray68 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray66, doubleArray68);
        graggBulirschStoerIntegrator69.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler74 = graggBulirschStoerIntegrator69.getStepHandler();
        boolean boolean75 = stepHandler74.requiresDenseOutput();
        stepHandler74.reset();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler74);
        java.lang.String str78 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl(38.3753555559862d, (double) 'a', (double) (byte) 1, (double) 10L);
        double double84 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str85 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
        org.junit.Assert.assertNotNull(stepHandler74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str78, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (byte) 100, (int) '#', (double) 2);
        graggBulirschStoerIntegrator42.setInterpolationControl(false, (int) (byte) 0);
        double double52 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double53 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (byte) 10, 0, 3.0d);
        double double59 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.0d) + "'", double59 == (-0.0d));
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        java.lang.String str21 = graggBulirschStoerIntegrator19.getName();
        double double22 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double23 = graggBulirschStoerIntegrator19.getMinStep();
        double double24 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (short) 0, (int) 'a', 6.841560230416328d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str21, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 10, (int) (short) 1, 4.161791450287818d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        double double74 = graggBulirschStoerIntegrator73.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator73.setStepsizeControl((double) 100L, (double) 10.0f, (double) 100, (double) '#');
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator73.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler80);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        stepHandler80.handleStep(stepInterpolator82, true);
        boolean boolean85 = stepHandler80.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction26, (double) 100, (double) 0, 0);
        java.lang.String str31 = graggBulirschStoerIntegrator19.getName();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) 1, 100.0d, Double.NaN, (-0.0d));
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (short) 1, 2.0d, (double) (-1), 31.622776601683793d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator46.setInitialStepSize((double) 10L);
        graggBulirschStoerIntegrator46.setStabilityCheck(true, (int) (byte) 0, (int) (byte) 100, (double) (short) -1);
        graggBulirschStoerIntegrator46.setInitialStepSize((-0.0d));
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator60 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator60.setInitialStepSize((double) 10L);
        double double63 = graggBulirschStoerIntegrator60.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator60.getStepHandler();
        graggBulirschStoerIntegrator46.setStepHandler(stepHandler64);
        stepHandler64.reset();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler64);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str31, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(stepHandler64);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler27 = graggBulirschStoerIntegrator19.getStepHandler();
        stepHandler27.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler27);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double[] doubleArray55 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean56 = switchingFunctionsHandler46.reset((double) (byte) 1, doubleArray55);
        double[] doubleArray60 = new double[] { 100.0f, 100 };
        boolean boolean61 = switchingFunctionsHandler46.reset(Double.NaN, doubleArray60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double65 = switchingFunctionsHandler64.getEventTime();
        double[] doubleArray73 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean74 = switchingFunctionsHandler64.reset((double) (byte) 1, doubleArray73);
        double[] doubleArray78 = new double[] { 100.0f, 100 };
        boolean boolean79 = switchingFunctionsHandler64.reset(Double.NaN, doubleArray78);
        double[] doubleArray80 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator81 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray78, doubleArray80);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator82 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray60, doubleArray80);
        org.apache.commons.math.ode.StepHandler stepHandler83 = graggBulirschStoerIntegrator82.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator84 = null;
        stepHandler83.handleStep(stepInterpolator84, true);
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler83);
        graggBulirschStoerIntegrator42.setStepsizeControl(5.477225575051661d, (double) 0.0f, 5.477225575051661d, (double) 100);
        double double93 = graggBulirschStoerIntegrator42.getMinStep();
        double double94 = graggBulirschStoerIntegrator42.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler95 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler96 = graggBulirschStoerIntegrator42.getStepHandler();
        double double97 = graggBulirschStoerIntegrator42.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
        org.junit.Assert.assertNotNull(stepHandler83);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler95);
        org.junit.Assert.assertNotNull(stepHandler96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-1.0d) + "'", double97 == (-1.0d));
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 100L, (double) (byte) -1, (double) 100, (double) 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction10, (double) (short) 10, 0.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction15, 1.0d, 10.0d, (int) (short) 0);
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) '4', 0, (double) (byte) 100);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 0);
        graggBulirschStoerIntegrator4.setOrderControl((int) 'a', 0.0d, 0.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray50, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray52, doubleArray68);
        graggBulirschStoerIntegrator70.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator70.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator70.getStepHandler();
        graggBulirschStoerIntegrator70.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator70.setInitialStepSize((double) (-1L));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction85 = null;
        graggBulirschStoerIntegrator70.addSwitchingFunction(switchingFunction85, 1.0d, Double.NaN, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler90 = graggBulirschStoerIntegrator70.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        stepHandler90.handleStep(stepInterpolator91, true);
        boolean boolean94 = stepHandler90.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler90);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(stepHandler78);
        org.junit.Assert.assertNotNull(stepHandler90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) (short) 100, (double) (byte) 1, (double) 'a');
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) ' ', (int) (short) 100, 52.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        java.lang.Object[] objArray25 = derivativeException23.getArguments();
        java.lang.Throwable[] throwableArray26 = derivativeException23.getSuppressed();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        java.lang.Object[] objArray33 = derivativeException31.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException31);
        java.lang.Object[] objArray35 = derivativeException31.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("", objArray35);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException54);
        derivativeException46.addSuppressed((java.lang.Throwable) derivativeException55);
        java.lang.Throwable[] throwableArray57 = derivativeException46.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray57);
        integratorException36.addSuppressed((java.lang.Throwable) integratorException58);
        derivativeException23.addSuppressed((java.lang.Throwable) integratorException36);
        integratorException12.addSuppressed((java.lang.Throwable) integratorException36);
        java.lang.Object[] objArray62 = integratorException36.getArguments();
        java.lang.Object[] objArray63 = integratorException36.getArguments();
        java.lang.Object[] objArray64 = integratorException36.getArguments();
        java.lang.String str65 = integratorException36.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.commons.math.ode.IntegratorException: " + "'", str65, "org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 2, 0.0d, (-0.0d));
        graggBulirschStoerIntegrator4.setInterpolationControl(false, 3);
        double double8 = graggBulirschStoerIntegrator4.getMaxStep();
        graggBulirschStoerIntegrator4.setInitialStepSize(6.841560230416328d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.0d + "'", double8 == 2.0d);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize(1.0d);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setInitialStepSize(9.848857801796104d);
        double double65 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction66, 31.209033090201576d, 17.88854381999832d, (int) '4');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        double[] doubleArray67 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray65, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double70 = switchingFunctionsHandler69.getEventTime();
        double[] doubleArray78 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean79 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray78);
        double[] doubleArray83 = new double[] { 100.0f, 100 };
        boolean boolean84 = switchingFunctionsHandler69.reset(Double.NaN, doubleArray83);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray67, doubleArray83);
        graggBulirschStoerIntegrator85.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator85.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler93 = graggBulirschStoerIntegrator85.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler93);
        stepHandler93.reset();
        boolean boolean96 = stepHandler93.requiresDenseOutput();
        stepHandler93.reset();
        boolean boolean98 = stepHandler93.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException6);
        java.lang.Object[] objArray8 = derivativeException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", objArray8);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 10, (double) 100, (double) (-1), 32.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        double[] doubleArray29 = new double[] { 100.0f, 100 };
        boolean boolean30 = switchingFunctionsHandler15.reset(Double.NaN, doubleArray29);
        double[] doubleArray31 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator32 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray29, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double34 = switchingFunctionsHandler33.getEventTime();
        double[] doubleArray42 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean43 = switchingFunctionsHandler33.reset((double) (byte) 1, doubleArray42);
        double[] doubleArray47 = new double[] { 100.0f, 100 };
        boolean boolean48 = switchingFunctionsHandler33.reset(Double.NaN, doubleArray47);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator49 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray31, doubleArray47);
        graggBulirschStoerIntegrator49.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double55 = graggBulirschStoerIntegrator49.getCurrentStepStart();
        graggBulirschStoerIntegrator49.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.StepHandler stepHandler61 = graggBulirschStoerIntegrator49.getStepHandler();
        boolean boolean62 = stepHandler61.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator63 = null;
        stepHandler61.handleStep(stepInterpolator63, true);
        boolean boolean66 = stepHandler61.requiresDenseOutput();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler61);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        stepHandler61.handleStep(stepInterpolator68, true);
        stepHandler61.reset();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(stepHandler61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 100);
        double double53 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setStepsizeControl(6.841560230416328d, 10.0d, 5.916079783099616d, 6.841560230416328d);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str60 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str60, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray12);
        java.lang.String str20 = integratorException19.getPattern();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: " + "'", str20, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", strArray18);
        java.lang.String str31 = derivativeException30.toString();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: " + "'", str31, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        double[] doubleArray36 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator37 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray34, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray16, doubleArray36);
        org.apache.commons.math.ode.StepHandler stepHandler39 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler40 = graggBulirschStoerIntegrator38.getStepHandler();
        java.lang.String str41 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl(13.33521432163324d, 32.0d, 2.514866859365871d, 3.0d);
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]");
        org.junit.Assert.assertNotNull(stepHandler39);
        org.junit.Assert.assertNotNull(stepHandler40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str41, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(100.0d, 0.0d, (double) 2, (double) 100);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler6 = graggBulirschStoerIntegrator4.getStepHandler();
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, 100.0d, (double) 1.0f, (double) 10);
        graggBulirschStoerIntegrator4.setInterpolationControl(false, 0);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 5.477225575051661d, Double.NaN, (double) (byte) 1);
        double double5 = graggBulirschStoerIntegrator4.getMinStep();
        double double6 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler30.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray50, doubleArray52);
        switchingFunctionsHandler30.stepAccepted((double) (short) 10, doubleArray52);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) ' ', (double) 0.0f, doubleArray26, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        double[] doubleArray72 = new double[] { 100.0f, 100 };
        boolean boolean73 = switchingFunctionsHandler58.reset(Double.NaN, doubleArray72);
        double[] doubleArray74 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray72, doubleArray74);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        graggBulirschStoerIntegrator75.addSwitchingFunction(switchingFunction76, (double) 100.0f, (double) 0, 0);
        double double81 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double82 = graggBulirschStoerIntegrator75.getMaxStep();
        graggBulirschStoerIntegrator75.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator75.getStepHandler();
        stepHandler85.reset();
        boolean boolean87 = stepHandler85.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator88 = null;
        stepHandler85.handleStep(stepInterpolator88, false);
        graggBulirschStoerIntegrator55.setStepHandler(stepHandler85);
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler85);
        stepHandler85.reset();
        boolean boolean94 = stepHandler85.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1.0d) + "'", double82 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getMaxStep();
        java.lang.String str47 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler48 = graggBulirschStoerIntegrator38.getStepHandler();
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str47, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(17.320508075688775d, 0.0d, (double) 0.0f, 31.209033090201576d);
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        integratorException22.addSuppressed((java.lang.Throwable) derivativeException33);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException(throwable35);
        java.lang.Object[] objArray37 = derivativeException36.getArguments();
        java.lang.Throwable[] throwableArray38 = derivativeException36.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        java.lang.Object[] objArray41 = integratorException40.getArguments();
        integratorException22.addSuppressed((java.lang.Throwable) integratorException40);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray5);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException9);
        java.lang.Object[] objArray11 = integratorException9.getArguments();
        java.lang.Object[] objArray13 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException16);
        java.lang.String str18 = integratorException16.getPattern();
        integratorException9.addSuppressed((java.lang.Throwable) integratorException16);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException30);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        java.lang.Object[] objArray37 = derivativeException35.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException35);
        derivativeException30.addSuppressed((java.lang.Throwable) derivativeException35);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException35);
        java.lang.String[] strArray55 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray55);
        derivativeException35.addSuppressed((java.lang.Throwable) derivativeException62);
        integratorException16.addSuppressed((java.lang.Throwable) derivativeException62);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str18, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler0.evaluateStep(stepInterpolator11);
        double double13 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setInitialStepSize((double) (byte) 100);
        double double79 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator75.getStepHandler();
        boolean boolean81 = stepHandler80.requiresDenseOutput();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.1622776601683795d + "'", double76 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 3.1622776601683795d + "'", double79 == 3.1622776601683795d);
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) -1, (-1.0d), (double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 0);
        double double53 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 59.16079783099616d, 0.0d, (int) (byte) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 10);
        java.lang.String str13 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (byte) -1);
        double double17 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler18 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler19 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str13, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler18);
        org.junit.Assert.assertNotNull(stepHandler19);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler47 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double55 = switchingFunctionsHandler54.getEventTime();
        double[] doubleArray63 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean64 = switchingFunctionsHandler54.reset((double) (byte) 1, doubleArray63);
        double[] doubleArray68 = new double[] { 100.0f, 100 };
        boolean boolean69 = switchingFunctionsHandler54.reset(Double.NaN, doubleArray68);
        double[] doubleArray70 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray68, doubleArray70);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double73 = switchingFunctionsHandler72.getEventTime();
        double[] doubleArray81 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean82 = switchingFunctionsHandler72.reset((double) (byte) 1, doubleArray81);
        double[] doubleArray86 = new double[] { 100.0f, 100 };
        boolean boolean87 = switchingFunctionsHandler72.reset(Double.NaN, doubleArray86);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray70, doubleArray86);
        double[] doubleArray89 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray70, doubleArray89);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator90.getStepHandler();
        boolean boolean92 = stepHandler91.requiresDenseOutput();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(stepHandler47);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double[] doubleArray29 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean30 = switchingFunctionsHandler20.reset((double) (byte) 1, doubleArray29);
        double[] doubleArray34 = new double[] { 100.0f, 100 };
        boolean boolean35 = switchingFunctionsHandler20.reset(Double.NaN, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator56 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray34, doubleArray54);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator57 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (-1.0d), doubleArray16, doubleArray34);
        graggBulirschStoerIntegrator57.setOrderControl((int) '#', (double) (-1.0f), (double) (byte) -1);
        double double62 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 100, 0.0d, 0.0d, (double) 0L);
        double double68 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator57.addSwitchingFunction(switchingFunction69, 100.0d, 35.0d, (int) (short) 100);
        graggBulirschStoerIntegrator57.setStepsizeControl((double) 1L, (double) (short) 10, (double) 0.0f, (double) '4');
        double double79 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        double double80 = graggBulirschStoerIntegrator57.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler81 = graggBulirschStoerIntegrator57.getStepHandler();
        boolean boolean82 = stepHandler81.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(stepHandler81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction46, (double) (byte) 100, 0.0d, (int) 'a');
        java.lang.String str51 = graggBulirschStoerIntegrator42.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction52 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction52, (double) 'a', 1.7320508075688772d, (int) (byte) 0);
        graggBulirschStoerIntegrator42.setStepsizeControl((double) 3, 15.18214344379753d, (double) 10, 97.0d);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) -1, (double) 0, (double) (byte) 1);
        graggBulirschStoerIntegrator66.setStepsizeControl((double) 0, (double) 0L, (double) 'a', (double) (short) 100);
        double double72 = graggBulirschStoerIntegrator66.getMaxStep();
        graggBulirschStoerIntegrator66.setStabilityCheck(true, (int) (byte) 0, (int) (short) 0, 31.622776601683793d);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator66.getStepHandler();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler78);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1.0d) + "'", double72 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException4);
        java.lang.Object[] objArray6 = derivativeException4.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("", objArray6);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        java.lang.Throwable[] throwableArray19 = derivativeException18.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray37);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray37);
        java.lang.Object[] objArray47 = derivativeException46.getArguments();
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException46);
        integratorException7.addSuppressed((java.lang.Throwable) derivativeException46);
        java.lang.String str50 = derivativeException46.getPattern();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[hi!]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[, hi!, hi!, hi!, hi!, hi!]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!" + "'", str50, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!");
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray16);
        java.lang.Class<?> wildcardClass27 = strArray16.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1L, 9.848857801796104d, (-1));
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10L, (double) 10L, (double) (short) 0, (double) (short) 0);
        double double5 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        double double7 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double8 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (-1));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 100);
        double double48 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction49, (double) 100L, (double) (short) -1, (int) ' ');
        double double54 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, 10);
        double double58 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction59, (double) ' ', (-0.0d), 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, (double) 100.0f, (double) 10, 9.848857801796104d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (short) 100, 0.0d, 3);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double45 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, 2);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(10, (double) '#', (double) 100.0f);
        double double54 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        double double26 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setStabilityCheck(true, (int) (byte) 0, 2, 20.400469235504897d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str45 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        double double47 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction48 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction48, (double) (-1L), 0.0d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str45, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        double double77 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setStepsizeControl(5.916079783099616d, (double) (byte) 100, (double) 100, 31.622776601683793d);
        double double83 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double84 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        java.lang.String str85 = graggBulirschStoerIntegrator75.getName();
        double double86 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double87 = graggBulirschStoerIntegrator75.getMinStep();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.1622776601683795d + "'", double76 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 3.1622776601683795d + "'", double77 == 3.1622776601683795d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3.1622776601683795d + "'", double84 == 3.1622776601683795d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException14);
        java.lang.Object[] objArray16 = derivativeException14.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("", objArray16);
        java.lang.Object[] objArray18 = integratorException17.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", objArray18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException19);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException19);
        java.lang.String str23 = derivativeException8.toString();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str23, "org.apache.commons.math.ode.DerivativeException: ");
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction53, 0.0d, (double) (byte) 1, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction58, (double) 0, (double) (short) 100, (int) (short) 100);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, 0.0d, 32.0d, 100.0d);
        double double5 = graggBulirschStoerIntegrator4.getMaxStep();
        double double6 = graggBulirschStoerIntegrator4.getMaxStep();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        org.apache.commons.math.ode.StepHandler stepHandler5 = graggBulirschStoerIntegrator4.getStepHandler();
        double double6 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        double double7 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction8 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction8, 5.916079783099616d, (double) (byte) 10, (int) (short) 1);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) (short) 1, 15.298193747370034d, (-0.0d), (double) '#');
        graggBulirschStoerIntegrator4.setStabilityCheck(false, (int) '4', (int) (byte) -1, 0.0d);
        org.junit.Assert.assertNotNull(stepHandler5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, 2);
        double double49 = graggBulirschStoerIntegrator42.getMinStep();
        graggBulirschStoerIntegrator42.setInitialStepSize(32.0d);
        graggBulirschStoerIntegrator42.setStabilityCheck(false, (int) (short) 0, (int) '#', (double) 10L);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator61 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator61.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator61.getStepHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        stepHandler63.handleStep(stepInterpolator64, true);
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler63);
        double double68 = graggBulirschStoerIntegrator42.getMaxStep();
        graggBulirschStoerIntegrator42.setInitialStepSize(8.366600265340756d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1.0d) + "'", double68 == (-1.0d));
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        double[] doubleArray69 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator70 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray67, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        double[] doubleArray85 = new double[] { 100.0f, 100 };
        boolean boolean86 = switchingFunctionsHandler71.reset(Double.NaN, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray69, doubleArray85);
        graggBulirschStoerIntegrator87.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double92 = graggBulirschStoerIntegrator87.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler93 = graggBulirschStoerIntegrator87.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler93);
        double double95 = graggBulirschStoerIntegrator38.getMinStep();
        java.lang.String str96 = graggBulirschStoerIntegrator38.getName();
        double double97 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler93);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 10.0d + "'", double95 == 10.0d);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str96, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double50 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double[] doubleArray66 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean67 = switchingFunctionsHandler57.reset((double) (byte) 1, doubleArray66);
        double[] doubleArray71 = new double[] { 100.0f, 100 };
        boolean boolean72 = switchingFunctionsHandler57.reset(Double.NaN, doubleArray71);
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray71, doubleArray73);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        double[] doubleArray89 = new double[] { 100.0f, 100 };
        boolean boolean90 = switchingFunctionsHandler75.reset(Double.NaN, doubleArray89);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator91 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray73, doubleArray89);
        double[] doubleArray92 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator93 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray73, doubleArray92);
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator93.getStepHandler();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler94);
        double double96 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setInterpolationControl(true, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.0d) + "'", double50 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException7);
        java.lang.String str9 = derivativeException7.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException10);
        java.lang.Object[] objArray12 = integratorException10.getArguments();
        java.lang.String str13 = integratorException10.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException10);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) ' ', (double) 0L, (double) (short) 10, (double) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) '#', (double) 'a', (int) '#');
        java.lang.String str55 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, (double) (-1.0f), (double) '4', (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        double[] doubleArray28 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double[] doubleArray44 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean45 = switchingFunctionsHandler35.reset((double) (byte) 1, doubleArray44);
        double[] doubleArray49 = new double[] { 100.0f, 100 };
        boolean boolean50 = switchingFunctionsHandler35.reset(Double.NaN, doubleArray49);
        double[] doubleArray51 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator52 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray49, doubleArray51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double54 = switchingFunctionsHandler53.getEventTime();
        double[] doubleArray62 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean63 = switchingFunctionsHandler53.reset((double) (byte) 1, doubleArray62);
        double[] doubleArray67 = new double[] { 100.0f, 100 };
        boolean boolean68 = switchingFunctionsHandler53.reset(Double.NaN, doubleArray67);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator69 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray51, doubleArray67);
        double[] doubleArray70 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray51, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 100L, doubleArray28, doubleArray51);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler0.evaluateStep(stepInterpolator74);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction76 = null;
        switchingFunctionsHandler0.add(switchingFunction76, (double) '4', 32.0d, (int) ' ');
        boolean boolean81 = switchingFunctionsHandler0.isEmpty();
        boolean boolean82 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1L));
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator38.getStepHandler();
        double double56 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str57 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, (int) (short) 0, 32.0d);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 0);
        double double66 = graggBulirschStoerIntegrator38.getMaxStep();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str57, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        double[] doubleArray38 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator39 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray36, doubleArray38);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double[] doubleArray51 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean52 = switchingFunctionsHandler42.reset((double) (byte) 1, doubleArray51);
        double[] doubleArray56 = new double[] { 100.0f, 100 };
        boolean boolean57 = switchingFunctionsHandler42.reset(Double.NaN, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator78 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray56, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray36, doubleArray76);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator80 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) '#', doubleArray16, doubleArray36);
        graggBulirschStoerIntegrator80.setStabilityCheck(true, (int) 'a', (int) (short) 1, 0.0d);
        double double86 = graggBulirschStoerIntegrator80.getCurrentStepStart();
        graggBulirschStoerIntegrator80.setInitialStepSize((double) 10.0f);
        graggBulirschStoerIntegrator80.setOrderControl(10, (double) (byte) -1, 35.0d);
        double double93 = graggBulirschStoerIntegrator80.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 5.916079783099616d + "'", double93 == 5.916079783099616d);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset(100.0d, doubleArray28);
        double double48 = switchingFunctionsHandler0.getEventTime();
        double double49 = switchingFunctionsHandler0.getEventTime();
        boolean boolean50 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler0.add(switchingFunction51, 4.161791450287818d, (double) 100L, 3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException28);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction45, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, (double) 2, 100.0d, (int) 'a');
        graggBulirschStoerIntegrator38.setStepsizeControl(0.0d, 3.1622776601683795d, (double) 3, 100.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(20.400469235504897d, (double) 1, (double) (-1.0f), (double) 3);
        java.lang.Class<?> wildcardClass65 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double59 = switchingFunctionsHandler58.getEventTime();
        double[] doubleArray67 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean68 = switchingFunctionsHandler58.reset((double) (byte) 1, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler56.reset(0.0d, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler0.reset((double) '#', doubleArray67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator71 = null;
        boolean boolean72 = switchingFunctionsHandler0.evaluateStep(stepInterpolator71);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        switchingFunctionsHandler0.add(switchingFunction73, 59.16079783099616d, (double) (short) 0, (int) ' ');
        boolean boolean78 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean6 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset(100.0d, doubleArray28);
        double double48 = switchingFunctionsHandler0.getEventTime();
        boolean boolean49 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, (double) (byte) -1, (double) (byte) -1, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler0.add(switchingFunction55, (double) '#', (double) 10, (int) 'a');
        boolean boolean60 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 1, 35.0d, (double) 1.0f);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (short) 1);
        double double9 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 5.656854249492381d + "'", double9 == 5.656854249492381d);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) 100L, (double) 1.0f, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 0.0d, 0.0d, (int) (short) 10);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        boolean boolean25 = switchingFunctionsHandler0.stop();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, Double.NaN, (double) (short) 1, (int) (short) 1);
        double double49 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str51 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str51, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, (double) (byte) 0, 12.368586720951603d, (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler52);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        java.lang.Object[] objArray9 = derivativeException8.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray9);
        java.lang.Object[] objArray11 = integratorException10.getArguments();
        java.lang.String str12 = integratorException10.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, (double) '#', (double) '#', (-1));
        double double56 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) -1, 0.0d, (double) '#');
        double double61 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100L, (double) 10.0f, (double) '4', (double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 1, (double) 1L, 100);
        graggBulirschStoerIntegrator4.setStepsizeControl(97.0d, 12.368586720951603d, 4.449373890263558d, (double) (-1.0f));
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, Double.NaN, (double) (short) 1, (int) (short) 1);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, 10, 100, 10.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(52.0d, (-1.0d), (double) 0, (double) 0.0f);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        stepHandler59.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        stepHandler59.handleStep(stepInterpolator61, false);
        boolean boolean64 = stepHandler59.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        double double45 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 10.0f, (double) (short) 100, 10.0d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 2, (double) 3);
        double double57 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl((int) (byte) 0, (double) (short) 1, (double) (byte) 1);
        double double62 = graggBulirschStoerIntegrator38.getMinStep();
        double double63 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 10.0d + "'", double62 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(stepHandler64);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 1L, (double) 1, 1);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler13.reset(0.0d, doubleArray24);
        boolean boolean27 = switchingFunctionsHandler0.reset(52.0d, doubleArray24);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        switchingFunctionsHandler0.add(switchingFunction28, (-1.0d), (double) 1.0f, (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler0.add(switchingFunction33, 0.0d, (double) (byte) 1, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction38 = null;
        switchingFunctionsHandler0.add(switchingFunction38, 31.209033090201576d, (double) 100.0f, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException19);
        derivativeException9.addSuppressed((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        java.lang.Object[] objArray29 = derivativeException27.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("", objArray29);
        java.lang.Object[] objArray31 = integratorException30.getArguments();
        java.lang.Object[] objArray32 = integratorException30.getArguments();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        java.lang.String str38 = derivativeException36.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        integratorException30.addSuppressed((java.lang.Throwable) derivativeException36);
        derivativeException22.addSuppressed((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray43 = derivativeException42.getArguments();
        java.lang.Object[] objArray44 = derivativeException42.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[hi!]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        java.lang.String str56 = graggBulirschStoerIntegrator38.getName();
        double double57 = graggBulirschStoerIntegrator38.getMinStep();
        double double58 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double59 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, (double) 10L, 97.0d, (int) (byte) 100);
        double double65 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction66, (double) 10.0f, 42.661458015403085d, (int) (byte) -1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str56, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 10.0d + "'", double57 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler5.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double[] doubleArray38 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean39 = switchingFunctionsHandler29.reset((double) (byte) 1, doubleArray38);
        double[] doubleArray43 = new double[] { 100.0f, 100 };
        boolean boolean44 = switchingFunctionsHandler29.reset(Double.NaN, doubleArray43);
        double[] doubleArray45 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray43, doubleArray45);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator47 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray25, doubleArray45);
        switchingFunctionsHandler5.stepAccepted((double) ' ', doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double52 = switchingFunctionsHandler51.getEventTime();
        double[] doubleArray60 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean61 = switchingFunctionsHandler51.reset((double) (byte) 1, doubleArray60);
        double[] doubleArray65 = new double[] { 100.0f, 100 };
        boolean boolean66 = switchingFunctionsHandler51.reset(Double.NaN, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double70 = switchingFunctionsHandler69.getEventTime();
        double[] doubleArray78 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean79 = switchingFunctionsHandler69.reset((double) (byte) 1, doubleArray78);
        double[] doubleArray83 = new double[] { 100.0f, 100 };
        boolean boolean84 = switchingFunctionsHandler69.reset(Double.NaN, doubleArray83);
        double[] doubleArray85 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator86 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray83, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator87 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray65, doubleArray85);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.916079783099616d, 52.0d, doubleArray45, doubleArray65);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray45);
        boolean boolean90 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        boolean boolean92 = switchingFunctionsHandler0.evaluateStep(stepInterpolator91);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator93 = null;
        boolean boolean94 = switchingFunctionsHandler0.evaluateStep(stepInterpolator93);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStepsizeControl((double) (-1L), 52.0d, 35.0d, (double) 0L);
        org.apache.commons.math.ode.StepHandler stepHandler26 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setInterpolationControl(false, (int) (short) 1);
        java.lang.String str30 = graggBulirschStoerIntegrator19.getName();
        double double31 = graggBulirschStoerIntegrator19.getMaxStep();
        double double32 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setStepsizeControl(56.23413251903491d, 6.841560230416328d, (double) 0.0f, 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(stepHandler26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str30, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.0d) + "'", double31 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getMaxStep();
        double double53 = graggBulirschStoerIntegrator38.getMaxStep();
        double double54 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator59 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 10, (double) (short) 0, (double) 100, (double) 1L);
        graggBulirschStoerIntegrator59.setOrderControl((int) (byte) 0, (double) (short) 0, (double) (byte) 100);
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator59.getStepHandler();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler64);
        graggBulirschStoerIntegrator38.setStepsizeControl(7.211102550927978d, 52.0d, 5.477225575051661d, (double) 10.0f);
        java.lang.String str71 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 10.0d + "'", double54 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str71, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction20, (double) 100.0f, (double) 0, 0);
        double double25 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        double double26 = graggBulirschStoerIntegrator19.getMaxStep();
        graggBulirschStoerIntegrator19.setInitialStepSize((double) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler29 = graggBulirschStoerIntegrator19.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler30 = graggBulirschStoerIntegrator19.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1.0d) + "'", double26 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler29);
        org.junit.Assert.assertNotNull(stepHandler30);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        double[] doubleArray40 = new double[] { 100.0f, 100 };
        boolean boolean41 = switchingFunctionsHandler26.reset(Double.NaN, doubleArray40);
        double[] doubleArray42 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray40, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) 10, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0.0f, (double) '4', doubleArray18, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double[] doubleArray77 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean78 = switchingFunctionsHandler68.reset((double) (byte) 1, doubleArray77);
        double[] doubleArray82 = new double[] { 100.0f, 100 };
        boolean boolean83 = switchingFunctionsHandler68.reset(Double.NaN, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray66, doubleArray82);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator85 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 100L, doubleArray18, doubleArray66);
        graggBulirschStoerIntegrator85.setInterpolationControl(true, 100);
        org.apache.commons.math.ode.StepHandler stepHandler89 = graggBulirschStoerIntegrator85.getStepHandler();
        stepHandler89.reset();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        stepHandler89.handleStep(stepInterpolator91, false);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator94 = null;
        stepHandler89.handleStep(stepInterpolator94, false);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(stepHandler89);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        double double57 = switchingFunctionsHandler0.getEventTime();
        boolean boolean58 = switchingFunctionsHandler0.stop();
        boolean boolean59 = switchingFunctionsHandler0.isEmpty();
        double double60 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', (double) (byte) 1, 1.0d);
        graggBulirschStoerIntegrator38.setStepsizeControl(100.0d, (double) 2, (double) (-1), (double) (short) 1);
        double double59 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double63 = switchingFunctionsHandler62.getEventTime();
        double[] doubleArray71 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean72 = switchingFunctionsHandler62.reset((double) (byte) 1, doubleArray71);
        double[] doubleArray76 = new double[] { 100.0f, 100 };
        boolean boolean77 = switchingFunctionsHandler62.reset(Double.NaN, doubleArray76);
        double[] doubleArray78 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator79 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray76, doubleArray78);
        graggBulirschStoerIntegrator79.setOrderControl((int) (byte) -1, 0.0d, (double) (byte) -1);
        org.apache.commons.math.ode.StepHandler stepHandler84 = graggBulirschStoerIntegrator79.getStepHandler();
        stepHandler84.reset();
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler84);
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', 56.23413251903491d, 97.0d);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean92 = stepHandler91.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertNotNull(stepHandler84);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler0.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double12 = switchingFunctionsHandler11.getEventTime();
        double[] doubleArray20 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean21 = switchingFunctionsHandler11.reset((double) (byte) 1, doubleArray20);
        double[] doubleArray25 = new double[] { 100.0f, 100 };
        boolean boolean26 = switchingFunctionsHandler11.reset(Double.NaN, doubleArray25);
        double[] doubleArray27 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator28 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray25, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double32 = switchingFunctionsHandler31.getEventTime();
        double[] doubleArray40 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean41 = switchingFunctionsHandler31.reset((double) (byte) 1, doubleArray40);
        double[] doubleArray45 = new double[] { 100.0f, 100 };
        boolean boolean46 = switchingFunctionsHandler31.reset(Double.NaN, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double[] doubleArray58 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean59 = switchingFunctionsHandler49.reset((double) (byte) 1, doubleArray58);
        double[] doubleArray63 = new double[] { 100.0f, 100 };
        boolean boolean64 = switchingFunctionsHandler49.reset(Double.NaN, doubleArray63);
        double[] doubleArray65 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator66 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray63, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray45, doubleArray65);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator68 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, 10.0d, doubleArray25, doubleArray65);
        switchingFunctionsHandler0.stepAccepted((double) '#', doubleArray65);
        boolean boolean70 = switchingFunctionsHandler0.isEmpty();
        boolean boolean71 = switchingFunctionsHandler0.isEmpty();
        boolean boolean72 = switchingFunctionsHandler0.isEmpty();
        double double73 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        boolean boolean75 = switchingFunctionsHandler0.evaluateStep(stepInterpolator74);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, (double) 10L, 10.0d, (int) ' ');
        double double55 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        graggBulirschStoerIntegrator42.setOrderControl((int) (byte) 100, 17.88854381999832d, 2.0d);
        graggBulirschStoerIntegrator42.setStepsizeControl(100.0d, 17.78279410038923d, 5.477225575051661d, 42.661458015403085d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction65 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction65, 15.18214344379753d, 56.23413251903491d, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction70, 6.841560230416328d, 10.0d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction50, (double) 10L, 10.0d, (int) ' ');
        java.lang.String str55 = graggBulirschStoerIntegrator42.getName();
        double double56 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler57 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setOrderControl(0, 0.0d, 15.298193747370034d);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str55, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(stepHandler57);
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException8);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        integratorException8.addSuppressed((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray24 = derivativeException22.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStepsizeControl(18.708286933869708d, (double) 'a', 5.477225575051661d, (double) (byte) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler54);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        java.lang.String str14 = integratorException13.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException13);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        integratorException13.addSuppressed((java.lang.Throwable) integratorException26);
        java.lang.Object[] objArray28 = integratorException13.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        java.lang.Object[] objArray16 = derivativeException15.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        derivativeException8.addSuppressed((java.lang.Throwable) derivativeException24);
        java.lang.String str26 = derivativeException24.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException24);
        java.lang.Throwable[] throwableArray28 = derivativeException24.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: hi!" + "'", str26, "org.apache.commons.math.ode.IntegratorException: hi!");
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable[] throwableArray23 = derivativeException20.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, (double) 100L, (double) 1L, (int) (short) -1);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (short) 100);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 0, 1, (double) 2);
        java.lang.String str66 = graggBulirschStoerIntegrator38.getName();
        double double67 = graggBulirschStoerIntegrator38.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler68 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str66, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertNotNull(stepHandler68);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(5.916079783099616d, Double.NaN, 32.0d, 6.841560230416328d);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (byte) 100, 97.0d, (int) (byte) 1);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 3, (-1.0d), (double) ' ');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) (-1), (-1.0d), 0);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        graggBulirschStoerIntegrator4.setOrderControl(0, 0.0d, (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction15, 100.0d, (double) (byte) -1, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction20, 1.7782794100389228d, 1.0d, 100);
        java.lang.Class<?> wildcardClass25 = graggBulirschStoerIntegrator4.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        boolean boolean25 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, 100.0d, 42.661458015403085d, (int) (short) 10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = switchingFunctionsHandler0.evaluateStep(stepInterpolator31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 23.40347319320716d, 2.0d, (int) '4');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) '#');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        org.apache.commons.math.ode.StepHandler stepHandler20 = graggBulirschStoerIntegrator19.getStepHandler();
        double double21 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        graggBulirschStoerIntegrator19.addSwitchingFunction(switchingFunction22, 10.0d, (double) 0.0f, (int) (short) 1);
        graggBulirschStoerIntegrator19.setStepsizeControl(5.477225575051661d, 31.622776601683793d, (double) (byte) 100, Double.NaN);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double[] doubleArray47 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean48 = switchingFunctionsHandler38.reset((double) (byte) 1, doubleArray47);
        double[] doubleArray52 = new double[] { 100.0f, 100 };
        boolean boolean53 = switchingFunctionsHandler38.reset(Double.NaN, doubleArray52);
        double[] doubleArray54 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator55 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray52, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator72 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray54, doubleArray70);
        double[] doubleArray73 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator74 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray54, doubleArray73);
        double double75 = graggBulirschStoerIntegrator74.getCurrentStepStart();
        double double76 = graggBulirschStoerIntegrator74.getCurrentStepStart();
        graggBulirschStoerIntegrator74.setStabilityCheck(true, (int) (short) 10, (int) 'a', (double) 1.0f);
        double double82 = graggBulirschStoerIntegrator74.getMinStep();
        java.lang.String str83 = graggBulirschStoerIntegrator74.getName();
        graggBulirschStoerIntegrator74.setStabilityCheck(false, (int) (short) 0, 1, (double) 100L);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        graggBulirschStoerIntegrator74.addSwitchingFunction(switchingFunction89, (-0.0d), 23.40347319320716d, 2);
        org.apache.commons.math.ode.StepHandler stepHandler94 = graggBulirschStoerIntegrator74.getStepHandler();
        boolean boolean95 = stepHandler94.requiresDenseOutput();
        graggBulirschStoerIntegrator19.setStepHandler(stepHandler94);
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertNotNull(stepHandler20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str83, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) (byte) 100, (double) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl(0, 100.0d, 17.320508075688775d);
        java.lang.String str61 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction62, (-1.0d), (double) 100, 2);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator71 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, 3.1622776601683795d, (double) 10, 0.0d);
        graggBulirschStoerIntegrator71.setOrderControl(0, (double) 2, (double) 0);
        double[] doubleArray78 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double80 = switchingFunctionsHandler79.getEventTime();
        double[] doubleArray88 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean89 = switchingFunctionsHandler79.reset((double) (byte) 1, doubleArray88);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator90 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray78, doubleArray88);
        org.apache.commons.math.ode.StepHandler stepHandler91 = graggBulirschStoerIntegrator90.getStepHandler();
        boolean boolean92 = stepHandler91.requiresDenseOutput();
        graggBulirschStoerIntegrator71.setStepHandler(stepHandler91);
        graggBulirschStoerIntegrator38.setStepHandler(stepHandler91);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator95 = null;
        stepHandler91.handleStep(stepInterpolator95, true);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(stepHandler91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        java.lang.String str76 = graggBulirschStoerIntegrator75.getName();
        java.lang.String str77 = graggBulirschStoerIntegrator75.getName();
        double double78 = graggBulirschStoerIntegrator75.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        graggBulirschStoerIntegrator75.addSwitchingFunction(switchingFunction79, 0.0d, 23.40347319320716d, (int) (byte) 100);
        double double84 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler85 = graggBulirschStoerIntegrator75.getStepHandler();
        stepHandler85.reset();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str76, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str77, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(stepHandler85);
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean52 = stepHandler51.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        stepHandler51.handleStep(stepInterpolator53, true);
        stepHandler51.reset();
        boolean boolean57 = stepHandler51.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction41 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction41, 3.1622776601683795d, (double) (short) 10, 3);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 0);
        double double49 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, 17.78279410038923d, 15.298193747370034d, (int) (byte) 10);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double[] doubleArray35 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean36 = switchingFunctionsHandler26.reset((double) (byte) 1, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler0.reset((double) 0L, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double[] doubleArray50 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean51 = switchingFunctionsHandler41.reset((double) (byte) 1, doubleArray50);
        boolean boolean52 = switchingFunctionsHandler39.reset(0.0d, doubleArray50);
        boolean boolean53 = switchingFunctionsHandler0.reset(0.0d, doubleArray50);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        switchingFunctionsHandler0.add(switchingFunction56, 1.7782794100389228d, 17.88854381999832d, 0);
        boolean boolean61 = switchingFunctionsHandler0.stop();
        double double62 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 100.0f, (double) (-1), (double) (byte) 0, (double) (-1));
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        double[] doubleArray19 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean20 = switchingFunctionsHandler10.reset((double) (byte) 1, doubleArray19);
        double[] doubleArray24 = new double[] { 100.0f, 100 };
        boolean boolean25 = switchingFunctionsHandler10.reset(Double.NaN, doubleArray24);
        double[] doubleArray26 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator27 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray24, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double[] doubleArray37 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean38 = switchingFunctionsHandler28.reset((double) (byte) 1, doubleArray37);
        double[] doubleArray42 = new double[] { 100.0f, 100 };
        boolean boolean43 = switchingFunctionsHandler28.reset(Double.NaN, doubleArray42);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator44 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray26, doubleArray42);
        graggBulirschStoerIntegrator44.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str50 = graggBulirschStoerIntegrator44.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction51, (double) 1.0f, 0.0d, (-1));
        org.apache.commons.math.ode.StepHandler stepHandler56 = graggBulirschStoerIntegrator44.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction57 = null;
        graggBulirschStoerIntegrator44.addSwitchingFunction(switchingFunction57, (double) 'a', (double) (-1L), 10);
        org.apache.commons.math.ode.StepHandler stepHandler62 = graggBulirschStoerIntegrator44.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator44.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler63);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        stepHandler63.handleStep(stepInterpolator65, false);
        boolean boolean68 = stepHandler63.requiresDenseOutput();
        boolean boolean69 = stepHandler63.requiresDenseOutput();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler56);
        org.junit.Assert.assertNotNull(stepHandler62);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction39, 1.0d, (double) '4', (int) ' ');
        double double44 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (-1), 3.1622776601683795d, (double) (byte) -1, (double) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction50, 0.0d, (double) (byte) 1, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction55, (double) '4', 9.848857801796104d, 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, 10);
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) ' ');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler2.add(switchingFunction3, (double) '4', (double) (byte) 100, (int) (byte) 1);
        boolean boolean8 = switchingFunctionsHandler2.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double15 = switchingFunctionsHandler14.getEventTime();
        double[] doubleArray23 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean24 = switchingFunctionsHandler14.reset((double) (byte) 1, doubleArray23);
        double[] doubleArray28 = new double[] { 100.0f, 100 };
        boolean boolean29 = switchingFunctionsHandler14.reset(Double.NaN, doubleArray28);
        double[] doubleArray30 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator31 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray28, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double33 = switchingFunctionsHandler32.getEventTime();
        double[] doubleArray41 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean42 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray41);
        double[] doubleArray46 = new double[] { 100.0f, 100 };
        boolean boolean47 = switchingFunctionsHandler32.reset(Double.NaN, doubleArray46);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator48 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray30, doubleArray46);
        boolean boolean49 = switchingFunctionsHandler2.reset(100.0d, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler50.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double57 = switchingFunctionsHandler56.getEventTime();
        double[] doubleArray65 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean66 = switchingFunctionsHandler56.reset((double) (byte) 1, doubleArray65);
        double[] doubleArray70 = new double[] { 100.0f, 100 };
        boolean boolean71 = switchingFunctionsHandler56.reset(Double.NaN, doubleArray70);
        double[] doubleArray72 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator73 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray70, doubleArray72);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray72);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator75 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 1.0f, (double) 10.0f, doubleArray30, doubleArray72);
        double double76 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        double double77 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator75.setStepsizeControl(5.916079783099616d, (double) (byte) 100, (double) 100, 31.622776601683793d);
        double double83 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double84 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        java.lang.String str85 = graggBulirschStoerIntegrator75.getName();
        double double86 = graggBulirschStoerIntegrator75.getCurrentStepStart();
        double double87 = graggBulirschStoerIntegrator75.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.1622776601683795d + "'", double76 == 3.1622776601683795d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 3.1622776601683795d + "'", double77 == 3.1622776601683795d);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 3.1622776601683795d + "'", double84 == 3.1622776601683795d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str85, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 3.1622776601683795d + "'", double87 == 3.1622776601683795d);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        double[] doubleArray16 = new double[] { 100.0f, 100 };
        boolean boolean17 = switchingFunctionsHandler2.reset(Double.NaN, doubleArray16);
        double[] doubleArray18 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator19 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray16, doubleArray18);
        double double20 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator19.setStabilityCheck(false, (int) (short) 100, (int) 'a', (double) (-1L));
        double double26 = graggBulirschStoerIntegrator19.getCurrentSignedStepsize();
        org.apache.commons.math.ode.StepHandler stepHandler27 = graggBulirschStoerIntegrator19.getStepHandler();
        graggBulirschStoerIntegrator19.setOrderControl(0, 0.0d, 6.928935924497552d);
        double double32 = graggBulirschStoerIntegrator19.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(stepHandler27);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Gragg-Bulirsch-Stoer", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        java.lang.String str20 = derivativeException17.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException" + "'", str20, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException");
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((-0.0d), (double) 0L, (double) (short) 100, (double) (byte) -1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, (double) 10, (double) 2, 10);
        java.lang.String str10 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str10, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("", strArray3);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        derivativeException19.addSuppressed((java.lang.Throwable) derivativeException25);
        derivativeException15.addSuppressed((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        derivativeException5.addSuppressed((java.lang.Throwable) derivativeException25);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException42);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException43);
        java.lang.String str45 = integratorException43.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException43);
        java.lang.String str47 = derivativeException46.getPattern();
        java.lang.String str48 = derivativeException46.getPattern();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setOrderControl((int) '#', (double) '#', (double) 100L);
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) (byte) 1, 1, (double) 100.0f);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction60 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction60, 72.11102550927978d, 20.400469235504897d, (int) 'a');
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (byte) 1);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(1.0d, (double) 100.0f, 6.841560230416328d, 13.33521432163324d);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (-1L), (double) (-1.0f), 4.161791450287818d, (double) 0L);
        graggBulirschStoerIntegrator4.setInterpolationControl(true, 0);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 3, (double) 1, (double) 100, (-1.0d));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 35.0d, (double) (byte) 10, (int) (short) 10);
        graggBulirschStoerIntegrator4.setStepsizeControl(18.708286933869708d, (double) (-1L), (double) 1L, (double) (short) 1);
        double double15 = graggBulirschStoerIntegrator4.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.7320508075688772d + "'", double15 == 1.7320508075688772d);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        double double46 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) (-1.0f), (double) (byte) 100, (double) (short) 10, (double) '4');
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction54, 52.0d, 32.0d, (int) '4');
        graggBulirschStoerIntegrator38.setOrderControl(2, 32.0d, 100.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) (short) 100);
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl(10, (double) 100, (double) 1.0f);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(35.0d, (double) 10.0f, 97.0d, (double) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double[] doubleArray18 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean19 = switchingFunctionsHandler9.reset((double) (byte) 1, doubleArray18);
        double[] doubleArray23 = new double[] { 100.0f, 100 };
        boolean boolean24 = switchingFunctionsHandler9.reset(Double.NaN, doubleArray23);
        double[] doubleArray25 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator26 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray23, doubleArray25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double28 = switchingFunctionsHandler27.getEventTime();
        double[] doubleArray36 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean37 = switchingFunctionsHandler27.reset((double) (byte) 1, doubleArray36);
        double[] doubleArray41 = new double[] { 100.0f, 100 };
        boolean boolean42 = switchingFunctionsHandler27.reset(Double.NaN, doubleArray41);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator43 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray25, doubleArray41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator43.addSwitchingFunction(switchingFunction44, 1.0d, (double) '4', (int) ' ');
        double double49 = graggBulirschStoerIntegrator43.getCurrentSignedStepsize();
        java.lang.String str50 = graggBulirschStoerIntegrator43.getName();
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator43.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction53, (double) 100, 15.18214344379753d, 100);
        org.apache.commons.math.ode.StepHandler stepHandler58 = graggBulirschStoerIntegrator4.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str50, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler58);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(0.0d, 3.0d, (double) (byte) 0, (double) (-1L));
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        double[] doubleArray40 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray38, doubleArray40);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray20, doubleArray40);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray40);
        double double44 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double49 = switchingFunctionsHandler48.getEventTime();
        double[] doubleArray57 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean58 = switchingFunctionsHandler48.reset((double) (byte) 1, doubleArray57);
        double[] doubleArray62 = new double[] { 100.0f, 100 };
        boolean boolean63 = switchingFunctionsHandler48.reset(Double.NaN, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator65 = null;
        boolean boolean66 = switchingFunctionsHandler64.evaluateStep(stepInterpolator65);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction67 = null;
        switchingFunctionsHandler64.add(switchingFunction67, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double76 = switchingFunctionsHandler75.getEventTime();
        double[] doubleArray84 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean85 = switchingFunctionsHandler75.reset((double) (byte) 1, doubleArray84);
        boolean boolean86 = switchingFunctionsHandler73.reset(0.0d, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler64.reset((double) (byte) 100, doubleArray84);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator88 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray62, doubleArray84);
        boolean boolean89 = switchingFunctionsHandler0.reset(0.0d, doubleArray62);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        switchingFunctionsHandler0.add(switchingFunction90, (double) 10.0f, 0.0d, (int) ' ');
        double double95 = switchingFunctionsHandler0.getEventTime();
        boolean boolean96 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double95));
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(15.18214344379753d, 5.623413251903491d, (double) (byte) 0, (double) (short) 100);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        java.lang.Throwable[] throwableArray19 = derivativeException18.getSuppressed();
        java.lang.Throwable[] throwableArray20 = derivativeException18.getSuppressed();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray27);
        derivativeException18.addSuppressed((java.lang.Throwable) derivativeException32);
        java.lang.Object[] objArray34 = derivativeException32.getArguments();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!]");
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double3 = switchingFunctionsHandler2.getEventTime();
        double[] doubleArray11 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean12 = switchingFunctionsHandler2.reset((double) (byte) 1, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.reset(0.0d, doubleArray11);
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler0.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray12 = derivativeException10.getArguments();
        java.lang.Throwable[] throwableArray13 = derivativeException10.getSuppressed();
        java.lang.String str14 = derivativeException10.getPattern();
        java.lang.Throwable[] throwableArray15 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray17 = derivativeException10.getArguments();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(13.33521432163324d, (double) 0, 9.898464007679532d, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction5, 12.368586720951603d, 31.622776601683793d, (-1));
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator4 = null;
        boolean boolean5 = switchingFunctionsHandler3.evaluateStep(stepInterpolator4);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler3.add(switchingFunction6, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler12.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler12.evaluateStep(stepInterpolator16);
        boolean boolean18 = switchingFunctionsHandler12.stop();
        double double19 = switchingFunctionsHandler12.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler12.evaluateStep(stepInterpolator20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double26 = switchingFunctionsHandler25.getEventTime();
        double[] doubleArray34 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean35 = switchingFunctionsHandler25.reset((double) (byte) 1, doubleArray34);
        double[] doubleArray39 = new double[] { 100.0f, 100 };
        boolean boolean40 = switchingFunctionsHandler25.reset(Double.NaN, doubleArray39);
        double[] doubleArray41 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray39, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler12.reset((double) (byte) -1, doubleArray39);
        boolean boolean44 = switchingFunctionsHandler3.reset(0.0d, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator45 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(18.708286933869708d, 0.0d, doubleArray2, doubleArray39);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator45.getStepHandler();
        graggBulirschStoerIntegrator45.setStabilityCheck(true, 2, (int) ' ', (double) '4');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException18);
        derivativeException10.addSuppressed((java.lang.Throwable) derivativeException19);
        java.lang.Throwable[] throwableArray21 = derivativeException10.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray21);
        java.lang.String str24 = integratorException23.getPattern();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray31 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException29);
        java.lang.Object[] objArray33 = derivativeException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", objArray33);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray43);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException52);
        derivativeException44.addSuppressed((java.lang.Throwable) derivativeException53);
        java.lang.Throwable[] throwableArray55 = derivativeException44.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray55);
        integratorException34.addSuppressed((java.lang.Throwable) integratorException56);
        integratorException23.addSuppressed((java.lang.Throwable) integratorException34);
        java.lang.String str59 = integratorException34.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException34);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.commons.math.ode.DerivativeException: " + "'", str24, "org.apache.commons.math.ode.DerivativeException: ");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) 10.0f, 10.0d, (double) '#');
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (short) 0);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 1, (double) '4');
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 1, 0.0d, (double) 3);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setStabilityCheck(true, (int) '#', (int) (short) 1, 0.0d);
        double double69 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStepsizeControl(97.0d, 56.23413251903491d, 6.928935924497552d, 5.656854249492381d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction44, (double) (byte) 100, (double) (-1L), (int) (byte) 1);
        org.apache.commons.math.ode.StepHandler stepHandler49 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) '4');
        graggBulirschStoerIntegrator38.setOrderControl(1, 4.161791450287818d, 35.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler49);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        double double43 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double44 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        double double45 = graggBulirschStoerIntegrator42.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator42.setOrderControl((int) 'a', (double) (-1.0f), (double) '4');
        org.apache.commons.math.ode.StepHandler stepHandler50 = graggBulirschStoerIntegrator42.getStepHandler();
        double double51 = graggBulirschStoerIntegrator42.getCurrentStepStart();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator42.getStepHandler();
        graggBulirschStoerIntegrator42.setInitialStepSize((double) 100L);
        org.apache.commons.math.ode.StepHandler stepHandler55 = graggBulirschStoerIntegrator42.getStepHandler();
        boolean boolean56 = stepHandler55.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-0.0d) + "'", double45 == (-0.0d));
        org.junit.Assert.assertNotNull(stepHandler50);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertNotNull(stepHandler55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) (-1));
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 1L, (double) (short) 10, (double) 100.0f, 1.7320508075688772d);
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        double double53 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        double double44 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1L);
        graggBulirschStoerIntegrator38.setOrderControl(0, (double) 10L, (double) (byte) 0);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        double double52 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str53 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str53, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.StepHandler stepHandler8 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setInterpolationControl(false, (int) (short) 1);
        org.apache.commons.math.ode.StepHandler stepHandler12 = graggBulirschStoerIntegrator4.getStepHandler();
        graggBulirschStoerIntegrator4.setStabilityCheck(true, (int) (byte) 0, (int) (short) 100, (double) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction18, (double) (byte) 0, (double) (byte) -1, (int) (short) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction23, 97.0d, 18.708286933869708d, (-1));
        org.apache.commons.math.ode.SwitchingFunction switchingFunction28 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction28, (double) (byte) 1, (double) 100L, 0);
        java.lang.String str33 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double37 = switchingFunctionsHandler36.getEventTime();
        double[] doubleArray45 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean46 = switchingFunctionsHandler36.reset((double) (byte) 1, doubleArray45);
        double[] doubleArray50 = new double[] { 100.0f, 100 };
        boolean boolean51 = switchingFunctionsHandler36.reset(Double.NaN, doubleArray50);
        double[] doubleArray52 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator53 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray50, doubleArray52);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        graggBulirschStoerIntegrator53.addSwitchingFunction(switchingFunction54, (double) 100.0f, (double) 0, 0);
        double double59 = graggBulirschStoerIntegrator53.getCurrentStepStart();
        double double60 = graggBulirschStoerIntegrator53.getMaxStep();
        java.lang.String str61 = graggBulirschStoerIntegrator53.getName();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction62 = null;
        graggBulirschStoerIntegrator53.addSwitchingFunction(switchingFunction62, (double) (short) 10, 0.0d, 0);
        graggBulirschStoerIntegrator53.setStepsizeControl((double) 0, (double) 2, (-0.0d), (double) (-1));
        double double72 = graggBulirschStoerIntegrator53.getCurrentSignedStepsize();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction73 = null;
        graggBulirschStoerIntegrator53.addSwitchingFunction(switchingFunction73, (double) 1.0f, 0.0d, (int) (short) -1);
        org.apache.commons.math.ode.StepHandler stepHandler78 = graggBulirschStoerIntegrator53.getStepHandler();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler78);
        stepHandler78.reset();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler8);
        org.junit.Assert.assertNotNull(stepHandler12);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str33, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str61, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(stepHandler78);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) '4', (double) (byte) 100, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 1L, (double) 1, 1);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double16 = switchingFunctionsHandler15.getEventTime();
        double[] doubleArray24 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean25 = switchingFunctionsHandler15.reset((double) (byte) 1, doubleArray24);
        boolean boolean26 = switchingFunctionsHandler13.reset(0.0d, doubleArray24);
        boolean boolean27 = switchingFunctionsHandler0.reset(52.0d, doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = switchingFunctionsHandler0.evaluateStep(stepInterpolator29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray5);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        java.lang.Throwable[] throwableArray11 = derivativeException10.getSuppressed();
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray21);
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray28 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", objArray28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException29);
        derivativeException10.addSuppressed((java.lang.Throwable) integratorException29);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        double[] doubleArray2 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double4 = switchingFunctionsHandler3.getEventTime();
        double[] doubleArray12 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean13 = switchingFunctionsHandler3.reset((double) (byte) 1, doubleArray12);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator14 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) ' ', doubleArray2, doubleArray12);
        org.apache.commons.math.ode.StepHandler stepHandler15 = graggBulirschStoerIntegrator14.getStepHandler();
        double double16 = graggBulirschStoerIntegrator14.getCurrentStepStart();
        double double17 = graggBulirschStoerIntegrator14.getCurrentSignedStepsize();
        org.apache.commons.math.ode.FirstOrderDifferentialEquations firstOrderDifferentialEquations18 = null;
        double[] doubleArray20 = null;
        double[] doubleArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            graggBulirschStoerIntegrator14.integrate(firstOrderDifferentialEquations18, 1.7782794100389228d, doubleArray20, (double) 0, doubleArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(stepHandler15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 17.88854381999832d + "'", double17 == 17.88854381999832d);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 100.0d, (double) 100, (int) (byte) 100);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (int) (short) 100, Double.NaN);
        double double61 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double62 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double63 = graggBulirschStoerIntegrator38.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler64 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(stepHandler64);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler46 = graggBulirschStoerIntegrator38.getStepHandler();
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler51 = graggBulirschStoerIntegrator38.getStepHandler();
        org.apache.commons.math.ode.StepHandler stepHandler52 = graggBulirschStoerIntegrator38.getStepHandler();
        boolean boolean53 = stepHandler52.requiresDenseOutput();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator54 = null;
        stepHandler52.handleStep(stepInterpolator54, true);
        boolean boolean57 = stepHandler52.requiresDenseOutput();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stepHandler46);
        org.junit.Assert.assertNotNull(stepHandler51);
        org.junit.Assert.assertNotNull(stepHandler52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double[] doubleArray14 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean15 = switchingFunctionsHandler5.reset((double) (byte) 1, doubleArray14);
        double[] doubleArray19 = new double[] { 100.0f, 100 };
        boolean boolean20 = switchingFunctionsHandler5.reset(Double.NaN, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double24 = switchingFunctionsHandler23.getEventTime();
        double[] doubleArray32 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean33 = switchingFunctionsHandler23.reset((double) (byte) 1, doubleArray32);
        double[] doubleArray37 = new double[] { 100.0f, 100 };
        boolean boolean38 = switchingFunctionsHandler23.reset(Double.NaN, doubleArray37);
        double[] doubleArray39 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray37, doubleArray39);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator41 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 10, (double) 0.0f, doubleArray19, doubleArray39);
        switchingFunctionsHandler0.stepAccepted(0.0d, doubleArray39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator43 = null;
        boolean boolean44 = switchingFunctionsHandler0.evaluateStep(stepInterpolator43);
        boolean boolean45 = switchingFunctionsHandler0.isEmpty();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        double[] doubleArray59 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean60 = switchingFunctionsHandler50.reset((double) (byte) 1, doubleArray59);
        double[] doubleArray64 = new double[] { 100.0f, 100 };
        boolean boolean65 = switchingFunctionsHandler50.reset(Double.NaN, doubleArray64);
        double[] doubleArray66 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator67 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray64, doubleArray66);
        switchingFunctionsHandler0.stepAccepted((double) 3, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, (double) 1L, 0.0d, 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler0.add(switchingFunction74, 1.7782794100389228d, (double) 10.0f, 10);
        boolean boolean79 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = switchingFunctionsHandler0.evaluateStep(stepInterpolator80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(23.40347319320716d, (double) (-1L), 12.368586720951603d, 43.25307727072111d);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        graggBulirschStoerIntegrator38.setStepsizeControl(3.1622776601683795d, (double) 2, (double) (byte) 10, (double) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction56 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction56, 2.0d, 0.0d, (int) 'a');
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double7 = switchingFunctionsHandler6.getEventTime();
        double[] doubleArray15 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean16 = switchingFunctionsHandler6.reset((double) (byte) 1, doubleArray15);
        double[] doubleArray20 = new double[] { 100.0f, 100 };
        boolean boolean21 = switchingFunctionsHandler6.reset(Double.NaN, doubleArray20);
        double[] doubleArray22 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator23 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray20, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double[] doubleArray33 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean34 = switchingFunctionsHandler24.reset((double) (byte) 1, doubleArray33);
        double[] doubleArray38 = new double[] { 100.0f, 100 };
        boolean boolean39 = switchingFunctionsHandler24.reset(Double.NaN, doubleArray38);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator40 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray22, doubleArray38);
        double[] doubleArray41 = null;
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator42 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0, (double) (-1), doubleArray22, doubleArray41);
        org.apache.commons.math.ode.StepHandler stepHandler43 = graggBulirschStoerIntegrator42.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction44, (double) 0L, (double) 10, 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        graggBulirschStoerIntegrator42.addSwitchingFunction(switchingFunction49, (double) 100L, (double) 1.0f, (int) '4');
        graggBulirschStoerIntegrator42.setOrderControl(0, 52.0d, 0.0d);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double[] doubleArray69 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean70 = switchingFunctionsHandler60.reset((double) (byte) 1, doubleArray69);
        double[] doubleArray74 = new double[] { 100.0f, 100 };
        boolean boolean75 = switchingFunctionsHandler60.reset(Double.NaN, doubleArray74);
        double[] doubleArray76 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray74, doubleArray76);
        double double78 = graggBulirschStoerIntegrator77.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator77.setStepsizeControl((double) 0, (double) 100L, 0.0d, (double) 0.0f);
        double double84 = graggBulirschStoerIntegrator77.getMinStep();
        double double85 = graggBulirschStoerIntegrator77.getMaxStep();
        org.apache.commons.math.ode.StepHandler stepHandler86 = graggBulirschStoerIntegrator77.getStepHandler();
        java.lang.String str87 = graggBulirschStoerIntegrator77.getName();
        org.apache.commons.math.ode.StepHandler stepHandler88 = graggBulirschStoerIntegrator77.getStepHandler();
        stepHandler88.reset();
        stepHandler88.reset();
        graggBulirschStoerIntegrator42.setStepHandler(stepHandler88);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stepHandler43);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 10.0d + "'", double84 == 10.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
        org.junit.Assert.assertNotNull(stepHandler86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str87, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler88);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        double double49 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        double double50 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double51 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str52 = graggBulirschStoerIntegrator38.getName();
        double double53 = graggBulirschStoerIntegrator38.getMinStep();
        graggBulirschStoerIntegrator38.setInterpolationControl(true, (int) (byte) 1);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', 6.841560230416328d, (double) 1.0f, (double) (short) 10);
        graggBulirschStoerIntegrator38.setStabilityCheck(false, 2, 10, 6.928935924497552d);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str52, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 10.0d + "'", double53 == 10.0d);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setOrderControl((int) (short) 0, (double) 1.0f, (double) (-1L));
        double double43 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        graggBulirschStoerIntegrator38.setStabilityCheck(false, (int) (short) 100, (-1), (double) 100);
        java.lang.String str49 = graggBulirschStoerIntegrator38.getName();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str49, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator3 = null;
        boolean boolean4 = switchingFunctionsHandler0.evaluateStep(stepInterpolator3);
        boolean boolean5 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double14 = switchingFunctionsHandler13.getEventTime();
        double[] doubleArray22 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean23 = switchingFunctionsHandler13.reset((double) (byte) 1, doubleArray22);
        double[] doubleArray27 = new double[] { 100.0f, 100 };
        boolean boolean28 = switchingFunctionsHandler13.reset(Double.NaN, doubleArray27);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator30 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray27, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray29);
        boolean boolean32 = switchingFunctionsHandler0.stop();
        boolean boolean33 = switchingFunctionsHandler0.stop();
        double double34 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray38 = null;
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler39.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double46 = switchingFunctionsHandler45.getEventTime();
        double[] doubleArray54 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean55 = switchingFunctionsHandler45.reset((double) (byte) 1, doubleArray54);
        double[] doubleArray59 = new double[] { 100.0f, 100 };
        boolean boolean60 = switchingFunctionsHandler45.reset(Double.NaN, doubleArray59);
        double[] doubleArray61 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator62 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray59, doubleArray61);
        switchingFunctionsHandler39.stepAccepted((double) (short) 10, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double[] doubleArray74 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean75 = switchingFunctionsHandler65.reset((double) (byte) 1, doubleArray74);
        boolean boolean76 = switchingFunctionsHandler39.reset((double) 0L, doubleArray74);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator77 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(15.298193747370034d, 1.7320508075688772d, doubleArray38, doubleArray74);
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        graggBulirschStoerIntegrator38.setInterpolationControl(false, (int) '4');
        graggBulirschStoerIntegrator38.setOrderControl((int) '4', Double.NaN, (double) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        graggBulirschStoerIntegrator38.addSwitchingFunction(switchingFunction51, 0.0d, 13.33521432163324d, 100);
        java.lang.Class<?> wildcardClass56 = graggBulirschStoerIntegrator38.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(Double.NaN, (double) (byte) 0, (double) (short) -1, Double.NaN);
        graggBulirschStoerIntegrator4.setInitialStepSize((double) 10L);
        java.lang.String str7 = graggBulirschStoerIntegrator4.getName();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double13 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray21 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean22 = switchingFunctionsHandler12.reset((double) (byte) 1, doubleArray21);
        double[] doubleArray26 = new double[] { 100.0f, 100 };
        boolean boolean27 = switchingFunctionsHandler12.reset(Double.NaN, doubleArray26);
        double[] doubleArray28 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator29 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray26, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double[] doubleArray39 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean40 = switchingFunctionsHandler30.reset((double) (byte) 1, doubleArray39);
        double[] doubleArray44 = new double[] { 100.0f, 100 };
        boolean boolean45 = switchingFunctionsHandler30.reset(Double.NaN, doubleArray44);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator46 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray28, doubleArray44);
        graggBulirschStoerIntegrator46.setInitialStepSize((double) 1);
        graggBulirschStoerIntegrator46.setStepsizeControl((double) 0.0f, (double) (short) 1, (double) 0L, (double) 100.0f);
        org.apache.commons.math.ode.StepHandler stepHandler54 = graggBulirschStoerIntegrator46.getStepHandler();
        graggBulirschStoerIntegrator46.setOrderControl((int) (short) 0, 10.0d, Double.NaN);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator46.getStepHandler();
        boolean boolean60 = stepHandler59.requiresDenseOutput();
        stepHandler59.reset();
        graggBulirschStoerIntegrator4.setStepHandler(stepHandler59);
        org.apache.commons.math.ode.StepHandler stepHandler63 = graggBulirschStoerIntegrator4.getStepHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction64, 17.78279410038923d, 100.0d, 2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction69, (double) (byte) 100, (double) (short) 0, (int) (byte) 10);
        graggBulirschStoerIntegrator4.setStepsizeControl((double) 3, (double) 1, 17.78279410038923d, (double) (short) 0);
        double double79 = graggBulirschStoerIntegrator4.getMinStep();
        org.apache.commons.math.ode.StepHandler stepHandler80 = graggBulirschStoerIntegrator4.getStepHandler();
        boolean boolean81 = stepHandler80.requiresDenseOutput();
        stepHandler80.reset();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str7, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(stepHandler54);
        org.junit.Assert.assertNotNull(stepHandler59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(stepHandler63);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(stepHandler80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double[] doubleArray13 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean14 = switchingFunctionsHandler4.reset((double) (byte) 1, doubleArray13);
        double[] doubleArray18 = new double[] { 100.0f, 100 };
        boolean boolean19 = switchingFunctionsHandler4.reset(Double.NaN, doubleArray18);
        double[] doubleArray20 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator21 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray18, doubleArray20);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double[] doubleArray31 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean32 = switchingFunctionsHandler22.reset((double) (byte) 1, doubleArray31);
        double[] doubleArray36 = new double[] { 100.0f, 100 };
        boolean boolean37 = switchingFunctionsHandler22.reset(Double.NaN, doubleArray36);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10.0f, 0.0d, doubleArray20, doubleArray36);
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 100, (double) (short) 10, (double) 1, (double) 0);
        java.lang.String str44 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setStepsizeControl((double) 'a', (double) (-1), (double) '#', (double) 'a');
        double double50 = graggBulirschStoerIntegrator38.getMaxStep();
        double double51 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double52 = graggBulirschStoerIntegrator38.getCurrentStepStart();
        double double53 = graggBulirschStoerIntegrator38.getCurrentSignedStepsize();
        java.lang.String str54 = graggBulirschStoerIntegrator38.getName();
        graggBulirschStoerIntegrator38.setOrderControl(10, 31.622776601683793d, (double) 10);
        org.apache.commons.math.ode.StepHandler stepHandler59 = graggBulirschStoerIntegrator38.getStepHandler();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str44, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str54, "Gragg-Bulirsch-Stoer");
        org.junit.Assert.assertNotNull(stepHandler59);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        java.lang.Throwable[] throwableArray17 = derivativeException16.getSuppressed();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray9 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean10 = switchingFunctionsHandler0.reset((double) (byte) 1, doubleArray9);
        double[] doubleArray14 = new double[] { 100.0f, 100 };
        boolean boolean15 = switchingFunctionsHandler0.reset(Double.NaN, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) (byte) 0, (-1.0d), (int) (short) 1);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        boolean boolean22 = switchingFunctionsHandler0.stop();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Gragg-Bulirsch-Stoer", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException15);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction3 = null;
        switchingFunctionsHandler0.add(switchingFunction3, (double) 0L, (double) 0.0f, (int) (short) 10);
        double double8 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double11 = switchingFunctionsHandler10.getEventTime();
        boolean boolean12 = switchingFunctionsHandler10.isEmpty();
        boolean boolean13 = switchingFunctionsHandler10.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator16 = null;
        boolean boolean17 = switchingFunctionsHandler15.evaluateStep(stepInterpolator16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double22 = switchingFunctionsHandler21.getEventTime();
        double[] doubleArray30 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean31 = switchingFunctionsHandler21.reset((double) (byte) 1, doubleArray30);
        double[] doubleArray35 = new double[] { 100.0f, 100 };
        boolean boolean36 = switchingFunctionsHandler21.reset(Double.NaN, doubleArray35);
        double[] doubleArray37 = new double[] {};
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator38 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 10, (double) (-1L), doubleArray35, doubleArray37);
        switchingFunctionsHandler15.stepAccepted((double) (short) 10, doubleArray37);
        switchingFunctionsHandler10.stepAccepted((double) 100.0f, doubleArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double45 = switchingFunctionsHandler44.getEventTime();
        double[] doubleArray53 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean54 = switchingFunctionsHandler44.reset((double) (byte) 1, doubleArray53);
        double[] doubleArray58 = new double[] { 100.0f, 100 };
        boolean boolean59 = switchingFunctionsHandler44.reset(Double.NaN, doubleArray58);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler60.evaluateStep(stepInterpolator61);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction63 = null;
        switchingFunctionsHandler60.add(switchingFunction63, (double) (short) 1, (double) '4', (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double[] doubleArray80 = new double[] { 0.0f, 0.0f, (short) 100, (short) -1, (-1), 0.0f };
        boolean boolean81 = switchingFunctionsHandler71.reset((double) (byte) 1, doubleArray80);
        boolean boolean82 = switchingFunctionsHandler69.reset(0.0d, doubleArray80);
        boolean boolean83 = switchingFunctionsHandler60.reset((double) (byte) 100, doubleArray80);
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator84 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) 0L, (double) 10.0f, doubleArray58, doubleArray80);
        boolean boolean85 = switchingFunctionsHandler10.reset((double) '4', doubleArray58);
        boolean boolean86 = switchingFunctionsHandler0.reset((double) (short) 1, doubleArray58);
        double double87 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction88 = null;
        switchingFunctionsHandler0.add(switchingFunction88, (double) 1L, 0.0d, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 0.0, 100.0, -1.0, -1.0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (byte) 100, (double) 0L, (-0.0d), (double) 100.0f);
        java.lang.String str5 = graggBulirschStoerIntegrator4.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Gragg-Bulirsch-Stoer" + "'", str5, "Gragg-Bulirsch-Stoer");
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        java.lang.Throwable[] throwableArray17 = derivativeException16.getSuppressed();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray25);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException34);
        derivativeException26.addSuppressed((java.lang.Throwable) derivativeException35);
        derivativeException16.addSuppressed((java.lang.Throwable) derivativeException35);
        java.lang.String str38 = derivativeException35.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str38, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator(32.0d, (double) (short) 1, 35.0d, (double) 1.0f);
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        graggBulirschStoerIntegrator4.setInterpolationControl(true, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction9 = null;
        graggBulirschStoerIntegrator4.addSwitchingFunction(switchingFunction9, 13.37480609952844d, 38.3753555559862d, 0);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        java.lang.Class<?> wildcardClass18 = integratorException17.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray7);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("Gragg-Bulirsch-Stoer", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray7);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: ", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        derivativeException13.addSuppressed((java.lang.Throwable) derivativeException27);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!", "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "", "hi!", "" };
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray47);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException48);
        derivativeException40.addSuppressed((java.lang.Throwable) derivativeException49);
        java.lang.Throwable[] throwableArray51 = derivativeException40.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException53);
        derivativeException27.addSuppressed((java.lang.Throwable) integratorException54);
        java.lang.Throwable[] throwableArray56 = derivativeException27.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        org.apache.commons.math.ode.GraggBulirschStoerIntegrator graggBulirschStoerIntegrator4 = new org.apache.commons.math.ode.GraggBulirschStoerIntegrator((double) (short) 100, (double) 3, (double) 10, (double) (-1.0f));
        double double5 = graggBulirschStoerIntegrator4.getCurrentStepStart();
        org.junit.Assert.assertTrue(Double.isNaN(double5));
    }
}

