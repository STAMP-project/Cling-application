import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test03501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03501");
        org.joda.time.Hours hours0 = org.joda.time.Hours.THREE;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) hours0);
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test03502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03502");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Period period2 = period1.negated();
        org.joda.time.Period period4 = period1.withMonths((int) '#');
        java.lang.Class<?> wildcardClass5 = period1.getClass();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test03503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03503");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572148725L);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType10);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) 1);
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) minutes14);
        mutablePeriod11.addDays(0);
        mutablePeriod11.setMonths((int) (byte) 1);
        int int20 = mutablePeriod11.getMonths();
        mutablePeriod11.addMonths(0);
        mutablePeriod11.setPeriod(49, 29, (int) ' ', 0, (-2), (int) (short) 100, 2719, (int) (short) 1);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration34.toPeriodFrom(readableInstant35);
        org.joda.time.Period period38 = period36.minusSeconds((int) '4');
        org.joda.time.Minutes minutes39 = period36.toStandardMinutes();
        org.joda.time.Period period41 = period36.multipliedBy((int) (byte) 100);
        org.joda.time.Period period43 = period41.withHours((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.months();
        org.joda.time.Period period46 = period41.withField(durationFieldType44, 0);
        org.joda.time.Period period48 = period46.plusMinutes((int) (short) -1);
        org.joda.time.Period period50 = period46.withMillis(100);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.DateTime dateTime61 = interval60.getEnd();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Interval interval71 = interval70.toInterval();
        org.joda.time.DateTime dateTime72 = interval71.getEnd();
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime61, (org.joda.time.ReadableInstant) dateTime72);
        long long74 = dateTime72.getMillis();
        org.joda.time.Duration duration75 = period46.toDurationTo((org.joda.time.ReadableInstant) dateTime72);
        org.joda.time.Duration duration78 = new org.joda.time.Duration(1644572177734L, 1644572188546L);
        boolean boolean79 = duration75.isLongerThan((org.joda.time.ReadableDuration) duration78);
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration75);
        int int81 = duration1.compareTo((org.joda.time.ReadableDuration) duration75);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(dateTime72);
// flaky:         org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1644572339398L + "'", long74 == 1644572339398L);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test03504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03504");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType3 = period1.getFieldType((-42));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03505");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((java.lang.Object) long2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test03506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03506");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.minutesIn(readableInterval5);
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        boolean boolean8 = minutes4.isLessThan(minutes6);
        java.lang.String str9 = minutes4.toString();
        org.joda.time.DurationFieldType durationFieldType10 = minutes4.getFieldType();
        int int11 = minutes4.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0M" + "'", str9, "PT0M");
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test03507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03507");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(2719);
        org.joda.time.Period period3 = period1.withMonths(41);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03508");
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration6 = duration4.plus(1644572122285L);
        long long7 = duration4.getMillis();
        long long8 = duration4.getStandardHours();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds11 = seconds9.multipliedBy((int) (byte) 1);
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Chronology chronology23 = interval22.getChronology();
        org.joda.time.Period period24 = duration4.toPeriod(periodType12, chronology23);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1644572133852L, chronology23);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1644572123232L, (long) 2147483647, chronology23);
        org.joda.time.MutablePeriod mutablePeriod27 = mutablePeriod26.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 52L + "'", long7 == 52L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(mutablePeriod27);
    }

    @Test
    public void test03509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03509");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutesIn(readableInterval0);
        java.lang.String str2 = minutes1.toString();
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType6 = minutes5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.eras();
        boolean boolean9 = periodType6.isSupported(durationFieldType8);
        int int10 = minutes1.get(durationFieldType8);
        org.joda.time.ReadableInterval readableInterval11 = null;
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.minutesIn(readableInterval11);
        org.joda.time.Minutes minutes13 = minutes1.minus(minutes12);
        org.joda.time.Period period14 = minutes12.toPeriod();
        org.joda.time.PeriodType periodType15 = minutes12.getPeriodType();
        java.lang.String str16 = periodType15.toString();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PeriodType[Minutes]" + "'", str16, "PeriodType[Minutes]");
    }

    @Test
    public void test03510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03510");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Period period4 = period1.minusMinutes((int) ' ');
        org.joda.time.Period period6 = period4.minusYears((int) (short) 10);
        org.joda.time.Period period7 = period4.negated();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        org.joda.time.PeriodType periodType13 = mutablePeriod12.getPeriodType();
        org.joda.time.PeriodType periodType14 = periodType13.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1644572190475L, periodType14);
        mutablePeriod15.addMillis((-99));
        org.joda.time.Period period18 = period7.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = mutablePeriod15.getValue((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2147483648");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test03511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03511");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        long long9 = interval8.getStartMillis();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        boolean boolean50 = interval40.isAfter((org.joda.time.ReadableInterval) interval49);
        org.joda.time.Period period51 = interval49.toPeriod();
        boolean boolean52 = interval28.isAfter((org.joda.time.ReadableInterval) interval49);
        org.joda.time.DateTime dateTime53 = interval28.getEnd();
        boolean boolean54 = interval8.overlaps((org.joda.time.ReadableInterval) interval28);
        java.lang.String str55 = interval28.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
// flaky:         org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1644572339774L + "'", long9 == 1644572339774L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(period51);
// flaky:         org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "2022-02-11T09:38:59.774Z/2022-02-11T09:38:59.774Z" + "'", str55, "2022-02-11T09:38:59.774Z/2022-02-11T09:38:59.774Z");
    }

    @Test
    public void test03512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03512");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Interval interval32 = interval9.toInterval();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        boolean boolean62 = interval52.isAfter((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Period period63 = interval61.toPeriod();
        boolean boolean64 = interval42.isBefore((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Interval interval65 = interval42.toInterval();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant78 = null;
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant78, (org.joda.time.ReadableDuration) duration80);
        boolean boolean82 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Interval interval84 = duration80.toIntervalTo(readableInstant83);
        boolean boolean85 = interval75.isAfter((org.joda.time.ReadableInterval) interval84);
        boolean boolean86 = interval65.isBefore((org.joda.time.ReadableInterval) interval84);
        org.joda.time.Days days87 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval84);
        boolean boolean88 = interval32.isAfter((org.joda.time.ReadableInterval) interval84);
        org.joda.time.Days days89 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval84);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(interval84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(days87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(days89);
    }

    @Test
    public void test03513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03513");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(100);
        org.joda.time.Weeks weeks3 = weeks1.dividedBy((int) (byte) -1);
        org.joda.time.Weeks weeks5 = weeks1.multipliedBy((int) (short) -1);
        org.joda.time.Weeks weeks7 = weeks5.plus((-49));
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks7);
    }

    @Test
    public void test03514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03514");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period4.withDays(23);
        org.joda.time.Period period12 = period4.toPeriod();
        org.joda.time.Period period14 = period12.withDays(49);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = period14.getFieldTypes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
    }

    @Test
    public void test03515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03515");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        long long5 = duration4.getMillis();
        org.joda.time.Minutes minutes6 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        long long11 = duration10.getMillis();
        org.joda.time.Minutes minutes12 = duration10.toStandardMinutes();
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        boolean boolean15 = minutes7.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes16 = minutes0.minus(minutes14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.millis((long) '4');
        long long19 = duration18.getMillis();
        org.joda.time.Minutes minutes20 = duration18.toStandardMinutes();
        org.joda.time.Minutes minutes21 = minutes20.negated();
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Minutes minutes23 = minutes14.plus(minutes22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes25 = minutes23.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 52L + "'", long5 == 52L);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test03516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03516");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) interval16, periodType18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval16);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        long long31 = interval29.toDurationMillis();
        long long32 = interval29.toDurationMillis();
        java.lang.String str33 = interval29.toString();
        org.joda.time.DateTime dateTime34 = interval29.getEnd();
        boolean boolean35 = interval16.contains((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Duration duration36 = interval29.toDuration();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "2022-02-11T09:38:59.992Z/2022-02-11T09:38:59.992Z" + "'", str33, "2022-02-11T09:38:59.992Z/2022-02-11T09:38:59.992Z");
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration36);
    }

    @Test
    public void test03517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03517");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutesIn(readableInterval2);
        java.lang.String str4 = minutes3.toString();
        org.joda.time.PeriodType periodType5 = minutes3.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1644572124065L, 0L, periodType5);
        java.lang.String str7 = periodType5.toString();
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PeriodType[Minutes]" + "'", str7, "PeriodType[Minutes]");
    }

    @Test
    public void test03518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03518");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime54);
        boolean boolean56 = interval9.isAfter((org.joda.time.ReadableInstant) dateTime43);
        long long57 = interval9.toDurationMillis();
        long long58 = interval9.getEndMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long58 + "' != '" + 1644572340050L + "'", long58 == 1644572340050L);
    }

    @Test
    public void test03519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03519");
        org.joda.time.Days days0 = org.joda.time.Days.FOUR;
        org.joda.time.Days days2 = days0.minus(3);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration12 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration7, (int) (short) 1);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration18, (int) (short) 100);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration28 = duration25.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration30 = duration22.withDurationAdded((org.joda.time.ReadableDuration) duration25, (int) (short) 1);
        org.joda.time.Duration duration33 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration36 = duration33.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration38 = duration22.withDurationAdded((org.joda.time.ReadableDuration) duration36, (int) (short) 100);
        boolean boolean39 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration40 = duration38.toDuration();
        org.joda.time.Period period42 = org.joda.time.Period.years((int) (short) 10);
        org.joda.time.Period period44 = period42.plusMonths((int) (short) 0);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((long) (short) 100, chronology46);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.eras();
        boolean boolean49 = period47.isSupported(durationFieldType48);
        boolean boolean50 = period44.isSupported(durationFieldType48);
        boolean boolean51 = duration38.equals((java.lang.Object) durationFieldType48);
        int int52 = days2.get(durationFieldType48);
        java.lang.String str53 = durationFieldType48.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "eras" + "'", str53, "eras");
    }

    @Test
    public void test03520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03520");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray2 = period1.getFieldTypes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.Hours hours13 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.DurationFieldType durationFieldType14 = hours13.getFieldType();
        org.joda.time.Period period16 = period1.withFieldAdded(durationFieldType14, (int) (byte) 1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test03521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03521");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.PeriodType periodType2 = periodType1.withSecondsRemoved();
        java.lang.String str3 = periodType2.getName();
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "SecondsNoSeconds" + "'", str3, "SecondsNoSeconds");
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test03522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03522");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks5 = weeks4.negated();
        org.joda.time.Weeks weeks6 = weeks2.minus(weeks5);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks9 = weeks8.negated();
        int int10 = weeks8.getWeeks();
        org.joda.time.Weeks weeks11 = weeks6.minus(weeks8);
        org.joda.time.Weeks weeks13 = weeks8.minus((int) (short) 1);
        org.joda.time.PeriodType periodType14 = weeks8.getPeriodType();
        java.lang.String str15 = weeks8.toString();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P-1W" + "'", str15, "P-1W");
    }

    @Test
    public void test03523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03523");
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration12 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration7, (int) (short) 1);
        org.joda.time.Days days13 = duration12.toStandardDays();
        org.joda.time.Days days14 = duration12.toStandardDays();
        org.joda.time.PeriodType periodType15 = days14.getPeriodType();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(obj2, periodType15, chronology16);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1644572305301L, (long) (byte) -1, periodType15);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test03524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03524");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.minutesIn(readableInterval5);
        java.lang.String str7 = minutes6.toString();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType11 = minutes10.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.eras();
        boolean boolean14 = periodType11.isSupported(durationFieldType13);
        int int15 = minutes6.get(durationFieldType13);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn(readableInterval16);
        org.joda.time.Minutes minutes18 = minutes6.minus(minutes17);
        org.joda.time.Minutes minutes19 = minutes3.minus(minutes6);
        int int20 = minutes3.size();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType24 = minutes23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod25 = minutes23.toMutablePeriod();
        mutablePeriod25.setHours((int) (byte) -1);
        mutablePeriod25.add((long) 10);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) minutes30);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType36 = mutablePeriod34.getFieldType(1);
        boolean boolean37 = minutes30.isSupported(durationFieldType36);
        int int38 = mutablePeriod25.get(durationFieldType36);
        int int39 = minutes3.get(durationFieldType36);
        org.joda.time.Minutes minutes41 = minutes3.multipliedBy((-1));
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Duration duration55 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean56 = duration48.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes57 = duration48.toStandardMinutes();
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes42.minus(minutes58);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes61 = minutes60.negated();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean74 = duration66.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes75 = duration66.toStandardMinutes();
        org.joda.time.Minutes minutes76 = minutes75.negated();
        org.joda.time.Minutes minutes77 = minutes60.minus(minutes76);
        org.joda.time.PeriodType periodType78 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes79 = minutes59.plus(minutes60);
        org.joda.time.Minutes minutes80 = minutes3.minus(minutes59);
        org.joda.time.Minutes minutes81 = minutes59.negated();
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.minutesIn(readableInterval82);
        boolean boolean84 = minutes59.isGreaterThan(minutes83);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0M" + "'", str7, "PT0M");
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test03525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03525");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Period period5 = period3.minusMillis(0);
        org.joda.time.Period period7 = period3.minusHours((int) '4');
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.plusDays((int) (byte) 0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Weeks weeks34 = period33.toStandardWeeks();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks35.plus((int) '4');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean41 = weeks38.isGreaterThan(weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks40.getFieldType();
        boolean boolean43 = weeks35.isGreaterThan(weeks40);
        boolean boolean44 = weeks34.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks46 = weeks34.minus(8);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.Chronology chronology57 = interval56.getChronology();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval56);
        int int59 = weeks58.getWeeks();
        org.joda.time.Weeks weeks60 = weeks46.minus(weeks58);
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Period period62 = period7.minus((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Period period64 = period62.plusMonths((int) (byte) 10);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks67 = weeks66.negated();
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks70 = weeks69.negated();
        org.joda.time.Weeks weeks71 = weeks67.minus(weeks70);
        org.joda.time.Weeks weeks73 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks74 = weeks73.negated();
        int int75 = weeks73.getWeeks();
        org.joda.time.Weeks weeks76 = weeks71.minus(weeks73);
        org.joda.time.Weeks weeks78 = weeks71.minus((int) (short) 10);
        org.joda.time.Weeks weeks79 = weeks71.negated();
        org.joda.time.DurationFieldType durationFieldType80 = weeks79.getFieldType();
        boolean boolean81 = period64.isSupported(durationFieldType80);
        org.joda.time.Period period83 = period64.multipliedBy(31);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(weeks71);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(weeks76);
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(weeks79);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test03526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03526");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(periodType5);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(10L, periodType5);
        int int8 = mutablePeriod7.getMillis();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration16 = duration13.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration18 = duration10.withDurationAdded((org.joda.time.ReadableDuration) duration13, (int) (short) 1);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration24 = duration21.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration26 = duration10.withDurationAdded((org.joda.time.ReadableDuration) duration24, (int) (short) 100);
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod();
        mutablePeriod28.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod28, periodType32);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.Chronology chronology47 = interval46.getChronology();
        boolean boolean48 = durationFieldType36.isSupported(chronology47);
        mutablePeriod28.setPeriod((long) 0, (long) 8, chronology47);
        org.joda.time.Period period50 = duration26.toPeriod(chronology47);
        org.joda.time.Period period51 = new org.joda.time.Period(1644572137529L, chronology47);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1644572156418L, 1644572244221L, chronology47);
        mutablePeriod52.setWeeks((-4));
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(chronology47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test03527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03527");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:37:10.260Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:10.260Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03528");
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration4.toPeriod(chronology7);
        java.lang.String str9 = period8.toString();
        org.joda.time.MutablePeriod mutablePeriod10 = period8.toMutablePeriod();
        org.joda.time.PeriodType periodType11 = mutablePeriod10.getPeriodType();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        long long21 = interval20.getStartMillis();
        org.joda.time.Chronology chronology22 = interval20.getChronology();
        org.joda.time.Period period23 = new org.joda.time.Period((long) 52, 1644572180344L, periodType11, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Hours hours34 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval33);
        org.joda.time.Hours hours35 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval33);
        org.joda.time.DurationFieldType durationFieldType37 = hours35.getFieldType((int) (short) 0);
        java.lang.String str38 = durationFieldType37.getName();
        boolean boolean39 = periodType11.isSupported(durationFieldType37);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0.097S" + "'", str9, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572340545L + "'", long21 == 1644572340545L);
        org.junit.Assert.assertNotNull(chronology22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(hours34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hours" + "'", str38, "hours");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test03529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03529");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        mutablePeriod4.setValue(1, 30);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4);
        mutablePeriod8.setHours((-1));
        mutablePeriod8.addMonths((-49));
    }

    @Test
    public void test03530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03530");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        long long10 = interval8.toDurationMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        long long21 = interval19.toDurationMillis();
        org.joda.time.DateTime dateTime22 = interval19.getStart();
        org.joda.time.DateTime dateTime23 = interval19.getStart();
        boolean boolean24 = interval8.isAfter((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Duration duration26 = interval19.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(duration26);
    }

    @Test
    public void test03531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03531");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setWeeks((int) (byte) 10);
        mutablePeriod13.addWeeks((int) (short) 1);
        mutablePeriod13.setWeeks(127);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        boolean boolean52 = interval42.isAfter((org.joda.time.ReadableInterval) interval51);
        org.joda.time.Period period53 = interval51.toPeriod();
        boolean boolean54 = interval32.isBefore((org.joda.time.ReadableInterval) interval51);
        org.joda.time.Interval interval55 = interval32.toInterval();
        org.joda.time.Days days56 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval32);
        org.joda.time.MutablePeriod mutablePeriod57 = days56.toMutablePeriod();
        int int58 = mutablePeriod57.getSeconds();
        mutablePeriod57.addMonths(2147483647);
        mutablePeriod57.setSeconds(97);
        mutablePeriod13.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod57);
        mutablePeriod13.addMinutes((int) '#');
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test03532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03532");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Hours hours11 = days10.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType13 = hours11.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test03533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03533");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Period period2 = period1.negated();
        org.joda.time.Period period4 = period1.withMonths((int) '#');
        org.joda.time.Period period6 = period1.multipliedBy((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = period1.getFieldType(51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test03534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03534");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Hours hours14 = hours12.dividedBy(1);
        boolean boolean15 = hours1.isGreaterThan(hours14);
        org.joda.time.Duration duration16 = hours1.toStandardDuration();
        org.joda.time.Hours hours17 = org.joda.time.Hours.TWO;
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodFrom(readableInstant21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration20.toPeriod(chronology23);
        org.joda.time.Period period26 = period24.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Hours hours28 = org.joda.time.Hours.hoursIn(readableInterval27);
        org.joda.time.Period period29 = period26.minus((org.joda.time.ReadablePeriod) hours28);
        org.joda.time.Hours hours30 = hours28.negated();
        org.joda.time.Duration duration33 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration33.toPeriodFrom(readableInstant34);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration33.toPeriod(chronology36);
        org.joda.time.Period period39 = period37.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval40 = null;
        org.joda.time.Hours hours41 = org.joda.time.Hours.hoursIn(readableInterval40);
        org.joda.time.Period period42 = period39.minus((org.joda.time.ReadablePeriod) hours41);
        org.joda.time.Hours hours43 = hours41.negated();
        org.joda.time.Hours hours44 = hours28.minus(hours41);
        org.joda.time.Hours hours45 = hours17.minus(hours41);
        org.joda.time.Duration duration48 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration48.toPeriodFrom(readableInstant49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration48.toPeriod(chronology51);
        org.joda.time.Period period54 = period52.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Hours hours56 = org.joda.time.Hours.hoursIn(readableInterval55);
        org.joda.time.Period period57 = period54.minus((org.joda.time.ReadablePeriod) hours56);
        org.joda.time.Hours hours59 = hours56.minus((int) '4');
        org.joda.time.Hours hours61 = hours59.plus((int) (short) 10);
        org.joda.time.Hours hours62 = hours45.plus(hours59);
        org.joda.time.Hours hours63 = hours1.minus(hours45);
        org.joda.time.Hours hours65 = hours45.minus(222);
        boolean boolean67 = hours45.equals((java.lang.Object) "PT21600S");
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(hours41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test03535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03535");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572253991L, 1644572234922L);
    }

    @Test
    public void test03536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03536");
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        long long4 = duration3.getMillis();
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Chronology chronology65 = dateTime25.getChronology();
        org.joda.time.Period period66 = new org.joda.time.Period(1644572161256L, 0L, chronology65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration68 = period66.toDurationFrom(readableInstant67);
        org.joda.time.Duration duration70 = duration68.plus(1644572259910L);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:39:01.015Z" + "'", str39, "2022-02-11T09:39:01.015Z");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(chronology65);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration70);
    }

    @Test
    public void test03537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03537");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) minutes4);
        boolean boolean6 = minutes2.isGreaterThan(minutes4);
        org.joda.time.PeriodType periodType7 = minutes4.getPeriodType();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test03538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03538");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Period period5 = period3.minusMinutes((int) (short) 1);
        org.joda.time.Period period7 = period3.minusHours((int) '#');
        org.joda.time.Period period8 = period3.toPeriod();
        org.joda.time.Period period10 = period8.plusSeconds(7);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test03539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03539");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Interval interval20 = interval17.toInterval();
        org.joda.time.Period period21 = interval20.toPeriod();
        org.joda.time.Period period22 = period21.negated();
        org.joda.time.Period period24 = period22.plusSeconds((int) (byte) 1);
        int int25 = period24.getMinutes();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType28 = periodType27.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType28);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(10L, periodType28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period31 = period24.withPeriodType(periodType28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572341160L + "'", long18 == 1644572341160L);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
    }

    @Test
    public void test03540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03540");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-1));
        org.joda.time.Period period3 = period1.plusSeconds(8);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03541");
        org.joda.time.Period period8 = new org.joda.time.Period((int) 'a', (-101), (-99), (-49), 31, 46, 7, 52);
    }

    @Test
    public void test03542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03542");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        boolean boolean14 = interval12.isAfter(readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) duration16, periodType22, chronology23);
        org.joda.time.DurationFieldType[] durationFieldTypeArray25 = mutablePeriod24.getFieldTypes();
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.forFields(durationFieldTypeArray25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.forFields(durationFieldTypeArray25);
        org.joda.time.Period period28 = interval12.toPeriod(periodType27);
        org.joda.time.Period period29 = new org.joda.time.Period(1644572160883L, 1644572168838L, periodType27);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1644572241021L, 1644572292646L, periodType27);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(durationFieldTypeArray25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test03543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03543");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Hours hours14 = hours12.dividedBy(1);
        boolean boolean15 = hours1.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = hours14.negated();
        java.lang.String str17 = hours16.toString();
        org.joda.time.MutablePeriod mutablePeriod18 = hours16.toMutablePeriod();
        mutablePeriod18.addMonths(10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        boolean boolean42 = interval32.isAfter((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Period period43 = interval41.toPeriod();
        org.joda.time.DateTime dateTime44 = interval41.getStart();
        org.joda.time.DateTimeZone dateTimeZone45 = dateTime44.getZone();
        org.joda.time.Period period46 = duration22.toPeriodFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Period period48 = period46.minusMonths((int) (short) 100);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) period48);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0H" + "'", str17, "PT0H");
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(dateTimeZone45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test03544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03544");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType6 = minutes5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', periodType6, chronology8);
        org.joda.time.PeriodType periodType10 = periodType6.withYearsRemoved();
        java.lang.String str11 = periodType10.toString();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (byte) 10, 1644572196594L, periodType10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period15 = duration14.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardDays((long) (-10));
        org.joda.time.Duration duration19 = duration14.withDurationAdded((org.joda.time.ReadableDuration) duration17, 6);
        org.joda.time.Duration duration22 = duration14.withDurationAdded(1644572160445L, (-97));
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod12.add((org.joda.time.ReadableDuration) duration22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: -2658724992");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PeriodType[Minutes]" + "'", str11, "PeriodType[Minutes]");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration22);
    }

    @Test
    public void test03545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03545");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setYears(1);
        org.joda.time.Period period22 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period24 = period22.plusYears((int) (byte) 10);
        boolean boolean25 = mutablePeriod9.equals((java.lang.Object) (byte) 10);
        int int26 = mutablePeriod9.getHours();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType30 = minutes29.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes29.toMutablePeriod();
        mutablePeriod31.setHours((int) (byte) -1);
        mutablePeriod31.add((long) 10);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period37 = new org.joda.time.Period((java.lang.Object) minutes36);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType42 = mutablePeriod40.getFieldType(1);
        boolean boolean43 = minutes36.isSupported(durationFieldType42);
        int int44 = mutablePeriod31.get(durationFieldType42);
        boolean boolean45 = mutablePeriod9.isSupported(durationFieldType42);
        java.lang.Object obj46 = mutablePeriod9.clone();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) (short) 100, chronology48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.eras();
        boolean boolean51 = period49.isSupported(durationFieldType50);
        java.lang.String str52 = durationFieldType50.toString();
        int int53 = mutablePeriod9.get(durationFieldType50);
        mutablePeriod9.addSeconds((int) (byte) 10);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "P1YT2147483647M10S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "P1YT2147483647M10S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "P1YT2147483647M10S");
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "eras" + "'", str52, "eras");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test03546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03546");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(3);
        org.joda.time.Duration duration2 = minutes1.toStandardDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        long long5 = duration4.getMillis();
        org.joda.time.Minutes minutes6 = duration4.toStandardMinutes();
        java.lang.String str7 = minutes6.toString();
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        long long12 = duration11.getMillis();
        org.joda.time.Minutes minutes13 = duration11.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes15 = minutes9.plus(minutes13);
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes6.plus(minutes16);
        org.joda.time.DurationFieldType durationFieldType18 = minutes16.getFieldType();
        boolean boolean19 = minutes1.isLessThan(minutes16);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 52L + "'", long5 == 52L);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0M" + "'", str7, "PT0M");
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03547");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        mutablePeriod3.add(0, (-1), (int) (short) 1, (int) (byte) 0, (int) (byte) 0, 1, 10, (int) '4');
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) duration20, periodType26, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis((long) '4');
        long long31 = duration30.getStandardDays();
        boolean boolean32 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration30);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration30);
        mutablePeriod3.setHours(22);
        org.joda.time.Period period37 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Period period38 = period37.negated();
        org.joda.time.Period period40 = period38.plusMinutes((-1));
        int[] intArray41 = period38.getValues();
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.Seconds seconds46 = period45.toStandardSeconds();
        org.joda.time.Seconds seconds47 = period45.toStandardSeconds();
        org.joda.time.PeriodType periodType50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType50);
        mutablePeriod51.setYears(0);
        mutablePeriod51.setWeeks((int) (short) -1);
        boolean boolean56 = period45.equals((java.lang.Object) mutablePeriod51);
        org.joda.time.Duration duration57 = period45.toStandardDuration();
        org.joda.time.Period period59 = period45.plusMinutes((int) (short) 10);
        org.joda.time.Period period60 = period38.plus((org.joda.time.ReadablePeriod) period59);
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) period59);
        int int62 = mutablePeriod3.getMillis();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0, 0, 0, 0, 0, 0, -97]");
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(seconds47);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test03548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03548");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) (short) 1);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration73 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration71, (int) (short) 100);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardSeconds(1644572130657L);
        java.lang.String str77 = duration76.toString();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration76);
        mutablePeriod78.addMillis((-10));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT1644572130657S" + "'", str77, "PT1644572130657S");
    }

    @Test
    public void test03549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03549");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Duration duration29 = duration25.plus((-1L));
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.Chronology chronology31 = dateTime10.getChronology();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        org.joda.time.Interval interval75 = interval74.toInterval();
        org.joda.time.DateTime dateTime76 = interval75.getEnd();
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime65, (org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.Minutes minutes78 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime53, (org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.DateTimeFieldType dateTimeFieldType79 = null;
        boolean boolean80 = dateTime76.isSupported(dateTimeFieldType79);
        boolean boolean81 = dateTime10.isBefore((org.joda.time.ReadableInstant) dateTime76);
        org.joda.time.DateTimeFieldType dateTimeFieldType82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = dateTime76.get(dateTimeFieldType82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(chronology31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test03550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03550");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.eras();
        int int5 = periodType2.indexOf(durationFieldType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.Chronology chronology16 = interval15.getChronology();
        org.joda.time.Period period17 = new org.joda.time.Period((long) 1, periodType2, chronology16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(periodType19);
        org.joda.time.Period period21 = period17.minus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod20.copy();
        int int23 = mutablePeriod22.getSeconds();
        int int24 = mutablePeriod22.getYears();
        org.joda.time.MutablePeriod mutablePeriod25 = mutablePeriod22.copy();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod25.addDays(97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(chronology16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod25);
    }

    @Test
    public void test03551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03551");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval8);
        long long11 = interval8.toDurationMillis();
        org.joda.time.DateTime dateTime12 = interval8.getEnd();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime12, readableInstant13);
        org.joda.time.DateTimeFieldType dateTimeFieldType15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = dateTime12.get(dateTimeFieldType15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(dateTime12);
    }

    @Test
    public void test03552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03552");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.Period period7 = period4.minusWeeks((int) (short) 100);
        org.joda.time.Period period9 = period7.plusMillis((int) (short) 100);
        org.joda.time.Period period11 = period7.minusMinutes(2147483647);
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        org.joda.time.Period period13 = period11.minus(readablePeriod12);
        org.joda.time.Period period15 = period11.withYears(9);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test03553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03553");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (byte) 100);
        long long2 = duration1.getStandardSeconds();
        java.lang.String str3 = duration1.toString();
        long long4 = duration1.getMillis();
        long long5 = duration1.getStandardDays();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (byte) 0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        long long18 = interval16.toDurationMillis();
        org.joda.time.DateTime dateTime19 = interval16.getStart();
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType22);
        org.joda.time.PeriodType periodType24 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime19, periodType24);
        org.joda.time.Interval interval26 = duration1.toIntervalFrom((org.joda.time.ReadableInstant) dateTime19);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        boolean boolean46 = interval36.isAfter((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        boolean boolean67 = interval57.isAfter((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Period period68 = interval66.toPeriod();
        boolean boolean69 = interval45.isAfter((org.joda.time.ReadableInterval) interval66);
        org.joda.time.Interval interval70 = interval45.toInterval();
        org.joda.time.Interval interval71 = interval45.toInterval();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        long long82 = interval80.toDurationMillis();
        org.joda.time.Interval interval83 = interval80.toInterval();
        org.joda.time.Weeks weeks84 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval80);
        org.joda.time.Duration duration85 = interval80.toDuration();
        org.joda.time.DateTime dateTime86 = interval80.getEnd();
        boolean boolean87 = interval71.isAfter((org.joda.time.ReadableInstant) dateTime86);
        boolean boolean88 = dateTime19.isEqual((org.joda.time.ReadableInstant) dateTime86);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 360000L + "'", long2 == 360000L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT360000S" + "'", str3, "PT360000S");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 360000000L + "'", long4 == 360000000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 4L + "'", long5 == 4L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(weeks84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(dateTime86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test03554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03554");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        boolean boolean20 = interval10.isAfter((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Period period22 = interval19.toPeriod();
        org.joda.time.Duration duration23 = interval19.toDuration();
        org.joda.time.DateTime dateTime24 = interval19.getEnd();
        org.joda.time.ReadableInterval readableInterval25 = null;
        boolean boolean26 = interval19.contains(readableInterval25);
        org.joda.time.Period period27 = interval19.toPeriod();
        org.joda.time.Period period29 = org.joda.time.Period.parse("P2719W36DT10H35M31.442S");
        org.joda.time.PeriodType periodType30 = period29.getPeriodType();
        org.joda.time.Period period31 = interval19.toPeriod(periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withMillisRemoved();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration37.toPeriodFrom(readableInstant38);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration37.toPeriod(chronology40);
        java.lang.String str42 = period41.toString();
        org.joda.time.MutablePeriod mutablePeriod43 = period41.toMutablePeriod();
        org.joda.time.PeriodType periodType44 = mutablePeriod43.getPeriodType();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        long long54 = interval53.getStartMillis();
        org.joda.time.Chronology chronology55 = interval53.getChronology();
        org.joda.time.Period period56 = new org.joda.time.Period((long) 52, 1644572180344L, periodType44, chronology55);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period57 = new org.joda.time.Period((java.lang.Object) "2022-02-11T09:38:50.853Z", periodType30, chronology55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:50.853Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "PT0.097S" + "'", str42, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
// flaky:         org.junit.Assert.assertTrue("'" + long54 + "' != '" + 1644572341953L + "'", long54 == 1644572341953L);
        org.junit.Assert.assertNotNull(chronology55);
    }

    @Test
    public void test03555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03555");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        boolean boolean7 = weeks1.isLessThan(weeks6);
        org.joda.time.Weeks weeks9 = weeks1.minus((-1));
        org.joda.time.Duration duration10 = weeks1.toStandardDuration();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 100, (-1L), periodType13);
        org.joda.time.format.PeriodFormatter periodFormatter15 = null;
        java.lang.String str16 = mutablePeriod14.toString(periodFormatter15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        boolean boolean46 = interval36.isAfter((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Period period47 = interval45.toPeriod();
        boolean boolean48 = interval26.isBefore((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Interval interval49 = interval26.toInterval();
        mutablePeriod14.add((org.joda.time.ReadableInterval) interval26);
        long long51 = interval26.getStartMillis();
        org.joda.time.DateTime dateTime52 = interval26.getEnd();
        long long53 = interval26.toDurationMillis();
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks57 = weeks56.negated();
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks61 = weeks57.minus(weeks60);
        org.joda.time.Weeks weeks63 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks64 = weeks63.negated();
        int int65 = weeks63.getWeeks();
        org.joda.time.Weeks weeks66 = weeks61.minus(weeks63);
        org.joda.time.Weeks weeks68 = weeks61.minus((int) (short) 10);
        org.joda.time.Weeks weeks70 = weeks68.dividedBy(8);
        boolean boolean71 = weeks54.isLessThan(weeks68);
        boolean boolean72 = weeks1.isLessThan(weeks54);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT0.101S" + "'", str16, "PT0.101S");
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(interval49);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572342080L + "'", long51 == 1644572342080L);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test03556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03556");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days7 = days4.multipliedBy((int) (short) 0);
        java.lang.String str8 = days7.toString();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) days7);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod9.addMillis(36000032);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P0D" + "'", str8, "P0D");
    }

    @Test
    public void test03557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03557");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval8);
        org.joda.time.Duration duration11 = seconds10.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod12 = seconds10.toMutablePeriod();
        mutablePeriod12.setPeriod(1644572143650L);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = mutablePeriod12.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test03558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03558");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 10);
        org.joda.time.Period period3 = period1.withMillis((-10));
        org.joda.time.Period period5 = period3.withMonths((int) (byte) 10);
        org.joda.time.Period period7 = period5.plusYears((-2231));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test03559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03559");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        int int3 = seconds2.size();
        org.joda.time.Period period5 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period7 = period5.minusMillis((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period7);
        boolean boolean9 = seconds2.isGreaterThan(seconds8);
        org.joda.time.PeriodType periodType10 = seconds2.getPeriodType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.plus((-1));
        org.joda.time.DurationFieldType durationFieldType15 = seconds11.getFieldType();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.plus((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        java.lang.String str22 = seconds21.toString();
        org.joda.time.Seconds seconds23 = seconds20.plus(seconds21);
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds21);
        org.joda.time.Seconds seconds25 = seconds11.plus(seconds16);
        org.joda.time.PeriodType periodType26 = seconds25.getPeriodType();
        boolean boolean27 = seconds2.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        org.joda.time.Seconds seconds32 = seconds29.plus((-1));
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        java.lang.String str34 = seconds33.toString();
        org.joda.time.Seconds seconds35 = seconds32.plus(seconds33);
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds33);
        org.joda.time.Seconds seconds38 = seconds36.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds39 = seconds2.minus(seconds36);
        org.joda.time.Seconds seconds41 = seconds2.minus(58);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2S" + "'", str22, "PT2S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2S" + "'", str34, "PT2S");
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(seconds41);
    }

    @Test
    public void test03560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03560");
        org.joda.time.Period period8 = new org.joda.time.Period(3, 22, 2147483647, 0, (int) (byte) -1, 7, 69, (-456825));
    }

    @Test
    public void test03561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03561");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.millis();
        int int3 = periodType1.indexOf(durationFieldType2);
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        java.lang.Object obj8 = null;
        org.joda.time.Duration duration9 = new org.joda.time.Duration(obj8);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        boolean boolean11 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration9.toIntervalTo(readableInstant12);
        org.joda.time.Interval interval14 = interval13.toInterval();
        org.joda.time.DateTime dateTime15 = interval14.getEnd();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.DateTime dateTime26 = interval25.getEnd();
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime15, (org.joda.time.ReadableInstant) dateTime26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Minutes minutes51 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime26, (org.joda.time.ReadableInstant) dateTime49);
        boolean boolean52 = periodType4.equals((java.lang.Object) dateTime49);
        org.joda.time.Chronology chronology53 = dateTime49.getChronology();
        org.joda.time.DurationField durationField54 = durationFieldType2.getField(chronology53);
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(chronology53);
        org.junit.Assert.assertNotNull(durationField54);
    }

    @Test
    public void test03562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03562");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("2022-02-11T09:36:00.667Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:00.667Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03563");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType12);
        mutablePeriod13.setYears(0);
        mutablePeriod9.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod13.setWeeks((int) (byte) 10);
        mutablePeriod13.addWeeks((int) (short) 1);
        int int21 = mutablePeriod13.getMinutes();
        mutablePeriod13.add((long) '4');
        mutablePeriod13.addMillis((int) (byte) -1);
        java.lang.String str26 = mutablePeriod13.toString();
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "P11WT0.050S" + "'", str26, "P11WT0.050S");
    }

    @Test
    public void test03564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03564");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572191248L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test03565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03565");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(10L, periodType3);
        int int6 = mutablePeriod5.getMillis();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration14 = duration11.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration16 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration11, (int) (short) 1);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration22 = duration19.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration24 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration22, (int) (short) 100);
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod();
        mutablePeriod26.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod26, periodType30);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Chronology chronology45 = interval44.getChronology();
        boolean boolean46 = durationFieldType34.isSupported(chronology45);
        mutablePeriod26.setPeriod((long) 0, (long) 8, chronology45);
        org.joda.time.Period period48 = duration24.toPeriod(chronology45);
        org.joda.time.Period period49 = new org.joda.time.Period(1644572137529L, chronology45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period50 = new org.joda.time.Period((java.lang.Object) chronology45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.chrono.ISOChronology");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(chronology45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test03566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03566");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        int int1 = weeks0.size();
        org.joda.time.Duration duration2 = weeks0.toStandardDuration();
        java.lang.String str3 = weeks0.toString();
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean7 = weeks4.isGreaterThan(weeks6);
        org.joda.time.PeriodType periodType8 = weeks4.getPeriodType();
        org.joda.time.Weeks weeks10 = weeks4.plus(22);
        boolean boolean11 = weeks0.isGreaterThan(weeks10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks13 = weeks10.multipliedBy((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -2147483626 * -6");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "P3W" + "'", str3, "P3W");
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test03567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03567");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.minutesIn(readableInterval5);
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        boolean boolean8 = minutes4.isLessThan(minutes6);
        java.lang.String str9 = minutes4.toString();
        org.joda.time.DurationFieldType durationFieldType10 = minutes4.getFieldType();
        java.lang.String str11 = durationFieldType10.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0M" + "'", str9, "PT0M");
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "minutes" + "'", str11, "minutes");
    }

    @Test
    public void test03568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03568");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572238076L, 1644572208217L);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((-106L), (long) (-52));
        boolean boolean6 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test03569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03569");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period33 = seconds32.toPeriod();
        org.joda.time.Period period35 = period33.withMinutes((int) (byte) 10);
        org.joda.time.Period period37 = period33.minusWeeks(29);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test03570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03570");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = duration9.toStandardDays();
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.Days days17 = duration15.toStandardDays();
        org.joda.time.Days days18 = days17.negated();
        org.joda.time.Days days19 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days21 = days19.minus(1);
        boolean boolean22 = days18.isLessThan(days21);
        org.joda.time.Days days24 = days18.multipliedBy((int) (byte) 0);
        org.joda.time.Days days26 = org.joda.time.Days.days((int) (short) -1);
        org.joda.time.Period period31 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period33 = period31.plusDays(1);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        org.joda.time.Days days38 = duration36.toStandardDays();
        org.joda.time.Days days39 = days38.negated();
        org.joda.time.Period period40 = period33.plus((org.joda.time.ReadablePeriod) days38);
        org.joda.time.Days days41 = days26.plus(days38);
        org.joda.time.DurationFieldType durationFieldType42 = days41.getFieldType();
        org.joda.time.Days days43 = days24.plus(days41);
        org.joda.time.Days days44 = days12.plus(days24);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = duration47.toPeriodFrom(readableInstant48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration47.toPeriod(chronology50);
        org.joda.time.Period period53 = period51.withYears((int) (byte) 10);
        org.joda.time.Period period54 = period51.toPeriod();
        org.joda.time.Period period56 = period54.minusWeeks((int) (byte) 10);
        org.joda.time.Days days57 = period54.toStandardDays();
        org.joda.time.Days days58 = days44.minus(days57);
        org.joda.time.Days days59 = null;
        boolean boolean60 = days58.isGreaterThan(days59);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test03571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03571");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (byte) 10);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03572");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setMonths((int) (byte) 1);
        int int18 = mutablePeriod9.getMonths();
        mutablePeriod9.setPeriod(0L);
        mutablePeriod9.setPeriod((int) (byte) 10, (int) (short) -1, 0, (int) (byte) 0, (int) 'a', (int) (short) 1, (int) (short) 0, (int) (byte) 10);
        mutablePeriod9.setPeriod(1644572143942L, 1644572152813L);
        int int33 = mutablePeriod9.getDays();
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test03573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03573");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572126273L, periodType1);
        mutablePeriod2.setPeriod((long) (short) 1, (long) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addHours(6);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        boolean boolean28 = interval18.isAfter((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval27);
        org.joda.time.DateTime dateTime30 = interval27.getEnd();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.DateTime dateTime41 = interval40.getEnd();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime41, (org.joda.time.ReadableInstant) dateTime52);
        boolean boolean54 = dateTime30.isEqual((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration55 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        int int64 = duration57.compareTo((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (byte) 100);
        long long69 = duration68.getStandardSeconds();
        java.lang.String str70 = duration68.toString();
        long long71 = duration68.getMillis();
        long long72 = duration68.getStandardDays();
        org.joda.time.Duration duration73 = duration60.minus((org.joda.time.ReadableDuration) duration68);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration68);
        mutablePeriod2.setHours((-23));
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
// flaky:         org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 360000L + "'", long69 == 360000L);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT360000S" + "'", str70, "PT360000S");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 360000000L + "'", long71 == 360000000L);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 4L + "'", long72 == 4L);
        org.junit.Assert.assertNotNull(duration73);
    }

    @Test
    public void test03574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03574");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("P-1D");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03575");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.Hours hours39 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Hours hours40 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval38);
        boolean boolean41 = interval28.overlaps((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.Hours hours52 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval51);
        boolean boolean53 = interval38.contains((org.joda.time.ReadableInterval) interval51);
        boolean boolean54 = interval18.contains((org.joda.time.ReadableInterval) interval38);
        org.joda.time.Period period55 = interval38.toPeriod();
        org.joda.time.MutableInterval mutableInterval56 = interval38.toMutableInterval();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(mutableInterval56);
    }

    @Test
    public void test03576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03576");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Period period2 = period1.negated();
        org.joda.time.Period period4 = period2.plusMinutes((-1));
        int[] intArray5 = period2.getValues();
        org.joda.time.Period period7 = period2.plusWeeks((int) (short) -1);
        org.joda.time.Period period9 = period7.withWeeks((-10));
        org.joda.time.Period period11 = period9.plusMinutes((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod12 = period9.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period14 = period9.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -10 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 0, 0, -97]");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test03577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03577");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572206945L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        long long4 = duration3.getMillis();
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Period period65 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime51);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:39:02.926Z" + "'", str39, "2022-02-11T09:39:02.926Z");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test03578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03578");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType18);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) 1);
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) minutes22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        mutablePeriod19.setPeriod((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis((long) '4');
        long long36 = duration35.getMillis();
        org.joda.time.PeriodType periodType39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType39);
        mutablePeriod40.setYears(0);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod40.setPeriod((org.joda.time.ReadableDuration) duration44, chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime57, (org.joda.time.ReadableInstant) dateTime68);
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, (org.joda.time.ReadableInstant) dateTime57);
        java.lang.String str71 = dateTime57.toString();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime57);
        boolean boolean73 = interval32.isAfter((org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime57);
        mutablePeriod74.addHours(52);
        mutablePeriod74.setPeriod(1644572311197L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 52L + "'", long36 == 52L);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "2022-02-11T09:39:02.989Z" + "'", str71, "2022-02-11T09:39:02.989Z");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test03579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03579");
        org.joda.time.Hours hours0 = org.joda.time.Hours.FIVE;
        org.joda.time.Hours hours2 = hours0.multipliedBy((int) (short) 1);
        int int3 = hours2.getHours();
        org.joda.time.Hours hours5 = hours2.multipliedBy(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        boolean boolean35 = interval25.isAfter((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Period period36 = interval34.toPeriod();
        boolean boolean37 = interval15.isBefore((org.joda.time.ReadableInterval) interval34);
        long long38 = interval15.getEndMillis();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration41.toPeriodFrom(readableInstant42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration41.toPeriod(chronology44);
        java.lang.String str46 = period45.toString();
        org.joda.time.MutablePeriod mutablePeriod47 = period45.toMutablePeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        long long57 = interval56.getStartMillis();
        mutablePeriod47.setPeriod((org.joda.time.ReadableInterval) interval56);
        boolean boolean59 = interval15.isBefore((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Hours hours60 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval15);
        org.joda.time.Hours hours61 = hours2.minus(hours60);
        org.joda.time.DurationFieldType durationFieldType62 = hours2.getFieldType();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1644572343024L + "'", long38 == 1644572343024L);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT0.097S" + "'", str46, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
// flaky:         org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1644572343024L + "'", long57 == 1644572343024L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(hours61);
        org.junit.Assert.assertNotNull(durationFieldType62);
    }

    @Test
    public void test03580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03580");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-49));
        org.joda.time.Weeks weeks2 = period1.toStandardWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test03581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03581");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (-10));
        org.joda.time.Duration duration6 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, 6);
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(22, 0, 22, 3);
        mutablePeriod12.addDays((int) (short) 100);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (short) 100, (-1L), periodType17);
        org.joda.time.format.PeriodFormatter periodFormatter19 = null;
        java.lang.String str20 = mutablePeriod18.toString(periodFormatter19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        org.joda.time.Interval interval40 = interval39.toInterval();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        boolean boolean50 = interval40.isAfter((org.joda.time.ReadableInterval) interval49);
        org.joda.time.Period period51 = interval49.toPeriod();
        boolean boolean52 = interval30.isBefore((org.joda.time.ReadableInterval) interval49);
        org.joda.time.Interval interval53 = interval30.toInterval();
        mutablePeriod18.add((org.joda.time.ReadableInterval) interval30);
        long long55 = interval30.getStartMillis();
        mutablePeriod12.add((org.joda.time.ReadableInterval) interval30);
        org.joda.time.DateTime dateTime57 = interval30.getEnd();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval58 = duration6.toIntervalFrom((org.joda.time.ReadableInstant) dateTime57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0.101S" + "'", str20, "PT0.101S");
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(interval53);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1644572343095L + "'", long55 == 1644572343095L);
        org.junit.Assert.assertNotNull(dateTime57);
    }

    @Test
    public void test03582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03582");
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes6 = minutes4.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType7 = minutes6.getPeriodType();
        org.joda.time.PeriodType periodType8 = periodType7.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.eras();
        boolean boolean10 = periodType7.isSupported(durationFieldType9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        boolean boolean42 = interval20.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType90 = periodType89.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(10L, periodType90);
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime87, periodType90);
        boolean boolean94 = interval31.isAfter((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Chronology chronology95 = dateTime63.getChronology();
        org.joda.time.Period period96 = new org.joda.time.Period(10L, 52L, periodType7, chronology95);
        org.joda.time.PeriodType periodType97 = periodType7.withHoursRemoved();
        org.joda.time.PeriodType periodType98 = periodType7.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod99 = new org.joda.time.MutablePeriod(1644572302005L, 1644572332362L, periodType7);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(chronology95);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertNotNull(periodType98);
    }

    @Test
    public void test03583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03583");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 10);
        org.joda.time.Period period3 = period1.withMillis((-10));
        org.joda.time.Period period5 = period3.withMonths((int) (byte) 10);
        org.joda.time.Period period7 = period3.plusDays(1);
        int int8 = period3.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test03584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03584");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (short) 100, (-1L), periodType4);
        org.joda.time.Period period6 = new org.joda.time.Period(1L, (long) 52, periodType4);
        org.joda.time.Period period8 = period6.minusMinutes(6);
        int int9 = period8.getDays();
        org.joda.time.Period period11 = period8.withHours(8);
        org.joda.time.Period period13 = period8.minusMonths(10);
        int int14 = period8.getYears();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03585");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        mutablePeriod3.setMillis((int) (short) 10);
        org.joda.time.Period period13 = org.joda.time.Period.days(100);
        org.joda.time.Period period15 = period13.withMillis(1);
        org.joda.time.Hours hours16 = period13.toStandardHours();
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Hours hours18 = org.joda.time.Hours.hoursIn(readableInterval17);
        org.joda.time.Hours hours19 = hours18.negated();
        org.joda.time.Hours hours20 = hours16.plus(hours19);
        org.joda.time.PeriodType periodType21 = hours19.getPeriodType();
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) hours19);
        int int23 = hours19.getHours();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test03586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03586");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType1 = periodType0.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType4 = periodType3.withMillisRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) mutablePeriod2, periodType3);
        java.lang.String str6 = period5.toString();
        org.joda.time.PeriodType periodType7 = period5.getPeriodType();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test03587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03587");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("2022-02-11T09:37:51.898Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:51.898Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03588");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) ' ');
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.addMillis((-1));
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        boolean boolean27 = interval17.isAfter((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Period period29 = interval26.toPeriod();
        mutablePeriod5.add((org.joda.time.ReadableInterval) interval26);
        mutablePeriod5.add((int) 'a', (int) ' ', (int) (short) -1, (int) (short) 10, (int) (byte) 10, (int) '#', (int) (byte) 100, (-97));
        mutablePeriod5.setMinutes((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod42 = mutablePeriod5.copy();
        org.joda.time.PeriodType periodType51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType51);
        org.joda.time.PeriodType periodType55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType55);
        mutablePeriod56.setYears(0);
        mutablePeriod52.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod56);
        mutablePeriod56.setWeeks((int) (byte) 10);
        mutablePeriod56.add((long) 8);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.minutes();
        int int65 = mutablePeriod56.get(durationFieldType64);
        boolean boolean66 = mutablePeriod42.isSupported(durationFieldType64);
        org.joda.time.Period period68 = period1.withFieldAdded(durationFieldType64, (-10));
        org.joda.time.Period period70 = period68.minusYears(97);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
    }

    @Test
    public void test03589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03589");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((-99));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        boolean boolean21 = interval11.isAfter((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Duration duration23 = minutes22.toStandardDuration();
        org.joda.time.Minutes minutes24 = minutes1.plus(minutes22);
        org.joda.time.Minutes minutes25 = minutes22.negated();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
    }

    @Test
    public void test03590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03590");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType40 = minutes39.getFieldType();
        int int41 = periodType36.indexOf(durationFieldType40);
        java.lang.String str42 = durationFieldType40.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "minutes" + "'", str42, "minutes");
    }

    @Test
    public void test03591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03591");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology1);
        mutablePeriod2.setDays((int) (short) 0);
        java.lang.Object obj5 = mutablePeriod2.clone();
        mutablePeriod2.setSeconds((-2));
        int int8 = mutablePeriod2.getDays();
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "PT-2S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "PT-2S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "PT-2S");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test03592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03592");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT30M");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03593");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.parseMinutes("PT0M");
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.Period period5 = new org.joda.time.Period(1644572208817L, 1644572148725L, periodType4);
        int int6 = period5.getHours();
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test03594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03594");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        int int3 = seconds2.size();
        org.joda.time.Seconds seconds5 = seconds2.plus((-9700));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = seconds6.getFieldType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        java.lang.String str17 = seconds16.toString();
        org.joda.time.Seconds seconds18 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds11.minus(seconds16);
        org.joda.time.Seconds seconds20 = seconds6.plus(seconds11);
        org.joda.time.Duration duration21 = seconds6.toStandardDuration();
        java.lang.String str22 = seconds6.toString();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.TWO;
        java.lang.String str24 = seconds23.toString();
        boolean boolean25 = seconds6.isGreaterThan(seconds23);
        org.joda.time.Seconds seconds26 = seconds2.minus(seconds23);
        org.joda.time.Seconds seconds27 = seconds26.negated();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((java.lang.Object) duration29, periodType35, chronology36);
        org.joda.time.DurationFieldType[] durationFieldTypeArray38 = mutablePeriod37.getFieldTypes();
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration41.toPeriodFrom(readableInstant42);
        org.joda.time.Duration duration45 = duration41.plus((-1L));
        org.joda.time.Chronology chronology46 = null;
        mutablePeriod37.setPeriod((org.joda.time.ReadableDuration) duration45, chronology46);
        org.joda.time.Seconds seconds48 = duration45.toStandardSeconds();
        org.joda.time.Seconds seconds50 = seconds48.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType51 = seconds50.getFieldType();
        org.joda.time.Seconds seconds52 = seconds26.plus(seconds50);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((java.lang.Object) duration54, periodType60, chronology61);
        org.joda.time.DurationFieldType[] durationFieldTypeArray63 = mutablePeriod62.getFieldTypes();
        org.joda.time.Duration duration66 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = duration66.toPeriodFrom(readableInstant67);
        org.joda.time.Duration duration70 = duration66.plus((-1L));
        org.joda.time.Chronology chronology71 = null;
        mutablePeriod62.setPeriod((org.joda.time.ReadableDuration) duration70, chronology71);
        org.joda.time.Seconds seconds73 = duration70.toStandardSeconds();
        org.joda.time.Seconds seconds74 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType75 = seconds74.getFieldType();
        org.joda.time.Seconds seconds77 = seconds74.plus((-1));
        org.joda.time.DurationFieldType durationFieldType78 = seconds74.getFieldType();
        org.joda.time.Seconds seconds79 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds80 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType81 = seconds80.getFieldType();
        org.joda.time.Seconds seconds83 = seconds80.plus((-1));
        org.joda.time.Seconds seconds84 = org.joda.time.Seconds.TWO;
        java.lang.String str85 = seconds84.toString();
        org.joda.time.Seconds seconds86 = seconds83.plus(seconds84);
        org.joda.time.Seconds seconds87 = seconds79.minus(seconds84);
        org.joda.time.Seconds seconds88 = seconds74.plus(seconds79);
        org.joda.time.Seconds seconds89 = seconds88.negated();
        org.joda.time.Duration duration90 = seconds89.toStandardDuration();
        boolean boolean91 = seconds73.isGreaterThan(seconds89);
        org.joda.time.Seconds seconds92 = seconds52.minus(seconds89);
        int int93 = seconds52.getSeconds();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0S" + "'", str22, "PT0S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2S" + "'", str24, "PT2S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldTypeArray38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(durationFieldTypeArray63);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(seconds73);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(seconds79);
        org.junit.Assert.assertNotNull(seconds80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(seconds83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PT2S" + "'", str85, "PT2S");
        org.junit.Assert.assertNotNull(seconds86);
        org.junit.Assert.assertNotNull(seconds87);
        org.junit.Assert.assertNotNull(seconds88);
        org.junit.Assert.assertNotNull(seconds89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(seconds92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test03595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03595");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("P6D");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03596");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks2 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean3 = weeks0.isGreaterThan(weeks2);
        org.joda.time.PeriodType periodType4 = weeks0.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withMinutesRemoved();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test03597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03597");
        org.joda.time.Hours hours0 = org.joda.time.Hours.ONE;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.DurationFieldType durationFieldType14 = hours12.getFieldType((int) (short) 0);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Hours hours25 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Hours hours26 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Hours hours28 = hours26.multipliedBy((int) 'a');
        org.joda.time.Hours hours30 = hours28.multipliedBy((-3));
        boolean boolean31 = hours12.isLessThan(hours30);
        org.joda.time.Hours hours33 = hours30.dividedBy(5);
        boolean boolean34 = hours0.isGreaterThan(hours30);
        org.joda.time.Hours hours36 = hours30.multipliedBy((-2147483647));
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hours36);
    }

    @Test
    public void test03598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03598");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        int int6 = mutablePeriod5.getDays();
        int int7 = mutablePeriod5.getMinutes();
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period(5, (int) (byte) 1, 100, 2147483647, (int) (short) 100, 3, 6, (int) '4', periodType16);
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1644572126273L, periodType19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) ' ', chronology22);
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType26);
        mutablePeriod27.setYears(0);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology32 = null;
        mutablePeriod27.setPeriod((org.joda.time.ReadableDuration) duration31, chronology32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration62.toIntervalTo(readableInstant65);
        org.joda.time.Interval interval67 = interval66.toInterval();
        org.joda.time.DateTime dateTime68 = interval67.getEnd();
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType71 = periodType70.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(periodType71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(10L, periodType71);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableInstant) dateTime68, periodType71);
        org.joda.time.Duration duration75 = mutablePeriod23.toDurationFrom((org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType80 = mutablePeriod78.getFieldType(1);
        boolean boolean81 = mutablePeriod23.isSupported(durationFieldType80);
        mutablePeriod20.add(durationFieldType80, 1);
        org.joda.time.Period period85 = period17.withField(durationFieldType80, (-2147483648));
        mutablePeriod5.add(durationFieldType80, (-99));
        mutablePeriod5.setWeeks((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(interval67);
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(period85);
    }

    @Test
    public void test03599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03599");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(0L);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology3);
        java.lang.String str5 = mutablePeriod4.toString();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        long long15 = interval14.getStartMillis();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType18);
        mutablePeriod19.setYears(0);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime36);
        boolean boolean50 = interval14.isBefore((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration51 = mutablePeriod4.toDurationFrom((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Chronology chronology52 = dateTime36.getChronology();
        org.joda.time.Duration duration53 = mutablePeriod1.toDurationTo((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period54 = duration53.toPeriod();
        int int55 = period54.getMinutes();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0S" + "'", str5, "PT0S");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1644572343872L + "'", long15 == 1644572343872L);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(chronology52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test03600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03600");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) weeks2);
        org.joda.time.PeriodType periodType4 = weeks2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod5 = weeks2.toMutablePeriod();
        org.joda.time.Duration duration8 = new org.joda.time.Duration(1644572152112L, 1644572122326L);
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration8);
        mutablePeriod5.setPeriod(1644572151346L);
        mutablePeriod5.setYears(6);
        mutablePeriod5.addMillis(35);
        mutablePeriod5.addDays(1);
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test03601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03601");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:37:58.256Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:58.256Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03602");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (-100));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test03603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03603");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) (short) 1);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration73 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration71, (int) (short) 100);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration73);
        long long75 = duration73.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 601L + "'", long75 == 601L);
    }

    @Test
    public void test03604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03604");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("PT-0.098S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03605");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 0);
        org.joda.time.Seconds seconds3 = seconds1.dividedBy((int) (short) 100);
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        org.joda.time.PeriodType periodType10 = mutablePeriod9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1644572190475L, periodType11);
        mutablePeriod12.addMillis((-99));
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        boolean boolean34 = interval24.isAfter((org.joda.time.ReadableInterval) interval33);
        long long35 = interval33.toDurationMillis();
        org.joda.time.Interval interval36 = interval33.toInterval();
        org.joda.time.DateTime dateTime37 = interval33.getEnd();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        boolean boolean57 = interval47.isAfter((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Period period58 = interval56.toPeriod();
        org.joda.time.Period period59 = interval56.toPeriod();
        org.joda.time.DateTime dateTime60 = interval56.getStart();
        long long61 = dateTime60.getMillis();
        mutablePeriod12.setPeriod((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.Duration duration65 = new org.joda.time.Duration(903L);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType72 = seconds71.getFieldType();
        org.joda.time.Seconds seconds74 = seconds71.plus((-1));
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.TWO;
        java.lang.String str76 = seconds75.toString();
        org.joda.time.Seconds seconds77 = seconds74.plus(seconds75);
        org.joda.time.Seconds seconds78 = seconds70.minus(seconds75);
        org.joda.time.Duration duration81 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = duration81.toPeriodFrom(readableInstant82);
        org.joda.time.Period period85 = period83.minusSeconds((int) '4');
        org.joda.time.Period period87 = period83.minusSeconds(10);
        org.joda.time.Period period89 = period83.withWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds90 = period83.toStandardSeconds();
        org.joda.time.Seconds seconds91 = seconds70.minus(seconds90);
        org.joda.time.PeriodType periodType92 = seconds91.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(1644572161373L, 1644572149256L, periodType92);
        org.joda.time.Period period94 = new org.joda.time.Period(1644572234016L, 4L, periodType92);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration65, periodType92);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType97 = periodType92.getFieldType(31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 31");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(dateTime60);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572344054L + "'", long61 == 1644572344054L);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT2S" + "'", str76, "PT2S");
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertNotNull(periodType92);
    }

    @Test
    public void test03606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03606");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        mutablePeriod4.setValue(1, 30);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4);
        mutablePeriod8.setHours((-1));
        java.lang.Object obj11 = mutablePeriod8.clone();
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1644572126273L, periodType13);
        mutablePeriod14.setPeriod((long) (short) 1, (long) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod14.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration21.toPeriod(chronology23);
        org.joda.time.Minutes minutes25 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes27 = minutes25.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType28 = minutes27.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.eras();
        boolean boolean31 = periodType28.isSupported(durationFieldType30);
        java.lang.String str32 = durationFieldType30.getName();
        java.lang.String str33 = durationFieldType30.getName();
        boolean boolean34 = period24.isSupported(durationFieldType30);
        int int35 = mutablePeriod14.get(durationFieldType30);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.add(durationFieldType30, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'eras'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "P30MT-1H10M0.010S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "P30MT-1H10M0.010S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "P30MT-1H10M0.010S");
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "eras" + "'", str32, "eras");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "eras" + "'", str33, "eras");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test03607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03607");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572135205L);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration12 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration7, (int) (short) 1);
        org.joda.time.Days days13 = duration12.toStandardDays();
        org.joda.time.Duration duration15 = duration12.minus((long) 10);
        org.joda.time.Duration duration18 = duration15.withDurationAdded(1644572137840L, 100);
        boolean boolean19 = duration1.isEqual((org.joda.time.ReadableDuration) duration15);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03608");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) duration3, periodType9, chronology10);
        org.joda.time.DurationFieldType[] durationFieldTypeArray12 = mutablePeriod11.getFieldTypes();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Duration duration19 = duration15.plus((-1L));
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Seconds seconds22 = duration19.toStandardSeconds();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType24 = seconds23.getFieldType();
        org.joda.time.Seconds seconds26 = seconds23.plus((-1));
        org.joda.time.DurationFieldType durationFieldType27 = seconds23.getFieldType();
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        org.joda.time.Seconds seconds32 = seconds29.plus((-1));
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        java.lang.String str34 = seconds33.toString();
        org.joda.time.Seconds seconds35 = seconds32.plus(seconds33);
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds33);
        org.joda.time.Seconds seconds37 = seconds23.plus(seconds28);
        org.joda.time.Seconds seconds38 = seconds37.negated();
        org.joda.time.Duration duration39 = seconds38.toStandardDuration();
        boolean boolean40 = seconds22.isGreaterThan(seconds38);
        org.joda.time.PeriodType periodType41 = seconds22.getPeriodType();
        org.joda.time.PeriodType periodType42 = periodType41.withWeeksRemoved();
        org.joda.time.PeriodType periodType43 = periodType41.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period44 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldTypeArray12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2S" + "'", str34, "PT2S");
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds37);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test03609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03609");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType4 = seconds3.getFieldType();
        org.joda.time.Seconds seconds6 = seconds3.plus((-1));
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.TWO;
        java.lang.String str8 = seconds7.toString();
        org.joda.time.Seconds seconds9 = seconds6.plus(seconds7);
        org.joda.time.Seconds seconds10 = seconds2.minus(seconds7);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration13.toPeriodFrom(readableInstant14);
        org.joda.time.Period period17 = period15.minusSeconds((int) '4');
        org.joda.time.Period period19 = period15.minusSeconds(10);
        org.joda.time.Period period21 = period15.withWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds22 = period15.toStandardSeconds();
        org.joda.time.Seconds seconds23 = seconds2.minus(seconds22);
        org.joda.time.PeriodType periodType24 = seconds23.getPeriodType();
        org.joda.time.PeriodType periodType25 = periodType24.withMonthsRemoved();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        long long36 = interval34.toDurationMillis();
        long long37 = interval34.toDurationMillis();
        org.joda.time.Chronology chronology38 = interval34.getChronology();
        org.joda.time.Period period39 = new org.joda.time.Period((long) 7, periodType25, chronology38);
        org.joda.time.Period period40 = new org.joda.time.Period(1644572178101L, periodType25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period42 = period40.plusMillis((-49));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT2S" + "'", str8, "PT2S");
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(chronology38);
    }

    @Test
    public void test03610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03610");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.Period period9 = period6.withPeriodType(periodType7);
        org.joda.time.Hours hours10 = org.joda.time.Hours.TWO;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Hours hours31 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Hours hours32 = hours10.minus(hours31);
        boolean boolean33 = period6.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours35 = org.joda.time.Hours.parseHours("PT0H");
        boolean boolean36 = hours10.isGreaterThan(hours35);
        org.joda.time.Hours hours38 = hours10.minus((int) (byte) 10);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration41.toPeriodFrom(readableInstant42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration41.toPeriod(chronology44);
        org.joda.time.Period period47 = period45.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Hours hours49 = org.joda.time.Hours.hoursIn(readableInterval48);
        org.joda.time.Period period50 = period47.minus((org.joda.time.ReadablePeriod) hours49);
        org.joda.time.Hours hours52 = hours49.minus((int) '4');
        org.joda.time.Hours hours54 = hours52.plus((int) '#');
        org.joda.time.Hours hours56 = hours54.minus((int) (byte) 10);
        boolean boolean57 = hours10.isGreaterThan(hours56);
        java.lang.Object obj58 = null;
        boolean boolean59 = hours10.equals(obj58);
        org.joda.time.Duration duration62 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = duration62.toPeriodFrom(readableInstant63);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration62.toPeriod(chronology65);
        org.joda.time.Period period68 = period66.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval69 = null;
        org.joda.time.Hours hours70 = org.joda.time.Hours.hoursIn(readableInterval69);
        org.joda.time.Period period71 = period68.minus((org.joda.time.ReadablePeriod) hours70);
        org.joda.time.Hours hours73 = hours70.minus((int) '4');
        org.joda.time.Hours hours75 = hours73.plus((int) '#');
        org.joda.time.DurationFieldType durationFieldType76 = hours73.getFieldType();
        org.joda.time.PeriodType periodType77 = hours73.getPeriodType();
        org.joda.time.Hours hours78 = hours10.plus(hours73);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = hours78.getValue(2719);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 2719");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(hours49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(hours75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(hours78);
    }

    @Test
    public void test03611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03611");
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        boolean boolean33 = interval23.isAfter((org.joda.time.ReadableInterval) interval32);
        boolean boolean34 = interval12.contains((org.joda.time.ReadableInterval) interval23);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType37);
        mutablePeriod38.setYears(0);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod38.setPeriod((org.joda.time.ReadableDuration) duration42, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration73.toIntervalTo(readableInstant76);
        org.joda.time.Interval interval78 = interval77.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getEnd();
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType82 = periodType81.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(10L, periodType82);
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime79, periodType82);
        boolean boolean86 = interval23.isAfter((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Chronology chronology87 = dateTime55.getChronology();
        org.joda.time.Period period88 = new org.joda.time.Period(52L, (long) 1, chronology87);
        org.joda.time.Period period89 = new org.joda.time.Period((long) (short) 100, chronology87);
        org.joda.time.Period period91 = period89.minusDays((-1));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test03612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03612");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        boolean boolean4 = days1.isGreaterThan(days3);
        org.joda.time.MutablePeriod mutablePeriod5 = days1.toMutablePeriod();
        mutablePeriod5.addYears((-97));
        int int8 = mutablePeriod5.getHours();
        mutablePeriod5.setHours(3);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test03613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03613");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days2 = days0.multipliedBy(8);
        org.joda.time.Days days4 = days0.dividedBy(8);
        org.joda.time.DurationFieldType durationFieldType5 = null;
        int int6 = days0.get(durationFieldType5);
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        org.joda.time.Days days11 = org.joda.time.Days.ONE;
        org.joda.time.Days days12 = days11.negated();
        boolean boolean13 = days10.isGreaterThan(days12);
        org.joda.time.Days days14 = days7.plus(days12);
        org.joda.time.Days days16 = days14.plus(0);
        boolean boolean17 = days0.isGreaterThan(days14);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test03614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03614");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1644572130657L);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Hours hours4 = org.joda.time.Hours.hoursIn(readableInterval3);
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.PeriodType periodType6 = hours4.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Chronology chronology19 = interval18.getChronology();
        boolean boolean20 = durationFieldType8.isSupported(chronology19);
        org.joda.time.Period period21 = new org.joda.time.Period(1644572162361L, periodType7, chronology19);
        boolean boolean22 = duration1.equals((java.lang.Object) periodType7);
        org.joda.time.PeriodType periodType23 = periodType7.withSecondsRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test03615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03615");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) (short) 1, periodType2, chronology3);
        org.joda.time.PeriodType periodType5 = periodType2.withDaysRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType8 = periodType6.getFieldType(69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 69");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test03616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03616");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        org.joda.time.Period period12 = period6.plusMillis(5);
        int int13 = period12.size();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
    }

    @Test
    public void test03617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03617");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Duration duration21 = interval18.toDuration();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = duration24.toPeriodFrom(readableInstant25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration24.toPeriod(chronology27);
        java.lang.String str29 = period28.toString();
        org.joda.time.MutablePeriod mutablePeriod30 = period28.toMutablePeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        long long40 = interval39.getStartMillis();
        mutablePeriod30.setPeriod((org.joda.time.ReadableInterval) interval39);
        org.joda.time.Duration duration42 = interval39.toDuration();
        org.joda.time.DateTime dateTime43 = interval39.getStart();
        org.joda.time.Period period44 = duration21.toPeriodFrom((org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Period period46 = period44.minusWeeks(0);
        org.joda.time.Period period48 = period46.plusWeeks((-9700));
        org.joda.time.Period period49 = period48.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT0.097S" + "'", str29, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1644572344573L + "'", long40 == 1644572344573L);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
    }

    @Test
    public void test03618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03618");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardDays((long) (-10));
        org.joda.time.Duration duration6 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, 6);
        org.joda.time.Period period7 = duration6.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) duration9, periodType15, chronology16);
        org.joda.time.PeriodType periodType18 = periodType15.withMonthsRemoved();
        org.joda.time.PeriodType periodType19 = periodType15.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period20 = period7.normalizedStandard(periodType19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: -5183999948");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test03619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03619");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.PeriodType periodType6 = days4.getPeriodType();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        boolean boolean36 = interval26.isAfter((org.joda.time.ReadableInterval) interval35);
        org.joda.time.Period period37 = interval35.toPeriod();
        boolean boolean38 = interval16.isBefore((org.joda.time.ReadableInterval) interval35);
        org.joda.time.Interval interval39 = interval16.toInterval();
        org.joda.time.Days days40 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval16);
        org.joda.time.MutablePeriod mutablePeriod41 = days40.toMutablePeriod();
        org.joda.time.Days days42 = days4.plus(days40);
        org.joda.time.Days days44 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.Days days45 = days40.minus(days44);
        org.joda.time.Period period46 = days40.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod47 = days40.toMutablePeriod();
        int int48 = days40.getDays();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test03620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03620");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        int int11 = period6.getMillis();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration14.toPeriodFrom(readableInstant15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration14.toPeriod(chronology17);
        org.joda.time.Period period20 = period18.withYears((int) (byte) 10);
        org.joda.time.Period period22 = period18.minusMonths(100);
        org.joda.time.Period period24 = period18.plusYears(100);
        org.joda.time.Period period26 = period24.minusMinutes((int) (byte) 100);
        org.joda.time.Period period27 = period6.withFields((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period29 = period6.minusMonths((-97));
        org.joda.time.Minutes minutes30 = period6.toStandardMinutes();
        org.joda.time.PeriodType periodType31 = minutes30.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-97) + "'", int11 == (-97));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test03621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03621");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Days days11 = org.joda.time.Days.ONE;
        org.joda.time.Days days12 = days11.negated();
        org.joda.time.Days days13 = org.joda.time.Days.ONE;
        org.joda.time.Days days14 = days13.negated();
        org.joda.time.Days days15 = org.joda.time.Days.ONE;
        org.joda.time.Days days16 = days15.negated();
        boolean boolean17 = days14.isGreaterThan(days16);
        org.joda.time.Days days18 = days11.plus(days16);
        int int19 = days11.getDays();
        org.joda.time.Days days21 = days11.plus((int) (byte) 0);
        org.joda.time.Days days22 = days10.plus(days11);
        org.joda.time.PeriodType periodType23 = days22.getPeriodType();
        org.joda.time.Days days25 = days22.multipliedBy((-9700));
        org.joda.time.Days days27 = days22.multipliedBy(0);
        org.joda.time.Days days29 = days22.dividedBy((-1));
        org.joda.time.Days days31 = days22.minus((-42));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
    }

    @Test
    public void test03622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03622");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        org.joda.time.ReadablePeriod readablePeriod11 = null;
        org.joda.time.Period period12 = period6.plus(readablePeriod11);
        org.joda.time.MutablePeriod mutablePeriod13 = period6.toMutablePeriod();
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType22);
        mutablePeriod23.clear();
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        org.joda.time.Days days29 = duration27.toStandardDays();
        org.joda.time.Days days30 = days29.negated();
        org.joda.time.Days days32 = days30.multipliedBy((int) 'a');
        org.joda.time.Days days34 = days30.plus(6);
        mutablePeriod23.add((org.joda.time.ReadablePeriod) days34);
        int int36 = mutablePeriod23.getMonths();
        mutablePeriod23.setPeriod((-690), 0, (int) (byte) 10, 36000000, 2, (-10), 6, (-690));
        java.lang.String str46 = mutablePeriod23.toString();
        mutablePeriod13.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int48 = mutablePeriod23.getMonths();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "P-690Y10W36000000DT2H-10M5.310S" + "'", str46, "P-690Y10W36000000DT2H-10M5.310S");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test03623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03623");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.DateTime dateTime21 = interval18.getEnd();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableInstant) dateTime49);
        long long51 = dateTime49.getMillis();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, (org.joda.time.ReadableInstant) dateTime49);
        boolean boolean53 = dateTime21.isEqual((org.joda.time.ReadableInstant) dateTime49);
        java.lang.String str54 = dateTime49.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572345015L + "'", long51 == 1644572345015L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "2022-02-11T09:39:05.015Z" + "'", str54, "2022-02-11T09:39:05.015Z");
    }

    @Test
    public void test03624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03624");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds5);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds0.plus(seconds16);
        org.joda.time.Seconds seconds18 = seconds16.negated();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration19 = new org.joda.time.Duration((java.lang.Object) seconds18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Seconds");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
    }

    @Test
    public void test03625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03625");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.PeriodType periodType6 = days4.getPeriodType();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        boolean boolean36 = interval26.isAfter((org.joda.time.ReadableInterval) interval35);
        org.joda.time.Period period37 = interval35.toPeriod();
        boolean boolean38 = interval16.isBefore((org.joda.time.ReadableInterval) interval35);
        org.joda.time.Interval interval39 = interval16.toInterval();
        org.joda.time.Days days40 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval16);
        org.joda.time.MutablePeriod mutablePeriod41 = days40.toMutablePeriod();
        org.joda.time.Days days42 = days4.plus(days40);
        org.joda.time.Days days44 = org.joda.time.Days.days((int) (byte) 10);
        org.joda.time.Days days45 = days40.minus(days44);
        org.joda.time.Period period46 = days40.toPeriod();
        org.joda.time.Period period47 = period46.normalizedStandard();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test03626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03626");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:35:35.010Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:35:35.010Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03627");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType2 = seconds1.getFieldType();
        org.joda.time.Seconds seconds4 = seconds1.plus((-1));
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.TWO;
        java.lang.String str6 = seconds5.toString();
        org.joda.time.Seconds seconds7 = seconds4.plus(seconds5);
        org.joda.time.Seconds seconds8 = seconds0.minus(seconds5);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = duration11.toPeriodFrom(readableInstant12);
        org.joda.time.Period period15 = period13.minusSeconds((int) '4');
        org.joda.time.Period period17 = period13.minusSeconds(10);
        org.joda.time.Period period19 = period13.withWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds20 = period13.toStandardSeconds();
        org.joda.time.Seconds seconds21 = seconds0.minus(seconds20);
        org.joda.time.Duration duration22 = seconds0.toStandardDuration();
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Period period29 = period27.minusSeconds((int) '4');
        org.joda.time.Period period31 = period27.minusSeconds(10);
        org.joda.time.Period period33 = period27.withWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds34 = period27.toStandardSeconds();
        org.joda.time.Seconds seconds36 = seconds34.plus((-97));
        org.joda.time.Seconds seconds38 = seconds36.multipliedBy(8);
        org.joda.time.Seconds seconds40 = seconds36.multipliedBy(23);
        org.joda.time.PeriodType periodType41 = seconds36.getPeriodType();
        boolean boolean42 = duration22.equals((java.lang.Object) periodType41);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT2S" + "'", str6, "PT2S");
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03628");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days6 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days8 = days6.minus(1);
        boolean boolean9 = days5.isLessThan(days8);
        org.joda.time.Days days10 = days8.negated();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Days days21 = duration20.toStandardDays();
        org.joda.time.Days days22 = org.joda.time.Days.ONE;
        org.joda.time.Days days23 = days22.negated();
        org.joda.time.Days days24 = org.joda.time.Days.ONE;
        org.joda.time.Days days25 = days24.negated();
        org.joda.time.Days days26 = org.joda.time.Days.ONE;
        org.joda.time.Days days27 = days26.negated();
        boolean boolean28 = days25.isGreaterThan(days27);
        org.joda.time.Days days29 = days22.plus(days27);
        int int30 = days22.getDays();
        org.joda.time.Days days32 = days22.plus((int) (byte) 0);
        org.joda.time.Days days33 = days21.plus(days22);
        java.lang.String str34 = days21.toString();
        org.joda.time.Days days36 = days21.multipliedBy((int) (short) 100);
        boolean boolean37 = days8.isLessThan(days36);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "P0D" + "'", str34, "P0D");
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03629");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) duration9, periodType15, chronology16);
        org.joda.time.PeriodType periodType18 = periodType15.withMonthsRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withHoursRemoved();
        java.lang.String str20 = periodType19.toString();
        org.joda.time.PeriodType periodType21 = periodType19.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period22 = new org.joda.time.Period(26, 36000032, (int) (short) 100, 26, 49, 35, (-99), 2, periodType21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PeriodType[Millis]" + "'", str20, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test03630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03630");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-6));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03631");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(306, (int) (byte) -1, (-2147483648), 108);
    }

    @Test
    public void test03632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03632");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572126858L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval10);
        org.joda.time.Duration duration13 = seconds12.toStandardDuration();
        org.joda.time.Duration duration14 = seconds12.toStandardDuration();
        boolean boolean15 = duration1.equals((java.lang.Object) seconds12);
        int int16 = seconds12.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType18 = seconds12.getFieldType(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 9");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test03633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03633");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Period period12 = period9.withField(durationFieldType10, (-9700));
        int int13 = period9.getMinutes();
        org.joda.time.Weeks weeks14 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks15 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks16 = weeks14.minus(weeks15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks22 = weeks21.negated();
        org.joda.time.Weeks weeks23 = weeks19.minus(weeks22);
        org.joda.time.Duration duration24 = weeks19.toStandardDuration();
        org.joda.time.Weeks weeks25 = weeks16.plus(weeks19);
        org.joda.time.DurationFieldType durationFieldType26 = weeks25.getFieldType();
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks29 = weeks27.minus(weeks28);
        org.joda.time.Period period30 = new org.joda.time.Period((java.lang.Object) weeks29);
        org.joda.time.PeriodType periodType31 = weeks29.getPeriodType();
        org.joda.time.Weeks weeks32 = weeks25.plus(weeks29);
        org.joda.time.Weeks weeks33 = weeks32.negated();
        org.joda.time.Period period34 = period9.minus((org.joda.time.ReadablePeriod) weeks33);
        int int35 = weeks33.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test03634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03634");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = duration5.toPeriodFrom(readableInstant6);
        org.joda.time.Period period9 = period7.minusSeconds((int) '4');
        org.joda.time.Minutes minutes10 = period7.toStandardMinutes();
        org.joda.time.Period period12 = period7.multipliedBy((int) (byte) 100);
        org.joda.time.Period period14 = period12.withHours((int) (short) 0);
        boolean boolean15 = periodType2.equals((java.lang.Object) period12);
        java.lang.String str16 = periodType2.toString();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1644572256627L, 1644572247837L, periodType2);
        int int18 = mutablePeriod17.getMonths();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod17.setPeriod((int) (byte) -1, 11, 49, 8, (-49), 41, (int) (byte) 10, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PeriodType[YearWeekDay]" + "'", str16, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test03635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03635");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Hours hours3 = org.joda.time.Hours.hoursIn(readableInterval2);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.PeriodType periodType5 = hours3.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withYearsRemoved();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(periodType9);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.eras();
        int int12 = periodType9.indexOf(durationFieldType11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Chronology chronology23 = interval22.getChronology();
        org.joda.time.Period period24 = new org.joda.time.Period((long) 1, periodType9, chronology23);
        org.joda.time.Period period25 = new org.joda.time.Period(1644572178980L, 1644572174305L, periodType6, chronology23);
        org.joda.time.MutablePeriod mutablePeriod26 = period25.toMutablePeriod();
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(chronology23);
        org.junit.Assert.assertNotNull(mutablePeriod26);
    }

    @Test
    public void test03636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03636");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean14 = duration6.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes15 = duration6.toStandardMinutes();
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes0.minus(minutes16);
        org.joda.time.Duration duration18 = minutes16.toStandardDuration();
        int int19 = minutes16.getMinutes();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test03637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03637");
        org.joda.time.Period period1 = org.joda.time.Period.millis(30);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03638");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Duration duration1 = days0.toStandardDuration();
        org.joda.time.Duration duration3 = duration1.withMillis(1644572164015L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        boolean boolean23 = interval13.isAfter((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Period period24 = interval22.toPeriod();
        org.joda.time.Duration duration25 = interval22.toDuration();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration28.toPeriodFrom(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration28.toPeriod(chronology31);
        java.lang.String str33 = period32.toString();
        org.joda.time.MutablePeriod mutablePeriod34 = period32.toMutablePeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        long long44 = interval43.getStartMillis();
        mutablePeriod34.setPeriod((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Duration duration46 = interval43.toDuration();
        org.joda.time.DateTime dateTime47 = interval43.getStart();
        org.joda.time.Period period48 = duration25.toPeriodFrom((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Interval interval49 = duration3.toIntervalTo((org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration3.toIntervalTo(readableInstant50);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT0.097S" + "'", str33, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1644572345622L + "'", long44 == 1644572345622L);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval51);
    }

    @Test
    public void test03639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03639");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572185879L);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType6 = mutablePeriod4.getFieldType(1);
        int int7 = mutablePeriod4.getDays();
        java.lang.Object obj8 = mutablePeriod4.clone();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        boolean boolean28 = interval18.isAfter((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = duration32.toPeriodFrom(readableInstant33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration32.toPeriod(chronology35);
        java.lang.String str37 = period36.toString();
        org.joda.time.MutablePeriod mutablePeriod38 = period36.toMutablePeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        long long48 = interval47.getStartMillis();
        mutablePeriod38.setPeriod((org.joda.time.ReadableInterval) interval47);
        org.joda.time.Interval interval50 = interval47.toInterval();
        org.joda.time.Duration duration51 = interval50.toDuration();
        boolean boolean52 = interval27.isAfter((org.joda.time.ReadableInterval) interval50);
        mutablePeriod4.setPeriod((org.joda.time.ReadableInterval) interval50);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval50);
        long long55 = interval50.getStartMillis();
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "PT0S");
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT0.097S" + "'", str37, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 1644572345723L + "'", long48 == 1644572345723L);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1644572345723L + "'", long55 == 1644572345723L);
    }

    @Test
    public void test03640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03640");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Period period12 = period9.withField(durationFieldType10, (-9700));
        org.joda.time.Period period14 = period9.multipliedBy(100);
        java.lang.String str15 = period14.toString();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        boolean boolean35 = interval25.isAfter((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Period period36 = interval34.toPeriod();
        int int37 = period36.getWeeks();
        org.joda.time.Period period38 = period14.withFields((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Days days39 = org.joda.time.Days.FOUR;
        org.joda.time.Days days41 = days39.plus((int) ' ');
        org.joda.time.DurationFieldType durationFieldType42 = days41.getFieldType();
        org.joda.time.Period period44 = period36.withField(durationFieldType42, 57);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT-9.700S" + "'", str15, "PT-9.700S");
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test03641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03641");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-9700), (int) (byte) 10, 3, (int) (short) 10, (int) 'a', (-97), 0, 0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours(1644572185828L);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 9789120153");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test03642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03642");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("P10WT31.903S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03643");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) (short) 1, periodType3, chronology4);
        org.joda.time.PeriodType periodType6 = periodType3.withDaysRemoved();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.DateTime dateTime19 = interval18.getEnd();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.DateTime dateTime30 = interval29.getEnd();
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime19, (org.joda.time.ReadableInstant) dateTime30);
        org.joda.time.Chronology chronology32 = dateTime19.getChronology();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1644572166118L, 1644572162497L, chronology32);
        org.joda.time.Period period34 = new org.joda.time.Period(1644572148725L, periodType6, chronology32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period36 = period34.minusMinutes(23);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertNotNull(chronology32);
    }

    @Test
    public void test03644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03644");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Duration duration1 = days0.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod2 = days0.toMutablePeriod();
        int int3 = mutablePeriod2.getHours();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test03645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03645");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 1, (-97), 52, 100, 2147483647, (int) ' ', 100, (int) (byte) 0);
        int int9 = period8.getMillis();
        org.joda.time.Period period11 = period8.minusSeconds(8);
        org.joda.time.Period period13 = period11.withSeconds(802);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration14 = period11.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test03646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03646");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Hours hours22 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.Hours hours42 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval41);
        boolean boolean44 = interval31.overlaps((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.Hours hours55 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval54);
        boolean boolean56 = interval41.contains((org.joda.time.ReadableInterval) interval54);
        boolean boolean57 = interval18.isAfter((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Hours hours58 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval41);
        org.joda.time.Duration duration59 = hours58.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(hours55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(duration59);
    }

    @Test
    public void test03647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03647");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Days days2 = seconds0.toStandardDays();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test03648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03648");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, (int) (byte) -1, 30, 10);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod4.toMutablePeriod();
        int[] intArray6 = mutablePeriod4.getValues();
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 0, 0, 0, -1, 30, 10]");
    }

    @Test
    public void test03649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03649");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        int int3 = seconds2.size();
        org.joda.time.Period period5 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period7 = period5.minusMillis((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period7);
        boolean boolean9 = seconds2.isGreaterThan(seconds8);
        org.joda.time.PeriodType periodType10 = seconds2.getPeriodType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType12 = seconds11.getFieldType();
        org.joda.time.Seconds seconds14 = seconds11.plus((-1));
        org.joda.time.DurationFieldType durationFieldType15 = seconds11.getFieldType();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType18 = seconds17.getFieldType();
        org.joda.time.Seconds seconds20 = seconds17.plus((-1));
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.TWO;
        java.lang.String str22 = seconds21.toString();
        org.joda.time.Seconds seconds23 = seconds20.plus(seconds21);
        org.joda.time.Seconds seconds24 = seconds16.minus(seconds21);
        org.joda.time.Seconds seconds25 = seconds11.plus(seconds16);
        org.joda.time.PeriodType periodType26 = seconds25.getPeriodType();
        boolean boolean27 = seconds2.isGreaterThan(seconds25);
        org.joda.time.Seconds seconds28 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType30 = seconds29.getFieldType();
        org.joda.time.Seconds seconds32 = seconds29.plus((-1));
        org.joda.time.Seconds seconds33 = org.joda.time.Seconds.TWO;
        java.lang.String str34 = seconds33.toString();
        org.joda.time.Seconds seconds35 = seconds32.plus(seconds33);
        org.joda.time.Seconds seconds36 = seconds28.minus(seconds33);
        org.joda.time.Seconds seconds38 = seconds36.multipliedBy((int) (byte) -1);
        org.joda.time.Seconds seconds39 = seconds2.minus(seconds36);
        org.joda.time.Period period40 = seconds2.toPeriod();
        org.joda.time.Period period41 = period40.normalizedStandard();
        org.joda.time.Period period43 = period40.minusMinutes((-1));
        org.joda.time.Period period45 = period43.minusMillis(97);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT2S" + "'", str22, "PT2S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2S" + "'", str34, "PT2S");
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test03650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03650");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-10));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.DateTime dateTime12 = interval11.getEnd();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        boolean boolean32 = interval22.isAfter((org.joda.time.ReadableInterval) interval31);
        boolean boolean33 = interval11.contains((org.joda.time.ReadableInterval) interval22);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType36);
        mutablePeriod37.setYears(0);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod37.setPeriod((org.joda.time.ReadableDuration) duration41, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType81 = periodType80.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(10L, periodType81);
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime78, periodType81);
        boolean boolean85 = interval22.isAfter((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Period period87 = mutablePeriod86.toPeriod();
        int int88 = period87.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test03651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03651");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds3.multipliedBy((int) (byte) 1);
        int int6 = seconds5.size();
        org.joda.time.Period period8 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period10 = period8.minusMillis((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period10);
        boolean boolean12 = seconds5.isGreaterThan(seconds11);
        org.joda.time.PeriodType periodType13 = seconds5.getPeriodType();
        org.joda.time.Seconds seconds14 = seconds2.plus(seconds5);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        org.joda.time.Seconds seconds18 = seconds15.plus((-1));
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.TWO;
        java.lang.String str20 = seconds19.toString();
        org.joda.time.Seconds seconds21 = seconds18.plus(seconds19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) duration23, periodType29, chronology30);
        org.joda.time.DurationFieldType[] durationFieldTypeArray32 = mutablePeriod31.getFieldTypes();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Duration duration39 = duration35.plus((-1L));
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Seconds seconds42 = duration39.toStandardSeconds();
        org.joda.time.Seconds seconds43 = seconds18.plus(seconds42);
        boolean boolean44 = seconds5.isGreaterThan(seconds42);
        org.joda.time.Seconds seconds46 = seconds5.multipliedBy((-35));
        java.lang.String str47 = seconds46.toString();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT2S" + "'", str20, "PT2S");
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(durationFieldTypeArray32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(seconds42);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT-105S" + "'", str47, "PT-105S");
    }

    @Test
    public void test03652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03652");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("PT-0.097S", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03653");
        org.joda.time.Period period1 = org.joda.time.Period.years((-4));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03654");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType2 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType3 = periodType1.withSecondsRemoved();
        org.joda.time.PeriodType periodType4 = periodType1.withMinutesRemoved();
        java.lang.String str5 = periodType1.toString();
        org.joda.time.Period period6 = new org.joda.time.Period(1644572151884L, periodType1);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PeriodType[Standard]" + "'", str5, "PeriodType[Standard]");
    }

    @Test
    public void test03655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03655");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Weeks weeks23 = period22.toStandardWeeks();
        org.joda.time.Period period24 = period22.negated();
        int int25 = period24.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test03656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03656");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration17 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 100);
        org.joda.time.Hours hours18 = org.joda.time.Hours.FIVE;
        org.joda.time.Hours hours20 = hours18.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration21 = hours18.toStandardDuration();
        org.joda.time.Duration duration22 = duration1.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Duration duration29 = duration25.plus((-1L));
        boolean boolean30 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration32 = duration25.withMillis(1644572166880L);
        org.joda.time.Duration duration35 = duration32.withDurationAdded(1644572171488L, 30);
        org.joda.time.Duration duration37 = duration35.plus(1644572245052L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
    }

    @Test
    public void test03657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03657");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        boolean boolean12 = days9.isGreaterThan(days11);
        org.joda.time.Days days14 = days11.minus((int) (short) -1);
        org.joda.time.Days days15 = days7.plus(days14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        boolean boolean45 = interval35.isAfter((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Period period46 = interval44.toPeriod();
        boolean boolean47 = interval25.isBefore((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Interval interval48 = interval25.toInterval();
        org.joda.time.Days days49 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval25);
        boolean boolean50 = days7.isGreaterThan(days49);
        org.joda.time.Days days51 = org.joda.time.Days.ONE;
        org.joda.time.Days days52 = days51.negated();
        org.joda.time.Period period57 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period59 = period57.plusDays(1);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.Days days64 = duration62.toStandardDays();
        org.joda.time.Days days65 = days64.negated();
        org.joda.time.Period period66 = period59.plus((org.joda.time.ReadablePeriod) days64);
        org.joda.time.Days days68 = days64.minus((int) (short) 1);
        org.joda.time.Days days70 = days68.multipliedBy((int) (byte) 1);
        org.joda.time.Days days71 = days51.minus(days68);
        org.joda.time.Days days72 = days7.plus(days71);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType74 = days72.getFieldType((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(days64);
        org.junit.Assert.assertNotNull(days65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(days68);
        org.junit.Assert.assertNotNull(days70);
        org.junit.Assert.assertNotNull(days71);
        org.junit.Assert.assertNotNull(days72);
    }

    @Test
    public void test03658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03658");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = duration5.withMillis((long) (byte) 10);
        long long8 = duration7.getStandardSeconds();
        org.joda.time.Seconds seconds9 = duration7.toStandardSeconds();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.seconds(8);
        org.joda.time.Seconds seconds13 = seconds11.minus((int) (short) -1);
        boolean boolean14 = duration7.equals((java.lang.Object) seconds13);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03659");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.months();
        org.joda.time.Period period14 = period9.withField(durationFieldType12, 0);
        org.joda.time.Period period16 = period14.plusMinutes((int) (short) -1);
        org.joda.time.Period period18 = period14.withMillis(100);
        org.joda.time.Period period20 = period14.plusWeeks(8);
        java.lang.String str21 = period14.toString();
        org.joda.time.Period period23 = period14.minusHours(32);
        org.joda.time.Period period25 = period14.withYears((int) (byte) -1);
        org.joda.time.DurationFieldType durationFieldType27 = period14.getFieldType((int) (short) 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT-9.700S" + "'", str21, "PT-9.700S");
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType27);
    }

    @Test
    public void test03660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03660");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-49), 1644572154033L);
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Duration duration5 = duration2.minus(1644572122285L);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test03661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03661");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(306);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03662");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572160445L, 456825L);
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Hours hours9 = duration8.toStandardHours();
        org.joda.time.Hours hours10 = hours9.negated();
        org.joda.time.PeriodType periodType11 = hours9.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        org.joda.time.Period period21 = period19.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Hours hours23 = org.joda.time.Hours.hoursIn(readableInterval22);
        org.joda.time.Period period24 = period21.minus((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours25 = hours23.negated();
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration28.toPeriodFrom(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration28.toPeriod(chronology31);
        org.joda.time.Period period34 = period32.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval35 = null;
        org.joda.time.Hours hours36 = org.joda.time.Hours.hoursIn(readableInterval35);
        org.joda.time.Period period37 = period34.minus((org.joda.time.ReadablePeriod) hours36);
        org.joda.time.Hours hours38 = hours36.negated();
        org.joda.time.Hours hours39 = hours23.minus(hours36);
        org.joda.time.Duration duration40 = hours39.toStandardDuration();
        org.joda.time.PeriodType periodType41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod();
        mutablePeriod42.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod42, periodType46);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
        org.joda.time.Interval interval60 = interval59.toInterval();
        org.joda.time.Chronology chronology61 = interval60.getChronology();
        boolean boolean62 = durationFieldType50.isSupported(chronology61);
        mutablePeriod42.setPeriod((long) 0, (long) 8, chronology61);
        org.joda.time.Period period64 = duration40.toPeriod(periodType41, chronology61);
        org.joda.time.Period period65 = new org.joda.time.Period(600L, 1644572162361L, periodType12, chronology61);
        org.joda.time.Period period66 = new org.joda.time.Period(1644572199990L, chronology61);
        mutablePeriod2.setPeriod(1644572198090L, chronology61);
        mutablePeriod2.setMinutes(32);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(chronology61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test03663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03663");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        boolean boolean12 = days9.isGreaterThan(days11);
        org.joda.time.Days days14 = days11.minus((int) (short) -1);
        org.joda.time.Days days15 = days7.plus(days14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration23 = duration20.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration25 = duration17.withDurationAdded((org.joda.time.ReadableDuration) duration20, (int) (short) 1);
        org.joda.time.Days days26 = duration25.toStandardDays();
        org.joda.time.Days days27 = duration25.toStandardDays();
        org.joda.time.Days days28 = days7.minus(days27);
        org.joda.time.Days days29 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days31 = days29.minus(1);
        java.lang.String str32 = days29.toString();
        boolean boolean33 = days28.isGreaterThan(days29);
        org.joda.time.Days days35 = days29.plus(41);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P7D" + "'", str32, "P7D");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(days35);
    }

    @Test
    public void test03664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03664");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType1 = periodType0.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType4 = periodType3.withMillisRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) mutablePeriod2, periodType3);
        java.lang.String str6 = period5.toString();
        int int7 = period5.getMonths();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test03665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03665");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration10 = duration2.withDurationAdded((org.joda.time.ReadableDuration) duration5, (int) (short) 1);
        org.joda.time.ReadableDuration readableDuration11 = null;
        boolean boolean12 = duration2.isLongerThan(readableDuration11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) ' ', chronology14);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType18);
        mutablePeriod19.setYears(0);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType63 = periodType62.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(periodType63);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(10L, periodType63);
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime60, periodType63);
        org.joda.time.Duration duration67 = mutablePeriod15.toDurationFrom((org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes71 = minutes69.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType72 = minutes71.getPeriodType();
        org.joda.time.PeriodType periodType73 = periodType72.withYearsRemoved();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) '#', periodType72, chronology74);
        org.joda.time.PeriodType periodType76 = periodType72.withHoursRemoved();
        org.joda.time.Period period77 = new org.joda.time.Period(readableDuration11, (org.joda.time.ReadableInstant) dateTime36, periodType76);
        org.joda.time.ReadableInterval readableInterval78 = null;
        org.joda.time.Minutes minutes79 = org.joda.time.Minutes.minutesIn(readableInterval78);
        java.lang.String str80 = minutes79.toString();
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes83 = minutes81.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType84 = minutes83.getPeriodType();
        org.joda.time.PeriodType periodType85 = periodType84.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType86 = org.joda.time.DurationFieldType.eras();
        boolean boolean87 = periodType84.isSupported(durationFieldType86);
        int int88 = minutes79.get(durationFieldType86);
        boolean boolean89 = periodType76.isSupported(durationFieldType86);
        org.joda.time.Period period90 = new org.joda.time.Period(1644572243009L, periodType76);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period92 = period90.minusYears((-42));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PT0M" + "'", str80, "PT0M");
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test03666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03666");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(1);
        org.joda.time.Period period3 = period1.withWeeks(52);
        int int4 = period3.getWeeks();
        org.joda.time.Period period6 = period3.plusMinutes(69);
        org.joda.time.Period period8 = period6.minusMonths(49);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test03667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03667");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:37:27.229Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03668");
        org.joda.time.Period period8 = new org.joda.time.Period(0, (-1), (int) (byte) 0, (int) (byte) 1, (-6), (-1), 36000032, (int) (short) 0);
    }

    @Test
    public void test03669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03669");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Weeks weeks23 = period22.toStandardWeeks();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period22);
        int int25 = weeks24.size();
        org.joda.time.PeriodType periodType26 = weeks24.getPeriodType();
        org.joda.time.Weeks weeks27 = weeks24.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(weeks27);
    }

    @Test
    public void test03670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03670");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        long long32 = interval9.getEndMillis();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration35.toPeriod(chronology38);
        java.lang.String str40 = period39.toString();
        org.joda.time.MutablePeriod mutablePeriod41 = period39.toMutablePeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        long long51 = interval50.getStartMillis();
        mutablePeriod41.setPeriod((org.joda.time.ReadableInterval) interval50);
        boolean boolean53 = interval9.isBefore((org.joda.time.ReadableInterval) interval50);
        org.joda.time.Hours hours54 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        boolean boolean74 = interval64.isAfter((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Period period75 = interval73.toPeriod();
        org.joda.time.DateTime dateTime76 = interval73.getStart();
        org.joda.time.MutableInterval mutableInterval77 = interval73.toMutableInterval();
        long long78 = mutableInterval77.getStartMillis();
        org.joda.time.Period period79 = mutableInterval77.toPeriod();
        boolean boolean80 = interval9.contains((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant83 = null;
        java.lang.Object obj84 = null;
        org.joda.time.Duration duration85 = new org.joda.time.Duration(obj84);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration85.toIntervalTo(readableInstant88);
        org.joda.time.Interval interval90 = interval89.toInterval();
        org.joda.time.MutableInterval mutableInterval91 = interval89.toMutableInterval();
        boolean boolean92 = mutableInterval77.overlaps((org.joda.time.ReadableInterval) interval89);
        org.joda.time.Hours hours93 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) mutableInterval77);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572347138L + "'", long32 == 1644572347138L);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0.097S" + "'", str40, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572347138L + "'", long51 == 1644572347138L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(mutableInterval77);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572347138L + "'", long78 == 1644572347138L);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(mutableInterval91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(hours93);
    }

    @Test
    public void test03671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03671");
        org.joda.time.Period period1 = org.joda.time.Period.days(100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.DateTime dateTime12 = interval11.getEnd();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime12, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Period period25 = period1.plus((org.joda.time.ReadablePeriod) period24);
        org.joda.time.Period period27 = period1.withDays((int) ' ');
        org.joda.time.Period period29 = period1.plusYears((int) (byte) -1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test03672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03672");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setMonths((int) (byte) 1);
        mutablePeriod9.setYears(0);
        mutablePeriod9.addYears((-4));
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
    }

    @Test
    public void test03673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03673");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod0, periodType4);
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Chronology chronology19 = interval18.getChronology();
        boolean boolean20 = durationFieldType8.isSupported(chronology19);
        mutablePeriod0.setPeriod((long) 0, (long) 8, chronology19);
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod0.copy();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(mutablePeriod22);
    }

    @Test
    public void test03674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03674");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod5 = minutes3.toMutablePeriod();
        mutablePeriod5.setHours((int) (byte) -1);
        mutablePeriod5.add((long) 10);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) minutes10);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType16 = mutablePeriod14.getFieldType(1);
        boolean boolean17 = minutes10.isSupported(durationFieldType16);
        int int18 = mutablePeriod5.get(durationFieldType16);
        boolean boolean19 = periodType0.isSupported(durationFieldType16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) durationFieldType16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.DurationFieldType$StandardDurationFieldType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03675");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        java.lang.String str1 = seconds0.toString();
        org.joda.time.Seconds seconds3 = seconds0.multipliedBy(8);
        java.lang.String str4 = seconds0.toString();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds13.negated();
        org.joda.time.Seconds seconds15 = seconds0.minus(seconds13);
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) seconds0);
        org.joda.time.PeriodType periodType17 = seconds16.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT2S" + "'", str1, "PT2S");
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT2S" + "'", str4, "PT2S");
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test03676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03676");
        org.joda.time.Days days0 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days2 = days0.minus(1);
        org.joda.time.Days days3 = org.joda.time.Days.ONE;
        org.joda.time.Days days4 = days3.negated();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        boolean boolean9 = days6.isGreaterThan(days8);
        org.joda.time.Days days10 = days3.plus(days8);
        org.joda.time.Days days12 = days10.minus(1);
        org.joda.time.Days days13 = days12.negated();
        boolean boolean14 = days2.isLessThan(days13);
        org.joda.time.Period period15 = new org.joda.time.Period((java.lang.Object) days2);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03677");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Chronology chronology63 = dateTime23.getChronology();
        org.joda.time.DateTimeZone dateTimeZone64 = dateTime23.getZone();
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Duration duration69 = duration66.withDurationAdded(1644572124065L, 0);
        org.joda.time.Duration duration70 = duration66.toDuration();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration66.withDurationAdded((org.joda.time.ReadableDuration) duration73, (int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableDuration) duration73);
        long long78 = dateTime23.getMillis();
        org.joda.time.Chronology chronology79 = dateTime23.getChronology();
        org.joda.time.DateTimeFieldType dateTimeFieldType80 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int81 = dateTime23.get(dateTimeFieldType80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:39:07.338Z" + "'", str37, "2022-02-11T09:39:07.338Z");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(dateTimeZone64);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration76);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572347338L + "'", long78 == 1644572347338L);
        org.junit.Assert.assertNotNull(chronology79);
    }

    @Test
    public void test03678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03678");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) 1, (int) (short) 100, (int) '4', 5, 52, (int) (byte) 0, (int) (byte) 10, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Seconds seconds13 = period12.toStandardSeconds();
        org.joda.time.Seconds seconds15 = seconds13.minus((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType16 = seconds15.getFieldType();
        mutablePeriod8.set(durationFieldType16, 30);
        mutablePeriod8.setMinutes((-2));
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
    }

    @Test
    public void test03679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03679");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant30 = null;
        java.lang.Object obj31 = null;
        org.joda.time.Duration duration32 = new org.joda.time.Duration(obj31);
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration32.toIntervalTo(readableInstant35);
        org.joda.time.Interval interval37 = interval36.toInterval();
        org.joda.time.DateTime dateTime38 = interval37.getEnd();
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime27, (org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, (org.joda.time.ReadableInstant) dateTime38, periodType53);
        org.joda.time.Interval interval55 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration60, (int) (short) 1);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration73 = duration57.withDurationAdded((org.joda.time.ReadableDuration) duration71, (int) (short) 100);
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime38, (org.joda.time.ReadableDuration) duration73);
        org.joda.time.Period period75 = period74.negated();
        int int76 = period75.size();
        int int77 = period75.size();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
    }

    @Test
    public void test03680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03680");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.minutes();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.DateTime dateTime12 = interval11.getEnd();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        boolean boolean32 = interval22.isAfter((org.joda.time.ReadableInterval) interval31);
        boolean boolean33 = interval11.contains((org.joda.time.ReadableInterval) interval22);
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType36);
        mutablePeriod37.setYears(0);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod37.setPeriod((org.joda.time.ReadableDuration) duration41, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, (org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType81 = periodType80.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(periodType81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(10L, periodType81);
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime54, (org.joda.time.ReadableInstant) dateTime78, periodType81);
        boolean boolean85 = interval22.isAfter((org.joda.time.ReadableInstant) dateTime54);
        org.joda.time.Chronology chronology86 = dateTime54.getChronology();
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType1, chronology86);
        int int88 = mutablePeriod87.getDays();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(chronology86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test03681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03681");
        org.joda.time.Days days2 = org.joda.time.Days.FOUR;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        java.lang.Object obj9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod();
        mutablePeriod10.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod10, periodType14);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.Chronology chronology29 = interval28.getChronology();
        boolean boolean30 = durationFieldType18.isSupported(chronology29);
        mutablePeriod10.setPeriod((long) 0, (long) 8, chronology29);
        org.joda.time.Period period32 = new org.joda.time.Period(obj9, chronology29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1644572155170L, 1644572140312L, chronology29);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(164457249783893L, 0L, chronology29);
        org.joda.time.Period period35 = new org.joda.time.Period(1644572274118L, chronology29);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1644572312331L, 1644572124065L, periodType3, chronology29);
        int int37 = mutablePeriod36.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod36.setSeconds(127);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(chronology29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test03682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03682");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutesIn(readableInterval2);
        java.lang.String str4 = minutes3.toString();
        org.joda.time.PeriodType periodType5 = minutes3.getPeriodType();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType5, chronology6);
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.eras();
        int int9 = period7.indexOf(durationFieldType8);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.PeriodType periodType16 = periodType15.withYearsRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', periodType15, chronology17);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType15);
        java.lang.String str20 = periodType15.toString();
        org.joda.time.Period period21 = period7.normalizedStandard(periodType15);
        org.joda.time.Period period23 = period21.multipliedBy((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PeriodType[Minutes]" + "'", str20, "PeriodType[Minutes]");
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test03683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03683");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.Period period9 = period6.withPeriodType(periodType7);
        org.joda.time.Hours hours10 = org.joda.time.Hours.TWO;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Hours hours31 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval29);
        org.joda.time.Hours hours32 = hours10.minus(hours31);
        boolean boolean33 = period6.equals((java.lang.Object) hours10);
        org.joda.time.Hours hours35 = org.joda.time.Hours.parseHours("PT0H");
        boolean boolean36 = hours10.isGreaterThan(hours35);
        org.joda.time.Hours hours38 = hours10.minus((int) (byte) 10);
        org.joda.time.Hours hours40 = hours10.minus((int) (short) -1);
        org.joda.time.Hours hours42 = hours40.multipliedBy((-2));
        org.joda.time.Duration duration43 = hours42.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(hours40);
        org.junit.Assert.assertNotNull(hours42);
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test03684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03684");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572126273L, periodType1);
        mutablePeriod2.setPeriod((long) (short) 1, (long) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration9.toPeriod(chronology11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType16 = minutes15.getPeriodType();
        org.joda.time.PeriodType periodType17 = periodType16.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.eras();
        boolean boolean19 = periodType16.isSupported(durationFieldType18);
        java.lang.String str20 = durationFieldType18.getName();
        java.lang.String str21 = durationFieldType18.getName();
        boolean boolean22 = period12.isSupported(durationFieldType18);
        int int23 = mutablePeriod2.get(durationFieldType18);
        mutablePeriod2.setWeeks((-2));
        org.joda.time.Duration duration27 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration29 = duration27.plus(1644572122285L);
        long long30 = duration27.getMillis();
        long long31 = duration27.getStandardHours();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours(1644572124065L);
        boolean boolean34 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration36 = duration27.plus((long) 1);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInterval readableInterval45 = null;
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesIn(readableInterval45);
        java.lang.String str47 = minutes46.toString();
        org.joda.time.PeriodType periodType48 = minutes46.getPeriodType();
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant44, periodType48);
        org.joda.time.Duration duration51 = duration41.withMillis((long) 'a');
        org.joda.time.Duration duration52 = duration27.plus((org.joda.time.ReadableDuration) duration51);
        java.lang.String str53 = duration51.toString();
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration51);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "eras" + "'", str20, "eras");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "eras" + "'", str21, "eras");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 52L + "'", long30 == 52L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT0M" + "'", str47, "PT0M");
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT0.097S" + "'", str53, "PT0.097S");
    }

    @Test
    public void test03685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03685");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval28);
        java.lang.String str33 = interval28.toString();
        org.joda.time.Duration duration34 = interval28.toDuration();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        long long45 = interval43.toDurationMillis();
        long long46 = interval43.toDurationMillis();
        boolean boolean47 = interval28.isBefore((org.joda.time.ReadableInterval) interval43);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(seconds32);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "2022-02-11T09:39:07.739Z/2022-02-11T09:39:07.739Z" + "'", str33, "2022-02-11T09:39:07.739Z/2022-02-11T09:39:07.739Z");
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test03686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03686");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) interval16, periodType18);
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType22);
        mutablePeriod23.addMillis((-1));
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        boolean boolean45 = interval35.isAfter((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Weeks weeks46 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval44);
        org.joda.time.Period period47 = interval44.toPeriod();
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval44);
        mutablePeriod23.add((int) 'a', (int) ' ', (int) (short) -1, (int) (short) 10, (int) (byte) 10, (int) '#', (int) (byte) 100, (-97));
        org.joda.time.PeriodType periodType60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType60);
        mutablePeriod61.setYears(0);
        mutablePeriod61.setWeeks((int) (short) -1);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant68 = null;
        java.lang.Object obj69 = null;
        org.joda.time.Duration duration70 = new org.joda.time.Duration(obj69);
        org.joda.time.Period period71 = new org.joda.time.Period(readableInstant68, (org.joda.time.ReadableDuration) duration70);
        boolean boolean72 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration70.toIntervalTo(readableInstant73);
        mutablePeriod61.setPeriod((org.joda.time.ReadableInterval) interval74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) interval74, periodType76);
        long long78 = interval74.getEndMillis();
        mutablePeriod23.setPeriod((org.joda.time.ReadableInterval) interval74);
        boolean boolean80 = interval16.contains((org.joda.time.ReadableInterval) interval74);
        org.joda.time.Weeks weeks81 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval74);
        org.joda.time.MutableInterval mutableInterval82 = interval74.toMutableInterval();
        org.joda.time.ReadableInstant readableInstant83 = null;
        boolean boolean84 = mutableInterval82.isBefore(readableInstant83);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertNotNull(periodType76);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572347760L + "'", long78 == 1644572347760L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(mutableInterval82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test03687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03687");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Duration duration20 = interval17.toDuration();
        org.joda.time.Duration duration21 = interval17.toDuration();
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType24);
        mutablePeriod25.setYears(0);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology30 = null;
        mutablePeriod25.setPeriod((org.joda.time.ReadableDuration) duration29, chronology30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        java.lang.Object obj46 = null;
        org.joda.time.Duration duration47 = new org.joda.time.Duration(obj46);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration47);
        boolean boolean49 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Interval interval51 = duration47.toIntervalTo(readableInstant50);
        org.joda.time.Interval interval52 = interval51.toInterval();
        org.joda.time.DateTime dateTime53 = interval52.getEnd();
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime42, (org.joda.time.ReadableInstant) dateTime53);
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, (org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, (org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.ReadableInstant readableInstant57 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = dateTime42.compareTo(readableInstant57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572347899L + "'", long18 == 1644572347899L);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(dateTime53);
    }

    @Test
    public void test03688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03688");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        int int3 = seconds2.getSeconds();
        org.joda.time.Duration duration4 = seconds2.toStandardDuration();
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) duration4);
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration13 = duration11.plus(1644572122285L);
        long long14 = duration11.getMillis();
        long long15 = duration11.getStandardHours();
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = seconds16.multipliedBy((int) (byte) 1);
        org.joda.time.PeriodType periodType19 = seconds18.getPeriodType();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        org.joda.time.Interval interval29 = interval28.toInterval();
        org.joda.time.Chronology chronology30 = interval29.getChronology();
        org.joda.time.Period period31 = duration11.toPeriod(periodType19, chronology30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(1644572133852L, chronology30);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1644572123232L, (long) 2147483647, chronology30);
        org.joda.time.Period period34 = duration4.toPeriod(chronology30);
        int[] intArray35 = period34.getValues();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 52L + "'", long14 == 52L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(chronology30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test03689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03689");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period3 = period1.withMillis((int) ' ');
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType6);
        mutablePeriod7.setYears(0);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod7.setPeriod((org.joda.time.ReadableDuration) duration11, chronology12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.DateTime dateTime24 = interval23.getEnd();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.DateTime dateTime35 = interval34.getEnd();
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, (org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType51 = periodType50.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(periodType51);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(10L, periodType51);
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime24, (org.joda.time.ReadableInstant) dateTime48, periodType51);
        org.joda.time.Duration duration55 = period1.toDurationFrom((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType64 = periodType63.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(periodType64);
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.eras();
        int int67 = periodType64.indexOf(durationFieldType66);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableDuration) duration60, periodType64);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime48, readableInstant69);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType72 = mutablePeriod70.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test03690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03690");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.097S");
        mutablePeriod1.addMonths((int) (short) 1);
        mutablePeriod1.add(10, (int) (short) 1, (int) (short) 0, (int) 'a', 0, (-97), (int) (byte) 1, (int) (byte) -1);
        mutablePeriod1.addSeconds(0);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Hours hours27 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Hours hours29 = hours27.dividedBy(1);
        boolean boolean30 = hours16.isGreaterThan(hours29);
        org.joda.time.Duration duration31 = hours16.toStandardDuration();
        org.joda.time.Hours hours32 = org.joda.time.Hours.TWO;
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration35.toPeriod(chronology38);
        org.joda.time.Period period41 = period39.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn(readableInterval42);
        org.joda.time.Period period44 = period41.minus((org.joda.time.ReadablePeriod) hours43);
        org.joda.time.Hours hours45 = hours43.negated();
        org.joda.time.Duration duration48 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration48.toPeriodFrom(readableInstant49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration48.toPeriod(chronology51);
        org.joda.time.Period period54 = period52.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval55 = null;
        org.joda.time.Hours hours56 = org.joda.time.Hours.hoursIn(readableInterval55);
        org.joda.time.Period period57 = period54.minus((org.joda.time.ReadablePeriod) hours56);
        org.joda.time.Hours hours58 = hours56.negated();
        org.joda.time.Hours hours59 = hours43.minus(hours56);
        org.joda.time.Hours hours60 = hours32.minus(hours56);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = duration63.toPeriodFrom(readableInstant64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration63.toPeriod(chronology66);
        org.joda.time.Period period69 = period67.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval70 = null;
        org.joda.time.Hours hours71 = org.joda.time.Hours.hoursIn(readableInterval70);
        org.joda.time.Period period72 = period69.minus((org.joda.time.ReadablePeriod) hours71);
        org.joda.time.Hours hours74 = hours71.minus((int) '4');
        org.joda.time.Hours hours76 = hours74.plus((int) (short) 10);
        org.joda.time.Hours hours77 = hours60.plus(hours74);
        org.joda.time.Hours hours78 = hours16.minus(hours60);
        mutablePeriod1.add((org.joda.time.ReadablePeriod) hours78);
        int int80 = hours78.getHours();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(hours60);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(hours74);
        org.junit.Assert.assertNotNull(hours76);
        org.junit.Assert.assertNotNull(hours77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-3) + "'", int80 == (-3));
    }

    @Test
    public void test03691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03691");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes3 = minutes1.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withYearsRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) '#', periodType4, chronology6);
        org.joda.time.PeriodType periodType8 = periodType4.withYearsRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withSecondsRemoved();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test03692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03692");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Hours hours32 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Interval interval53 = interval52.toInterval();
        org.joda.time.DateTime dateTime54 = interval53.getEnd();
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime43, (org.joda.time.ReadableInstant) dateTime54);
        boolean boolean56 = interval9.isAfter((org.joda.time.ReadableInstant) dateTime43);
        long long57 = interval9.toDurationMillis();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((java.lang.Object) long57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
    }

    @Test
    public void test03693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03693");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        java.lang.String str7 = duration1.toString();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.minutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        boolean boolean41 = interval31.isAfter((org.joda.time.ReadableInterval) interval40);
        boolean boolean42 = interval20.contains((org.joda.time.ReadableInterval) interval31);
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType45);
        mutablePeriod46.setYears(0);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod46.setPeriod((org.joda.time.ReadableDuration) duration50, chronology51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant79 = null;
        java.lang.Object obj80 = null;
        org.joda.time.Duration duration81 = new org.joda.time.Duration(obj80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        boolean boolean83 = duration78.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Interval interval85 = duration81.toIntervalTo(readableInstant84);
        org.joda.time.Interval interval86 = interval85.toInterval();
        org.joda.time.DateTime dateTime87 = interval86.getEnd();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType90 = periodType89.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(periodType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(10L, periodType90);
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime87, periodType90);
        boolean boolean94 = interval31.isAfter((org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Chronology chronology95 = dateTime63.getChronology();
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType10, chronology95);
        org.joda.time.Period period97 = new org.joda.time.Period(1644572233833L, chronology95);
        org.joda.time.Period period98 = duration1.toPeriod(chronology95);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT36000S" + "'", str7, "PT36000S");
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(interval85);
        org.junit.Assert.assertNotNull(interval86);
        org.junit.Assert.assertNotNull(dateTime87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(chronology95);
        org.junit.Assert.assertNotNull(period98);
    }

    @Test
    public void test03694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03694");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (short) 10, (int) ' ', (-101), 97);
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.MIN_VALUE;
        org.joda.time.Seconds seconds7 = seconds5.dividedBy((-97));
        org.joda.time.PeriodType periodType8 = seconds7.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = period4.withPeriodType(periodType8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test03695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03695");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.dayTime();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) (short) 10, 1644572123232L, chronology3);
        org.joda.time.Period period6 = period4.minusMonths((int) (byte) 100);
        boolean boolean7 = periodType0.equals((java.lang.Object) period4);
        org.joda.time.Period period9 = period4.withMonths((int) (byte) 10);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = duration12.toPeriodFrom(readableInstant13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period17 = period14.withField(durationFieldType15, (int) (byte) 100);
        org.joda.time.PeriodType periodType18 = period17.getPeriodType();
        org.joda.time.Period period19 = period9.normalizedStandard(periodType18);
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test03696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03696");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Hours hours14 = hours12.dividedBy(1);
        boolean boolean15 = hours1.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = hours14.negated();
        org.joda.time.Duration duration17 = hours14.toStandardDuration();
        org.joda.time.Hours hours18 = org.joda.time.Hours.SIX;
        org.joda.time.Hours hours20 = hours18.minus(1);
        boolean boolean21 = hours14.isLessThan(hours18);
        org.joda.time.Hours hours23 = hours18.plus(9);
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(hours18);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(hours23);
    }

    @Test
    public void test03697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03697");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        boolean boolean20 = interval10.isAfter((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Hours hours21 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval19);
        org.joda.time.Hours hours22 = hours0.minus(hours21);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = hours22.getValue((-101));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -101");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(hours22);
    }

    @Test
    public void test03698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03698");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutesIn(readableInterval2);
        java.lang.String str4 = minutes3.toString();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType8 = minutes7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.eras();
        boolean boolean11 = periodType8.isSupported(durationFieldType10);
        int int12 = minutes3.get(durationFieldType10);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.minutesIn(readableInterval13);
        org.joda.time.Minutes minutes15 = minutes3.minus(minutes14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.millis((long) '4');
        long long18 = duration17.getMillis();
        org.joda.time.Minutes minutes19 = duration17.toStandardMinutes();
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.joda.time.ReadableInterval readableInterval21 = null;
        org.joda.time.Minutes minutes22 = org.joda.time.Minutes.minutesIn(readableInterval21);
        java.lang.String str23 = minutes22.toString();
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes26 = minutes24.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType27 = minutes26.getPeriodType();
        org.joda.time.PeriodType periodType28 = periodType27.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.eras();
        boolean boolean30 = periodType27.isSupported(durationFieldType29);
        int int31 = minutes22.get(durationFieldType29);
        org.joda.time.ReadableInterval readableInterval32 = null;
        org.joda.time.Minutes minutes33 = org.joda.time.Minutes.minutesIn(readableInterval32);
        org.joda.time.Minutes minutes34 = minutes22.minus(minutes33);
        org.joda.time.Minutes minutes35 = minutes19.minus(minutes22);
        int int36 = minutes19.size();
        org.joda.time.PeriodType periodType37 = minutes19.getPeriodType();
        org.joda.time.Minutes minutes39 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Duration duration41 = org.joda.time.Duration.millis((long) '4');
        long long42 = duration41.getMillis();
        org.joda.time.Minutes minutes43 = duration41.toStandardMinutes();
        org.joda.time.Minutes minutes44 = minutes43.negated();
        org.joda.time.Minutes minutes45 = minutes39.plus(minutes43);
        boolean boolean46 = minutes19.isGreaterThan(minutes39);
        org.joda.time.Minutes minutes47 = minutes3.minus(minutes39);
        org.joda.time.PeriodType periodType48 = minutes39.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod50 = org.joda.time.MutablePeriod.parse("PT0.097S");
        mutablePeriod50.addMonths((int) (short) 1);
        mutablePeriod50.add(10, (int) (short) 1, (int) (short) 0, (int) 'a', 0, (-97), (int) (byte) 1, (int) (byte) -1);
        mutablePeriod50.addSeconds(0);
        boolean boolean64 = periodType48.equals((java.lang.Object) 0);
        org.joda.time.Period period65 = new org.joda.time.Period(1644572196474L, 1644572175599L, periodType48);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 52L + "'", long18 == 52L);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT0M" + "'", str23, "PT0M");
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 52L + "'", long42 == 52L);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test03699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03699");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(1644572221709L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows a long: 1644572221709 * 86400000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03700");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 10, 8, 1, (int) (byte) 1);
        mutablePeriod4.setPeriod(1644572139953L);
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) mutablePeriod4);
        mutablePeriod4.setYears(306);
        org.junit.Assert.assertNotNull(weeks7);
    }

    @Test
    public void test03701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03701");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.Period period7 = period4.minusWeeks((int) (short) 100);
        org.joda.time.Period period9 = period7.plusMillis((int) (short) 100);
        org.joda.time.Period period11 = period7.minusMinutes(2147483647);
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus((-1));
        org.joda.time.DurationFieldType durationFieldType16 = seconds12.getFieldType();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Seconds seconds21 = seconds18.plus((-1));
        org.joda.time.Seconds seconds22 = org.joda.time.Seconds.TWO;
        java.lang.String str23 = seconds22.toString();
        org.joda.time.Seconds seconds24 = seconds21.plus(seconds22);
        org.joda.time.Seconds seconds25 = seconds17.minus(seconds22);
        org.joda.time.Seconds seconds26 = seconds12.plus(seconds17);
        org.joda.time.Duration duration27 = seconds12.toStandardDuration();
        java.lang.String str28 = seconds12.toString();
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.TWO;
        java.lang.String str30 = seconds29.toString();
        boolean boolean31 = seconds12.isGreaterThan(seconds29);
        org.joda.time.Seconds seconds33 = seconds12.multipliedBy((-9700));
        org.joda.time.DurationFieldType durationFieldType34 = seconds12.getFieldType();
        org.joda.time.Period period36 = period11.withField(durationFieldType34, (-9700));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT2S" + "'", str23, "PT2S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0S" + "'", str28, "PT0S");
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2S" + "'", str30, "PT2S");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test03702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03702");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant63 = null;
        java.lang.Object obj64 = null;
        org.joda.time.Duration duration65 = new org.joda.time.Duration(obj64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant63, (org.joda.time.ReadableDuration) duration65);
        boolean boolean67 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Interval interval69 = duration65.toIntervalTo(readableInstant68);
        org.joda.time.Interval interval70 = interval69.toInterval();
        org.joda.time.DateTime dateTime71 = interval70.getEnd();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.DateTime dateTime82 = interval81.getEnd();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime71, (org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Duration duration85 = period37.toDurationFrom((org.joda.time.ReadableInstant) dateTime82);
        org.joda.time.Minutes minutes86 = period37.toStandardMinutes();
        int int87 = period37.getMonths();
        org.joda.time.Period period89 = period37.plusDays(2147483647);
        int int90 = period37.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(dateTime71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(minutes86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test03703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03703");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((int) (short) 1);
        org.joda.time.Hours hours3 = hours1.minus((int) (short) -1);
        int int4 = hours1.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    }

    @Test
    public void test03704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03704");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572145404L);
        mutablePeriod1.setSeconds(222);
        mutablePeriod1.addSeconds((-49));
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks6.minus(weeks7);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks11 = weeks10.negated();
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks14 = weeks13.negated();
        org.joda.time.Weeks weeks15 = weeks11.minus(weeks14);
        org.joda.time.Duration duration16 = weeks11.toStandardDuration();
        org.joda.time.Weeks weeks17 = weeks8.plus(weeks11);
        org.joda.time.DurationFieldType durationFieldType18 = weeks17.getFieldType();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration23, (int) (short) 1);
        long long29 = duration20.getStandardMinutes();
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.weeks();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.Chronology chronology42 = interval41.getChronology();
        boolean boolean43 = durationFieldType31.isSupported(chronology42);
        org.joda.time.Period period44 = duration20.toPeriod(periodType30, chronology42);
        boolean boolean45 = durationFieldType18.isSupported(chronology42);
        java.lang.String str46 = durationFieldType18.toString();
        mutablePeriod1.set(durationFieldType18, 29);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 600L + "'", long29 == 600L);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(chronology42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "weeks" + "'", str46, "weeks");
    }

    @Test
    public void test03705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03705");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-2147483648), (-3), 6, 36000032);
        int int5 = mutablePeriod4.getMonths();
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod4.setPeriod(1644572236603L, chronology7);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03706");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 10);
        org.joda.time.Period period3 = period1.minusSeconds(300);
        org.joda.time.Weeks weeks4 = period3.toStandardWeeks();
        int int5 = period3.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-300) + "'", int5 == (-300));
    }

    @Test
    public void test03707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03707");
        org.joda.time.ReadableInterval readableInterval2 = null;
        org.joda.time.Hours hours3 = org.joda.time.Hours.hoursIn(readableInterval2);
        org.joda.time.Hours hours4 = hours3.negated();
        org.joda.time.PeriodType periodType5 = hours3.getPeriodType();
        org.joda.time.PeriodType periodType6 = periodType5.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        org.joda.time.Chronology chronology18 = interval17.getChronology();
        boolean boolean19 = durationFieldType7.isSupported(chronology18);
        org.joda.time.Period period20 = new org.joda.time.Period(1644572162361L, periodType6, chronology18);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType6);
        java.lang.String str22 = periodType6.getName();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.Chronology chronology34 = interval33.getChronology();
        boolean boolean35 = durationFieldType23.isSupported(chronology34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1644572279294L, periodType6, chronology34);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(chronology18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Hours" + "'", str22, "Hours");
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(chronology34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test03708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03708");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        long long20 = interval18.toDurationMillis();
        org.joda.time.Interval interval21 = interval18.toInterval();
        org.joda.time.Days days22 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks23 = days22.toStandardWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(weeks23);
    }

    @Test
    public void test03709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03709");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.Hours hours3 = hours1.minus((int) (byte) 100);
        org.joda.time.Hours hours4 = hours3.negated();
        java.lang.String str5 = hours4.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT100H" + "'", str5, "PT100H");
    }

    @Test
    public void test03710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03710");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.eras();
        int int5 = periodType2.indexOf(durationFieldType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.Chronology chronology16 = interval15.getChronology();
        org.joda.time.Period period17 = new org.joda.time.Period((long) 1, periodType2, chronology16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(periodType19);
        org.joda.time.Period period21 = period17.minus((org.joda.time.ReadablePeriod) mutablePeriod20);
        int int22 = period21.getHours();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(chronology16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test03711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03711");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Interval interval20 = interval17.toInterval();
        org.joda.time.Period period21 = interval20.toPeriod();
        org.joda.time.Period period22 = period21.negated();
        int int23 = period21.getHours();
        org.joda.time.Period period25 = period21.withSeconds(100);
        org.joda.time.Period period27 = period21.minusMillis((int) (short) 1);
        org.joda.time.PeriodType periodType28 = period27.getPeriodType();
        org.joda.time.Period period30 = period27.withMillis((int) '#');
        int int31 = period27.getYears();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572348779L + "'", long18 == 1644572348779L);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test03712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03712");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572234922L);
        org.joda.time.Duration duration4 = duration1.withDurationAdded(1644572230099L, (-6));
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration7.toPeriodFrom(readableInstant8);
        org.joda.time.Period period11 = period9.minusSeconds((int) '4');
        org.joda.time.Minutes minutes12 = period9.toStandardMinutes();
        org.joda.time.Period period14 = period9.multipliedBy((int) (byte) 100);
        org.joda.time.Period period16 = period14.withHours((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.months();
        org.joda.time.Period period19 = period14.withField(durationFieldType17, 0);
        org.joda.time.Period period21 = period19.plusMinutes((int) (short) -1);
        org.joda.time.Period period23 = period19.withMillis(100);
        org.joda.time.Period period25 = period19.plusWeeks(8);
        org.joda.time.Period period27 = period19.plusDays(10);
        boolean boolean28 = duration4.equals((java.lang.Object) period19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes29 = duration4.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 1644407777698");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test03713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03713");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 46, 1644572293857L);
        java.lang.Class<?> wildcardClass3 = duration2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test03714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03714");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-283), (-97), 52, 259, 22, (-42), 0, (-2231));
    }

    @Test
    public void test03715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03715");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        long long10 = interval8.toDurationMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis((long) '4');
        long long31 = duration30.getMillis();
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.setYears(0);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, (org.joda.time.ReadableInstant) dateTime52);
        java.lang.String str66 = dateTime52.toString();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, (org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        java.lang.Object obj82 = null;
        org.joda.time.Duration duration83 = new org.joda.time.Duration(obj82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant81, (org.joda.time.ReadableDuration) duration83);
        boolean boolean85 = duration80.isShorterThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Interval interval87 = duration83.toIntervalTo(readableInstant86);
        org.joda.time.Interval interval88 = interval87.toInterval();
        org.joda.time.DateTime dateTime89 = interval88.getEnd();
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime78, (org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.Days days91 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime89);
        boolean boolean93 = interval8.isAfter((org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.DateTime dateTime94 = interval8.getStart();
        org.joda.time.Chronology chronology95 = dateTime94.getChronology();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "2022-02-11T09:39:08.987Z" + "'", str66, "2022-02-11T09:39:08.987Z");
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(dateTime89);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(dateTime94);
        org.junit.Assert.assertNotNull(chronology95);
    }

    @Test
    public void test03716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03716");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Hours hours4 = org.joda.time.Hours.hoursIn(readableInterval3);
        org.joda.time.Hours hours5 = hours4.negated();
        org.joda.time.PeriodType periodType6 = hours4.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Chronology chronology19 = interval18.getChronology();
        boolean boolean20 = durationFieldType8.isSupported(chronology19);
        org.joda.time.Period period21 = new org.joda.time.Period(1644572162361L, periodType7, chronology19);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(periodType7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period23 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test03717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03717");
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.TWO;
        java.lang.String str3 = seconds2.toString();
        org.joda.time.Seconds seconds5 = seconds2.multipliedBy(8);
        org.joda.time.PeriodType periodType6 = seconds2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1644572146961L, 1644572151229L, periodType6);
        java.lang.String str8 = periodType6.getName();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT2S" + "'", str3, "PT2S");
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Seconds" + "'", str8, "Seconds");
    }

    @Test
    public void test03718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03718");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours(1644572124065L);
        long long4 = duration3.getStandardMinutes();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) (short) 1, periodType7, chronology8);
        org.joda.time.PeriodType periodType10 = periodType7.withDaysRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withDaysRemoved();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration19 = duration16.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration21 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration16, (int) (short) 1);
        long long22 = duration13.getStandardMinutes();
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.weeks();
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.Chronology chronology35 = interval34.getChronology();
        boolean boolean36 = durationFieldType24.isSupported(chronology35);
        org.joda.time.Period period37 = duration13.toPeriod(periodType23, chronology35);
        org.joda.time.Period period38 = duration3.toPeriod(periodType10, chronology35);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInterval readableInterval48 = null;
        org.joda.time.Minutes minutes49 = org.joda.time.Minutes.minutesIn(readableInterval48);
        java.lang.String str50 = minutes49.toString();
        org.joda.time.PeriodType periodType51 = minutes49.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant47, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withYearsRemoved();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration58 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration61 = duration58.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration63 = duration55.withDurationAdded((org.joda.time.ReadableDuration) duration58, (int) (short) 1);
        long long64 = duration55.getStandardMinutes();
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.weeks();
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant69 = null;
        java.lang.Object obj70 = null;
        org.joda.time.Duration duration71 = new org.joda.time.Duration(obj70);
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant69, (org.joda.time.ReadableDuration) duration71);
        boolean boolean73 = duration68.isShorterThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Interval interval75 = duration71.toIntervalTo(readableInstant74);
        org.joda.time.Interval interval76 = interval75.toInterval();
        org.joda.time.Chronology chronology77 = interval76.getChronology();
        boolean boolean78 = durationFieldType66.isSupported(chronology77);
        org.joda.time.Period period79 = duration55.toPeriod(periodType65, chronology77);
        org.joda.time.Period period80 = new org.joda.time.Period((long) (-97), periodType51, chronology77);
        org.joda.time.Period period81 = new org.joda.time.Period(1644572185917L, 1644572155516L, periodType10, chronology77);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period83 = period81.plusMinutes(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 98674327443900L + "'", long4 == 98674327443900L);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 600L + "'", long22 == 600L);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(chronology35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(minutes49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT0M" + "'", str50, "PT0M");
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 600L + "'", long64 == 600L);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(interval75);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(period79);
    }

    @Test
    public void test03719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03719");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (short) 10, 8, 1, (int) (short) 100);
        org.joda.time.Days days6 = org.joda.time.Days.days(10);
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        org.joda.time.Days days9 = org.joda.time.Days.ONE;
        org.joda.time.Days days10 = days9.negated();
        boolean boolean11 = days8.isGreaterThan(days10);
        int int12 = days10.size();
        boolean boolean13 = days6.isGreaterThan(days10);
        org.joda.time.Period period14 = period4.plus((org.joda.time.ReadablePeriod) days10);
        int int15 = period4.getHours();
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test03720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03720");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, 6, (int) (byte) 1, (-1), (int) (short) 0, 8, 100, (int) (byte) 0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Minutes minutes12 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes14 = minutes12.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        org.joda.time.PeriodType periodType16 = periodType15.withYearsRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) '#', periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withHoursRemoved();
        org.joda.time.Period period20 = duration10.toPeriod(periodType19);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod8.copy();
        org.joda.time.Duration duration25 = new org.joda.time.Duration(1644572122326L, (long) 3);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration25);
        mutablePeriod8.setPeriod((-9700), 0, 2, 3, (-23), (-101), 22, 4);
        int int36 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-101) + "'", int36 == (-101));
    }

    @Test
    public void test03721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03721");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds5);
        org.joda.time.Seconds seconds15 = seconds14.negated();
        org.joda.time.Duration duration16 = seconds14.toStandardDuration();
        org.joda.time.Seconds seconds18 = seconds14.plus((-2147483648));
        org.joda.time.Seconds seconds20 = seconds14.minus(35);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
    }

    @Test
    public void test03722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03722");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572161603L);
    }

    @Test
    public void test03723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03723");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) (short) 1, periodType2, chronology3);
        org.joda.time.PeriodType periodType5 = periodType2.withYearsRemoved();
        org.joda.time.PeriodType periodType6 = periodType2.withMillisRemoved();
        int int7 = periodType2.size();
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        org.joda.time.Days days12 = org.joda.time.Days.ONE;
        org.joda.time.Days days13 = days12.negated();
        boolean boolean14 = days11.isGreaterThan(days13);
        org.joda.time.Days days15 = days8.plus(days13);
        int int16 = days13.getDays();
        boolean boolean17 = periodType2.equals((java.lang.Object) int16);
        org.joda.time.PeriodType periodType18 = periodType2.withDaysRemoved();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test03724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03724");
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        mutablePeriod6.setMinutes(306);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes(1644572192768L);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology15);
        java.lang.String str17 = mutablePeriod16.toString();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        long long27 = interval26.getStartMillis();
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType30);
        mutablePeriod31.setYears(0);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod31.setPeriod((org.joda.time.ReadableDuration) duration35, chronology36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.DateTime dateTime48 = interval47.getEnd();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime48, (org.joda.time.ReadableInstant) dateTime59);
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, (org.joda.time.ReadableInstant) dateTime48);
        boolean boolean62 = interval26.isBefore((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Duration duration63 = mutablePeriod16.toDurationFrom((org.joda.time.ReadableInstant) dateTime48);
        org.joda.time.Chronology chronology64 = dateTime48.getChronology();
        org.joda.time.Period period65 = new org.joda.time.Period(1644572143942L, (-106L), chronology64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1644572163088L, chronology64);
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology64);
        org.joda.time.Period period68 = new org.joda.time.Period(1644572200911L, 1644572305810L, chronology64);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0S" + "'", str17, "PT0S");
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 1644572349632L + "'", long27 == 1644572349632L);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(chronology64);
    }

    @Test
    public void test03725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03725");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-10));
        org.joda.time.Duration duration3 = duration1.minus(1644572142296L);
        long long4 = duration3.getStandardDays();
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration7.toPeriodFrom(readableInstant8);
        org.joda.time.Duration duration11 = duration7.plus((-1L));
        long long12 = duration7.getStandardMinutes();
        org.joda.time.Duration duration15 = duration7.withDurationAdded(1644572157834L, 49);
        boolean boolean16 = duration3.isEqual((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType21);
        mutablePeriod22.setYears(0);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration26, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.DateTime dateTime50 = interval49.getEnd();
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime39, (org.joda.time.ReadableInstant) dateTime50);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period54 = duration18.toPeriodTo((org.joda.time.ReadableInstant) dateTime39, periodType53);
        org.joda.time.ReadableDuration readableDuration55 = null;
        boolean boolean56 = duration18.isEqual(readableDuration55);
        org.joda.time.Days days57 = duration18.toStandardDays();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardSeconds(1644572135205L);
        org.joda.time.Duration duration60 = duration18.plus((org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-19044L) + "'", long4 == (-19044L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test03726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03726");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks(5);
        java.lang.String str2 = weeks1.toString();
        int int3 = weeks1.getWeeks();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "P5W" + "'", str2, "P5W");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
    }

    @Test
    public void test03727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03727");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setYears(1);
        int int18 = mutablePeriod9.size();
        int int19 = mutablePeriod9.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod9.setValue((-2147483647), 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
    }

    @Test
    public void test03728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03728");
        org.joda.time.Period period2 = new org.joda.time.Period(32L, 360000L);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Days days4 = period2.toStandardDays();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        boolean boolean9 = days6.isGreaterThan(days8);
        org.joda.time.Days days11 = days8.plus((int) (short) 10);
        org.joda.time.Days days12 = days11.negated();
        boolean boolean13 = days4.isGreaterThan(days11);
        org.joda.time.Period period14 = days4.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration15 = new org.joda.time.Duration((java.lang.Object) days4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Days");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test03729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03729");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = seconds2.plus((-1));
        org.joda.time.DurationFieldType durationFieldType6 = seconds2.getFieldType();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.plus((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        java.lang.String str13 = seconds12.toString();
        org.joda.time.Seconds seconds14 = seconds11.plus(seconds12);
        org.joda.time.Seconds seconds15 = seconds7.minus(seconds12);
        org.joda.time.Seconds seconds16 = seconds2.plus(seconds7);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds2.plus(seconds18);
        org.joda.time.Seconds seconds20 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds22 = seconds20.multipliedBy((int) (byte) 1);
        java.lang.String str23 = seconds20.toString();
        org.joda.time.Seconds seconds24 = seconds18.plus(seconds20);
        org.joda.time.Seconds seconds25 = seconds20.negated();
        org.joda.time.PeriodType periodType26 = seconds25.getPeriodType();
        org.joda.time.PeriodType periodType27 = periodType26.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period28 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2S" + "'", str13, "PT2S");
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT3S" + "'", str23, "PT3S");
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test03730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03730");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        mutablePeriod4.setMinutes(306);
        java.lang.Object obj7 = mutablePeriod4.clone();
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "PT100H306M0.010S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "PT100H306M0.010S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "PT100H306M0.010S");
    }

    @Test
    public void test03731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03731");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.ReadableDuration readableDuration38 = null;
        boolean boolean39 = duration1.isEqual(readableDuration38);
        org.joda.time.Days days40 = duration1.toStandardDays();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardSeconds(1644572135205L);
        org.joda.time.Duration duration43 = duration1.plus((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant44);
        int int46 = period45.getMonths();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test03732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03732");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Seconds seconds9 = period6.toStandardSeconds();
        org.joda.time.Period period11 = period6.plusMonths((int) (byte) 0);
        org.joda.time.Period period13 = period6.plusWeeks(22);
        org.joda.time.Period period15 = period13.withMinutes((int) (byte) 100);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test03733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03733");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(29, (int) (short) 100, (-20), 51, (int) (short) -1, (-35), 8, (int) (short) 100);
        int int9 = mutablePeriod8.getMonths();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test03734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03734");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Seconds seconds4 = seconds2.multipliedBy((int) (byte) 10);
        org.joda.time.PeriodType periodType5 = seconds2.getPeriodType();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test03735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03735");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.Minutes minutes16 = minutes13.multipliedBy(1);
        java.lang.String str17 = minutes13.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0M" + "'", str17, "PT0M");
    }

    @Test
    public void test03736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03736");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        int int3 = weeks2.getWeeks();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks6 = weeks5.negated();
        int int7 = weeks5.getWeeks();
        org.joda.time.Weeks weeks9 = weeks5.minus(3);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks10.minus(weeks11);
        org.joda.time.Period period13 = new org.joda.time.Period((java.lang.Object) weeks12);
        org.joda.time.PeriodType periodType14 = weeks12.getPeriodType();
        boolean boolean15 = weeks5.isGreaterThan(weeks12);
        org.joda.time.Weeks weeks16 = weeks2.minus(weeks12);
        org.joda.time.MutablePeriod mutablePeriod17 = weeks2.toMutablePeriod();
        org.joda.time.Weeks weeks19 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks20 = weeks19.negated();
        org.joda.time.Weeks weeks21 = weeks20.negated();
        org.joda.time.Weeks weeks23 = weeks20.plus((int) (short) 100);
        org.joda.time.Weeks weeks24 = weeks2.minus(weeks23);
        org.joda.time.Weeks weeks25 = weeks24.negated();
        int int26 = weeks25.getWeeks();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 101 + "'", int26 == 101);
    }

    @Test
    public void test03737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03737");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.joda.time.Period period12 = duration7.toPeriod(periodType10);
        org.joda.time.PeriodType periodType13 = periodType10.withYearsRemoved();
        org.joda.time.PeriodType periodType14 = periodType10.withDaysRemoved();
        org.joda.time.PeriodType periodType15 = periodType10.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(periodType10);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod16.setSeconds(35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test03738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03738");
        org.joda.time.Period period2 = new org.joda.time.Period(32L, 360000L);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period2);
        int int4 = days3.size();
        org.joda.time.Days days6 = days3.multipliedBy((int) '4');
        org.joda.time.Days days8 = org.joda.time.Days.days((int) (short) 0);
        boolean boolean9 = days3.isLessThan(days8);
        org.joda.time.Days days10 = days3.negated();
        int int11 = days3.getDays();
        org.joda.time.Duration duration12 = days3.toStandardDuration();
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test03739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03739");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes6 = duration5.toStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.millis((long) '4');
        long long9 = duration8.getMillis();
        org.joda.time.Minutes minutes10 = duration8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        boolean boolean12 = minutes6.isGreaterThan(minutes11);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes15 = minutes13.multipliedBy((int) (short) 1);
        org.joda.time.Minutes minutes16 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes18 = minutes17.negated();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Duration duration30 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean31 = duration23.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes32 = duration23.toStandardMinutes();
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Minutes minutes34 = minutes17.minus(minutes33);
        boolean boolean35 = minutes16.isGreaterThan(minutes17);
        boolean boolean36 = minutes15.isGreaterThan(minutes17);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Minutes minutes40 = org.joda.time.Minutes.minutes(30);
        org.joda.time.Minutes minutes41 = minutes38.plus(minutes40);
        boolean boolean42 = minutes15.isLessThan(minutes41);
        org.joda.time.Minutes minutes43 = minutes11.minus(minutes15);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes43);
    }

    @Test
    public void test03740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03740");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType6 = minutes5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', periodType6, chronology8);
        org.joda.time.PeriodType periodType10 = periodType6.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1644572160950L, (long) '4', periodType10);
        int int12 = mutablePeriod11.getYears();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod11.setValue(9, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test03741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03741");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.ReadableDuration readableDuration38 = null;
        boolean boolean39 = duration1.isEqual(readableDuration38);
        org.joda.time.Days days40 = duration1.toStandardDays();
        org.joda.time.Duration duration41 = days40.toStandardDuration();
        org.joda.time.PeriodType periodType42 = days40.getPeriodType();
        org.joda.time.Days days44 = days40.plus((int) (byte) 0);
        org.joda.time.Days days46 = org.joda.time.Days.days((int) '#');
        org.joda.time.Days days47 = org.joda.time.Days.ONE;
        org.joda.time.Days days48 = days47.negated();
        org.joda.time.Days days49 = org.joda.time.Days.ONE;
        org.joda.time.Days days50 = days49.negated();
        org.joda.time.Days days51 = org.joda.time.Days.ONE;
        org.joda.time.Days days52 = days51.negated();
        boolean boolean53 = days50.isGreaterThan(days52);
        org.joda.time.Days days54 = days47.plus(days52);
        org.joda.time.Days days55 = org.joda.time.Days.ONE;
        org.joda.time.Days days56 = days55.negated();
        org.joda.time.Days days57 = org.joda.time.Days.ONE;
        org.joda.time.Days days58 = days57.negated();
        boolean boolean59 = days56.isGreaterThan(days58);
        org.joda.time.Days days61 = days58.minus((int) (short) -1);
        org.joda.time.Days days62 = days54.plus(days61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration67 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration70 = duration67.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration72 = duration64.withDurationAdded((org.joda.time.ReadableDuration) duration67, (int) (short) 1);
        org.joda.time.Days days73 = duration72.toStandardDays();
        org.joda.time.Days days74 = duration72.toStandardDays();
        org.joda.time.Days days75 = days54.minus(days74);
        org.joda.time.Days days76 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days78 = days76.minus(1);
        java.lang.String str79 = days76.toString();
        boolean boolean80 = days75.isGreaterThan(days76);
        org.joda.time.Days days81 = days46.plus(days75);
        boolean boolean82 = days40.isLessThan(days46);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(days56);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(days73);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(days76);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "P7D" + "'", str79, "P7D");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(days81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test03742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03742");
        org.joda.time.Period period4 = new org.joda.time.Period(0, 10, (int) (short) -1, (int) (byte) 1);
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.seconds(36);
        org.joda.time.Period period7 = period4.plus((org.joda.time.ReadablePeriod) seconds6);
        org.joda.time.Seconds seconds9 = seconds6.multipliedBy(51);
        org.joda.time.PeriodType periodType10 = seconds9.getPeriodType();
        org.joda.time.Seconds seconds12 = seconds9.plus((int) ' ');
        int int13 = seconds12.getSeconds();
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1868 + "'", int13 == 1868);
    }

    @Test
    public void test03743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03743");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.seconds((int) (byte) 0);
        org.joda.time.Seconds seconds3 = seconds1.dividedBy((int) (short) 100);
        org.joda.time.Duration duration4 = seconds1.toStandardDuration();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        org.joda.time.PeriodType periodType10 = mutablePeriod9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1644572190475L, periodType11);
        mutablePeriod12.addMillis((-99));
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        boolean boolean34 = interval24.isAfter((org.joda.time.ReadableInterval) interval33);
        long long35 = interval33.toDurationMillis();
        org.joda.time.Interval interval36 = interval33.toInterval();
        org.joda.time.DateTime dateTime37 = interval33.getEnd();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        org.joda.time.Interval interval47 = interval46.toInterval();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        boolean boolean57 = interval47.isAfter((org.joda.time.ReadableInterval) interval56);
        org.joda.time.Period period58 = interval56.toPeriod();
        org.joda.time.Period period59 = interval56.toPeriod();
        org.joda.time.DateTime dateTime60 = interval56.getStart();
        long long61 = dateTime60.getMillis();
        mutablePeriod12.setPeriod((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, (org.joda.time.ReadableInstant) dateTime37);
        org.joda.time.Duration duration65 = new org.joda.time.Duration(903L);
        org.joda.time.Seconds seconds70 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds71 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType72 = seconds71.getFieldType();
        org.joda.time.Seconds seconds74 = seconds71.plus((-1));
        org.joda.time.Seconds seconds75 = org.joda.time.Seconds.TWO;
        java.lang.String str76 = seconds75.toString();
        org.joda.time.Seconds seconds77 = seconds74.plus(seconds75);
        org.joda.time.Seconds seconds78 = seconds70.minus(seconds75);
        org.joda.time.Duration duration81 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = duration81.toPeriodFrom(readableInstant82);
        org.joda.time.Period period85 = period83.minusSeconds((int) '4');
        org.joda.time.Period period87 = period83.minusSeconds(10);
        org.joda.time.Period period89 = period83.withWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds90 = period83.toStandardSeconds();
        org.joda.time.Seconds seconds91 = seconds70.minus(seconds90);
        org.joda.time.PeriodType periodType92 = seconds91.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(1644572161373L, 1644572149256L, periodType92);
        org.joda.time.Period period94 = new org.joda.time.Period(1644572234016L, 4L, periodType92);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime37, (org.joda.time.ReadableDuration) duration65, periodType92);
        org.joda.time.Instant instant96 = dateTime37.toInstant();
        org.junit.Assert.assertNotNull(seconds1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(dateTime60);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 1644572350494L + "'", long61 == 1644572350494L);
        org.junit.Assert.assertNotNull(seconds70);
        org.junit.Assert.assertNotNull(seconds71);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(seconds74);
        org.junit.Assert.assertNotNull(seconds75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PT2S" + "'", str76, "PT2S");
        org.junit.Assert.assertNotNull(seconds77);
        org.junit.Assert.assertNotNull(seconds78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(seconds90);
        org.junit.Assert.assertNotNull(seconds91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(instant96);
    }

    @Test
    public void test03744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03744");
        org.joda.time.Period period1 = org.joda.time.Period.years(69);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03745");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.PeriodType periodType10 = periodType7.withMonthsRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        java.lang.String str12 = periodType11.toString();
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = periodType11.getFieldType((-690));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -690");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Millis]" + "'", str12, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test03746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03746");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        mutablePeriod3.add(0, (-1), (int) (short) 1, (int) (byte) 0, (int) (byte) 0, 1, 10, (int) '4');
        mutablePeriod3.setMillis(100);
        org.joda.time.DurationFieldType durationFieldType21 = null;
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod3.set(durationFieldType21, (-97));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'null'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
    }

    @Test
    public void test03747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03747");
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType6);
        org.joda.time.PeriodType periodType8 = mutablePeriod7.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withYearsRemoved();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Minutes minutes58 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime56);
        boolean boolean59 = periodType11.equals((java.lang.Object) dateTime56);
        org.joda.time.Chronology chronology60 = dateTime56.getChronology();
        org.joda.time.Period period61 = new org.joda.time.Period(1644572165776L, (long) '4', periodType10, chronology60);
        org.joda.time.Period period62 = new org.joda.time.Period(1644572170813L, 1644572147141L, chronology60);
        int int63 = period62.getDays();
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(chronology60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test03748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03748");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        long long5 = duration4.getMillis();
        org.joda.time.Minutes minutes6 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        long long11 = duration10.getMillis();
        org.joda.time.Minutes minutes12 = duration10.toStandardMinutes();
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        boolean boolean15 = minutes7.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes16 = minutes0.minus(minutes14);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy(5);
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration24 = duration21.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes25 = duration24.toStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.millis((long) '4');
        long long28 = duration27.getMillis();
        org.joda.time.Minutes minutes29 = duration27.toStandardMinutes();
        org.joda.time.Minutes minutes30 = minutes29.negated();
        boolean boolean31 = minutes25.isGreaterThan(minutes30);
        org.joda.time.Minutes minutes32 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes33 = minutes32.negated();
        org.joda.time.Minutes minutes34 = minutes30.minus(minutes33);
        boolean boolean35 = minutes16.isGreaterThan(minutes34);
        org.joda.time.Duration duration36 = minutes34.toStandardDuration();
        org.joda.time.Duration duration37 = duration36.toDuration();
        org.joda.time.Duration duration39 = duration36.plus(1644572302857L);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 52L + "'", long5 == 52L);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 52L + "'", long28 == 52L);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test03749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03749");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period6.plusMinutes((-1));
        org.joda.time.Hours hours11 = period6.toStandardHours();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
    }

    @Test
    public void test03750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03750");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.addMillis((-1));
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        boolean boolean25 = interval15.isAfter((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval24);
        org.joda.time.Period period27 = interval24.toPeriod();
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval24);
        long long29 = interval24.getEndMillis();
        boolean boolean31 = interval24.equals((java.lang.Object) 1644572346644L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(period27);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572350970L + "'", long29 == 1644572350970L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03751");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("2022-02-11T09:37:52.296Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:52.296Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03752");
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Hours hours5 = duration3.toStandardHours();
        org.joda.time.Duration duration7 = duration3.minus(1644572134288L);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod();
        org.joda.time.PeriodType periodType9 = mutablePeriod8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod();
        mutablePeriod13.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod13, periodType17);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.Chronology chronology32 = interval31.getChronology();
        boolean boolean33 = durationFieldType21.isSupported(chronology32);
        mutablePeriod13.setPeriod((long) 0, (long) 8, chronology32);
        org.joda.time.Period period35 = new org.joda.time.Period(0L, 1644572148770L, chronology32);
        org.joda.time.Period period36 = duration3.toPeriod(periodType9, chronology32);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType39 = periodType38.withHoursRemoved();
        org.joda.time.Period period40 = duration3.toPeriodFrom(readableInstant37, periodType38);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(0L, periodType38);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(periodType38);
        int int43 = mutablePeriod42.getSeconds();
        java.lang.Object obj44 = mutablePeriod42.clone();
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(chronology32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "P0D");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "P0D");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "P0D");
    }

    @Test
    public void test03753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03753");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (short) 1);
        org.joda.time.Period period2 = period1.negated();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test03754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03754");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType3 = minutes2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = minutes2.toMutablePeriod();
        mutablePeriod4.setHours((int) (byte) -1);
        mutablePeriod4.add((long) 10);
        org.joda.time.Minutes minutes9 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period10 = new org.joda.time.Period((java.lang.Object) minutes9);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType15 = mutablePeriod13.getFieldType(1);
        boolean boolean16 = minutes9.isSupported(durationFieldType15);
        int int17 = mutablePeriod4.get(durationFieldType15);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodFrom(readableInstant21);
        org.joda.time.Period period24 = period22.minusSeconds((int) '4');
        org.joda.time.Minutes minutes25 = period22.toStandardMinutes();
        org.joda.time.Period period27 = period22.multipliedBy((int) (byte) 100);
        org.joda.time.Period period29 = period27.withHours((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.months();
        org.joda.time.Period period32 = period27.withField(durationFieldType30, 0);
        org.joda.time.Period period34 = period32.plusMinutes((int) (short) -1);
        org.joda.time.Period period36 = period32.withMillis(100);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.DateTime dateTime58 = interval57.getEnd();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) dateTime58);
        long long60 = dateTime58.getMillis();
        org.joda.time.Duration duration61 = period32.toDurationTo((org.joda.time.ReadableInstant) dateTime58);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = new org.joda.time.Duration(1644572264322L, 1644572148725L);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration65);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(dateTime58);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1644572351300L + "'", long60 == 1644572351300L);
        org.junit.Assert.assertNotNull(duration61);
    }

    @Test
    public void test03755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03755");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572126273L, periodType1);
        mutablePeriod2.setPeriod((long) (short) 1, (long) (byte) 0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        java.lang.Object obj19 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration(obj19);
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration20);
        boolean boolean22 = duration17.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration20.toIntervalTo(readableInstant23);
        org.joda.time.Interval interval25 = interval24.toInterval();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        boolean boolean35 = interval25.isAfter((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Period period36 = interval34.toPeriod();
        boolean boolean37 = interval15.isBefore((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Interval interval38 = interval15.toInterval();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        boolean boolean58 = interval48.isAfter((org.joda.time.ReadableInterval) interval57);
        boolean boolean59 = interval38.isBefore((org.joda.time.ReadableInterval) interval57);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval38);
        org.joda.time.MutableInterval mutableInterval61 = interval38.toMutableInterval();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Interval interval71 = interval70.toInterval();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant84 = null;
        java.lang.Object obj85 = null;
        org.joda.time.Duration duration86 = new org.joda.time.Duration(obj85);
        org.joda.time.Period period87 = new org.joda.time.Period(readableInstant84, (org.joda.time.ReadableDuration) duration86);
        boolean boolean88 = duration83.isShorterThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.Interval interval90 = duration86.toIntervalTo(readableInstant89);
        boolean boolean91 = interval81.isAfter((org.joda.time.ReadableInterval) interval90);
        org.joda.time.Period period92 = interval90.toPeriod();
        boolean boolean93 = interval71.isBefore((org.joda.time.ReadableInterval) interval90);
        org.joda.time.DateTime dateTime94 = interval90.getStart();
        org.joda.time.Chronology chronology95 = dateTime94.getChronology();
        boolean boolean96 = interval38.contains((org.joda.time.ReadableInstant) dateTime94);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(mutableInterval61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(dateTime94);
        org.junit.Assert.assertNotNull(chronology95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03756");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Period period35 = period33.minusMillis((-1));
        org.joda.time.Duration duration36 = period35.toStandardDuration();
        org.joda.time.Days days37 = period35.toStandardDays();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(days37);
    }

    @Test
    public void test03757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03757");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) (short) 100, chronology4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.eras();
        boolean boolean7 = period5.isSupported(durationFieldType6);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = period2.withFieldAdded(durationFieldType6, 127);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'eras'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03758");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572147727L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test03759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03759");
        org.joda.time.Period period1 = org.joda.time.Period.millis(49);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03760");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        org.joda.time.PeriodType periodType15 = minutes14.getPeriodType();
        java.lang.String str16 = minutes14.toString();
        org.joda.time.PeriodType periodType17 = minutes14.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT0M" + "'", str16, "PT0M");
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test03761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03761");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        long long20 = interval18.toDurationMillis();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Period period23 = new org.joda.time.Period(1644572133852L);
        org.joda.time.Period period24 = period23.negated();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType29);
        mutablePeriod30.setYears(0);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology35 = null;
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration34, chronology35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.DateTime dateTime58 = interval57.getEnd();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period62 = duration26.toPeriodTo((org.joda.time.ReadableInstant) dateTime47, periodType61);
        java.lang.String str63 = periodType61.toString();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(periodType61);
        org.joda.time.Period period65 = period24.normalizedStandard(periodType61);
        org.joda.time.Period period66 = interval18.toPeriod(periodType61);
        org.joda.time.Interval interval67 = interval18.toInterval();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "PeriodType[YearWeekDay]" + "'", str63, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(interval67);
    }

    @Test
    public void test03762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03762");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        long long10 = interval8.toDurationMillis();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration18 = duration15.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration20 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration15, (int) (short) 1);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration28 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration26, (int) (short) 100);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis((long) '4');
        long long31 = duration30.getMillis();
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.setYears(0);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, (org.joda.time.ReadableInstant) dateTime52);
        java.lang.String str66 = dateTime52.toString();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, (org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        java.lang.Object obj82 = null;
        org.joda.time.Duration duration83 = new org.joda.time.Duration(obj82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant81, (org.joda.time.ReadableDuration) duration83);
        boolean boolean85 = duration80.isShorterThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Interval interval87 = duration83.toIntervalTo(readableInstant86);
        org.joda.time.Interval interval88 = interval87.toInterval();
        org.joda.time.DateTime dateTime89 = interval88.getEnd();
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime78, (org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.Days days91 = org.joda.time.Days.daysBetween((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration28, (org.joda.time.ReadableInstant) dateTime89);
        boolean boolean93 = interval8.isAfter((org.joda.time.ReadableInstant) dateTime89);
        org.joda.time.Duration duration94 = interval8.toDuration();
        org.joda.time.Days days95 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "2022-02-11T09:39:11.988Z" + "'", str66, "2022-02-11T09:39:11.988Z");
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(dateTime89);
        org.junit.Assert.assertNotNull(days91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(days95);
    }

    @Test
    public void test03763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03763");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days7 = days5.multipliedBy((int) 'a');
        org.joda.time.Days days9 = days5.plus(6);
        org.joda.time.Days days11 = days9.multipliedBy(51);
        org.joda.time.Days days13 = days11.minus((-99));
        org.joda.time.Period period14 = days13.toPeriod();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test03764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03764");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours1 = org.joda.time.Hours.parseHours("2022-02-11T09:38:32.625Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:32.625Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03765");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572157310L);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutes(3);
        org.joda.time.Duration duration4 = minutes3.toStandardDuration();
        long long5 = duration4.getStandardHours();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (byte) 100);
        long long8 = duration7.getStandardSeconds();
        org.joda.time.Duration duration10 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration7, (int) (byte) 10);
        org.joda.time.Duration duration12 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (-2));
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 360000L + "'", long8 == 360000L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test03766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03766");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutes(30);
        org.joda.time.Minutes minutes4 = minutes1.plus(minutes3);
        org.joda.time.Duration duration7 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration10 = duration7.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes11 = duration10.toStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.millis((long) '4');
        long long14 = duration13.getMillis();
        org.joda.time.Minutes minutes15 = duration13.toStandardMinutes();
        org.joda.time.Minutes minutes16 = minutes15.negated();
        boolean boolean17 = minutes11.isGreaterThan(minutes16);
        org.joda.time.Minutes minutes19 = minutes11.minus((int) (byte) 0);
        org.joda.time.Minutes minutes20 = minutes1.minus(minutes11);
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes22 = minutes21.negated();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Duration duration34 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean35 = duration27.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes36 = duration27.toStandardMinutes();
        org.joda.time.Minutes minutes37 = minutes36.negated();
        org.joda.time.Minutes minutes38 = minutes21.minus(minutes37);
        org.joda.time.PeriodType periodType39 = minutes21.getPeriodType();
        org.joda.time.Minutes minutes40 = minutes21.negated();
        int int41 = minutes40.size();
        org.joda.time.Minutes minutes43 = minutes40.dividedBy((int) (short) 100);
        org.joda.time.Minutes minutes44 = minutes43.negated();
        boolean boolean45 = minutes20.isLessThan(minutes44);
        org.joda.time.Minutes minutes47 = minutes44.minus(3);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 52L + "'", long14 == 52L);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(minutes47);
    }

    @Test
    public void test03767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03767");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        long long21 = interval18.getEndMillis();
        long long22 = interval18.getEndMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1644572352397L + "'", long21 == 1644572352397L);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1644572352397L + "'", long22 == 1644572352397L);
    }

    @Test
    public void test03768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03768");
        org.joda.time.Period period1 = org.joda.time.Period.months(35);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03769");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod0, periodType4);
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Chronology chronology19 = interval18.getChronology();
        boolean boolean20 = durationFieldType8.isSupported(chronology19);
        mutablePeriod0.setPeriod((long) 0, (long) 8, chronology19);
        org.joda.time.Period period30 = new org.joda.time.Period((int) (byte) 10, (int) (short) 0, (int) (byte) 100, 1, (-1), (int) (byte) 0, 0, 0);
        org.joda.time.Period period32 = period30.withYears(0);
        mutablePeriod0.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType42);
        org.joda.time.PeriodType periodType46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType46);
        mutablePeriod47.setYears(0);
        mutablePeriod43.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod47);
        java.lang.Object obj51 = mutablePeriod47.clone();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.Hours hours62 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Hours hours63 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval61);
        org.joda.time.DurationFieldType durationFieldType65 = hours63.getFieldType((int) (short) 0);
        java.lang.String str66 = durationFieldType65.toString();
        mutablePeriod47.set(durationFieldType65, 22);
        mutablePeriod0.add(durationFieldType65, 26);
        java.lang.String str71 = durationFieldType65.toString();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "PT22H0.001S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "PT22H0.001S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "PT22H0.001S");
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hours" + "'", str66, "hours");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hours" + "'", str71, "hours");
    }

    @Test
    public void test03770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03770");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:38:03.907Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:03.907Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03771");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P2719W1DT9H35M26.273S");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03772");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) -1);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test03773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03773");
        org.joda.time.Period period8 = new org.joda.time.Period(97, 108, (-3), (-52), 22, 5, 802, 6);
    }

    @Test
    public void test03774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03774");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:39:02.989Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:39:02.989Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03775");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.millis((long) '4');
        long long6 = duration5.getMillis();
        org.joda.time.Minutes minutes7 = duration5.toStandardMinutes();
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Minutes minutes9 = minutes3.plus(minutes7);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration15 = duration12.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes16 = duration15.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.millis((long) '4');
        long long19 = duration18.getMillis();
        org.joda.time.Minutes minutes20 = duration18.toStandardMinutes();
        org.joda.time.Minutes minutes21 = minutes20.negated();
        boolean boolean22 = minutes16.isGreaterThan(minutes21);
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes24 = minutes23.negated();
        org.joda.time.Minutes minutes25 = minutes21.minus(minutes24);
        boolean boolean26 = minutes3.isLessThan(minutes25);
        org.joda.time.Minutes minutes28 = minutes3.minus(0);
        org.joda.time.PeriodType periodType29 = minutes3.getPeriodType();
        org.joda.time.Period period30 = new org.joda.time.Period(1644572184314L, 1644572157078L, periodType29);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 52L + "'", long6 == 52L);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test03776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03776");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572150441L);
        org.joda.time.ReadableInterval readableInterval4 = null;
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.minutesIn(readableInterval4);
        java.lang.String str6 = minutes5.toString();
        org.joda.time.PeriodType periodType7 = minutes5.getPeriodType();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType7, chronology8);
        int int10 = period9.getMonths();
        org.joda.time.PeriodType periodType11 = period9.getPeriodType();
        org.joda.time.Duration duration14 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Period period15 = duration14.toPeriod();
        org.joda.time.Period period17 = period15.plusMillis((int) (byte) 0);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType19 = seconds18.getFieldType();
        org.joda.time.Chronology chronology20 = null;
        boolean boolean21 = durationFieldType19.isSupported(chronology20);
        org.joda.time.Period period23 = period17.withField(durationFieldType19, 100);
        org.joda.time.Seconds seconds24 = period23.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology26 = null;
        boolean boolean27 = durationFieldType25.isSupported(chronology26);
        int int28 = period23.get(durationFieldType25);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType31 = periodType30.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(periodType31);
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.eras();
        int int34 = periodType31.indexOf(durationFieldType33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Chronology chronology45 = interval44.getChronology();
        org.joda.time.Period period46 = new org.joda.time.Period((long) 1, periodType31, chronology45);
        org.joda.time.DurationField durationField47 = durationFieldType25.getField(chronology45);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1644572184190L, chronology45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period49 = duration1.toPeriod(periodType11, chronology45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 98674329026460");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0M" + "'", str6, "PT0M");
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(chronology45);
        org.junit.Assert.assertNotNull(durationField47);
    }

    @Test
    public void test03777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03777");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        long long13 = interval12.getStartMillis();
        org.joda.time.Hours hours14 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval12);
        org.joda.time.PeriodType periodType15 = hours14.getPeriodType();
        org.joda.time.Period period16 = new org.joda.time.Period(1644572137840L, 1644572135205L, periodType15);
        org.joda.time.PeriodType periodType17 = periodType15.withWeeksRemoved();
        org.joda.time.Period period18 = new org.joda.time.Period((long) 5, 4L, periodType17);
        org.joda.time.MutablePeriod mutablePeriod19 = period18.toMutablePeriod();
        int[] intArray20 = period18.getValues();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1644572352895L + "'", long13 == 1644572352895L);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[0]");
    }

    @Test
    public void test03778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03778");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:36:52.561Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:52.561Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03779");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getMillis();
        org.joda.time.Minutes minutes9 = duration7.toStandardMinutes();
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        boolean boolean12 = minutes4.isGreaterThan(minutes11);
        org.joda.time.Minutes minutes14 = minutes11.multipliedBy(3);
        org.joda.time.Minutes minutes16 = minutes11.multipliedBy(3);
        org.joda.time.Duration duration17 = minutes11.toStandardDuration();
        org.joda.time.Minutes minutes19 = minutes11.multipliedBy(0);
        org.joda.time.PeriodType periodType20 = minutes19.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test03780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03780");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        int int1 = weeks0.size();
        org.joda.time.Duration duration2 = weeks0.toStandardDuration();
        int int3 = weeks0.getWeeks();
        org.joda.time.Duration duration4 = weeks0.toStandardDuration();
        org.joda.time.Period period6 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks8 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period9 = period6.plus((org.joda.time.ReadablePeriod) weeks8);
        int int10 = period9.getMinutes();
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period9);
        org.joda.time.Weeks weeks12 = weeks0.plus(weeks11);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = weeks11.getValue((-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
    }

    @Test
    public void test03781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03781");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Period period8 = period4.minusSeconds(10);
        org.joda.time.Period period10 = period4.withWeeks((int) (byte) -1);
        int[] intArray11 = period10.getValues();
        int int12 = period10.getDays();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, -1, 0, 0, 0, 0, -97]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test03782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03782");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 10, 8, 6, (int) (short) 1);
        int[] intArray5 = period4.getValues();
        org.joda.time.Period period7 = period4.withMillis((-10));
        org.joda.time.Period period9 = period4.plusMonths(49);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 10, 8, 6, 1]");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test03783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03783");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period(35, (-9700), (int) (byte) 1, 5, 2, (-23), (-283), 49, periodType8);
    }

    @Test
    public void test03784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03784");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.Days days2 = days0.minus((int) (short) 10);
        org.joda.time.Period period4 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Period period6 = period4.minusHours(10);
        org.joda.time.Days days7 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period4);
        org.joda.time.Days days9 = days7.plus(6);
        org.joda.time.Duration duration10 = days9.toStandardDuration();
        org.joda.time.Days days11 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days9);
        org.joda.time.Days days12 = days0.plus(days11);
        org.joda.time.Duration duration13 = days11.toStandardDuration();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test03785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03785");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period3 = period1.minusMillis((-1));
        org.joda.time.MutablePeriod mutablePeriod4 = period3.toMutablePeriod();
        int int5 = mutablePeriod4.getMinutes();
        mutablePeriod4.setMillis(306);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test03786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03786");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Minutes minutes7 = period4.toStandardMinutes();
        org.joda.time.Period period9 = period4.multipliedBy((int) (byte) 100);
        org.joda.time.Period period11 = period9.withHours((int) (short) 0);
        org.joda.time.Period period13 = period9.minusMonths((int) (byte) 10);
        org.joda.time.Period period15 = new org.joda.time.Period(1L);
        int int16 = period15.getWeeks();
        org.joda.time.DurationFieldType durationFieldType18 = period15.getFieldType((int) (short) 0);
        org.joda.time.Period period20 = period13.withField(durationFieldType18, 36);
        org.joda.time.PeriodType periodType30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType30);
        int int32 = mutablePeriod31.getDays();
        mutablePeriod31.addYears((int) (byte) -1);
        org.joda.time.PeriodType periodType35 = mutablePeriod31.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1644572134072L, periodType35);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((java.lang.Object) period13, periodType35);
        int int38 = mutablePeriod37.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType40 = mutablePeriod37.getFieldType(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-9700) + "'", int38 == (-9700));
    }

    @Test
    public void test03787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03787");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1644572156728L);
        long long2 = duration1.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 98674329403680000L + "'", long2 == 98674329403680000L);
    }

    @Test
    public void test03788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03788");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572178980L, 1644572339140L);
    }

    @Test
    public void test03789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03789");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod0, periodType4);
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Chronology chronology19 = interval18.getChronology();
        boolean boolean20 = durationFieldType8.isSupported(chronology19);
        mutablePeriod0.setPeriod((long) 0, (long) 8, chronology19);
        mutablePeriod0.add((int) (byte) 1, (int) (short) 0, 36000032, 8, 22, 97, (-2), 4);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test03790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03790");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.DurationFieldType durationFieldType12 = hours11.getFieldType();
        org.joda.time.Hours hours14 = hours11.minus(1);
        org.joda.time.Hours hours16 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.Hours hours27 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Hours hours29 = hours27.dividedBy(1);
        boolean boolean30 = hours16.isGreaterThan(hours29);
        org.joda.time.Hours hours31 = hours29.negated();
        org.joda.time.Hours hours32 = hours11.plus(hours31);
        org.joda.time.Hours hours33 = hours32.negated();
        org.joda.time.Hours hours34 = org.joda.time.Hours.MIN_VALUE;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours35 = hours32.minus(hours34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Integer.MIN_VALUE cannot be negated");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours34);
    }

    @Test
    public void test03791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03791");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Period period23 = period21.plusHours((int) (short) -1);
        org.joda.time.Period period25 = period21.plusSeconds(22);
        org.joda.time.Period period27 = period21.minusMillis((-9700));
        org.joda.time.Period period29 = period27.withDays((int) 'a');
        int int30 = period29.getMinutes();
        org.joda.time.Hours hours31 = period29.toStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(hours31);
    }

    @Test
    public void test03792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03792");
        org.joda.time.Period period1 = new org.joda.time.Period((-1L));
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.joda.time.Period period4 = period1.minusMinutes((int) ' ');
        org.joda.time.Period period6 = period4.minusYears((int) (short) 10);
        org.joda.time.Period period7 = period4.negated();
        org.joda.time.Period period8 = period4.toPeriod();
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test03793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03793");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days6 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days8 = days6.minus(1);
        boolean boolean9 = days5.isLessThan(days8);
        org.joda.time.Days days11 = days5.multipliedBy((int) (byte) 0);
        org.joda.time.PeriodType periodType12 = days5.getPeriodType();
        org.joda.time.Days days14 = days5.dividedBy((-10));
        java.lang.String str15 = days5.toString();
        org.joda.time.DurationFieldType durationFieldType16 = days5.getFieldType();
        org.joda.time.Days days18 = org.joda.time.Days.days(10);
        org.joda.time.Days days19 = org.joda.time.Days.ONE;
        org.joda.time.Days days20 = days19.negated();
        org.joda.time.Days days21 = org.joda.time.Days.ONE;
        org.joda.time.Days days22 = days21.negated();
        boolean boolean23 = days20.isGreaterThan(days22);
        int int24 = days22.size();
        boolean boolean25 = days18.isGreaterThan(days22);
        org.joda.time.Days days27 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days28 = days22.plus(days27);
        org.joda.time.Days days29 = org.joda.time.Days.THREE;
        org.joda.time.Days days31 = days29.minus((int) (short) 10);
        org.joda.time.Days days32 = days28.minus(days31);
        boolean boolean33 = days5.isLessThan(days28);
        org.joda.time.Days days35 = days5.minus((int) (short) 100);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P0D" + "'", str15, "P0D");
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(days35);
    }

    @Test
    public void test03794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03794");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572250770L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) duration4, periodType10, chronology11);
        java.lang.String str13 = duration4.toString();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean15 = duration1.isEqual((org.joda.time.ReadableDuration) duration4);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT36000S" + "'", str13, "PT36000S");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03795");
        org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("P0D");
        org.junit.Assert.assertNotNull(seconds1);
    }

    @Test
    public void test03796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03796");
        java.lang.Object obj4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod();
        mutablePeriod5.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod5, periodType9);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Chronology chronology24 = interval23.getChronology();
        boolean boolean25 = durationFieldType13.isSupported(chronology24);
        mutablePeriod5.setPeriod((long) 0, (long) 8, chronology24);
        org.joda.time.Period period27 = new org.joda.time.Period(obj4, chronology24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1644572155170L, 1644572140312L, chronology24);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(164457249783893L, 0L, chronology24);
        org.joda.time.MutablePeriod mutablePeriod30 = mutablePeriod29.toMutablePeriod();
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(chronology24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(mutablePeriod30);
    }

    @Test
    public void test03797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03797");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration7, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, (org.joda.time.ReadableInstant) dateTime20);
        org.joda.time.Period period35 = period33.minusMillis((-1));
        int int36 = period33.getYears();
        org.joda.time.PeriodType periodType37 = period33.getPeriodType();
        org.joda.time.Days days38 = org.joda.time.Days.ONE;
        org.joda.time.Days days39 = days38.negated();
        org.joda.time.Days days40 = org.joda.time.Days.ONE;
        org.joda.time.Days days41 = days40.negated();
        boolean boolean42 = days39.isGreaterThan(days41);
        org.joda.time.MutablePeriod mutablePeriod43 = days39.toMutablePeriod();
        org.joda.time.Period period44 = period33.minus((org.joda.time.ReadablePeriod) mutablePeriod43);
        org.joda.time.ReadablePeriod readablePeriod45 = null;
        org.joda.time.Period period46 = period33.plus(readablePeriod45);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = period33.getValue(36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 36");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertNotNull(days41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(mutablePeriod43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test03798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03798");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period21 = interval18.toPeriod();
        org.joda.time.Duration duration22 = interval18.toDuration();
        org.joda.time.DateTime dateTime23 = interval18.getEnd();
        org.joda.time.ReadableInterval readableInterval24 = null;
        boolean boolean25 = interval18.contains(readableInterval24);
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks28 = weeks27.negated();
        org.joda.time.Weeks weeks30 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks31 = weeks30.negated();
        org.joda.time.Weeks weeks32 = weeks28.minus(weeks31);
        org.joda.time.Duration duration33 = weeks28.toStandardDuration();
        org.joda.time.PeriodType periodType34 = weeks28.getPeriodType();
        boolean boolean35 = interval18.equals((java.lang.Object) weeks28);
        org.joda.time.Weeks weeks36 = weeks28.negated();
        org.joda.time.Weeks weeks38 = weeks36.multipliedBy((-10));
        org.joda.time.Weeks weeks40 = weeks36.multipliedBy(0);
        org.joda.time.Weeks weeks42 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks43 = weeks42.negated();
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks46 = weeks45.negated();
        org.joda.time.Weeks weeks47 = weeks43.minus(weeks46);
        org.joda.time.Duration duration48 = weeks43.toStandardDuration();
        boolean boolean49 = weeks40.isLessThan(weeks43);
        org.joda.time.Weeks weeks50 = null;
        boolean boolean51 = weeks43.isLessThan(weeks50);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(weeks30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertNotNull(weeks32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertNotNull(weeks42);
        org.junit.Assert.assertNotNull(weeks43);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test03799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03799");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Period period5 = period3.minusMillis(0);
        org.joda.time.Period period7 = period3.minusHours((int) '4');
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.plusDays((int) (byte) 0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Weeks weeks34 = period33.toStandardWeeks();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks35.plus((int) '4');
        org.joda.time.Weeks weeks38 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks40 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean41 = weeks38.isGreaterThan(weeks40);
        org.joda.time.DurationFieldType durationFieldType42 = weeks40.getFieldType();
        boolean boolean43 = weeks35.isGreaterThan(weeks40);
        boolean boolean44 = weeks34.isGreaterThan(weeks40);
        org.joda.time.Weeks weeks46 = weeks34.minus(8);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.Chronology chronology57 = interval56.getChronology();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval56);
        int int59 = weeks58.getWeeks();
        org.joda.time.Weeks weeks60 = weeks46.minus(weeks58);
        org.joda.time.Weeks weeks61 = weeks60.negated();
        org.joda.time.Period period62 = period7.minus((org.joda.time.ReadablePeriod) weeks60);
        org.joda.time.Period period64 = period7.withMillis(36000032);
        org.joda.time.Period period66 = period7.withDays((int) '4');
        org.joda.time.Period period68 = period7.withSeconds(4);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(weeks34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(weeks40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(weeks46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(chronology57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
    }

    @Test
    public void test03800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03800");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes6 = minutes3.multipliedBy((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod7 = minutes3.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test03801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03801");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.PeriodType periodType4 = minutes3.getPeriodType();
        org.joda.time.ReadableInterval readableInterval5 = null;
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.minutesIn(readableInterval5);
        java.lang.String str7 = minutes6.toString();
        org.joda.time.Minutes minutes8 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes10 = minutes8.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType11 = minutes10.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.eras();
        boolean boolean14 = periodType11.isSupported(durationFieldType13);
        int int15 = minutes6.get(durationFieldType13);
        org.joda.time.ReadableInterval readableInterval16 = null;
        org.joda.time.Minutes minutes17 = org.joda.time.Minutes.minutesIn(readableInterval16);
        org.joda.time.Minutes minutes18 = minutes6.minus(minutes17);
        org.joda.time.Minutes minutes19 = minutes3.minus(minutes6);
        int int20 = minutes3.size();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes23 = minutes21.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType24 = minutes23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod25 = minutes23.toMutablePeriod();
        mutablePeriod25.setHours((int) (byte) -1);
        mutablePeriod25.add((long) 10);
        org.joda.time.Minutes minutes30 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) minutes30);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType36 = mutablePeriod34.getFieldType(1);
        boolean boolean37 = minutes30.isSupported(durationFieldType36);
        int int38 = mutablePeriod25.get(durationFieldType36);
        int int39 = minutes3.get(durationFieldType36);
        org.joda.time.Minutes minutes41 = minutes3.multipliedBy((-1));
        org.joda.time.Minutes minutes42 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes43 = minutes42.negated();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        org.joda.time.Duration duration55 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean56 = duration48.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes57 = duration48.toStandardMinutes();
        org.joda.time.Minutes minutes58 = minutes57.negated();
        org.joda.time.Minutes minutes59 = minutes42.minus(minutes58);
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes61 = minutes60.negated();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Duration duration73 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean74 = duration66.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes75 = duration66.toStandardMinutes();
        org.joda.time.Minutes minutes76 = minutes75.negated();
        org.joda.time.Minutes minutes77 = minutes60.minus(minutes76);
        org.joda.time.PeriodType periodType78 = minutes60.getPeriodType();
        org.joda.time.Minutes minutes79 = minutes59.plus(minutes60);
        org.joda.time.Minutes minutes80 = minutes3.minus(minutes59);
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes82 = minutes81.negated();
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant85 = null;
        java.lang.Object obj86 = null;
        org.joda.time.Duration duration87 = new org.joda.time.Duration(obj86);
        org.joda.time.Period period88 = new org.joda.time.Period(readableInstant85, (org.joda.time.ReadableDuration) duration87);
        boolean boolean89 = duration84.isShorterThan((org.joda.time.ReadableDuration) duration87);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Interval interval91 = duration87.toIntervalTo(readableInstant90);
        org.joda.time.Duration duration94 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean95 = duration87.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes96 = duration87.toStandardMinutes();
        org.joda.time.Minutes minutes97 = minutes96.negated();
        org.joda.time.Minutes minutes98 = minutes81.minus(minutes97);
        org.joda.time.Minutes minutes99 = minutes80.plus(minutes97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0M" + "'", str7, "PT0M");
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(minutes41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(minutes58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(minutes77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(minutes79);
        org.junit.Assert.assertNotNull(minutes80);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(interval91);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(minutes96);
        org.junit.Assert.assertNotNull(minutes97);
        org.junit.Assert.assertNotNull(minutes98);
        org.junit.Assert.assertNotNull(minutes99);
    }

    @Test
    public void test03802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03802");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period6.plusMinutes((-1));
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration13.toPeriodFrom(readableInstant14);
        org.joda.time.Period period17 = period15.withMinutes(0);
        org.joda.time.ReadableInterval readableInterval20 = null;
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.minutesIn(readableInterval20);
        java.lang.String str22 = minutes21.toString();
        org.joda.time.PeriodType periodType23 = minutes21.getPeriodType();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType23, chronology24);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.eras();
        int int27 = period25.indexOf(durationFieldType26);
        int int28 = period17.get(durationFieldType26);
        java.lang.String str29 = durationFieldType26.toString();
        org.joda.time.Period period31 = period10.withFieldAdded(durationFieldType26, (int) (byte) 0);
        org.joda.time.Minutes minutes32 = period31.toStandardMinutes();
        org.joda.time.Period period34 = period31.plusSeconds(51);
        org.joda.time.Period period36 = period31.multipliedBy(9);
        org.joda.time.PeriodType periodType37 = period31.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0M" + "'", str22, "PT0M");
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "eras" + "'", str29, "eras");
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType37);
    }

    @Test
    public void test03803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03803");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(4L, 1644572297350L);
    }

    @Test
    public void test03804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03804");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        boolean boolean4 = days1.isGreaterThan(days3);
        int int5 = days3.size();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType10);
        mutablePeriod11.setYears(0);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration15, chronology16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period43 = duration7.toPeriodTo((org.joda.time.ReadableInstant) dateTime28, periodType42);
        org.joda.time.ReadableDuration readableDuration44 = null;
        boolean boolean45 = duration7.isEqual(readableDuration44);
        org.joda.time.Days days46 = duration7.toStandardDays();
        org.joda.time.Days days47 = days3.plus(days46);
        org.joda.time.Duration duration50 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration50.toPeriodFrom(readableInstant51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration50.toPeriod(chronology53);
        org.joda.time.Period period56 = period54.withYears((int) (byte) 10);
        org.joda.time.Period period57 = period54.toPeriod();
        org.joda.time.Period period59 = period57.minusWeeks((int) (byte) 10);
        org.joda.time.Days days60 = period57.toStandardDays();
        org.joda.time.Days days61 = days3.minus(days60);
        int int62 = days60.getDays();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(days60);
        org.junit.Assert.assertNotNull(days61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test03805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03805");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(3);
        org.joda.time.Duration duration2 = minutes1.toStandardDuration();
        long long3 = duration2.getStandardHours();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(5, 22, (-2), (-9700), (int) (short) 0, (int) (short) 100, 30, 2147483647);
        mutablePeriod12.setPeriod(0L, (long) 300);
        int int16 = mutablePeriod12.getYears();
        boolean boolean17 = duration2.equals((java.lang.Object) int16);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test03806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03806");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Weeks weeks21 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks22 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks23 = weeks21.minus(weeks22);
        org.joda.time.Weeks weeks24 = weeks20.plus(weeks21);
        int int25 = weeks20.getWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
// flaky:         org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(weeks21);
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test03807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03807");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(11);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03808");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutesIn(readableInterval0);
        java.lang.String str2 = minutes1.toString();
        org.joda.time.PeriodType periodType3 = minutes1.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(periodType3);
        mutablePeriod4.setPeriod((long) (-1));
        int[] intArray7 = mutablePeriod4.getValues();
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0M" + "'", str2, "PT0M");
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0]");
    }

    @Test
    public void test03809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03809");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.minutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.DateTime dateTime14 = interval13.getEnd();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        boolean boolean34 = interval24.isAfter((org.joda.time.ReadableInterval) interval33);
        boolean boolean35 = interval13.contains((org.joda.time.ReadableInterval) interval24);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType38);
        mutablePeriod39.setYears(0);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration43, chronology44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration74.toIntervalTo(readableInstant77);
        org.joda.time.Interval interval79 = interval78.toInterval();
        org.joda.time.DateTime dateTime80 = interval79.getEnd();
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType83 = periodType82.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(periodType83);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(10L, periodType83);
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime80, periodType83);
        boolean boolean87 = interval24.isAfter((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Chronology chronology88 = dateTime56.getChronology();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3, chronology88);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(1644572137529L, periodType3);
        org.joda.time.PeriodType periodType91 = periodType3.withYearsRemoved();
        org.joda.time.PeriodType periodType92 = periodType91.withWeeksRemoved();
        org.joda.time.PeriodType periodType93 = periodType91.withMillisRemoved();
        org.joda.time.Chronology chronology94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(164457249783893L, periodType93, chronology94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 2740954163");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(dateTime80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType93);
    }

    @Test
    public void test03810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03810");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        java.lang.String str37 = dateTime23.toString();
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        java.lang.Object obj42 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration(obj42);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration43);
        boolean boolean45 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration43.toIntervalTo(readableInstant46);
        org.joda.time.Interval interval48 = interval47.toInterval();
        org.joda.time.DateTime dateTime49 = interval48.getEnd();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        org.joda.time.Interval interval59 = interval58.toInterval();
        org.joda.time.DateTime dateTime60 = interval59.getEnd();
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime49, (org.joda.time.ReadableInstant) dateTime60);
        org.joda.time.Seconds seconds62 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime49);
        org.joda.time.Chronology chronology63 = dateTime23.getChronology();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Period period77 = period75.withDays(6);
        org.joda.time.Duration duration78 = period75.toStandardDuration();
        java.lang.Object obj79 = null;
        org.joda.time.Duration duration80 = new org.joda.time.Duration(obj79);
        org.joda.time.Duration duration83 = duration80.withDurationAdded(1644572124065L, 0);
        boolean boolean84 = duration78.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "2022-02-11T09:39:14.084Z" + "'", str37, "2022-02-11T09:39:14.084Z");
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(interval59);
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(chronology63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test03811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03811");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.addMillis((-1));
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod5.setMillis((int) '4');
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod5.copy();
        org.joda.time.Duration duration18 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration20 = duration18.plus(1644572122285L);
        long long21 = duration18.getMillis();
        long long22 = duration18.getStandardHours();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = seconds23.multipliedBy((int) (byte) 1);
        org.joda.time.PeriodType periodType26 = seconds25.getPeriodType();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Chronology chronology37 = interval36.getChronology();
        org.joda.time.Period period38 = duration18.toPeriod(periodType26, chronology37);
        mutablePeriod5.add(100L, chronology37);
        mutablePeriod5.clear();
        int int41 = mutablePeriod5.getSeconds();
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 52L + "'", long21 == 52L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(chronology37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test03812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03812");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.DateTime dateTime44 = interval43.getEnd();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime33, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.Minutes minutes46 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime44);
        org.joda.time.DateTimeFieldType dateTimeFieldType47 = null;
        boolean boolean48 = dateTime44.isSupported(dateTimeFieldType47);
        org.joda.time.Duration duration51 = new org.joda.time.Duration(0L, (long) 100);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes56 = minutes54.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType57 = minutes56.getPeriodType();
        org.joda.time.PeriodType periodType58 = periodType57.withYearsRemoved();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((long) '#', periodType57, chronology59);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType57);
        org.joda.time.PeriodType periodType62 = periodType57.withWeeksRemoved();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableDuration) duration51, periodType62);
        org.joda.time.DateTimeFieldType dateTimeFieldType64 = null;
        boolean boolean65 = dateTime44.isSupported(dateTimeFieldType64);
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Duration duration70 = duration67.withDurationAdded(1644572124065L, 0);
        org.joda.time.Duration duration71 = duration67.toDuration();
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.minutes();
        org.joda.time.Period period74 = new org.joda.time.Period((long) 10, periodType73);
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime44, (org.joda.time.ReadableDuration) duration71, periodType73);
        org.joda.time.Period period76 = period75.toPeriod();
        org.joda.time.Period period77 = period76.toPeriod();
        org.joda.time.Period period79 = period77.plusMinutes((int) (byte) 10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
    }

    @Test
    public void test03813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03813");
        org.joda.time.Period period1 = org.joda.time.Period.days(46);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03814");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        mutablePeriod9.clear();
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.Days days15 = duration13.toStandardDays();
        org.joda.time.Days days16 = days15.negated();
        org.joda.time.Days days18 = days16.multipliedBy((int) 'a');
        org.joda.time.Days days20 = days16.plus(6);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) days20);
        org.joda.time.Days days23 = days20.plus(222);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days25 = days23.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 228 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(days23);
    }

    @Test
    public void test03815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03815");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.DurationFieldType[] durationFieldTypeArray10 = mutablePeriod9.getFieldTypes();
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = duration13.toPeriodFrom(readableInstant14);
        org.joda.time.Duration duration17 = duration13.plus((-1L));
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod9.setPeriod((org.joda.time.ReadableDuration) duration17, chronology18);
        org.joda.time.Seconds seconds20 = duration17.toStandardSeconds();
        org.joda.time.Seconds seconds22 = seconds20.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType23 = seconds22.getFieldType();
        org.joda.time.Seconds seconds25 = seconds22.dividedBy(51);
        org.joda.time.Seconds seconds27 = seconds25.plus((-1));
        org.joda.time.Duration duration28 = seconds25.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldTypeArray10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(duration28);
    }

    @Test
    public void test03816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03816");
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        boolean boolean12 = days9.isGreaterThan(days11);
        org.joda.time.Days days14 = days11.plus((int) (short) 10);
        org.joda.time.Days days16 = days14.plus((int) (byte) 0);
        org.joda.time.Days days18 = days14.plus((int) (short) -1);
        org.joda.time.Days days20 = days14.multipliedBy((int) (byte) 100);
        java.lang.String str21 = days14.toString();
        org.joda.time.Days days22 = org.joda.time.Days.ONE;
        org.joda.time.Days days23 = days22.negated();
        org.joda.time.Days days24 = org.joda.time.Days.ONE;
        org.joda.time.Days days25 = days24.negated();
        org.joda.time.Days days26 = org.joda.time.Days.ONE;
        org.joda.time.Days days27 = days26.negated();
        boolean boolean28 = days25.isGreaterThan(days27);
        org.joda.time.Days days29 = days22.plus(days27);
        org.joda.time.Days days30 = org.joda.time.Days.ONE;
        org.joda.time.Days days31 = days30.negated();
        org.joda.time.Days days32 = org.joda.time.Days.ONE;
        org.joda.time.Days days33 = days32.negated();
        boolean boolean34 = days31.isGreaterThan(days33);
        org.joda.time.Days days36 = days33.minus((int) (short) -1);
        org.joda.time.Days days37 = days29.plus(days36);
        org.joda.time.Days days38 = days14.minus(days29);
        org.joda.time.PeriodType periodType39 = days14.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(36000000, (int) '4', (int) '#', (-283), (-4), 23, (int) (byte) -1, (-101), periodType39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P9D" + "'", str21, "P9D");
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(periodType39);
    }

    @Test
    public void test03817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03817");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.ONE;
        boolean boolean7 = weeks1.isLessThan(weeks6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        org.joda.time.Interval interval17 = interval16.toInterval();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        boolean boolean27 = interval17.isAfter((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Weeks weeks28 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval26);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration31.toPeriodFrom(readableInstant32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration31.toPeriod(chronology34);
        java.lang.String str36 = period35.toString();
        org.joda.time.MutablePeriod mutablePeriod37 = period35.toMutablePeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        java.lang.Object obj41 = null;
        org.joda.time.Duration duration42 = new org.joda.time.Duration(obj41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean44 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Interval interval46 = duration42.toIntervalTo(readableInstant45);
        long long47 = interval46.getStartMillis();
        mutablePeriod37.setPeriod((org.joda.time.ReadableInterval) interval46);
        org.joda.time.Interval interval49 = interval46.toInterval();
        org.joda.time.Duration duration50 = interval49.toDuration();
        boolean boolean51 = interval26.isAfter((org.joda.time.ReadableInterval) interval49);
        org.joda.time.Weeks weeks52 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval49);
        boolean boolean53 = weeks1.isGreaterThan(weeks52);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks56 = weeks55.negated();
        org.joda.time.PeriodType periodType57 = weeks55.getPeriodType();
        org.joda.time.Weeks weeks58 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks60 = weeks58.minus(weeks59);
        org.joda.time.Weeks weeks62 = weeks60.multipliedBy(100);
        boolean boolean63 = weeks55.isLessThan(weeks62);
        int int64 = weeks55.getWeeks();
        org.joda.time.Weeks weeks65 = weeks52.minus(weeks55);
        org.joda.time.Weeks weeks66 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks67 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks68 = weeks66.minus(weeks67);
        int int69 = weeks68.getWeeks();
        org.joda.time.Duration duration70 = weeks68.toStandardDuration();
        org.joda.time.Weeks weeks72 = weeks68.plus((-97));
        org.joda.time.Weeks weeks74 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks75 = weeks74.negated();
        int int76 = weeks74.getWeeks();
        java.lang.String str77 = weeks74.toString();
        org.joda.time.Weeks weeks78 = weeks68.minus(weeks74);
        org.joda.time.DurationFieldType durationFieldType80 = weeks68.getFieldType((int) (short) 0);
        org.joda.time.Weeks weeks81 = weeks65.plus(weeks68);
        org.joda.time.Weeks weeks83 = weeks65.multipliedBy(10);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(weeks28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT0.097S" + "'", str36, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(interval46);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + 1644572354483L + "'", long47 == 1644572354483L);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(weeks52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(weeks58);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(weeks65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(weeks67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(weeks72);
        org.junit.Assert.assertNotNull(weeks74);
        org.junit.Assert.assertNotNull(weeks75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "P-1W" + "'", str77, "P-1W");
        org.junit.Assert.assertNotNull(weeks78);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(weeks81);
        org.junit.Assert.assertNotNull(weeks83);
    }

    @Test
    public void test03818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03818");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 306);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration8 = duration5.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Minutes minutes9 = duration8.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.millis((long) '4');
        long long12 = duration11.getMillis();
        org.joda.time.Minutes minutes13 = duration11.toStandardMinutes();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        boolean boolean15 = minutes9.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes17 = minutes9.minus((int) (byte) 0);
        org.joda.time.Minutes minutes20 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes22 = minutes20.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType23 = minutes22.getPeriodType();
        org.joda.time.PeriodType periodType24 = periodType23.withYearsRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) '#', periodType23, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType23);
        org.joda.time.PeriodType periodType28 = periodType23.withSecondsRemoved();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Interval interval38 = duration34.toIntervalTo(readableInstant37);
        org.joda.time.Interval interval39 = interval38.toInterval();
        org.joda.time.DateTime dateTime40 = interval39.getEnd();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime40, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.DateTime dateTime74 = interval73.getEnd();
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime63, (org.joda.time.ReadableInstant) dateTime74);
        org.joda.time.Minutes minutes76 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableInstant) dateTime74);
        boolean boolean77 = periodType29.equals((java.lang.Object) dateTime74);
        org.joda.time.Chronology chronology78 = dateTime74.getChronology();
        org.joda.time.Period period79 = new org.joda.time.Period((java.lang.Object) minutes9, periodType23, chronology78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType81 = periodType80.withHoursRemoved();
        org.joda.time.PeriodType periodType82 = periodType81.withSecondsRemoved();
        java.lang.String str83 = periodType82.getName();
        org.joda.time.Period period84 = period79.withPeriodType(periodType82);
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType82);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period87 = period85.minusYears(26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(minutes20);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(chronology78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "SecondsNoSeconds" + "'", str83, "SecondsNoSeconds");
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test03819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03819");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Duration duration29 = duration25.plus((-1L));
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.Seconds seconds31 = duration25.toStandardSeconds();
        org.joda.time.Duration duration33 = org.joda.time.Duration.millis(1644572131443L);
        org.joda.time.Duration duration34 = duration25.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Interval interval36 = duration34.toIntervalFrom(readableInstant35);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(interval36);
    }

    @Test
    public void test03820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03820");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Weeks weeks23 = period22.toStandardWeeks();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period22);
        int int25 = weeks24.size();
        org.joda.time.PeriodType periodType26 = weeks24.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType28 = weeks24.getFieldType(127);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: 127");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test03821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03821");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.TWO;
        java.lang.String str1 = seconds0.toString();
        org.joda.time.Seconds seconds3 = seconds0.multipliedBy(8);
        org.joda.time.PeriodType periodType4 = seconds3.getPeriodType();
        org.joda.time.PeriodType periodType5 = seconds3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.Seconds seconds10 = period9.toStandardSeconds();
        org.joda.time.Seconds seconds11 = period9.toStandardSeconds();
        org.joda.time.PeriodType periodType12 = seconds11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withDaysRemoved();
        boolean boolean14 = periodType5.equals((java.lang.Object) periodType13);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "PT2S" + "'", str1, "PT2S");
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03822");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period8 = new org.joda.time.Period(1644572170488L);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.Hours hours28 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Hours hours29 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval27);
        boolean boolean30 = interval17.overlaps((org.joda.time.ReadableInterval) interval27);
        org.joda.time.DateTime dateTime31 = interval17.getStart();
        org.joda.time.Duration duration32 = period8.toDurationTo((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Period period33 = duration4.toPeriodFrom((org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int35 = dateTime31.get(dateTimeFieldType34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test03823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03823");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Seconds seconds5 = period3.toStandardSeconds();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType8);
        mutablePeriod9.setYears(0);
        mutablePeriod9.setWeeks((int) (short) -1);
        boolean boolean14 = period3.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Period period16 = period3.minusMinutes((int) (short) 0);
        org.joda.time.Period period18 = period16.plusWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds19 = period18.toStandardSeconds();
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(seconds19);
    }

    @Test
    public void test03824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03824");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(4, 306, (int) (byte) 10, 0, (int) (short) -1, (int) (short) -1, (-2147483647), 8);
    }

    @Test
    public void test03825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03825");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:36:37.100Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03826");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.Period period22 = period20.withMillis((int) ' ');
        org.joda.time.Seconds seconds23 = period22.toStandardSeconds();
        org.joda.time.Period period25 = period22.plusWeeks((int) (byte) 100);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test03827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03827");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.minusYears((int) (byte) -1);
        org.joda.time.Period period10 = period6.plusMinutes((-1));
        org.joda.time.Period period15 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period16 = period10.withFields((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Minutes minutes17 = period10.toStandardMinutes();
        int int18 = period10.getDays();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test03828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03828");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("2022-02-11T09:37:35.746Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:37:35.746Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03829");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) '4', (-97), (int) (byte) 1, 0, (int) (byte) 100, (int) 'a', 10, (int) (short) 10);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.setYears(0);
        mutablePeriod12.setWeeks((int) (short) -1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        mutablePeriod12.setPeriod((org.joda.time.ReadableInterval) interval25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.dayTime();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) interval25, periodType27);
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval25);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) weeks29);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(weeks29);
    }

    @Test
    public void test03830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03830");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Hours hours14 = hours12.dividedBy(1);
        boolean boolean15 = hours1.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = hours14.negated();
        org.joda.time.Duration duration17 = hours14.toStandardDuration();
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration20.toPeriodFrom(readableInstant21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration20.toPeriod(chronology23);
        org.joda.time.Period period26 = period24.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval27 = null;
        org.joda.time.Hours hours28 = org.joda.time.Hours.hoursIn(readableInterval27);
        org.joda.time.Period period29 = period26.minus((org.joda.time.ReadablePeriod) hours28);
        org.joda.time.Hours hours31 = hours28.minus((int) '4');
        org.joda.time.Hours hours33 = hours31.plus((int) '#');
        org.joda.time.Hours hours35 = hours33.minus((int) (byte) 10);
        org.joda.time.DurationFieldType durationFieldType36 = hours33.getFieldType();
        org.joda.time.Hours hours37 = hours14.minus(hours33);
        int int38 = hours37.getHours();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(hours31);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 17 + "'", int38 == 17);
    }

    @Test
    public void test03831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03831");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (short) -1);
        org.joda.time.Hours hours2 = weeks1.toStandardHours();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test03832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03832");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration3 = duration1.plus((long) (-97));
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.DateTime dateTime14 = interval13.getEnd();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        java.lang.Object obj30 = null;
        org.joda.time.Duration duration31 = new org.joda.time.Duration(obj30);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31);
        boolean boolean33 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Interval interval35 = duration31.toIntervalTo(readableInstant34);
        org.joda.time.Interval interval36 = interval35.toInterval();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        boolean boolean46 = interval36.isAfter((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Period period47 = interval45.toPeriod();
        org.joda.time.Period period48 = interval45.toPeriod();
        org.joda.time.DateTime dateTime49 = interval45.getStart();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInterval readableInterval59 = null;
        org.joda.time.Minutes minutes60 = org.joda.time.Minutes.minutesIn(readableInterval59);
        java.lang.String str61 = minutes60.toString();
        org.joda.time.PeriodType periodType62 = minutes60.getPeriodType();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant58, periodType62);
        org.joda.time.Period period64 = new org.joda.time.Period(1644572138952L, periodType62);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime14, (org.joda.time.ReadableInstant) dateTime49, periodType62);
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes69 = minutes67.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType70 = minutes69.getPeriodType();
        org.joda.time.PeriodType periodType71 = periodType70.withYearsRemoved();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((long) '#', periodType70, chronology72);
        org.joda.time.PeriodType periodType74 = periodType70.withHoursRemoved();
        org.joda.time.Period period75 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) dateTime49, periodType74);
        java.lang.String str76 = periodType74.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(interval36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT0M" + "'", str61, "PT0M");
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Minutes" + "'", str76, "Minutes");
    }

    @Test
    public void test03833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03833");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes1 = minutes0.negated();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean14 = duration6.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes15 = duration6.toStandardMinutes();
        org.joda.time.Minutes minutes16 = minutes15.negated();
        org.joda.time.Minutes minutes17 = minutes0.minus(minutes16);
        org.joda.time.Period period18 = minutes0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = period18.getValue(51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test03834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03834");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Hours hours4 = duration2.toStandardHours();
        org.joda.time.Duration duration6 = duration2.minus(1644572134288L);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod();
        org.joda.time.PeriodType periodType8 = mutablePeriod7.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod();
        mutablePeriod12.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod12, periodType16);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.Chronology chronology31 = interval30.getChronology();
        boolean boolean32 = durationFieldType20.isSupported(chronology31);
        mutablePeriod12.setPeriod((long) 0, (long) 8, chronology31);
        org.joda.time.Period period34 = new org.joda.time.Period(0L, 1644572148770L, chronology31);
        org.joda.time.Period period35 = duration2.toPeriod(periodType8, chronology31);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType38 = periodType37.withHoursRemoved();
        org.joda.time.Period period39 = duration2.toPeriodFrom(readableInstant36, periodType37);
        java.lang.String str40 = periodType37.getName();
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(chronology31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Days" + "'", str40, "Days");
    }

    @Test
    public void test03835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03835");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.DurationFieldType durationFieldType3 = hours2.getFieldType();
        org.joda.time.PeriodType periodType4 = hours2.getPeriodType();
        org.joda.time.Hours hours5 = org.joda.time.Hours.FIVE;
        org.joda.time.Hours hours7 = hours5.multipliedBy((int) (short) 1);
        int int8 = hours7.getHours();
        org.joda.time.Hours hours10 = hours7.multipliedBy(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        java.lang.Object obj34 = null;
        org.joda.time.Duration duration35 = new org.joda.time.Duration(obj34);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        boolean boolean37 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalTo(readableInstant38);
        boolean boolean40 = interval30.isAfter((org.joda.time.ReadableInterval) interval39);
        org.joda.time.Period period41 = interval39.toPeriod();
        boolean boolean42 = interval20.isBefore((org.joda.time.ReadableInterval) interval39);
        long long43 = interval20.getEndMillis();
        org.joda.time.Duration duration46 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = duration46.toPeriodFrom(readableInstant47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration46.toPeriod(chronology49);
        java.lang.String str51 = period50.toString();
        org.joda.time.MutablePeriod mutablePeriod52 = period50.toMutablePeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        long long62 = interval61.getStartMillis();
        mutablePeriod52.setPeriod((org.joda.time.ReadableInterval) interval61);
        boolean boolean64 = interval20.isBefore((org.joda.time.ReadableInterval) interval61);
        org.joda.time.Hours hours65 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Hours hours66 = hours7.minus(hours65);
        boolean boolean67 = hours2.isLessThan(hours65);
        org.joda.time.Period period69 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Hours hours70 = org.joda.time.Hours.standardHoursIn((org.joda.time.ReadablePeriod) period69);
        boolean boolean71 = hours65.isLessThan(hours70);
        org.joda.time.Period period72 = hours70.toPeriod();
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 1644572355241L + "'", long43 == 1644572355241L);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT0.097S" + "'", str51, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
// flaky:         org.junit.Assert.assertTrue("'" + long62 + "' != '" + 1644572355241L + "'", long62 == 1644572355241L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(hours65);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(hours70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test03836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03836");
        org.joda.time.Period period1 = org.joda.time.Period.days(100);
        org.joda.time.Period period3 = period1.withMillis(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period5 = period3.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: 100 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03837");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        boolean boolean12 = days9.isGreaterThan(days11);
        org.joda.time.Days days14 = days11.minus((int) (short) -1);
        org.joda.time.Days days15 = days7.plus(days14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration23 = duration20.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration25 = duration17.withDurationAdded((org.joda.time.ReadableDuration) duration20, (int) (short) 1);
        org.joda.time.Days days26 = duration25.toStandardDays();
        org.joda.time.Days days27 = duration25.toStandardDays();
        org.joda.time.Days days28 = days7.minus(days27);
        org.joda.time.Duration duration31 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration31.toPeriodFrom(readableInstant32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration31.toPeriod(chronology34);
        org.joda.time.Period period37 = period35.withYears((int) (byte) 10);
        org.joda.time.Period period39 = period35.minusMonths(100);
        org.joda.time.Period period41 = period35.plusYears(100);
        org.joda.time.Days days42 = org.joda.time.Days.ONE;
        org.joda.time.Days days43 = days42.negated();
        org.joda.time.Days days44 = org.joda.time.Days.ONE;
        org.joda.time.Days days45 = days44.negated();
        org.joda.time.Days days46 = org.joda.time.Days.ONE;
        org.joda.time.Days days47 = days46.negated();
        boolean boolean48 = days45.isGreaterThan(days47);
        org.joda.time.Days days49 = days42.plus(days47);
        org.joda.time.Days days51 = days49.plus(0);
        org.joda.time.Period period52 = period35.plus((org.joda.time.ReadablePeriod) days49);
        boolean boolean53 = days27.isGreaterThan(days49);
        java.lang.String str54 = days27.toString();
        org.joda.time.Period period57 = new org.joda.time.Period(32L, 360000L);
        org.joda.time.Days days58 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period57);
        org.joda.time.Period period60 = period57.withDays(0);
        org.joda.time.Period period62 = period60.withMonths(222);
        org.joda.time.Period period64 = period62.minusMonths(36000032);
        boolean boolean65 = days27.equals((java.lang.Object) 36000032);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(days45);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(days51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P0D" + "'", str54, "P0D");
        org.junit.Assert.assertNotNull(days58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test03838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03838");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Period period7 = new org.joda.time.Period(1L);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Minutes minutes9 = minutes5.plus(minutes8);
        org.joda.time.Duration duration10 = minutes5.toStandardDuration();
        org.joda.time.Duration duration12 = duration10.minus(1644572136108L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test03839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03839");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds5);
        org.joda.time.Duration duration15 = seconds0.toStandardDuration();
        java.lang.String str16 = seconds0.toString();
        org.joda.time.Seconds seconds17 = org.joda.time.Seconds.TWO;
        java.lang.String str18 = seconds17.toString();
        boolean boolean19 = seconds0.isGreaterThan(seconds17);
        org.joda.time.PeriodType periodType20 = seconds17.getPeriodType();
        org.joda.time.Seconds seconds21 = org.joda.time.Seconds.ONE;
        org.joda.time.Seconds seconds22 = seconds17.plus(seconds21);
        org.joda.time.Seconds seconds24 = seconds22.plus((int) (short) -1);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT0S" + "'", str16, "PT0S");
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT2S" + "'", str18, "PT2S");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(seconds24);
    }

    @Test
    public void test03840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03840");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        org.joda.time.Seconds seconds3 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds5 = seconds3.multipliedBy((int) (byte) 1);
        int int6 = seconds5.size();
        org.joda.time.Period period8 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period10 = period8.minusMillis((-1));
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period10);
        boolean boolean12 = seconds5.isGreaterThan(seconds11);
        org.joda.time.PeriodType periodType13 = seconds5.getPeriodType();
        org.joda.time.Seconds seconds14 = seconds2.plus(seconds5);
        org.joda.time.Seconds seconds16 = seconds5.dividedBy(9);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Period period23 = period21.minusSeconds((int) '4');
        org.joda.time.Period period25 = period21.minusSeconds(10);
        org.joda.time.Period period27 = period21.withWeeks((int) (byte) -1);
        org.joda.time.Seconds seconds28 = period21.toStandardSeconds();
        org.joda.time.Seconds seconds30 = seconds28.plus((int) (short) -1);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType33 = seconds32.getFieldType();
        org.joda.time.Seconds seconds35 = seconds32.plus((-1));
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.TWO;
        java.lang.String str37 = seconds36.toString();
        org.joda.time.Seconds seconds38 = seconds35.plus(seconds36);
        org.joda.time.Seconds seconds39 = seconds31.minus(seconds36);
        boolean boolean40 = seconds28.isLessThan(seconds39);
        org.joda.time.Seconds seconds41 = seconds16.minus(seconds39);
        org.joda.time.Seconds seconds42 = seconds16.negated();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT2S" + "'", str37, "PT2S");
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(seconds42);
    }

    @Test
    public void test03841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03841");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        boolean boolean19 = interval9.isAfter((org.joda.time.ReadableInterval) interval18);
        org.joda.time.Period period20 = interval18.toPeriod();
        org.joda.time.DateTime dateTime21 = interval18.getStart();
        org.joda.time.MutableInterval mutableInterval22 = interval18.toMutableInterval();
        long long23 = mutableInterval22.getStartMillis();
        org.joda.time.Period period24 = mutableInterval22.toPeriod();
        org.joda.time.Interval interval25 = mutableInterval22.toInterval();
        org.joda.time.Minutes minutes26 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) mutableInterval22);
        org.joda.time.Duration duration28 = org.joda.time.Duration.millis((long) '4');
        long long29 = duration28.getMillis();
        org.joda.time.Minutes minutes30 = duration28.toStandardMinutes();
        org.joda.time.PeriodType periodType31 = minutes30.getPeriodType();
        org.joda.time.Minutes minutes33 = minutes30.plus((int) (short) -1);
        org.joda.time.Minutes minutes34 = org.joda.time.Minutes.ZERO;
        org.joda.time.Minutes minutes35 = minutes34.negated();
        org.joda.time.Minutes minutes36 = minutes34.negated();
        org.joda.time.Minutes minutes37 = minutes30.minus(minutes36);
        org.joda.time.Minutes minutes38 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period39 = new org.joda.time.Period((java.lang.Object) minutes38);
        org.joda.time.Period period40 = minutes38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.millis((long) '4');
        long long43 = duration42.getMillis();
        org.joda.time.Minutes minutes44 = duration42.toStandardMinutes();
        org.joda.time.Minutes minutes45 = minutes44.negated();
        org.joda.time.Minutes minutes47 = minutes44.minus((int) 'a');
        org.joda.time.Minutes minutes48 = minutes38.minus(minutes44);
        org.joda.time.Duration duration50 = org.joda.time.Duration.millis((long) '4');
        long long51 = duration50.getMillis();
        org.joda.time.Minutes minutes52 = duration50.toStandardMinutes();
        org.joda.time.Minutes minutes53 = minutes52.negated();
        org.joda.time.Minutes minutes54 = minutes53.negated();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration59 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration62 = duration59.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration64 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration59, (int) (short) 1);
        org.joda.time.Duration duration67 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration70 = duration67.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration72 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration70, (int) (short) 100);
        org.joda.time.Minutes minutes73 = duration70.toStandardMinutes();
        org.joda.time.Minutes minutes74 = minutes53.minus(minutes73);
        org.joda.time.Minutes minutes75 = minutes44.minus(minutes74);
        org.joda.time.Minutes minutes76 = minutes37.minus(minutes74);
        org.joda.time.Period period77 = minutes37.toPeriod();
        boolean boolean78 = minutes26.isGreaterThan(minutes37);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(mutableInterval22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1644572355558L + "'", long23 == 1644572355558L);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 52L + "'", long29 == 52L);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 52L + "'", long43 == 52L);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 52L + "'", long51 == 52L);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(minutes73);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test03842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03842");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology1);
        java.lang.String str3 = mutablePeriod2.toString();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.TWO;
        java.lang.String str9 = seconds8.toString();
        org.joda.time.Seconds seconds10 = seconds7.plus(seconds8);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) duration12, periodType18, chronology19);
        org.joda.time.DurationFieldType[] durationFieldTypeArray21 = mutablePeriod20.getFieldTypes();
        org.joda.time.Duration duration24 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = duration24.toPeriodFrom(readableInstant25);
        org.joda.time.Duration duration28 = duration24.plus((-1L));
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod20.setPeriod((org.joda.time.ReadableDuration) duration28, chronology29);
        org.joda.time.Seconds seconds31 = duration28.toStandardSeconds();
        org.joda.time.Seconds seconds32 = seconds7.plus(seconds31);
        org.joda.time.DurationFieldType durationFieldType33 = seconds31.getFieldType();
        int int34 = mutablePeriod2.indexOf(durationFieldType33);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT0S" + "'", str3, "PT0S");
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT2S" + "'", str9, "PT2S");
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(durationFieldTypeArray21);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 6 + "'", int34 == 6);
    }

    @Test
    public void test03843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03843");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        java.lang.String str18 = interval16.toString();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType21 = periodType20.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(periodType21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(10L, periodType21);
        int int24 = mutablePeriod23.getMillis();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        boolean boolean44 = interval34.isAfter((org.joda.time.ReadableInterval) interval43);
        org.joda.time.Weeks weeks45 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval43);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval43);
        boolean boolean47 = interval16.overlaps((org.joda.time.ReadableInterval) interval43);
        long long48 = interval43.toDurationMillis();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "2022-02-11T09:39:15.664Z/2022-02-11T09:39:15.664Z" + "'", str18, "2022-02-11T09:39:15.664Z/2022-02-11T09:39:15.664Z");
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(weeks45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test03844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03844");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setMonths((int) (byte) 1);
        int int18 = mutablePeriod9.getMonths();
        mutablePeriod9.setDays((-9700));
        mutablePeriod9.setPeriod(2147483647, 222, 0, (int) (short) 1, 100, (int) (byte) 1, 229, (int) (byte) -1);
        mutablePeriod9.addMonths((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days32 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) mutablePeriod9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as years is not precise in the period P2147483647Y322M1DT100H1M228.999S");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test03845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03845");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("P-1YT2147483646.998S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03846");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days4 = duration2.toStandardDays();
        org.joda.time.Days days5 = days4.negated();
        org.joda.time.Days days6 = org.joda.time.Days.SEVEN;
        org.joda.time.Days days8 = days6.minus(1);
        boolean boolean9 = days5.isLessThan(days8);
        org.joda.time.Days days11 = days5.multipliedBy((int) (byte) 0);
        org.joda.time.PeriodType periodType12 = days5.getPeriodType();
        org.joda.time.Days days14 = days5.dividedBy((-10));
        java.lang.String str15 = days5.toString();
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration23 = duration21.withMillis((long) (byte) 10);
        org.joda.time.Days days24 = duration23.toStandardDays();
        org.joda.time.Days days26 = days24.plus((int) (byte) 100);
        org.joda.time.Days days28 = org.joda.time.Days.days(10);
        org.joda.time.Days days29 = org.joda.time.Days.ONE;
        org.joda.time.Days days30 = days29.negated();
        org.joda.time.Days days31 = org.joda.time.Days.ONE;
        org.joda.time.Days days32 = days31.negated();
        boolean boolean33 = days30.isGreaterThan(days32);
        int int34 = days32.size();
        boolean boolean35 = days28.isGreaterThan(days32);
        int int36 = days28.getDays();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = duration39.toPeriodFrom(readableInstant40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration39.toPeriod(chronology42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType45 = periodType44.withMillisRemoved();
        org.joda.time.Period period46 = period43.withPeriodType(periodType44);
        org.joda.time.Days days47 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Days days48 = days28.minus(days47);
        org.joda.time.Days days49 = days26.plus(days48);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.Duration duration58 = new org.joda.time.Duration(obj57);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration58);
        boolean boolean60 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Interval interval62 = duration58.toIntervalTo(readableInstant61);
        org.joda.time.Interval interval63 = interval62.toInterval();
        org.joda.time.Chronology chronology64 = interval63.getChronology();
        boolean boolean65 = durationFieldType53.isSupported(chronology64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1644572139709L, 1644572185171L, chronology64);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1644572214120L, chronology64);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((java.lang.Object) days26, chronology64);
        org.joda.time.Days days69 = days5.minus(days26);
        java.lang.String str70 = days26.toString();
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "P0D" + "'", str15, "P0D");
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(days48);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(chronology64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(days69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "P100D" + "'", str70, "P100D");
    }

    @Test
    public void test03847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03847");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        int int3 = weeks2.getWeeks();
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks6 = weeks5.negated();
        int int7 = weeks5.getWeeks();
        org.joda.time.Weeks weeks9 = weeks5.minus(3);
        org.joda.time.Weeks weeks10 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks11 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks12 = weeks10.minus(weeks11);
        org.joda.time.Period period13 = new org.joda.time.Period((java.lang.Object) weeks12);
        org.joda.time.PeriodType periodType14 = weeks12.getPeriodType();
        boolean boolean15 = weeks5.isGreaterThan(weeks12);
        org.joda.time.Weeks weeks16 = weeks2.minus(weeks12);
        org.joda.time.MutablePeriod mutablePeriod17 = weeks2.toMutablePeriod();
        mutablePeriod17.add(100, 6, 8, 0, (int) (byte) 10, (int) ' ', 52, (int) '#');
        org.joda.time.format.PeriodFormatter periodFormatter27 = null;
        java.lang.String str28 = mutablePeriod17.toString(periodFormatter27);
        mutablePeriod17.setYears((-52));
        java.lang.Class<?> wildcardClass31 = mutablePeriod17.getClass();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(weeks9);
        org.junit.Assert.assertNotNull(weeks10);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P100Y6M8WT10H32M52.035S" + "'", str28, "P100Y6M8WT10H32M52.035S");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test03848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03848");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType13);
        mutablePeriod14.setYears(0);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.DateTime dateTime42 = interval41.getEnd();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime42);
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType58 = periodType57.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(periodType58);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(10L, periodType58);
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime31, (org.joda.time.ReadableInstant) dateTime55, periodType58);
        org.joda.time.Period period62 = duration9.toPeriodTo((org.joda.time.ReadableInstant) dateTime31);
        long long63 = duration9.getStandardDays();
        java.lang.String str64 = duration9.toString();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((java.lang.Object) str64);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT35999.903S" + "'", str64, "PT35999.903S");
    }

    @Test
    public void test03849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03849");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType3 = periodType2.withHoursRemoved();
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(1644572276619L, (-22384455L), periodType4);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test03850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03850");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572122285L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        org.joda.time.Period period5 = days4.toPeriod();
        org.joda.time.Days days6 = period5.toStandardDays();
        org.joda.time.Period period8 = period5.withSeconds(3);
        int int9 = period8.getYears();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03851");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        long long18 = interval17.getStartMillis();
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval17);
        org.joda.time.Interval interval20 = interval17.toInterval();
        org.joda.time.Duration duration21 = interval20.toDuration();
        org.joda.time.MutableInterval mutableInterval22 = interval20.toMutableInterval();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        long long30 = duration27.getStandardDays();
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) duration27);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.millis((long) '4');
        long long40 = duration39.getStandardDays();
        boolean boolean41 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime59, (org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableInterval readableInterval80 = null;
        org.joda.time.Minutes minutes81 = org.joda.time.Minutes.minutesIn(readableInterval80);
        java.lang.String str82 = minutes81.toString();
        org.joda.time.PeriodType periodType83 = minutes81.getPeriodType();
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant79, periodType83);
        org.joda.time.PeriodType periodType85 = periodType83.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, (org.joda.time.ReadableInstant) dateTime70, periodType85);
        org.joda.time.Interval interval87 = duration34.toIntervalFrom((org.joda.time.ReadableInstant) dateTime70);
        org.joda.time.DateTime dateTime88 = interval87.getStart();
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.days();
        org.joda.time.Period period90 = duration27.toPeriodFrom((org.joda.time.ReadableInstant) dateTime88, periodType89);
        boolean boolean91 = mutableInterval22.isBefore((org.joda.time.ReadableInstant) dateTime88);
        long long92 = mutableInterval22.getEndMillis();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1644572356160L + "'", long18 == 1644572356160L);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(mutableInterval22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(minutes81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "PT0M" + "'", str82, "PT0M");
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1644572356160L + "'", long92 == 1644572356160L);
    }

    @Test
    public void test03852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03852");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572152430L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test03853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03853");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        boolean boolean4 = days1.isGreaterThan(days3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.Days days9 = duration7.toStandardDays();
        org.joda.time.Days days10 = days9.negated();
        org.joda.time.Days days11 = days3.minus(days9);
        org.joda.time.Days days13 = org.joda.time.Days.days((int) (byte) 0);
        org.joda.time.Days days15 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days16 = days15.negated();
        org.joda.time.Days days17 = days13.minus(days15);
        org.joda.time.Days days18 = days3.minus(days17);
        org.joda.time.Period period20 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Period period22 = period20.minusHours(10);
        org.joda.time.Days days23 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Days days25 = days23.plus(6);
        org.joda.time.Duration duration26 = days25.toStandardDuration();
        org.joda.time.Days days27 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) days25);
        org.joda.time.Days days28 = days18.plus(days25);
        org.joda.time.Days days29 = org.joda.time.Days.ONE;
        org.joda.time.Days days30 = days29.negated();
        org.joda.time.Days days31 = org.joda.time.Days.ONE;
        org.joda.time.Days days32 = days31.negated();
        org.joda.time.Days days33 = org.joda.time.Days.ONE;
        org.joda.time.Days days34 = days33.negated();
        boolean boolean35 = days32.isGreaterThan(days34);
        org.joda.time.Days days36 = days29.plus(days34);
        org.joda.time.Days days37 = org.joda.time.Days.ONE;
        org.joda.time.Days days38 = days37.negated();
        org.joda.time.Days days39 = org.joda.time.Days.ONE;
        org.joda.time.Days days40 = days39.negated();
        boolean boolean41 = days38.isGreaterThan(days40);
        org.joda.time.Days days43 = days40.minus((int) (short) -1);
        org.joda.time.Days days44 = days36.plus(days43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        boolean boolean74 = interval64.isAfter((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Period period75 = interval73.toPeriod();
        boolean boolean76 = interval54.isBefore((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Interval interval77 = interval54.toInterval();
        org.joda.time.Days days78 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval54);
        boolean boolean79 = days36.isGreaterThan(days78);
        org.joda.time.Days days80 = days25.minus(days36);
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(days31);
        org.junit.Assert.assertNotNull(days32);
        org.junit.Assert.assertNotNull(days33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(days36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(days38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(days40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(days43);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(days80);
    }

    @Test
    public void test03854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03854");
        org.joda.time.Days days0 = org.joda.time.Days.THREE;
        org.joda.time.Days days2 = days0.minus((int) (short) 10);
        org.joda.time.Period period3 = days2.toPeriod();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03855");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType2);
        mutablePeriod3.setYears(0);
        mutablePeriod3.setWeeks((int) (short) -1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        java.lang.Object obj11 = null;
        org.joda.time.Duration duration12 = new org.joda.time.Duration(obj11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        boolean boolean14 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration12.toIntervalTo(readableInstant15);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval16);
        mutablePeriod3.addMonths((int) ' ');
        org.joda.time.Duration duration22 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration25 = duration22.withDurationAdded((long) (byte) 100, 10);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration25);
        java.lang.Object obj27 = mutablePeriod3.clone();
        mutablePeriod3.setSeconds((int) '#');
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "PT35.903S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "PT35.903S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "PT35.903S");
    }

    @Test
    public void test03856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03856");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withHoursRemoved();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.minutes();
        int int3 = periodType1.indexOf(durationFieldType2);
        java.lang.String str4 = periodType1.getName();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Seconds" + "'", str4, "Seconds");
    }

    @Test
    public void test03857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03857");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes2 = minutes0.multipliedBy((int) (short) 1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        long long5 = duration4.getMillis();
        org.joda.time.Minutes minutes6 = duration4.toStandardMinutes();
        org.joda.time.Minutes minutes7 = minutes6.negated();
        org.joda.time.Minutes minutes8 = minutes7.negated();
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        long long11 = duration10.getMillis();
        org.joda.time.Minutes minutes12 = duration10.toStandardMinutes();
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes13.negated();
        boolean boolean15 = minutes7.isGreaterThan(minutes14);
        org.joda.time.Minutes minutes16 = minutes0.minus(minutes14);
        org.joda.time.Minutes minutes18 = minutes16.dividedBy(5);
        org.joda.time.Minutes minutes20 = minutes16.multipliedBy(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes22 = minutes16.minus((-35));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The calculation caused an overflow: 2147483647 + 35");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 52L + "'", long5 == 52L);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(minutes20);
    }

    @Test
    public void test03858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03858");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:36:20.741Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:20.741Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03859");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(1644572212499L);
        long long2 = duration1.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 456825L + "'", long2 == 456825L);
    }

    @Test
    public void test03860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03860");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.Period period8 = period6.minusYears((int) (short) -1);
        int int9 = period8.getSeconds();
        org.joda.time.Period period11 = period8.minusHours(3);
        org.joda.time.Period period13 = period11.plusYears((-5));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test03861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03861");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-7), 259, (-35), (int) '#');
        int int5 = mutablePeriod4.getHours();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5 == (-7));
    }

    @Test
    public void test03862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03862");
        org.joda.time.Period period2 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks4 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period5 = period2.plus((org.joda.time.ReadablePeriod) weeks4);
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(periodType8);
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.eras();
        int int11 = periodType8.indexOf(durationFieldType10);
        boolean boolean12 = period5.isSupported(durationFieldType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        long long24 = interval22.toDurationMillis();
        org.joda.time.Interval interval25 = interval22.toInterval();
        org.joda.time.Weeks weeks26 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval22);
        org.joda.time.Interval interval27 = interval22.toInterval();
        long long28 = interval22.getStartMillis();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant42 = null;
        java.lang.Object obj43 = null;
        org.joda.time.Duration duration44 = new org.joda.time.Duration(obj43);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration44.toIntervalTo(readableInstant47);
        org.joda.time.Interval interval49 = interval48.toInterval();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        java.lang.Object obj53 = null;
        org.joda.time.Duration duration54 = new org.joda.time.Duration(obj53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration54);
        boolean boolean56 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration54.toIntervalTo(readableInstant57);
        boolean boolean59 = interval49.isAfter((org.joda.time.ReadableInterval) interval58);
        boolean boolean60 = interval38.contains((org.joda.time.ReadableInterval) interval49);
        org.joda.time.Interval interval61 = interval38.toInterval();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        java.lang.Object obj65 = null;
        org.joda.time.Duration duration66 = new org.joda.time.Duration(obj65);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration66);
        boolean boolean68 = duration63.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration66.toIntervalTo(readableInstant69);
        org.joda.time.Interval interval71 = interval70.toInterval();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        boolean boolean81 = interval71.isAfter((org.joda.time.ReadableInterval) interval80);
        long long82 = interval80.toDurationMillis();
        org.joda.time.Interval interval83 = interval80.toInterval();
        org.joda.time.DateTime dateTime84 = interval80.getEnd();
        boolean boolean85 = interval61.isAfter((org.joda.time.ReadableInterval) interval80);
        boolean boolean86 = interval22.overlaps((org.joda.time.ReadableInterval) interval80);
        org.joda.time.Chronology chronology87 = interval22.getChronology();
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1644572257746L, chronology87);
        boolean boolean89 = durationFieldType10.isSupported(chronology87);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(1644572212695L, chronology87);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(interval27);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1644572356854L + "'", long28 == 1644572356854L);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(interval70);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test03863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03863");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 100, chronology1);
        org.joda.time.ReadableInterval readableInterval3 = null;
        org.joda.time.Minutes minutes4 = org.joda.time.Minutes.minutesIn(readableInterval3);
        java.lang.String str5 = minutes4.toString();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes8 = minutes6.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType9 = minutes8.getPeriodType();
        org.joda.time.PeriodType periodType10 = periodType9.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.eras();
        boolean boolean12 = periodType9.isSupported(durationFieldType11);
        int int13 = minutes4.get(durationFieldType11);
        boolean boolean14 = period2.isSupported(durationFieldType11);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Minutes minutes18 = org.joda.time.Minutes.minutesIn(readableInterval17);
        java.lang.String str19 = minutes18.toString();
        org.joda.time.PeriodType periodType20 = minutes18.getPeriodType();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, periodType20, chronology21);
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.eras();
        int int24 = period22.indexOf(durationFieldType23);
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType30 = minutes29.getPeriodType();
        org.joda.time.PeriodType periodType31 = periodType30.withYearsRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) '#', periodType30, chronology32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType30);
        java.lang.String str35 = periodType30.toString();
        org.joda.time.Period period36 = period22.normalizedStandard(periodType30);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        long long46 = interval45.getStartMillis();
        org.joda.time.Minutes minutes47 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Period period48 = period22.plus((org.joda.time.ReadablePeriod) minutes47);
        org.joda.time.Period period50 = period22.minusMillis(0);
        org.joda.time.Period period52 = period22.minusMinutes(0);
        org.joda.time.Period period53 = period2.minus((org.joda.time.ReadablePeriod) period52);
        org.joda.time.Minutes minutes54 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period55 = new org.joda.time.Period((java.lang.Object) minutes54);
        org.joda.time.Period period56 = minutes54.toPeriod();
        org.joda.time.Duration duration58 = org.joda.time.Duration.millis((long) '4');
        long long59 = duration58.getMillis();
        org.joda.time.Minutes minutes60 = duration58.toStandardMinutes();
        org.joda.time.Minutes minutes61 = minutes60.negated();
        org.joda.time.Minutes minutes63 = minutes60.minus((int) 'a');
        org.joda.time.Minutes minutes64 = minutes54.minus(minutes60);
        org.joda.time.Period period65 = minutes64.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.millis((long) '4');
        long long68 = duration67.getMillis();
        org.joda.time.Minutes minutes69 = duration67.toStandardMinutes();
        org.joda.time.PeriodType periodType70 = minutes69.getPeriodType();
        org.joda.time.ReadableInterval readableInterval71 = null;
        org.joda.time.Minutes minutes72 = org.joda.time.Minutes.minutesIn(readableInterval71);
        java.lang.String str73 = minutes72.toString();
        org.joda.time.Minutes minutes74 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes76 = minutes74.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType77 = minutes76.getPeriodType();
        org.joda.time.PeriodType periodType78 = periodType77.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.eras();
        boolean boolean80 = periodType77.isSupported(durationFieldType79);
        int int81 = minutes72.get(durationFieldType79);
        org.joda.time.ReadableInterval readableInterval82 = null;
        org.joda.time.Minutes minutes83 = org.joda.time.Minutes.minutesIn(readableInterval82);
        org.joda.time.Minutes minutes84 = minutes72.minus(minutes83);
        org.joda.time.Minutes minutes85 = minutes69.minus(minutes72);
        int int86 = minutes69.size();
        org.joda.time.Minutes minutes87 = minutes64.minus(minutes69);
        boolean boolean88 = period52.equals((java.lang.Object) minutes87);
        org.joda.time.Minutes minutes90 = minutes87.multipliedBy((int) (short) -1);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0M" + "'", str5, "PT0M");
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0M" + "'", str19, "PT0M");
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PeriodType[Minutes]" + "'", str35, "PeriodType[Minutes]");
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572356896L + "'", long46 == 1644572356896L);
        org.junit.Assert.assertNotNull(minutes47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 52L + "'", long59 == 52L);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 52L + "'", long68 == 52L);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PT0M" + "'", str73, "PT0M");
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(minutes76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(minutes83);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(minutes90);
    }

    @Test
    public void test03864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03864");
        org.joda.time.Period period4 = new org.joda.time.Period(0, 10, (int) (short) -1, (int) (byte) 1);
        org.joda.time.Period period6 = period4.minusYears((-1));
        org.joda.time.Period period8 = period6.withMonths(5);
        org.joda.time.Period period10 = period6.multipliedBy(0);
        org.joda.time.PeriodType periodType11 = period10.getPeriodType();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test03865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03865");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Weeks weeks23 = period22.toStandardWeeks();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks24.plus((int) '4');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean30 = weeks27.isGreaterThan(weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks29.getFieldType();
        boolean boolean32 = weeks24.isGreaterThan(weeks29);
        boolean boolean33 = weeks23.isGreaterThan(weeks29);
        org.joda.time.Weeks weeks35 = weeks23.minus(8);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.Chronology chronology46 = interval45.getChronology();
        org.joda.time.Weeks weeks47 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval45);
        int int48 = weeks47.getWeeks();
        org.joda.time.Weeks weeks49 = weeks35.minus(weeks47);
        org.joda.time.Weeks weeks51 = weeks47.minus(9);
        org.joda.time.PeriodType periodType52 = weeks47.getPeriodType();
        org.joda.time.Weeks weeks53 = org.joda.time.Weeks.ZERO;
        org.joda.time.Weeks weeks54 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) weeks53);
        org.joda.time.Weeks weeks55 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks56 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks57 = weeks55.minus(weeks56);
        org.joda.time.Weeks weeks59 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks60 = weeks59.negated();
        org.joda.time.Weeks weeks62 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks63 = weeks62.negated();
        org.joda.time.Weeks weeks64 = weeks60.minus(weeks63);
        org.joda.time.Duration duration65 = weeks60.toStandardDuration();
        org.joda.time.Weeks weeks66 = weeks57.plus(weeks60);
        org.joda.time.DurationFieldType durationFieldType67 = weeks66.getFieldType();
        org.joda.time.Weeks weeks68 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks69 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks70 = weeks68.minus(weeks69);
        org.joda.time.Period period71 = new org.joda.time.Period((java.lang.Object) weeks70);
        org.joda.time.PeriodType periodType72 = weeks70.getPeriodType();
        org.joda.time.Weeks weeks73 = weeks66.plus(weeks70);
        boolean boolean74 = weeks53.isGreaterThan(weeks73);
        boolean boolean75 = weeks47.isGreaterThan(weeks73);
        org.joda.time.Weeks weeks77 = weeks47.multipliedBy(36000000);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(chronology46);
        org.junit.Assert.assertNotNull(weeks47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(weeks49);
        org.junit.Assert.assertNotNull(weeks51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(weeks53);
        org.junit.Assert.assertNotNull(weeks54);
        org.junit.Assert.assertNotNull(weeks55);
        org.junit.Assert.assertNotNull(weeks56);
        org.junit.Assert.assertNotNull(weeks57);
        org.junit.Assert.assertNotNull(weeks59);
        org.junit.Assert.assertNotNull(weeks60);
        org.junit.Assert.assertNotNull(weeks62);
        org.junit.Assert.assertNotNull(weeks63);
        org.junit.Assert.assertNotNull(weeks64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(weeks66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertNotNull(weeks68);
        org.junit.Assert.assertNotNull(weeks69);
        org.junit.Assert.assertNotNull(weeks70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(weeks73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(weeks77);
    }

    @Test
    public void test03866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03866");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572156418L);
        // The following exception was thrown during execution in test generation
        try {
            int int3 = mutablePeriod1.getValue(23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 23");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03867");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) 1, (int) (short) 100, (int) '4', 5, 52, (int) (byte) 0, (int) (byte) 10, (int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.copy();
        boolean boolean11 = mutablePeriod8.equals((java.lang.Object) 1644572296488L);
        int int12 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test03868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03868");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.THREE;
        org.joda.time.Weeks weeks1 = minutes0.toStandardWeeks();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(weeks1);
    }

    @Test
    public void test03869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03869");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period10 = period6.withMillis(22);
        org.joda.time.Seconds seconds11 = period10.toStandardSeconds();
        org.joda.time.Seconds seconds13 = seconds11.multipliedBy(229);
        org.joda.time.PeriodType periodType14 = seconds13.getPeriodType();
        java.lang.String str15 = periodType14.getName();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Seconds" + "'", str15, "Seconds");
    }

    @Test
    public void test03870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03870");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration6 = duration4.plus(1644572122285L);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6);
        mutablePeriod2.setMonths(97);
        mutablePeriod2.addYears(46);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test03871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03871");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("P2719W1DT19H35M26.273S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03872");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:36:14.507Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:14.507Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03873");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        int int10 = mutablePeriod9.getSeconds();
        mutablePeriod9.add(32L);
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod9.copy();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod13.add(1644572273526L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: 1644572273526");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test03874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03874");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period4 = period1.plus((org.joda.time.ReadablePeriod) weeks3);
        int int5 = period4.getMillis();
        int int6 = period4.getMinutes();
        org.joda.time.PeriodType periodType7 = period4.getPeriodType();
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test03875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03875");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType4);
        mutablePeriod5.setYears(0);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        java.lang.Object obj26 = null;
        org.joda.time.Duration duration27 = new org.joda.time.Duration(obj26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration27);
        boolean boolean29 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Interval interval31 = duration27.toIntervalTo(readableInstant30);
        org.joda.time.Interval interval32 = interval31.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime22, (org.joda.time.ReadableInstant) dateTime33);
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period37 = duration1.toPeriodTo((org.joda.time.ReadableInstant) dateTime22, periodType36);
        org.joda.time.ReadableDuration readableDuration38 = null;
        boolean boolean39 = duration1.isEqual(readableDuration38);
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType41 = seconds40.getFieldType();
        org.joda.time.Seconds seconds43 = seconds40.plus((-1));
        org.joda.time.DurationFieldType durationFieldType44 = seconds40.getFieldType();
        org.joda.time.Seconds seconds45 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds46 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType47 = seconds46.getFieldType();
        org.joda.time.Seconds seconds49 = seconds46.plus((-1));
        org.joda.time.Seconds seconds50 = org.joda.time.Seconds.TWO;
        java.lang.String str51 = seconds50.toString();
        org.joda.time.Seconds seconds52 = seconds49.plus(seconds50);
        org.joda.time.Seconds seconds53 = seconds45.minus(seconds50);
        org.joda.time.Seconds seconds54 = seconds40.plus(seconds45);
        org.joda.time.Duration duration55 = seconds40.toStandardDuration();
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration57 = duration1.plus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Period period59 = org.joda.time.Period.parse("PT0.097S");
        org.joda.time.Duration duration60 = period59.toStandardDuration();
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Duration duration62 = duration57.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Seconds seconds63 = duration62.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(seconds43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(seconds46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(seconds49);
        org.junit.Assert.assertNotNull(seconds50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT2S" + "'", str51, "PT2S");
        org.junit.Assert.assertNotNull(seconds52);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(seconds63);
    }

    @Test
    public void test03876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03876");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration5 = duration2.minus((long) '4');
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInterval readableInterval44 = null;
        org.joda.time.Minutes minutes45 = org.joda.time.Minutes.minutesIn(readableInterval44);
        java.lang.String str46 = minutes45.toString();
        org.joda.time.PeriodType periodType47 = minutes45.getPeriodType();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant43, periodType47);
        org.joda.time.PeriodType periodType49 = periodType47.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime34, periodType49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        java.lang.Object obj54 = null;
        org.joda.time.Duration duration55 = new org.joda.time.Duration(obj54);
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((java.lang.Object) duration52, periodType58, chronology59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.millis((long) '4');
        long long63 = duration62.getStandardDays();
        boolean boolean64 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration68 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration71 = duration68.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        java.lang.Object obj75 = null;
        org.joda.time.Duration duration76 = new org.joda.time.Duration(obj75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant74, (org.joda.time.ReadableDuration) duration76);
        boolean boolean78 = duration73.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration76.toIntervalTo(readableInstant79);
        org.joda.time.Interval interval81 = interval80.toInterval();
        org.joda.time.DateTime dateTime82 = interval81.getEnd();
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant85 = null;
        java.lang.Object obj86 = null;
        org.joda.time.Duration duration87 = new org.joda.time.Duration(obj86);
        org.joda.time.Period period88 = new org.joda.time.Period(readableInstant85, (org.joda.time.ReadableDuration) duration87);
        boolean boolean89 = duration84.isShorterThan((org.joda.time.ReadableDuration) duration87);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Interval interval91 = duration87.toIntervalTo(readableInstant90);
        org.joda.time.Interval interval92 = interval91.toInterval();
        org.joda.time.DateTime dateTime93 = interval92.getEnd();
        org.joda.time.Period period94 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime82, (org.joda.time.ReadableInstant) dateTime93);
        long long95 = dateTime93.getMillis();
        org.joda.time.Period period96 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, (org.joda.time.ReadableInstant) dateTime93);
        java.lang.String str97 = dateTime93.toString();
        org.joda.time.MutablePeriod mutablePeriod98 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime34, (org.joda.time.ReadableInstant) dateTime93);
        org.joda.time.Interval interval99 = duration2.toIntervalFrom((org.joda.time.ReadableInstant) dateTime93);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "PT0M" + "'", str46, "PT0M");
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval81);
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(interval91);
        org.junit.Assert.assertNotNull(interval92);
        org.junit.Assert.assertNotNull(dateTime93);
// flaky:         org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1644572357417L + "'", long95 == 1644572357417L);
// flaky:         org.junit.Assert.assertEquals("'" + str97 + "' != '" + "2022-02-11T09:39:17.417Z" + "'", str97, "2022-02-11T09:39:17.417Z");
        org.junit.Assert.assertNotNull(interval99);
    }

    @Test
    public void test03877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03877");
        org.joda.time.ReadableInterval readableInterval1 = null;
        org.joda.time.Hours hours2 = org.joda.time.Hours.hoursIn(readableInterval1);
        org.joda.time.Hours hours3 = hours2.negated();
        org.joda.time.PeriodType periodType4 = hours2.getPeriodType();
        org.joda.time.PeriodType periodType5 = periodType4.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant9 = null;
        java.lang.Object obj10 = null;
        org.joda.time.Duration duration11 = new org.joda.time.Duration(obj10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        boolean boolean13 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration11.toIntervalTo(readableInstant14);
        org.joda.time.Interval interval16 = interval15.toInterval();
        org.joda.time.Chronology chronology17 = interval16.getChronology();
        boolean boolean18 = durationFieldType6.isSupported(chronology17);
        org.joda.time.Period period19 = new org.joda.time.Period(1644572162361L, periodType5, chronology17);
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) period19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period22 = period19.minusMonths(57);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(chronology17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test03878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03878");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("2022-02-11T09:37:14.355Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03879");
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(obj2);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.millis((long) '4');
        long long9 = duration8.getStandardDays();
        boolean boolean10 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType12 = periodType11.withHoursRemoved();
        org.joda.time.Period period13 = duration8.toPeriod(periodType11);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((-1L), periodType11);
        mutablePeriod14.addYears(0);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration19.toPeriod(chronology22);
        java.lang.String str24 = period23.toString();
        org.joda.time.MutablePeriod mutablePeriod25 = period23.toMutablePeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        long long35 = interval34.getStartMillis();
        mutablePeriod25.setPeriod((org.joda.time.ReadableInterval) interval34);
        org.joda.time.Duration duration37 = interval34.toDuration();
        org.joda.time.Duration duration38 = interval34.toDuration();
        mutablePeriod14.add((org.joda.time.ReadableInterval) interval34);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod14.add((-2147483647), (-2231), (int) (byte) 10, (-283), 306, 23, (-42), 222);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0.097S" + "'", str24, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1644572357587L + "'", long35 == 1644572357587L);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
    }

    @Test
    public void test03880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03880");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 0);
        java.lang.String str2 = period1.toString();
        org.joda.time.Period period4 = period1.minusHours(3);
        org.joda.time.Period period6 = period1.plusSeconds(9);
        org.joda.time.Period period7 = period1.negated();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test03881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03881");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Instant instant23 = dateTime21.toInstant();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant23, readableInstant24);
        java.lang.String str26 = instant23.toString();
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Duration duration31 = duration28.withDurationAdded(1644572124065L, 0);
        org.joda.time.Duration duration32 = duration28.toDuration();
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Duration duration37 = duration34.withDurationAdded(1644572124065L, 0);
        org.joda.time.Duration duration38 = duration34.toDuration();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration44 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration41, (int) (short) 0);
        org.joda.time.Days days46 = org.joda.time.Days.days(10);
        boolean boolean47 = duration34.equals((java.lang.Object) days46);
        boolean boolean48 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableInstant) instant23, (org.joda.time.ReadableDuration) duration28);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(instant23);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "2022-02-11T09:39:17.650Z" + "'", str26, "2022-02-11T09:39:17.650Z");
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test03882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03882");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period38 = duration2.toPeriodTo((org.joda.time.ReadableInstant) dateTime23, periodType37);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1644572126858L, periodType37);
        mutablePeriod39.setYears(36000032);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test03883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03883");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes(300);
        // The following exception was thrown during execution in test generation
        try {
            int int3 = minutes1.getValue((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
    }

    @Test
    public void test03884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03884");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period1 = new org.joda.time.Period((java.lang.Object) minutes0);
        org.joda.time.Period period2 = minutes0.toPeriod();
        org.joda.time.Period period4 = period2.minusMillis(0);
        org.joda.time.Period period6 = period4.plusMinutes(300);
        org.joda.time.Period period8 = period6.withHours(35);
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test03885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03885");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds1 = org.joda.time.Seconds.parseSeconds("2022-02-11T09:35:54.695Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:35:54.695Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03886");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType3 = seconds0.getFieldType();
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration9 = duration6.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration11 = duration9.withMillis((long) (byte) 10);
        long long12 = duration11.getStandardSeconds();
        org.joda.time.Seconds seconds13 = duration11.toStandardSeconds();
        org.joda.time.Seconds seconds14 = seconds0.minus(seconds13);
        org.joda.time.Seconds seconds15 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds17 = seconds15.multipliedBy((int) (byte) 1);
        java.lang.String str18 = seconds15.toString();
        org.joda.time.Seconds seconds19 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType20 = seconds19.getFieldType();
        org.joda.time.Seconds seconds22 = seconds19.plus((-1));
        org.joda.time.DurationFieldType durationFieldType23 = seconds19.getFieldType();
        org.joda.time.Seconds seconds24 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds25 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType26 = seconds25.getFieldType();
        org.joda.time.Seconds seconds28 = seconds25.plus((-1));
        org.joda.time.Seconds seconds29 = org.joda.time.Seconds.TWO;
        java.lang.String str30 = seconds29.toString();
        org.joda.time.Seconds seconds31 = seconds28.plus(seconds29);
        org.joda.time.Seconds seconds32 = seconds24.minus(seconds29);
        org.joda.time.Seconds seconds33 = seconds19.plus(seconds24);
        org.joda.time.Seconds seconds34 = seconds15.plus(seconds33);
        org.joda.time.Seconds seconds35 = seconds14.plus(seconds33);
        org.joda.time.Duration duration36 = seconds33.toStandardDuration();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT3S" + "'", str18, "PT3S");
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(seconds24);
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT2S" + "'", str30, "PT2S");
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(duration36);
    }

    @Test
    public void test03887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03887");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        org.joda.time.Minutes minutes4 = minutes3.negated();
        org.joda.time.Minutes minutes5 = minutes4.negated();
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getMillis();
        org.joda.time.Minutes minutes9 = duration7.toStandardMinutes();
        org.joda.time.Minutes minutes10 = minutes9.negated();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        boolean boolean12 = minutes4.isGreaterThan(minutes11);
        org.joda.time.Minutes minutes14 = minutes11.dividedBy((-9700));
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Minutes minutes24 = org.joda.time.Minutes.minutesIn(readableInterval23);
        java.lang.String str25 = minutes24.toString();
        org.joda.time.PeriodType periodType26 = minutes24.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant22, periodType26);
        org.joda.time.Duration duration29 = duration19.withMillis((long) 'a');
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant32 = null;
        java.lang.Object obj33 = null;
        org.joda.time.Duration duration34 = new org.joda.time.Duration(obj33);
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration34);
        boolean boolean36 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.DateTime dateTime58 = interval57.getEnd();
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime47, (org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableInterval readableInterval68 = null;
        org.joda.time.Minutes minutes69 = org.joda.time.Minutes.minutesIn(readableInterval68);
        java.lang.String str70 = minutes69.toString();
        org.joda.time.PeriodType periodType71 = minutes69.getPeriodType();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant67, periodType71);
        org.joda.time.PeriodType periodType73 = periodType71.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, (org.joda.time.ReadableInstant) dateTime58, periodType73);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((java.lang.Object) duration76, periodType82, chronology83);
        org.joda.time.Duration duration86 = org.joda.time.Duration.millis((long) '4');
        long long87 = duration86.getStandardDays();
        boolean boolean88 = duration76.isLongerThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime58, (org.joda.time.ReadableDuration) duration86);
        org.joda.time.Interval interval90 = duration29.toIntervalTo((org.joda.time.ReadableInstant) dateTime58);
        org.joda.time.DateTime dateTime91 = interval90.getEnd();
        org.joda.time.DateTime dateTime92 = interval90.getStart();
        org.joda.time.MutableInterval mutableInterval93 = interval90.toMutableInterval();
        org.joda.time.Minutes minutes94 = org.joda.time.Minutes.minutesIn((org.joda.time.ReadableInterval) mutableInterval93);
        boolean boolean95 = minutes14.isGreaterThan(minutes94);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes4);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT0M" + "'", str25, "PT0M");
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT0M" + "'", str70, "PT0M");
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertNotNull(mutableInterval93);
        org.junit.Assert.assertNotNull(minutes94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test03888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03888");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572347138L);
    }

    @Test
    public void test03889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03889");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1644572178101L, 1644572351259L);
    }

    @Test
    public void test03890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03890");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (byte) 100);
    }

    @Test
    public void test03891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03891");
        org.joda.time.Period period8 = new org.joda.time.Period(3, (int) (short) 10, (int) (short) 1, 6, 10, 22, (int) (short) 1, (-9700));
        org.joda.time.DurationFieldType durationFieldType9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = period8.withFieldAdded(durationFieldType9, 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03892");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572151346L);
        org.joda.time.Days days2 = org.joda.time.Days.SEVEN;
        org.joda.time.PeriodType periodType3 = days2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.ReadableDuration readableDuration5 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(10L, periodType10);
        org.joda.time.PeriodType periodType13 = periodType10.withMonthsRemoved();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType17 = periodType16.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology19);
        java.lang.String str21 = mutablePeriod20.toString();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        long long31 = interval30.getStartMillis();
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType34);
        mutablePeriod35.setYears(0);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod((org.joda.time.ReadableDuration) duration39, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, (org.joda.time.ReadableInstant) dateTime52);
        boolean boolean66 = interval30.isBefore((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Duration duration67 = mutablePeriod20.toDurationFrom((org.joda.time.ReadableInstant) dateTime52);
        org.joda.time.Chronology chronology68 = dateTime52.getChronology();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1644572155967L, 1644572165776L, periodType16, chronology68);
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1644572143784L, 1644572184190L, periodType13, chronology68);
        mutablePeriod4.setPeriod(readableDuration5, chronology68);
        org.joda.time.Period period72 = new org.joda.time.Period((java.lang.Object) duration1, chronology68);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT0S" + "'", str21, "PT0S");
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
// flaky:         org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1644572358060L + "'", long31 == 1644572358060L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(chronology68);
    }

    @Test
    public void test03893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03893");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Hours hours14 = hours12.dividedBy(1);
        boolean boolean15 = hours1.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = hours14.negated();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration19.toPeriod(chronology22);
        org.joda.time.Period period25 = period23.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Hours hours27 = org.joda.time.Hours.hoursIn(readableInterval26);
        org.joda.time.Period period28 = period25.minus((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.Hours hours30 = hours27.minus((int) '4');
        org.joda.time.Hours hours32 = hours30.plus((int) '#');
        org.joda.time.Hours hours33 = hours14.minus(hours32);
        org.joda.time.PeriodType periodType34 = hours14.getPeriodType();
        org.joda.time.Hours hours35 = hours14.negated();
        org.joda.time.Hours hours37 = hours14.plus((int) (short) 10);
        org.joda.time.Period period38 = hours14.toPeriod();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(hours35);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test03894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03894");
        org.joda.time.Period period2 = new org.joda.time.Period(32L, 360000L);
        org.joda.time.Days days3 = org.joda.time.Days.standardDaysIn((org.joda.time.ReadablePeriod) period2);
        org.joda.time.Days days4 = period2.toStandardDays();
        org.joda.time.Days days5 = org.joda.time.Days.ONE;
        org.joda.time.Days days6 = days5.negated();
        org.joda.time.Days days7 = org.joda.time.Days.ONE;
        org.joda.time.Days days8 = days7.negated();
        boolean boolean9 = days6.isGreaterThan(days8);
        org.joda.time.Days days11 = days8.plus((int) (short) 10);
        org.joda.time.Days days12 = days11.negated();
        boolean boolean13 = days4.isGreaterThan(days11);
        org.joda.time.Days days14 = org.joda.time.Days.ONE;
        org.joda.time.Days days15 = days14.negated();
        org.joda.time.Days days16 = org.joda.time.Days.ONE;
        org.joda.time.Days days17 = days16.negated();
        org.joda.time.Days days18 = org.joda.time.Days.ONE;
        org.joda.time.Days days19 = days18.negated();
        boolean boolean20 = days17.isGreaterThan(days19);
        org.joda.time.Days days21 = days14.plus(days19);
        org.joda.time.Days days23 = days21.minus(1);
        org.joda.time.Days days24 = days23.negated();
        java.lang.String str25 = days23.toString();
        org.joda.time.Days days26 = org.joda.time.Days.ONE;
        org.joda.time.Days days27 = days26.negated();
        boolean boolean28 = days23.isLessThan(days27);
        org.joda.time.PeriodType periodType29 = days27.getPeriodType();
        org.joda.time.Days days30 = days11.plus(days27);
        java.lang.String str31 = days27.toString();
        java.lang.String str32 = days27.toString();
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(days6);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(days23);
        org.junit.Assert.assertNotNull(days24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "P-1D" + "'", str25, "P-1D");
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "P-1D" + "'", str31, "P-1D");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "P-1D" + "'", str32, "P-1D");
    }

    @Test
    public void test03895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03895");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType9);
        org.joda.time.Minutes minutes11 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes13 = minutes11.multipliedBy((int) (short) 1);
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) minutes13);
        mutablePeriod10.addDays(0);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((long) (short) 100, chronology19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.eras();
        boolean boolean22 = period20.isSupported(durationFieldType21);
        int int23 = periodType17.indexOf(durationFieldType21);
        int int24 = mutablePeriod10.get(durationFieldType21);
        org.joda.time.MutablePeriod mutablePeriod25 = mutablePeriod10.toMutablePeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) duration30, periodType36, chronology37);
        java.lang.String str39 = duration30.toString();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean41 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        mutablePeriod25.setPeriod((org.joda.time.ReadableDuration) duration30);
        mutablePeriod25.setValue(1, (-9700));
        mutablePeriod25.setMinutes((-10));
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration52 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration55 = duration52.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration57 = duration49.withDurationAdded((org.joda.time.ReadableDuration) duration52, (int) (short) 1);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration63 = duration60.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration65 = duration49.withDurationAdded((org.joda.time.ReadableDuration) duration63, (int) (short) 100);
        mutablePeriod25.add((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Period period67 = duration63.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration63);
        int int69 = mutablePeriod68.getWeeks();
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT36000S" + "'", str39, "PT36000S");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test03896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03896");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration6 = duration4.plus(1644572122285L);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration6);
        mutablePeriod2.addYears(10);
        int int10 = mutablePeriod2.getMonths();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test03897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03897");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(3);
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.ZERO;
        org.joda.time.Period period3 = period1.withFields((org.joda.time.ReadablePeriod) seconds2);
        org.joda.time.Seconds seconds5 = seconds2.plus(2147483647);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) duration7, periodType13, chronology14);
        org.joda.time.DurationFieldType[] durationFieldTypeArray16 = mutablePeriod15.getFieldTypes();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Duration duration23 = duration19.plus((-1L));
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Seconds seconds26 = duration23.toStandardSeconds();
        org.joda.time.Seconds seconds28 = seconds26.multipliedBy((int) (byte) 1);
        org.joda.time.DurationFieldType durationFieldType29 = seconds28.getFieldType();
        org.joda.time.Seconds seconds30 = org.joda.time.Seconds.TWO;
        java.lang.String str31 = seconds30.toString();
        org.joda.time.Seconds seconds33 = seconds30.multipliedBy(8);
        java.lang.String str34 = seconds30.toString();
        org.joda.time.Seconds seconds35 = seconds28.minus(seconds30);
        org.joda.time.Seconds seconds36 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds38 = seconds36.multipliedBy((int) (byte) 1);
        java.lang.String str39 = seconds36.toString();
        org.joda.time.Seconds seconds40 = org.joda.time.Seconds.MAX_VALUE;
        org.joda.time.Seconds seconds41 = seconds36.minus(seconds40);
        boolean boolean42 = seconds28.isLessThan(seconds40);
        org.joda.time.Seconds seconds44 = seconds40.minus((int) ' ');
        org.joda.time.Seconds seconds45 = seconds2.minus(seconds40);
        org.joda.time.DurationFieldType durationFieldType46 = seconds40.getFieldType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(durationFieldTypeArray16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(seconds30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT2S" + "'", str31, "PT2S");
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT2S" + "'", str34, "PT2S");
        org.junit.Assert.assertNotNull(seconds35);
        org.junit.Assert.assertNotNull(seconds36);
        org.junit.Assert.assertNotNull(seconds38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PT3S" + "'", str39, "PT3S");
        org.junit.Assert.assertNotNull(seconds40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(seconds44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType46);
    }

    @Test
    public void test03898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03898");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = org.joda.time.Period.parse("2022-02-11T09:36:42.357Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:42.357Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03899");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(164457249783893L, (long) (-52));
        mutablePeriod2.addSeconds(36000032);
        java.lang.String str5 = mutablePeriod2.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "P-5211Y-5M-1W-3DT-9H-23M36000028.055S" + "'", str5, "P-5211Y-5M-1W-3DT-9H-23M36000028.055S");
    }

    @Test
    public void test03900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03900");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1644572168608L);
        int int2 = mutablePeriod1.getWeeks();
        int int3 = mutablePeriod1.getMinutes();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 36 + "'", int3 == 36);
    }

    @Test
    public void test03901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03901");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        int int4 = mutablePeriod0.getDays();
        org.joda.time.Minutes minutes5 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes7 = minutes5.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType8 = minutes7.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod9 = minutes7.toMutablePeriod();
        mutablePeriod9.setHours((int) (byte) -1);
        mutablePeriod9.add((long) 10);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period15 = new org.joda.time.Period((java.lang.Object) minutes14);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType20 = mutablePeriod18.getFieldType(1);
        boolean boolean21 = minutes14.isSupported(durationFieldType20);
        int int22 = mutablePeriod9.get(durationFieldType20);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Period period29 = period27.minusSeconds((int) '4');
        org.joda.time.Minutes minutes30 = period27.toStandardMinutes();
        org.joda.time.Period period32 = period27.multipliedBy((int) (byte) 100);
        org.joda.time.Period period34 = period32.withHours((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.months();
        org.joda.time.Period period37 = period32.withField(durationFieldType35, 0);
        org.joda.time.Period period39 = period37.plusMinutes((int) (short) -1);
        org.joda.time.Period period41 = period37.withMillis(100);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        org.joda.time.Interval interval51 = interval50.toInterval();
        org.joda.time.DateTime dateTime52 = interval51.getEnd();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant55 = null;
        java.lang.Object obj56 = null;
        org.joda.time.Duration duration57 = new org.joda.time.Duration(obj56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration57);
        boolean boolean59 = duration54.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration57.toIntervalTo(readableInstant60);
        org.joda.time.Interval interval62 = interval61.toInterval();
        org.joda.time.DateTime dateTime63 = interval62.getEnd();
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime52, (org.joda.time.ReadableInstant) dateTime63);
        long long65 = dateTime63.getMillis();
        org.joda.time.Duration duration66 = period37.toDurationTo((org.joda.time.ReadableInstant) dateTime63);
        mutablePeriod9.add((org.joda.time.ReadableDuration) duration66);
        mutablePeriod0.add((org.joda.time.ReadableDuration) duration66);
        mutablePeriod0.addHours((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(interval51);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval62);
        org.junit.Assert.assertNotNull(dateTime63);
// flaky:         org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1644572358414L + "'", long65 == 1644572358414L);
        org.junit.Assert.assertNotNull(duration66);
    }

    @Test
    public void test03902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03902");
        org.joda.time.Period period1 = org.joda.time.Period.years(222);
        org.joda.time.Period period3 = period1.plusMinutes((int) (short) -1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03903");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(1644572167154L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test03904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03904");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1644572151229L);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration4.toPeriodFrom(readableInstant5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration4.toPeriod(chronology7);
        java.lang.String str9 = period8.toString();
        org.joda.time.MutablePeriod mutablePeriod10 = period8.toMutablePeriod();
        org.joda.time.Seconds seconds11 = period8.toStandardSeconds();
        org.joda.time.Period period13 = period8.plusMonths((int) (byte) 0);
        org.joda.time.Period period15 = period13.minusMinutes(52);
        org.joda.time.Duration duration16 = period13.toStandardDuration();
        long long17 = duration16.getMillis();
        org.joda.time.Duration duration18 = duration1.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration26 = duration23.withDurationAdded((long) (byte) 100, 10);
        int int27 = duration20.compareTo((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration20.toIntervalTo(readableInstant28);
        org.joda.time.Duration duration31 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration20, (int) (byte) 1);
        org.joda.time.Duration duration33 = org.joda.time.Duration.millis((long) '4');
        long long34 = duration33.getMillis();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.DateTime dateTime45 = interval44.getEnd();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = duration60.toPeriodFrom(readableInstant61);
        org.joda.time.Duration duration64 = duration60.plus((-1L));
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime45, (org.joda.time.ReadableDuration) duration60);
        org.joda.time.DateTimeFieldType dateTimeFieldType66 = null;
        boolean boolean67 = dateTime45.isSupported(dateTimeFieldType66);
        org.joda.time.DateTimeZone dateTimeZone68 = dateTime45.getZone();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime45);
        boolean boolean70 = duration18.isEqual((org.joda.time.ReadableDuration) duration33);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT0.097S" + "'", str9, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-97L) + "'", long17 == (-97L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 52L + "'", long34 == 52L);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(dateTime45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(dateTimeZone68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test03905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03905");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.minutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.DateTime dateTime14 = interval13.getEnd();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        boolean boolean34 = interval24.isAfter((org.joda.time.ReadableInterval) interval33);
        boolean boolean35 = interval13.contains((org.joda.time.ReadableInterval) interval24);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType38);
        mutablePeriod39.setYears(0);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration43, chronology44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration74.toIntervalTo(readableInstant77);
        org.joda.time.Interval interval79 = interval78.toInterval();
        org.joda.time.DateTime dateTime80 = interval79.getEnd();
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType83 = periodType82.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(periodType83);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(10L, periodType83);
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime80, periodType83);
        boolean boolean87 = interval24.isAfter((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Chronology chronology88 = dateTime56.getChronology();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3, chronology88);
        org.joda.time.Period period90 = new org.joda.time.Period(1644572233833L, chronology88);
        org.joda.time.Period period91 = new org.joda.time.Period(1644572268372L, chronology88);
        // The following exception was thrown during execution in test generation
        try {
            int int93 = period91.getValue((-2147483647));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -2147483647");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(dateTime80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(chronology88);
    }

    @Test
    public void test03906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03906");
        org.joda.time.Period period4 = new org.joda.time.Period((-9700), 2, (int) (short) 0, 10);
        org.joda.time.Period period6 = period4.withMonths((-2147483648));
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test03907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03907");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) 52);
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Seconds seconds3 = duration1.toStandardSeconds();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(seconds3);
    }

    @Test
    public void test03908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03908");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        mutablePeriod4.setValue(1, 30);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType10);
        org.joda.time.ReadableInterval readableInterval12 = null;
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.minutesIn(readableInterval12);
        java.lang.String str14 = minutes13.toString();
        org.joda.time.Minutes minutes15 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes17 = minutes15.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType18 = minutes17.getPeriodType();
        org.joda.time.PeriodType periodType19 = periodType18.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.eras();
        boolean boolean21 = periodType18.isSupported(durationFieldType20);
        int int22 = minutes13.get(durationFieldType20);
        int int23 = periodType10.indexOf(durationFieldType20);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.set(durationFieldType20, (-99));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'eras'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT0M" + "'", str14, "PT0M");
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test03909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03909");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.minutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant6 = null;
        java.lang.Object obj7 = null;
        org.joda.time.Duration duration8 = new org.joda.time.Duration(obj7);
        org.joda.time.Period period9 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration8);
        boolean boolean10 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Interval interval12 = duration8.toIntervalTo(readableInstant11);
        org.joda.time.Interval interval13 = interval12.toInterval();
        org.joda.time.DateTime dateTime14 = interval13.getEnd();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        boolean boolean34 = interval24.isAfter((org.joda.time.ReadableInterval) interval33);
        boolean boolean35 = interval13.contains((org.joda.time.ReadableInterval) interval24);
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType38);
        mutablePeriod39.setYears(0);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod39.setPeriod((org.joda.time.ReadableDuration) duration43, chronology44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        java.lang.Object obj49 = null;
        org.joda.time.Duration duration50 = new org.joda.time.Duration(obj49);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration50);
        boolean boolean52 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Interval interval54 = duration50.toIntervalTo(readableInstant53);
        org.joda.time.Interval interval55 = interval54.toInterval();
        org.joda.time.DateTime dateTime56 = interval55.getEnd();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, (org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant72 = null;
        java.lang.Object obj73 = null;
        org.joda.time.Duration duration74 = new org.joda.time.Duration(obj73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant72, (org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Interval interval78 = duration74.toIntervalTo(readableInstant77);
        org.joda.time.Interval interval79 = interval78.toInterval();
        org.joda.time.DateTime dateTime80 = interval79.getEnd();
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType83 = periodType82.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(periodType83);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(10L, periodType83);
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime56, (org.joda.time.ReadableInstant) dateTime80, periodType83);
        boolean boolean87 = interval24.isAfter((org.joda.time.ReadableInstant) dateTime56);
        org.joda.time.Chronology chronology88 = dateTime56.getChronology();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3, chronology88);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(1644572137529L, periodType3);
        org.joda.time.PeriodType periodType91 = periodType3.withYearsRemoved();
        org.joda.time.PeriodType periodType92 = periodType91.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(1644572161256L, periodType91);
        org.joda.time.PeriodType periodType94 = periodType91.withMinutesRemoved();
        org.joda.time.PeriodType periodType95 = periodType91.withMinutesRemoved();
        org.joda.time.PeriodType periodType96 = periodType91.withYearsRemoved();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(dateTime14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(interval79);
        org.junit.Assert.assertNotNull(dateTime80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test03910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03910");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(52);
        org.joda.time.Period period3 = period1.withMinutes((-52));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03911");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, (int) (byte) 10, (int) (short) 0, (int) (short) 10);
        int[] intArray5 = mutablePeriod4.getValues();
        org.joda.time.Hours hours7 = org.joda.time.Hours.hours((int) (short) 1);
        org.joda.time.Hours hours9 = hours7.minus((int) (short) -1);
        org.joda.time.Duration duration10 = hours9.toStandardDuration();
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration15 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = duration15.toPeriodFrom(readableInstant16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration15.toPeriod(chronology18);
        org.joda.time.Period period21 = period19.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Hours hours23 = org.joda.time.Hours.hoursIn(readableInterval22);
        org.joda.time.Period period24 = period21.minus((org.joda.time.ReadablePeriod) hours23);
        org.joda.time.Hours hours26 = hours23.minus((int) '4');
        org.joda.time.Hours hours28 = hours26.plus((int) '#');
        org.joda.time.DurationFieldType durationFieldType29 = hours26.getFieldType();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType32 = periodType31.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(10L, periodType32);
        int int35 = mutablePeriod34.getMillis();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration40 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration43 = duration40.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration45 = duration37.withDurationAdded((org.joda.time.ReadableDuration) duration40, (int) (short) 1);
        org.joda.time.Duration duration48 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration51 = duration48.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration53 = duration37.withDurationAdded((org.joda.time.ReadableDuration) duration51, (int) (short) 100);
        mutablePeriod34.add((org.joda.time.ReadableDuration) duration53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod();
        mutablePeriod55.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod55, periodType59);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        java.lang.Object obj67 = null;
        org.joda.time.Duration duration68 = new org.joda.time.Duration(obj67);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration68);
        boolean boolean70 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Interval interval72 = duration68.toIntervalTo(readableInstant71);
        org.joda.time.Interval interval73 = interval72.toInterval();
        org.joda.time.Chronology chronology74 = interval73.getChronology();
        boolean boolean75 = durationFieldType63.isSupported(chronology74);
        mutablePeriod55.setPeriod((long) 0, (long) 8, chronology74);
        org.joda.time.Period period77 = duration53.toPeriod(chronology74);
        boolean boolean78 = durationFieldType29.isSupported(chronology74);
        mutablePeriod4.add(1644572175935L, chronology74);
        mutablePeriod4.addSeconds((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 100, 10, 0, 10]");
        org.junit.Assert.assertNotNull(hours7);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(chronology74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test03912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03912");
        org.joda.time.Hours hours0 = org.joda.time.Hours.TWO;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration3.toPeriodFrom(readableInstant4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration3.toPeriod(chronology6);
        org.joda.time.Period period9 = period7.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval10 = null;
        org.joda.time.Hours hours11 = org.joda.time.Hours.hoursIn(readableInterval10);
        org.joda.time.Period period12 = period9.minus((org.joda.time.ReadablePeriod) hours11);
        org.joda.time.Hours hours13 = hours11.negated();
        org.joda.time.Duration duration16 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration16.toPeriod(chronology19);
        org.joda.time.Period period22 = period20.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval23 = null;
        org.joda.time.Hours hours24 = org.joda.time.Hours.hoursIn(readableInterval23);
        org.joda.time.Period period25 = period22.minus((org.joda.time.ReadablePeriod) hours24);
        org.joda.time.Hours hours26 = hours24.negated();
        org.joda.time.Hours hours27 = hours11.minus(hours24);
        org.joda.time.Hours hours28 = hours0.minus(hours24);
        org.joda.time.Hours hours29 = hours24.negated();
        org.joda.time.PeriodType periodType30 = hours29.getPeriodType();
        org.joda.time.PeriodType periodType31 = hours29.getPeriodType();
        java.lang.String str32 = periodType31.getName();
        org.junit.Assert.assertNotNull(hours0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours26);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(hours28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Hours" + "'", str32, "Hours");
    }

    @Test
    public void test03913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03913");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Chronology chronology23 = dateTime10.getChronology();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) chronology23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.chrono.ISOChronology");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(chronology23);
    }

    @Test
    public void test03914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03914");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        long long2 = duration1.getStandardMinutes();
        long long3 = duration1.getStandardDays();
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean7 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = new org.joda.time.Duration(1L, 1644572122326L);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Instant instant34 = dateTime32.toInstant();
        org.joda.time.Weeks weeks35 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks36 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks37 = weeks35.minus(weeks36);
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) weeks37);
        org.joda.time.PeriodType periodType39 = weeks37.getPeriodType();
        org.joda.time.Period period40 = duration10.toPeriodTo((org.joda.time.ReadableInstant) instant34, periodType39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withHoursRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.PeriodType periodType44 = periodType42.withYearsRemoved();
        org.joda.time.Period period45 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) instant34, periodType44);
        org.joda.time.DateTimeZone dateTimeZone46 = instant34.getZone();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(instant34);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(weeks36);
        org.junit.Assert.assertNotNull(weeks37);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(dateTimeZone46);
    }

    @Test
    public void test03915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03915");
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks2 = weeks1.negated();
        int int3 = weeks1.getWeeks();
        org.joda.time.Weeks weeks5 = weeks1.minus(3);
        org.joda.time.Weeks weeks6 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks7 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks8 = weeks6.minus(weeks7);
        org.joda.time.Period period9 = new org.joda.time.Period((java.lang.Object) weeks8);
        org.joda.time.PeriodType periodType10 = weeks8.getPeriodType();
        boolean boolean11 = weeks1.isGreaterThan(weeks8);
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.weeks();
        boolean boolean13 = weeks1.isSupported(durationFieldType12);
        org.joda.time.Weeks weeks15 = weeks1.dividedBy(10);
        org.joda.time.Duration duration16 = weeks1.toStandardDuration();
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(weeks8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(weeks15);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test03916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03916");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Period period6 = period4.minusSeconds((int) '4');
        org.joda.time.Period period8 = period4.minusSeconds(10);
        org.joda.time.Period period10 = period4.withWeeks((int) (byte) -1);
        org.joda.time.Period period12 = period10.minusWeeks(3);
        int int13 = period12.getMinutes();
        org.joda.time.Days days15 = org.joda.time.Days.days((int) (byte) 0);
        org.joda.time.Days days17 = org.joda.time.Days.days((int) ' ');
        org.joda.time.Days days18 = days17.negated();
        org.joda.time.Days days19 = days15.minus(days17);
        org.joda.time.PeriodType periodType20 = days19.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period21 = period12.withPeriodType(periodType20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test03917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03917");
        org.joda.time.Minutes minutes3 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes5 = minutes3.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType6 = minutes5.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withYearsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) '#', periodType6, chronology8);
        org.joda.time.PeriodType periodType10 = periodType6.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1644572160950L, (long) '4', periodType10);
        org.joda.time.PeriodType periodType12 = periodType10.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(periodType12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(periodType12);
        org.joda.time.PeriodType periodType15 = periodType12.withYearsRemoved();
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test03918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03918");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("2022-02-11T09:38:17.037Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:17.037Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03919");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        boolean boolean7 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration5.toIntervalTo(readableInstant8);
        org.joda.time.Interval interval10 = interval9.toInterval();
        org.joda.time.DateTime dateTime11 = interval10.getEnd();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        org.joda.time.Interval interval21 = interval20.toInterval();
        org.joda.time.DateTime dateTime22 = interval21.getEnd();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime11, (org.joda.time.ReadableInstant) dateTime22);
        org.joda.time.Chronology chronology24 = dateTime11.getChronology();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime11, readableInstant25, periodType26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes28 = org.joda.time.Minutes.minutesBetween(readableInstant0, readableInstant25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadableInstant objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(dateTime11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertNotNull(chronology24);
    }

    @Test
    public void test03920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03920");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        int int3 = seconds2.size();
        org.joda.time.Seconds seconds5 = seconds2.plus((-9700));
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.DurationFieldType durationFieldType10 = seconds6.getFieldType();
        org.joda.time.Seconds seconds11 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType13 = seconds12.getFieldType();
        org.joda.time.Seconds seconds15 = seconds12.plus((-1));
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.TWO;
        java.lang.String str17 = seconds16.toString();
        org.joda.time.Seconds seconds18 = seconds15.plus(seconds16);
        org.joda.time.Seconds seconds19 = seconds11.minus(seconds16);
        org.joda.time.Seconds seconds20 = seconds6.plus(seconds11);
        org.joda.time.Duration duration21 = seconds6.toStandardDuration();
        java.lang.String str22 = seconds6.toString();
        org.joda.time.Seconds seconds23 = org.joda.time.Seconds.TWO;
        java.lang.String str24 = seconds23.toString();
        boolean boolean25 = seconds6.isGreaterThan(seconds23);
        org.joda.time.Seconds seconds26 = seconds2.minus(seconds23);
        org.joda.time.Seconds seconds27 = seconds26.negated();
        org.joda.time.Period period28 = seconds27.toPeriod();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT2S" + "'", str17, "PT2S");
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT0S" + "'", str22, "PT0S");
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT2S" + "'", str24, "PT2S");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(seconds26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test03921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03921");
        org.joda.time.Period period2 = new org.joda.time.Period(1L, 1644572147317L);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks3 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot convert period to duration as years is not precise in the period P52Y1M1W3DT9H35M47.316S");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03922");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period1 = new org.joda.time.Period((java.lang.Object) "2022-02-11T09:36:03.444Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:03.444Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03923");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.Weeks weeks11 = weeks5.plus(30);
        org.joda.time.Duration duration12 = weeks5.toStandardDuration();
        org.joda.time.Duration duration13 = weeks5.toStandardDuration();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Chronology chronology24 = interval23.getChronology();
        org.joda.time.Weeks weeks25 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval23);
        org.joda.time.Weeks weeks27 = weeks25.multipliedBy(22);
        org.joda.time.Weeks weeks29 = weeks27.plus((int) (byte) 100);
        org.joda.time.Weeks weeks30 = weeks5.plus(weeks29);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks32 = weeks30.dividedBy(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(chronology24);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertNotNull(weeks30);
    }

    @Test
    public void test03924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03924");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds2 = seconds0.multipliedBy((int) (byte) 1);
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.seconds((int) 'a');
        org.joda.time.Seconds seconds6 = seconds4.dividedBy(22);
        boolean boolean7 = seconds2.isLessThan(seconds4);
        org.joda.time.PeriodType periodType8 = seconds2.getPeriodType();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test03925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03925");
        org.joda.time.Period period4 = new org.joda.time.Period(35, (-99), 1, 300);
    }

    @Test
    public void test03926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03926");
        org.joda.time.Minutes minutes0 = org.joda.time.Minutes.MIN_VALUE;
        org.joda.time.Duration duration1 = minutes0.toStandardDuration();
        java.lang.String str2 = minutes0.toString();
        org.junit.Assert.assertNotNull(minutes0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-2147483648M" + "'", str2, "PT-2147483648M");
    }

    @Test
    public void test03927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03927");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572255181L);
    }

    @Test
    public void test03928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03928");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(1644572270062L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows a long: 1644572270062 * 86400000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03929");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setYears(1);
        org.joda.time.Period period22 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period24 = period22.plusYears((int) (byte) 10);
        boolean boolean25 = mutablePeriod9.equals((java.lang.Object) (byte) 10);
        int int26 = mutablePeriod9.getHours();
        org.joda.time.Minutes minutes27 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes29 = minutes27.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType30 = minutes29.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod31 = minutes29.toMutablePeriod();
        mutablePeriod31.setHours((int) (byte) -1);
        mutablePeriod31.add((long) 10);
        org.joda.time.Minutes minutes36 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period37 = new org.joda.time.Period((java.lang.Object) minutes36);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) (byte) 100, (long) 1);
        org.joda.time.DurationFieldType durationFieldType42 = mutablePeriod40.getFieldType(1);
        boolean boolean43 = minutes36.isSupported(durationFieldType42);
        int int44 = mutablePeriod31.get(durationFieldType42);
        boolean boolean45 = mutablePeriod9.isSupported(durationFieldType42);
        java.lang.Object obj46 = mutablePeriod9.clone();
        org.joda.time.PeriodType periodType47 = mutablePeriod9.getPeriodType();
        int int48 = mutablePeriod9.getWeeks();
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "P1YT2147483647M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "P1YT2147483647M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "P1YT2147483647M");
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test03930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03930");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours(0);
        int int2 = hours1.getHours();
        org.joda.time.PeriodType periodType3 = hours1.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = periodType3.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test03931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03931");
        org.joda.time.Period period2 = new org.joda.time.Period(1644572328588L, 1644572232318L);
    }

    @Test
    public void test03932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03932");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        org.joda.time.Days days4 = org.joda.time.Days.ONE;
        org.joda.time.Days days5 = days4.negated();
        boolean boolean6 = days3.isGreaterThan(days5);
        org.joda.time.Days days7 = days0.plus(days5);
        org.joda.time.Days days8 = org.joda.time.Days.ONE;
        org.joda.time.Days days9 = days8.negated();
        org.joda.time.Days days10 = org.joda.time.Days.ONE;
        org.joda.time.Days days11 = days10.negated();
        boolean boolean12 = days9.isGreaterThan(days11);
        org.joda.time.Days days14 = days11.minus((int) (short) -1);
        org.joda.time.Days days15 = days7.plus(days14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration23 = duration20.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration25 = duration17.withDurationAdded((org.joda.time.ReadableDuration) duration20, (int) (short) 1);
        org.joda.time.Days days26 = duration25.toStandardDays();
        org.joda.time.Days days27 = duration25.toStandardDays();
        org.joda.time.Days days28 = days7.minus(days27);
        org.joda.time.Days days30 = days27.minus((int) (short) 1);
        org.joda.time.Duration duration31 = days30.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days33 = days30.multipliedBy((-2147483648));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Multiplication overflows an int: -1 * -2147483648");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(days7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(days9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(days14);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(days26);
        org.junit.Assert.assertNotNull(days27);
        org.junit.Assert.assertNotNull(days28);
        org.junit.Assert.assertNotNull(days30);
        org.junit.Assert.assertNotNull(duration31);
    }

    @Test
    public void test03933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03933");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(187200L, 1644572185171L);
    }

    @Test
    public void test03934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03934");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = duration2.toPeriod(chronology4);
        org.joda.time.PeriodType periodType6 = null;
        org.joda.time.Period period7 = period5.withPeriodType(periodType6);
        org.joda.time.Hours hours8 = org.joda.time.Hours.THREE;
        org.joda.time.DurationFieldType durationFieldType9 = hours8.getFieldType();
        org.joda.time.Period period10 = period5.withFields((org.joda.time.ReadablePeriod) hours8);
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = period10.getFieldTypes();
        org.joda.time.Period period13 = period10.withMillis(23);
        org.joda.time.Period period15 = period10.withDays((-4));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test03935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03935");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval9 = null;
        org.joda.time.Hours hours10 = org.joda.time.Hours.hoursIn(readableInterval9);
        org.joda.time.Period period11 = period8.minus((org.joda.time.ReadablePeriod) hours10);
        org.joda.time.Hours hours13 = hours10.minus((int) '4');
        org.joda.time.Hours hours15 = hours13.plus((int) '#');
        org.joda.time.DurationFieldType durationFieldType16 = hours13.getFieldType();
        org.joda.time.PeriodType periodType17 = hours13.getPeriodType();
        java.lang.String str18 = hours13.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT-52H" + "'", str18, "PT-52H");
    }

    @Test
    public void test03936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03936");
        org.joda.time.Period period1 = org.joda.time.Period.days((-2231));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03937");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 100, chronology1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Period period5 = period2.minusHours((-1));
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, (long) (byte) 0, periodType8);
        mutablePeriod9.addSeconds(36);
        org.joda.time.Period period12 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod9);
        org.joda.time.ReadableInterval readableInterval13 = null;
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.secondsIn(readableInterval13);
        org.joda.time.DurationFieldType durationFieldType15 = seconds14.getFieldType();
        org.joda.time.Period period17 = period2.withField(durationFieldType15, 7);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test03938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03938");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.ReadableDuration readableDuration10 = null;
        boolean boolean11 = duration1.isLongerThan(readableDuration10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) ' ', chronology13);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType17);
        mutablePeriod18.setYears(0);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod18.setPeriod((org.joda.time.ReadableDuration) duration22, chronology23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        boolean boolean31 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Interval interval33 = duration29.toIntervalTo(readableInstant32);
        org.joda.time.Interval interval34 = interval33.toInterval();
        org.joda.time.DateTime dateTime35 = interval34.getEnd();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, (org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant51 = null;
        java.lang.Object obj52 = null;
        org.joda.time.Duration duration53 = new org.joda.time.Duration(obj52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        boolean boolean55 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration53.toIntervalTo(readableInstant56);
        org.joda.time.Interval interval58 = interval57.toInterval();
        org.joda.time.DateTime dateTime59 = interval58.getEnd();
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType62 = periodType61.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(periodType62);
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(10L, periodType62);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime35, (org.joda.time.ReadableInstant) dateTime59, periodType62);
        org.joda.time.Duration duration66 = mutablePeriod14.toDurationFrom((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Minutes minutes68 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes70 = minutes68.multipliedBy((int) (short) 1);
        org.joda.time.PeriodType periodType71 = minutes70.getPeriodType();
        org.joda.time.PeriodType periodType72 = periodType71.withYearsRemoved();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((long) '#', periodType71, chronology73);
        org.joda.time.PeriodType periodType75 = periodType71.withHoursRemoved();
        org.joda.time.Period period76 = new org.joda.time.Period(readableDuration10, (org.joda.time.ReadableInstant) dateTime35, periodType75);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period78 = period76.withYears((-20));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType75);
    }

    @Test
    public void test03939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03939");
        org.joda.time.Days days0 = org.joda.time.Days.MAX_VALUE;
        org.joda.time.PeriodType periodType1 = days0.getPeriodType();
        int int2 = days0.getDays();
        org.joda.time.Period period3 = days0.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration4 = new org.joda.time.Duration((java.lang.Object) period3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Period");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2147483647 + "'", int2 == 2147483647);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test03940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03940");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03941");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (-99));
        int int2 = mutablePeriod1.getMonths();
        int int3 = mutablePeriod1.getHours();
        org.joda.time.Seconds seconds4 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType5 = seconds4.getFieldType();
        org.joda.time.Seconds seconds7 = seconds4.plus((-1));
        org.joda.time.DurationFieldType durationFieldType8 = seconds4.getFieldType();
        org.joda.time.Seconds seconds9 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType11 = seconds10.getFieldType();
        org.joda.time.Seconds seconds13 = seconds10.plus((-1));
        org.joda.time.Seconds seconds14 = org.joda.time.Seconds.TWO;
        java.lang.String str15 = seconds14.toString();
        org.joda.time.Seconds seconds16 = seconds13.plus(seconds14);
        org.joda.time.Seconds seconds17 = seconds9.minus(seconds14);
        org.joda.time.Seconds seconds18 = seconds4.plus(seconds9);
        org.joda.time.Seconds seconds19 = seconds18.negated();
        org.joda.time.Duration duration20 = seconds18.toStandardDuration();
        org.joda.time.Seconds seconds21 = duration20.toStandardSeconds();
        org.joda.time.DurationFieldType durationFieldType22 = seconds21.getFieldType();
        int int23 = mutablePeriod1.get(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT2S" + "'", str15, "PT2S");
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test03942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03942");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-2147483648), (-3), 6, 36000032);
        mutablePeriod4.setMonths(0);
        int int7 = mutablePeriod4.getDays();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test03943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03943");
        org.joda.time.Period period1 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period4 = period1.plus((org.joda.time.ReadablePeriod) weeks3);
        org.joda.time.Period period5 = period4.toPeriod();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.eras();
        int int10 = periodType7.indexOf(durationFieldType9);
        boolean boolean11 = period4.isSupported(durationFieldType9);
        org.joda.time.Period period12 = period4.toPeriod();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withHoursRemoved();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.millis();
        int int16 = periodType14.indexOf(durationFieldType15);
        org.joda.time.Period period18 = period12.withField(durationFieldType15, (-10));
        org.joda.time.Period period27 = new org.joda.time.Period((int) (byte) 10, (int) (short) 0, (int) (byte) 100, 1, (-1), (int) (byte) 0, 0, 0);
        org.joda.time.Period period29 = period27.withYears(0);
        org.joda.time.Period period31 = period27.multipliedBy((-9700));
        org.joda.time.Weeks weeks33 = org.joda.time.Weeks.weeks((int) ' ');
        org.joda.time.DurationFieldType durationFieldType34 = weeks33.getFieldType();
        boolean boolean35 = period27.isSupported(durationFieldType34);
        boolean boolean36 = period12.equals((java.lang.Object) boolean35);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test03944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03944");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Minutes minutes3 = duration1.toStandardMinutes();
        java.lang.String str4 = minutes3.toString();
        org.joda.time.Minutes minutes6 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Duration duration8 = org.joda.time.Duration.millis((long) '4');
        long long9 = duration8.getMillis();
        org.joda.time.Minutes minutes10 = duration8.toStandardMinutes();
        org.joda.time.Minutes minutes11 = minutes10.negated();
        org.joda.time.Minutes minutes12 = minutes6.plus(minutes10);
        org.joda.time.Minutes minutes13 = minutes12.negated();
        org.joda.time.Minutes minutes14 = minutes3.plus(minutes13);
        org.joda.time.PeriodType periodType15 = minutes13.getPeriodType();
        java.lang.String str16 = periodType15.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT0M" + "'", str4, "PT0M");
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Minutes" + "'", str16, "Minutes");
    }

    @Test
    public void test03945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03945");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        java.lang.Object obj15 = null;
        org.joda.time.Duration duration16 = new org.joda.time.Duration(obj15);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration16);
        boolean boolean18 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Interval interval20 = duration16.toIntervalTo(readableInstant19);
        boolean boolean21 = interval11.isAfter((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Period period22 = interval20.toPeriod();
        org.joda.time.DateTime dateTime23 = interval20.getStart();
        org.joda.time.DateTimeZone dateTimeZone24 = dateTime23.getZone();
        org.joda.time.Period period25 = duration1.toPeriodFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Period period27 = period25.plusHours((int) (short) 1);
        org.joda.time.Period period29 = period27.withSeconds(69);
        org.joda.time.Period period31 = period29.withMinutes(1868);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(dateTimeZone24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test03946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03946");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.minutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        boolean boolean33 = interval23.isAfter((org.joda.time.ReadableInterval) interval32);
        boolean boolean34 = interval12.contains((org.joda.time.ReadableInterval) interval23);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType37);
        mutablePeriod38.setYears(0);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod38.setPeriod((org.joda.time.ReadableDuration) duration42, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, (org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant71 = null;
        java.lang.Object obj72 = null;
        org.joda.time.Duration duration73 = new org.joda.time.Duration(obj72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant71, (org.joda.time.ReadableDuration) duration73);
        boolean boolean75 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration73.toIntervalTo(readableInstant76);
        org.joda.time.Interval interval78 = interval77.toInterval();
        org.joda.time.DateTime dateTime79 = interval78.getEnd();
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType82 = periodType81.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(10L, periodType82);
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime79, periodType82);
        boolean boolean86 = interval23.isAfter((org.joda.time.ReadableInstant) dateTime55);
        org.joda.time.Chronology chronology87 = dateTime55.getChronology();
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType2, chronology87);
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(1644572137529L, periodType2);
        int int90 = mutablePeriod89.getWeeks();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(interval78);
        org.junit.Assert.assertNotNull(dateTime79);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(chronology87);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test03947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03947");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration7 = duration4.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration4, (int) (short) 1);
        org.joda.time.Days days10 = duration9.toStandardDays();
        org.joda.time.Days days11 = duration9.toStandardDays();
        org.joda.time.Days days12 = duration9.toStandardDays();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType18);
        mutablePeriod19.setYears(0);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration23, chronology24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime36, (org.joda.time.ReadableInstant) dateTime47);
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period51 = duration15.toPeriodTo((org.joda.time.ReadableInstant) dateTime36, periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1644572126858L, periodType50);
        org.joda.time.PeriodType periodType53 = mutablePeriod52.getPeriodType();
        org.joda.time.PeriodType periodType54 = periodType53.withHoursRemoved();
        org.joda.time.Duration duration57 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = duration57.toPeriodFrom(readableInstant58);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration57.toPeriod(chronology60);
        java.lang.String str62 = period61.toString();
        org.joda.time.MutablePeriod mutablePeriod63 = period61.toMutablePeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        org.joda.time.Interval interval74 = interval73.toInterval();
        long long75 = interval73.toDurationMillis();
        org.joda.time.Interval interval76 = interval73.toInterval();
        org.joda.time.Chronology chronology77 = interval76.getChronology();
        mutablePeriod63.add(0L, chronology77);
        org.joda.time.Period period79 = duration9.toPeriod(periodType53, chronology77);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period81 = period79.plusMillis((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT0.097S" + "'", str62, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertNotNull(interval74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(chronology77);
        org.junit.Assert.assertNotNull(period79);
    }

    @Test
    public void test03948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03948");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType1 = periodType0.withMillisRemoved();
        org.joda.time.PeriodType periodType2 = periodType0.withMillisRemoved();
        java.lang.String str3 = periodType2.getName();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MillisNoMillis" + "'", str3, "MillisNoMillis");
    }

    @Test
    public void test03949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03949");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Weeks weeks4 = weeks2.multipliedBy(100);
        org.joda.time.Weeks weeks6 = weeks2.multipliedBy((int) (short) -1);
        java.lang.String str7 = weeks2.toString();
        org.joda.time.Weeks weeks8 = weeks2.negated();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks4);
        org.junit.Assert.assertNotNull(weeks6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P0W" + "'", str7, "P0W");
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test03950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03950");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes1 = org.joda.time.Minutes.parseMinutes("2022-02-11T09:36:48.394Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:36:48.394Z\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03951");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.Weeks weeks11 = weeks5.plus(30);
        int int12 = weeks5.getWeeks();
        org.joda.time.Weeks weeks14 = weeks5.plus((-1));
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks17 = weeks16.negated();
        org.joda.time.PeriodType periodType18 = weeks16.getPeriodType();
        org.joda.time.Weeks weeks19 = weeks14.minus(weeks16);
        org.joda.time.Period period20 = weeks16.toPeriod();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(weeks11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(weeks14);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test03952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03952");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-49), 1644572154033L);
        org.joda.time.Hours hours3 = duration2.toStandardHours();
        org.joda.time.Minutes minutes4 = hours3.toStandardMinutes();
        org.junit.Assert.assertNotNull(hours3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test03953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03953");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType8);
        org.joda.time.Minutes minutes10 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes12 = minutes10.multipliedBy((int) (short) 1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) minutes12);
        mutablePeriod9.addDays(0);
        mutablePeriod9.setMonths((int) (byte) 1);
        int int18 = mutablePeriod9.getMonths();
        mutablePeriod9.setPeriod(0L);
        mutablePeriod9.setPeriod((int) (byte) 10, (int) (short) -1, 0, (int) (byte) 0, (int) 'a', (int) (short) 1, (int) (short) 0, (int) (byte) 10);
        mutablePeriod9.addWeeks((-1));
        org.joda.time.PeriodType periodType32 = mutablePeriod9.getPeriodType();
        int int33 = mutablePeriod9.getYears();
        mutablePeriod9.add(1644572232112L);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
    }

    @Test
    public void test03954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03954");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusYears((int) (byte) 10);
        org.joda.time.Period period8 = period4.minusYears((int) (short) 1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period4.getFieldTypes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.forFields(durationFieldTypeArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) durationFieldTypeArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: [Lorg.joda.time.DurationFieldType;");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test03955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03955");
        org.joda.time.Hours hours1 = org.joda.time.Hours.hours((-1));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        java.lang.Object obj5 = null;
        org.joda.time.Duration duration6 = new org.joda.time.Duration(obj5);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        boolean boolean8 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration6.toIntervalTo(readableInstant9);
        org.joda.time.Interval interval11 = interval10.toInterval();
        org.joda.time.Hours hours12 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval11);
        org.joda.time.Hours hours14 = hours12.dividedBy(1);
        boolean boolean15 = hours1.isGreaterThan(hours14);
        org.joda.time.Hours hours16 = hours14.negated();
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration19.toPeriod(chronology22);
        org.joda.time.Period period25 = period23.withYears((int) (byte) 10);
        org.joda.time.ReadableInterval readableInterval26 = null;
        org.joda.time.Hours hours27 = org.joda.time.Hours.hoursIn(readableInterval26);
        org.joda.time.Period period28 = period25.minus((org.joda.time.ReadablePeriod) hours27);
        org.joda.time.Hours hours30 = hours27.minus((int) '4');
        org.joda.time.Hours hours32 = hours30.plus((int) '#');
        org.joda.time.Hours hours33 = hours14.minus(hours32);
        org.joda.time.PeriodType periodType34 = hours14.getPeriodType();
        org.joda.time.Hours hours36 = hours14.plus(0);
        java.lang.String str37 = hours14.toString();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours30);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(hours33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT0H" + "'", str37, "PT0H");
    }

    @Test
    public void test03956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03956");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Weeks weeks23 = period22.toStandardWeeks();
        org.joda.time.Weeks weeks24 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks26 = weeks24.plus((int) '4');
        org.joda.time.Weeks weeks27 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks29 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean30 = weeks27.isGreaterThan(weeks29);
        org.joda.time.DurationFieldType durationFieldType31 = weeks29.getFieldType();
        boolean boolean32 = weeks24.isGreaterThan(weeks29);
        boolean boolean33 = weeks23.isGreaterThan(weeks29);
        org.joda.time.Weeks weeks35 = weeks23.minus(8);
        org.joda.time.PeriodType periodType36 = weeks35.getPeriodType();
        java.lang.String str37 = periodType36.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertNotNull(weeks24);
        org.junit.Assert.assertNotNull(weeks26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(weeks29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(weeks35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Weeks" + "'", str37, "Weeks");
    }

    @Test
    public void test03957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03957");
        org.joda.time.ReadableInterval readableInterval0 = null;
        org.joda.time.Hours hours1 = org.joda.time.Hours.hoursIn(readableInterval0);
        org.joda.time.Hours hours2 = hours1.negated();
        org.joda.time.PeriodType periodType3 = hours1.getPeriodType();
        org.joda.time.PeriodType periodType4 = periodType3.withYearsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withHoursRemoved();
        org.junit.Assert.assertNotNull(hours1);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test03958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03958");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) 1, (int) (short) 100, (int) '4', 5, 52, (int) (byte) 0, (int) (byte) 10, (int) (short) 100);
        org.joda.time.Duration duration10 = org.joda.time.Duration.millis((long) '4');
        long long11 = duration10.getMillis();
        org.joda.time.PeriodType periodType14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType14);
        mutablePeriod15.setYears(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod15.setPeriod((org.joda.time.ReadableDuration) duration19, chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        boolean boolean39 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration37.toIntervalTo(readableInstant40);
        org.joda.time.Interval interval42 = interval41.toInterval();
        org.joda.time.DateTime dateTime43 = interval42.getEnd();
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime32, (org.joda.time.ReadableInstant) dateTime43);
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, (org.joda.time.ReadableInstant) dateTime32);
        java.lang.String str46 = dateTime32.toString();
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Duration duration49 = duration10.withMillis((long) 6);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod51.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType62);
        org.joda.time.Minutes minutes64 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes66 = minutes64.multipliedBy((int) (short) 1);
        mutablePeriod63.setPeriod((org.joda.time.ReadablePeriod) minutes66);
        boolean boolean68 = mutablePeriod51.equals((java.lang.Object) minutes66);
        org.joda.time.PeriodType periodType69 = minutes66.getPeriodType();
        org.joda.time.Duration duration70 = minutes66.toStandardDuration();
        boolean boolean71 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration70);
        long long72 = duration10.getStandardMinutes();
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration10);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(dateTime43);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "2022-02-11T09:39:20.651Z" + "'", str46, "2022-02-11T09:39:20.651Z");
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
    }

    @Test
    public void test03959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03959");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType1 = seconds0.getFieldType();
        org.joda.time.Seconds seconds3 = seconds0.plus((-1));
        org.joda.time.DurationFieldType durationFieldType4 = seconds0.getFieldType();
        org.joda.time.Seconds seconds5 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds6 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType7 = seconds6.getFieldType();
        org.joda.time.Seconds seconds9 = seconds6.plus((-1));
        org.joda.time.Seconds seconds10 = org.joda.time.Seconds.TWO;
        java.lang.String str11 = seconds10.toString();
        org.joda.time.Seconds seconds12 = seconds9.plus(seconds10);
        org.joda.time.Seconds seconds13 = seconds5.minus(seconds10);
        org.joda.time.Seconds seconds14 = seconds0.plus(seconds5);
        org.joda.time.ReadableInterval readableInterval15 = null;
        org.joda.time.Seconds seconds16 = org.joda.time.Seconds.secondsIn(readableInterval15);
        org.joda.time.Seconds seconds17 = seconds0.plus(seconds16);
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds20 = seconds18.multipliedBy((int) (byte) 1);
        java.lang.String str21 = seconds18.toString();
        org.joda.time.Seconds seconds22 = seconds16.plus(seconds18);
        int int23 = seconds16.size();
        int int24 = seconds16.getSeconds();
        org.joda.time.Seconds seconds25 = null;
        boolean boolean26 = seconds16.isGreaterThan(seconds25);
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(durationFieldType1);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(seconds6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT2S" + "'", str11, "PT2S");
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertNotNull(seconds13);
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds17);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT3S" + "'", str21, "PT3S");
        org.junit.Assert.assertNotNull(seconds22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test03960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03960");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        boolean boolean30 = interval20.isAfter((org.joda.time.ReadableInterval) interval29);
        boolean boolean31 = interval9.contains((org.joda.time.ReadableInterval) interval20);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        org.joda.time.Interval interval41 = interval40.toInterval();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        boolean boolean51 = interval41.isAfter((org.joda.time.ReadableInterval) interval50);
        long long52 = interval50.toDurationMillis();
        org.joda.time.Interval interval53 = interval50.toInterval();
        org.joda.time.Days days54 = org.joda.time.Days.daysIn((org.joda.time.ReadableInterval) interval50);
        boolean boolean55 = interval9.isBefore((org.joda.time.ReadableInterval) interval50);
        org.joda.time.Period period56 = interval50.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(days54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(period56);
    }

    @Test
    public void test03961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03961");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks1 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.minus(weeks1);
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) weeks2);
        org.joda.time.PeriodType periodType4 = weeks2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(periodType4);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addMinutes(51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks1);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test03962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03962");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        long long32 = interval9.getEndMillis();
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration35.toPeriodFrom(readableInstant36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration35.toPeriod(chronology38);
        java.lang.String str40 = period39.toString();
        org.joda.time.MutablePeriod mutablePeriod41 = period39.toMutablePeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant44 = null;
        java.lang.Object obj45 = null;
        org.joda.time.Duration duration46 = new org.joda.time.Duration(obj45);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        boolean boolean48 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration46.toIntervalTo(readableInstant49);
        long long51 = interval50.getStartMillis();
        mutablePeriod41.setPeriod((org.joda.time.ReadableInterval) interval50);
        boolean boolean53 = interval9.isBefore((org.joda.time.ReadableInterval) interval50);
        org.joda.time.Hours hours54 = org.joda.time.Hours.hoursIn((org.joda.time.ReadableInterval) interval9);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant67 = null;
        java.lang.Object obj68 = null;
        org.joda.time.Duration duration69 = new org.joda.time.Duration(obj68);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant67, (org.joda.time.ReadableDuration) duration69);
        boolean boolean71 = duration66.isShorterThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration69.toIntervalTo(readableInstant72);
        boolean boolean74 = interval64.isAfter((org.joda.time.ReadableInterval) interval73);
        org.joda.time.Period period75 = interval73.toPeriod();
        org.joda.time.DateTime dateTime76 = interval73.getStart();
        org.joda.time.MutableInterval mutableInterval77 = interval73.toMutableInterval();
        long long78 = mutableInterval77.getStartMillis();
        org.joda.time.Period period79 = mutableInterval77.toPeriod();
        boolean boolean80 = interval9.contains((org.joda.time.ReadableInterval) mutableInterval77);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant83 = null;
        java.lang.Object obj84 = null;
        org.joda.time.Duration duration85 = new org.joda.time.Duration(obj84);
        org.joda.time.Period period86 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration82.isShorterThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Interval interval89 = duration85.toIntervalTo(readableInstant88);
        org.joda.time.Interval interval90 = interval89.toInterval();
        org.joda.time.MutableInterval mutableInterval91 = interval89.toMutableInterval();
        boolean boolean92 = mutableInterval77.overlaps((org.joda.time.ReadableInterval) interval89);
        org.joda.time.DateTime dateTime93 = interval89.getEnd();
        org.joda.time.Duration duration94 = interval89.toDuration();
        org.joda.time.Hours hours95 = duration94.toStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572360858L + "'", long32 == 1644572360858L);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT0.097S" + "'", str40, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(interval50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1644572360858L + "'", long51 == 1644572360858L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(dateTime76);
        org.junit.Assert.assertNotNull(mutableInterval77);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + 1644572360858L + "'", long78 == 1644572360858L);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(interval89);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(mutableInterval91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(dateTime93);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(hours95);
    }

    @Test
    public void test03963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03963");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) 'a', (long) 0);
        boolean boolean12 = duration4.equals((java.lang.Object) 'a');
        org.joda.time.Minutes minutes13 = duration4.toStandardMinutes();
        int int14 = minutes13.size();
        org.joda.time.Hours hours15 = minutes13.toStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(hours15);
    }

    @Test
    public void test03964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03964");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.DateTime dateTime16 = interval15.getEnd();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        java.lang.Object obj20 = null;
        org.joda.time.Duration duration21 = new org.joda.time.Duration(obj20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        boolean boolean23 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration21.toIntervalTo(readableInstant24);
        org.joda.time.Interval interval26 = interval25.toInterval();
        org.joda.time.DateTime dateTime27 = interval26.getEnd();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime16, (org.joda.time.ReadableInstant) dateTime27);
        long long29 = dateTime27.getMillis();
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, (org.joda.time.ReadableInstant) dateTime27);
        org.joda.time.Seconds seconds31 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds33 = seconds31.multipliedBy((int) (byte) 1);
        int int34 = seconds33.size();
        org.joda.time.Period period36 = org.joda.time.Period.parse("PT0S");
        org.joda.time.Period period38 = period36.minusMillis((-1));
        org.joda.time.Seconds seconds39 = org.joda.time.Seconds.standardSecondsIn((org.joda.time.ReadablePeriod) period38);
        boolean boolean40 = seconds33.isGreaterThan(seconds39);
        org.joda.time.PeriodType periodType41 = seconds33.getPeriodType();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Period period43 = duration5.toPeriod(periodType42);
        org.joda.time.Duration duration44 = period43.toStandardDuration();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration49 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration52 = duration49.withDurationAdded((long) (byte) 100, 10);
        int int53 = duration46.compareTo((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Seconds seconds54 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds55 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        org.joda.time.Seconds seconds58 = seconds55.plus((-1));
        org.joda.time.Seconds seconds59 = org.joda.time.Seconds.TWO;
        java.lang.String str60 = seconds59.toString();
        org.joda.time.Seconds seconds61 = seconds58.plus(seconds59);
        org.joda.time.Seconds seconds62 = seconds54.minus(seconds59);
        org.joda.time.Duration duration63 = seconds54.toStandardDuration();
        org.joda.time.Duration duration66 = new org.joda.time.Duration(1L, 1644572122326L);
        boolean boolean67 = duration63.isEqual((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration69 = duration49.withDurationAdded((org.joda.time.ReadableDuration) duration66, 1);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(dateTime16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(dateTime27);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1644572360999L + "'", long29 == 1644572360999L);
        org.junit.Assert.assertNotNull(seconds31);
        org.junit.Assert.assertNotNull(seconds33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(seconds39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(seconds54);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertNotNull(seconds58);
        org.junit.Assert.assertNotNull(seconds59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT2S" + "'", str60, "PT2S");
        org.junit.Assert.assertNotNull(seconds61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test03965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03965");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        long long32 = interval9.toDurationMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test03966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03966");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Seconds seconds2 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType3 = seconds2.getFieldType();
        org.joda.time.Seconds seconds5 = seconds2.plus((-1));
        org.joda.time.DurationFieldType durationFieldType6 = seconds2.getFieldType();
        org.joda.time.Seconds seconds7 = org.joda.time.Seconds.THREE;
        org.joda.time.Seconds seconds8 = org.joda.time.Seconds.ZERO;
        org.joda.time.DurationFieldType durationFieldType9 = seconds8.getFieldType();
        org.joda.time.Seconds seconds11 = seconds8.plus((-1));
        org.joda.time.Seconds seconds12 = org.joda.time.Seconds.TWO;
        java.lang.String str13 = seconds12.toString();
        org.joda.time.Seconds seconds14 = seconds11.plus(seconds12);
        org.joda.time.Seconds seconds15 = seconds7.minus(seconds12);
        org.joda.time.Seconds seconds16 = seconds2.plus(seconds7);
        org.joda.time.ReadableInterval readableInterval17 = null;
        org.joda.time.Seconds seconds18 = org.joda.time.Seconds.secondsIn(readableInterval17);
        org.joda.time.Seconds seconds19 = seconds2.plus(seconds18);
        org.joda.time.Seconds seconds20 = seconds18.negated();
        org.joda.time.Seconds seconds21 = seconds18.negated();
        org.joda.time.PeriodType periodType22 = seconds21.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period23 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(seconds7);
        org.junit.Assert.assertNotNull(seconds8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(seconds11);
        org.junit.Assert.assertNotNull(seconds12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT2S" + "'", str13, "PT2S");
        org.junit.Assert.assertNotNull(seconds14);
        org.junit.Assert.assertNotNull(seconds15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(seconds18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test03967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03967");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        java.lang.String str7 = period6.toString();
        org.joda.time.MutablePeriod mutablePeriod8 = period6.toMutablePeriod();
        org.joda.time.Seconds seconds9 = period6.toStandardSeconds();
        org.joda.time.Period period10 = period6.toPeriod();
        org.joda.time.Period period12 = period6.plusDays((int) (byte) 100);
        org.joda.time.Period period14 = period6.withDays(7);
        int int15 = period6.getHours();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT0.097S" + "'", str7, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test03968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03968");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        long long32 = interval9.getEndMillis();
        org.joda.time.Interval interval33 = interval9.toInterval();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        java.lang.Object obj36 = null;
        org.joda.time.Duration duration37 = new org.joda.time.Duration(obj36);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.millis((long) '4');
        long long43 = duration42.getStandardDays();
        boolean boolean44 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant77 = null;
        java.lang.Object obj78 = null;
        org.joda.time.Duration duration79 = new org.joda.time.Duration(obj78);
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant77, (org.joda.time.ReadableDuration) duration79);
        boolean boolean81 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableInterval readableInterval83 = null;
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.minutesIn(readableInterval83);
        java.lang.String str85 = minutes84.toString();
        org.joda.time.PeriodType periodType86 = minutes84.getPeriodType();
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration79, readableInstant82, periodType86);
        org.joda.time.PeriodType periodType88 = periodType86.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime73, periodType88);
        org.joda.time.Interval interval90 = duration37.toIntervalFrom((org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(readableInstant34, (org.joda.time.ReadableInstant) dateTime73);
        boolean boolean92 = interval9.isBefore(readableInstant34);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1644572361116L + "'", long32 == 1644572361116L);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(minutes84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PT0M" + "'", str85, "PT0M");
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test03969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03969");
        org.joda.time.Seconds seconds0 = org.joda.time.Seconds.ZERO;
        org.joda.time.Duration duration1 = seconds0.toStandardDuration();
        org.joda.time.Hours hours2 = seconds0.toStandardHours();
        org.junit.Assert.assertNotNull(seconds0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours2);
    }

    @Test
    public void test03970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03970");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology1);
        mutablePeriod2.setDays((int) (short) 0);
        java.lang.Object obj5 = mutablePeriod2.clone();
        mutablePeriod2.addMillis((int) (short) 0);
        mutablePeriod2.setDays((int) (byte) 0);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.DateTime dateTime20 = interval19.getEnd();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant23 = null;
        java.lang.Object obj24 = null;
        org.joda.time.Duration duration25 = new org.joda.time.Duration(obj24);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration25);
        boolean boolean27 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Interval interval29 = duration25.toIntervalTo(readableInstant28);
        org.joda.time.Interval interval30 = interval29.toInterval();
        org.joda.time.DateTime dateTime31 = interval30.getEnd();
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime20, (org.joda.time.ReadableInstant) dateTime31);
        org.joda.time.Weeks weeks33 = period32.toStandardWeeks();
        org.joda.time.Period period34 = period32.negated();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Period period37 = period34.plusYears(0);
        org.joda.time.DurationFieldType durationFieldType39 = period34.getFieldType(4);
        org.joda.time.Period period41 = period34.withMinutes((-99));
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "PT0S");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(interval29);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(dateTime31);
        org.junit.Assert.assertNotNull(weeks33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(period41);
    }

    @Test
    public void test03971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03971");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        java.lang.Object obj13 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(obj13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        boolean boolean16 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Interval interval18 = duration14.toIntervalTo(readableInstant17);
        org.joda.time.Interval interval19 = interval18.toInterval();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant22 = null;
        java.lang.Object obj23 = null;
        org.joda.time.Duration duration24 = new org.joda.time.Duration(obj23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration24);
        boolean boolean26 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration24.toIntervalTo(readableInstant27);
        boolean boolean29 = interval19.isAfter((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period30 = interval28.toPeriod();
        boolean boolean31 = interval9.isBefore((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Seconds seconds32 = org.joda.time.Seconds.secondsIn((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Period period33 = seconds32.toPeriod();
        org.joda.time.Duration duration34 = seconds32.toStandardDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test03972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03972");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        org.joda.time.Interval interval46 = interval45.toInterval();
        org.joda.time.DateTime dateTime47 = interval46.getEnd();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType50 = periodType49.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(10L, periodType50);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime47, periodType50);
        org.joda.time.Duration duration54 = mutablePeriod2.toDurationFrom((org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant57 = null;
        java.lang.Object obj58 = null;
        org.joda.time.Duration duration59 = new org.joda.time.Duration(obj58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration59);
        boolean boolean61 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalTo(readableInstant62);
        org.joda.time.Interval interval64 = interval63.toInterval();
        org.joda.time.DateTime dateTime65 = interval64.getEnd();
        boolean boolean66 = dateTime23.isBefore((org.joda.time.ReadableInstant) dateTime65);
        org.joda.time.Instant instant67 = dateTime23.toInstant();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (byte) 100);
        long long70 = duration69.getStandardSeconds();
        java.lang.String str71 = duration69.toString();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType73 = periodType72.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) instant67, (org.joda.time.ReadableDuration) duration69, periodType72);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod74.setMillis((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(interval46);
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(interval63);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 360000L + "'", long70 == 360000L);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT360000S" + "'", str71, "PT360000S");
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
    }

    @Test
    public void test03973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03973");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days1 = org.joda.time.Days.parseDays("StandardNoHours");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"StandardNoHours\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03974");
        org.joda.time.Period period1 = new org.joda.time.Period(1644572133852L);
        org.joda.time.Period period2 = period1.negated();
        org.joda.time.Period period3 = period1.toPeriod();
        org.joda.time.Days days4 = period1.toStandardDays();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(days4);
    }

    @Test
    public void test03975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03975");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration1 = new org.joda.time.Duration(obj0);
        org.joda.time.Hours hours2 = duration1.toStandardHours();
        org.joda.time.Hours hours4 = hours2.dividedBy(52);
        org.joda.time.MutablePeriod mutablePeriod5 = hours2.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = hours2.toMutablePeriod();
        mutablePeriod6.setPeriod(1644572132097L, 1644572142709L);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = duration12.toPeriodFrom(readableInstant13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration12.toPeriod(chronology15);
        java.lang.String str17 = period16.toString();
        org.joda.time.MutablePeriod mutablePeriod18 = period16.toMutablePeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        long long28 = interval27.getStartMillis();
        mutablePeriod18.setPeriod((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Interval interval30 = interval27.toInterval();
        org.joda.time.Interval interval31 = interval27.toInterval();
        org.joda.time.Interval interval32 = interval27.toInterval();
        org.joda.time.DateTime dateTime33 = interval32.getEnd();
        mutablePeriod6.add((org.joda.time.ReadableInterval) interval32);
        mutablePeriod6.setPeriod(1644572315458L, 1644572302005L);
        org.junit.Assert.assertNotNull(hours2);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT0.097S" + "'", str17, "PT0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1644572361535L + "'", long28 == 1644572361535L);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(dateTime33);
    }

    @Test
    public void test03976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03976");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0.052S");
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        long long4 = duration3.getMillis();
        org.joda.time.PeriodType periodType7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType7);
        mutablePeriod8.setYears(0);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        java.lang.Object obj18 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration(obj18);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        boolean boolean21 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration19.toIntervalTo(readableInstant22);
        org.joda.time.Interval interval24 = interval23.toInterval();
        org.joda.time.DateTime dateTime25 = interval24.getEnd();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant28 = null;
        java.lang.Object obj29 = null;
        org.joda.time.Duration duration30 = new org.joda.time.Duration(obj29);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration30);
        boolean boolean32 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Interval interval34 = duration30.toIntervalTo(readableInstant33);
        org.joda.time.Interval interval35 = interval34.toInterval();
        org.joda.time.DateTime dateTime36 = interval35.getEnd();
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime36);
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, (org.joda.time.ReadableInstant) dateTime25);
        java.lang.String str39 = dateTime25.toString();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, (org.joda.time.ReadableInstant) dateTime25);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant43 = null;
        java.lang.Object obj44 = null;
        org.joda.time.Duration duration45 = new org.joda.time.Duration(obj44);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        boolean boolean47 = duration42.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration45.toIntervalTo(readableInstant48);
        org.joda.time.Interval interval50 = interval49.toInterval();
        org.joda.time.DateTime dateTime51 = interval50.getEnd();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime51, (org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Seconds seconds64 = org.joda.time.Seconds.secondsBetween((org.joda.time.ReadableInstant) dateTime25, (org.joda.time.ReadableInstant) dateTime51);
        org.joda.time.Chronology chronology65 = dateTime25.getChronology();
        org.joda.time.Interval interval66 = duration1.toIntervalTo((org.joda.time.ReadableInstant) dateTime25);
        long long67 = dateTime25.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(interval34);
        org.junit.Assert.assertNotNull(interval35);
        org.junit.Assert.assertNotNull(dateTime36);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "2022-02-11T09:39:21.567Z" + "'", str39, "2022-02-11T09:39:21.567Z");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(seconds64);
        org.junit.Assert.assertNotNull(chronology65);
        org.junit.Assert.assertNotNull(interval66);
// flaky:         org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1644572361567L + "'", long67 == 1644572361567L);
    }

    @Test
    public void test03977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03977");
        org.joda.time.ReadableInstant readableInstant3 = null;
        java.lang.Object obj4 = null;
        org.joda.time.Duration duration5 = new org.joda.time.Duration(obj4);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType11);
        mutablePeriod12.addMillis((-1));
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod12);
        mutablePeriod8.setMillis((int) '4');
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod8.copy();
        org.joda.time.DurationFieldType[] durationFieldTypeArray19 = mutablePeriod18.getFieldTypes();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.forFields(durationFieldTypeArray19);
        org.joda.time.PeriodType periodType21 = periodType20.withDaysRemoved();
        org.joda.time.Period period22 = new org.joda.time.Period(1644572177734L, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(periodType23);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 17, 1644572288651L, periodType23);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(durationFieldTypeArray19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test03978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03978");
        org.joda.time.Days days0 = org.joda.time.Days.ONE;
        org.joda.time.Days days1 = days0.negated();
        org.joda.time.Days days2 = org.joda.time.Days.ONE;
        org.joda.time.Days days3 = days2.negated();
        boolean boolean4 = days1.isGreaterThan(days3);
        int int5 = days3.size();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((long) (byte) 0);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType10);
        mutablePeriod11.setYears(0);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration15, chronology16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        java.lang.Object obj21 = null;
        org.joda.time.Duration duration22 = new org.joda.time.Duration(obj21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        boolean boolean24 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        org.joda.time.Interval interval27 = interval26.toInterval();
        org.joda.time.DateTime dateTime28 = interval27.getEnd();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        java.lang.Object obj32 = null;
        org.joda.time.Duration duration33 = new org.joda.time.Duration(obj32);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration33);
        boolean boolean35 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration33.toIntervalTo(readableInstant36);
        org.joda.time.Interval interval38 = interval37.toInterval();
        org.joda.time.DateTime dateTime39 = interval38.getEnd();
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime28, (org.joda.time.ReadableInstant) dateTime39);
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, (org.joda.time.ReadableInstant) dateTime28);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period43 = duration7.toPeriodTo((org.joda.time.ReadableInstant) dateTime28, periodType42);
        org.joda.time.ReadableDuration readableDuration44 = null;
        boolean boolean45 = duration7.isEqual(readableDuration44);
        org.joda.time.Days days46 = duration7.toStandardDays();
        org.joda.time.Days days47 = days3.plus(days46);
        org.joda.time.DurationFieldType durationFieldType48 = days46.getFieldType();
        java.lang.String str49 = durationFieldType48.toString();
        org.junit.Assert.assertNotNull(days0);
        org.junit.Assert.assertNotNull(days1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(days3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(interval26);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(dateTime28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(interval37);
        org.junit.Assert.assertNotNull(interval38);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(days46);
        org.junit.Assert.assertNotNull(days47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "days" + "'", str49, "days");
    }

    @Test
    public void test03979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03979");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration3 = duration1.plus(1644572122285L);
        org.joda.time.Days days4 = duration1.toStandardDays();
        java.lang.Object obj9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod();
        mutablePeriod10.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod10, periodType14);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        java.lang.Object obj22 = null;
        org.joda.time.Duration duration23 = new org.joda.time.Duration(obj22);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration23.toIntervalTo(readableInstant26);
        org.joda.time.Interval interval28 = interval27.toInterval();
        org.joda.time.Chronology chronology29 = interval28.getChronology();
        boolean boolean30 = durationFieldType18.isSupported(chronology29);
        mutablePeriod10.setPeriod((long) 0, (long) 8, chronology29);
        org.joda.time.Period period32 = new org.joda.time.Period(obj9, chronology29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1644572155170L, 1644572140312L, chronology29);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(164457249783893L, 0L, chronology29);
        org.joda.time.Period period35 = duration1.toPeriod(chronology29);
        int int37 = period35.getValue(4);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(days4);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(chronology29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test03980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03980");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.millis();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology8);
        org.joda.time.PeriodType periodType10 = periodType7.withMonthsRemoved();
        org.joda.time.PeriodType periodType11 = periodType7.withDaysRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withWeeksRemoved();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis(1644572167345L);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod27 = mutablePeriod26.copy();
        org.joda.time.PeriodType periodType28 = mutablePeriod27.getPeriodType();
        org.joda.time.Period period29 = new org.joda.time.Period(1644572197160L, (long) 1, periodType28);
        java.lang.String str30 = periodType28.getName();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration38 = duration35.withDurationAdded((long) (byte) 100, 10);
        int int39 = duration32.compareTo((org.joda.time.ReadableDuration) duration35);
        long long40 = duration35.getMillis();
        org.joda.time.ReadableInterval readableInterval42 = null;
        org.joda.time.Hours hours43 = org.joda.time.Hours.hoursIn(readableInterval42);
        org.joda.time.Hours hours44 = hours43.negated();
        org.joda.time.PeriodType periodType45 = hours43.getPeriodType();
        org.joda.time.PeriodType periodType46 = periodType45.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant50 = null;
        java.lang.Object obj51 = null;
        org.joda.time.Duration duration52 = new org.joda.time.Duration(obj51);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        boolean boolean54 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Interval interval56 = duration52.toIntervalTo(readableInstant55);
        org.joda.time.Interval interval57 = interval56.toInterval();
        org.joda.time.Chronology chronology58 = interval57.getChronology();
        boolean boolean59 = durationFieldType47.isSupported(chronology58);
        org.joda.time.Period period60 = new org.joda.time.Period(1644572162361L, periodType46, chronology58);
        org.joda.time.Period period61 = duration35.toPeriod(chronology58);
        org.joda.time.Period period62 = duration17.toPeriod(periodType28, chronology58);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((java.lang.Object) periodType11, chronology58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Standard" + "'", str30, "Standard");
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-97L) + "'", long40 == (-97L));
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(hours44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(interval57);
        org.junit.Assert.assertNotNull(chronology58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test03981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03981");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(1644572152112L, 1644572122326L);
        org.joda.time.PeriodType periodType5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType5);
        mutablePeriod6.setYears(0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration10, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        java.lang.Object obj16 = null;
        org.joda.time.Duration duration17 = new org.joda.time.Duration(obj16);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration17);
        boolean boolean19 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration17.toIntervalTo(readableInstant20);
        org.joda.time.Interval interval22 = interval21.toInterval();
        org.joda.time.DateTime dateTime23 = interval22.getEnd();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        org.joda.time.Interval interval33 = interval32.toInterval();
        org.joda.time.DateTime dateTime34 = interval33.getEnd();
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime23, (org.joda.time.ReadableInstant) dateTime34);
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, (org.joda.time.ReadableInstant) dateTime23);
        org.joda.time.ReadableInstant readableInstant37 = null;
        boolean boolean38 = dateTime23.isAfter(readableInstant37);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration44 = duration41.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        java.lang.Object obj48 = null;
        org.joda.time.Duration duration49 = new org.joda.time.Duration(obj48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration49);
        boolean boolean51 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Interval interval53 = duration49.toIntervalTo(readableInstant52);
        org.joda.time.Interval interval54 = interval53.toInterval();
        org.joda.time.DateTime dateTime55 = interval54.getEnd();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.DateTime dateTime66 = interval65.getEnd();
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime55, (org.joda.time.ReadableInstant) dateTime66);
        long long68 = dateTime66.getMillis();
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Period period70 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableInstant) dateTime66);
        org.joda.time.Period period71 = duration2.toPeriodTo(readableInstant37);
        org.joda.time.Duration duration73 = duration2.withMillis(1644572214460L);
        org.joda.time.Duration duration74 = new org.joda.time.Duration((java.lang.Object) 1644572214460L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(interval33);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(interval53);
        org.junit.Assert.assertNotNull(interval54);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(dateTime66);
// flaky:         org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1644572361832L + "'", long68 == 1644572361832L);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration73);
    }

    @Test
    public void test03982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03982");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        org.joda.time.DateTime dateTime10 = interval9.getEnd();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime21);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration25.toPeriodFrom(readableInstant26);
        org.joda.time.Duration duration29 = duration25.plus((-1L));
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.DateTimeFieldType dateTimeFieldType31 = null;
        boolean boolean32 = dateTime10.isSupported(dateTimeFieldType31);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology34);
        java.lang.String str36 = mutablePeriod35.toString();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant39 = null;
        java.lang.Object obj40 = null;
        org.joda.time.Duration duration41 = new org.joda.time.Duration(obj40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration41.toIntervalTo(readableInstant44);
        long long46 = interval45.getStartMillis();
        org.joda.time.PeriodType periodType49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType49);
        mutablePeriod50.setYears(0);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology55 = null;
        mutablePeriod50.setPeriod((org.joda.time.ReadableDuration) duration54, chronology55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        java.lang.Object obj60 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration(obj60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration61);
        boolean boolean63 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration61.toIntervalTo(readableInstant64);
        org.joda.time.Interval interval66 = interval65.toInterval();
        org.joda.time.DateTime dateTime67 = interval66.getEnd();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        java.lang.Object obj71 = null;
        org.joda.time.Duration duration72 = new org.joda.time.Duration(obj71);
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant70, (org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration69.isShorterThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration72.toIntervalTo(readableInstant75);
        org.joda.time.Interval interval77 = interval76.toInterval();
        org.joda.time.DateTime dateTime78 = interval77.getEnd();
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime67, (org.joda.time.ReadableInstant) dateTime78);
        org.joda.time.Period period80 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, (org.joda.time.ReadableInstant) dateTime67);
        boolean boolean81 = interval45.isBefore((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Duration duration82 = mutablePeriod35.toDurationFrom((org.joda.time.ReadableInstant) dateTime67);
        org.joda.time.Chronology chronology83 = dateTime67.getChronology();
        org.joda.time.Minutes minutes84 = org.joda.time.Minutes.minutesBetween((org.joda.time.ReadableInstant) dateTime10, (org.joda.time.ReadableInstant) dateTime67);
        long long85 = dateTime10.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertNotNull(dateTime10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT0S" + "'", str36, "PT0S");
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(interval45);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 1644572361867L + "'", long46 == 1644572361867L);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(interval66);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(dateTime78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(chronology83);
        org.junit.Assert.assertNotNull(minutes84);
// flaky:         org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1644572361867L + "'", long85 == 1644572361867L);
    }

    @Test
    public void test03983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03983");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 100, 1644572122285L);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period2.withField(durationFieldType3, (int) (byte) 1);
        org.joda.time.Period period7 = period5.withSeconds((-10));
        org.joda.time.Period period9 = period5.minusSeconds(52);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test03984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03984");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days2 = period1.toStandardDays();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Days as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test03985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03985");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration2.toPeriod(chronology5);
        org.joda.time.Period period8 = period6.withYears((int) (byte) 10);
        org.joda.time.Period period9 = period6.toPeriod();
        org.joda.time.Period period10 = period6.toPeriod();
        org.joda.time.Period period12 = period6.plusHours(22);
        org.joda.time.Minutes minutes13 = org.joda.time.Minutes.standardMinutesIn((org.joda.time.ReadablePeriod) period6);
        org.joda.time.PeriodType periodType14 = period6.getPeriodType();
        org.joda.time.Period period15 = period6.negated();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test03986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03986");
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        java.lang.Object obj12 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration(obj12);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        boolean boolean15 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Interval interval17 = duration13.toIntervalTo(readableInstant16);
        org.joda.time.Interval interval18 = interval17.toInterval();
        org.joda.time.Chronology chronology19 = interval18.getChronology();
        org.joda.time.Weeks weeks20 = org.joda.time.Weeks.weeksIn((org.joda.time.ReadableInterval) interval18);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.Period period22 = interval18.toPeriod(periodType21);
        java.lang.Object obj25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod();
        mutablePeriod26.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod26, periodType30);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant37 = null;
        java.lang.Object obj38 = null;
        org.joda.time.Duration duration39 = new org.joda.time.Duration(obj38);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        boolean boolean41 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Interval interval43 = duration39.toIntervalTo(readableInstant42);
        org.joda.time.Interval interval44 = interval43.toInterval();
        org.joda.time.Chronology chronology45 = interval44.getChronology();
        boolean boolean46 = durationFieldType34.isSupported(chronology45);
        mutablePeriod26.setPeriod((long) 0, (long) 8, chronology45);
        org.joda.time.Period period48 = new org.joda.time.Period(obj25, chronology45);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1644572155170L, 1644572140312L, chronology45);
        org.joda.time.Period period50 = new org.joda.time.Period(1644572160721L, periodType21, chronology45);
        org.joda.time.PeriodType periodType51 = periodType21.withSecondsRemoved();
        org.joda.time.PeriodType periodType52 = periodType21.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1, (-10), 802, 58, (-35), (-10), 6, (-2147483647), periodType52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(interval17);
        org.junit.Assert.assertNotNull(interval18);
        org.junit.Assert.assertNotNull(chronology19);
        org.junit.Assert.assertNotNull(weeks20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(chronology45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test03987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03987");
        org.joda.time.ReadableInstant readableInstant0 = null;
        java.lang.Object obj1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(obj1);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.millis((long) '4');
        long long8 = duration7.getStandardDays();
        boolean boolean9 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.joda.time.Period period12 = duration7.toPeriod(periodType10);
        org.joda.time.PeriodType periodType13 = periodType10.withYearsRemoved();
        org.joda.time.PeriodType periodType14 = periodType10.withDaysRemoved();
        org.joda.time.PeriodType periodType15 = periodType10.withMillisRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test03988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03988");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(0L);
        mutablePeriod1.addMinutes((int) (short) 1);
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((int) (short) 10, (int) (byte) 10, (int) 'a', (int) '4', (int) (short) 0, (int) (short) -1, (int) (short) 0, (int) '4', periodType12);
        org.joda.time.Minutes minutes14 = org.joda.time.Minutes.MAX_VALUE;
        org.joda.time.Minutes minutes16 = minutes14.multipliedBy((int) (short) 1);
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) minutes16);
        boolean boolean18 = mutablePeriod1.equals((java.lang.Object) minutes16);
        org.joda.time.PeriodType periodType19 = minutes16.getPeriodType();
        org.joda.time.Duration duration20 = minutes16.toStandardDuration();
        org.joda.time.Minutes minutes21 = org.joda.time.Minutes.ZERO;
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) minutes21);
        org.joda.time.Minutes minutes23 = minutes16.minus(minutes21);
        org.joda.time.Period period24 = minutes23.toPeriod();
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test03989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03989");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) -1, 1644572122326L);
        java.lang.Object obj3 = mutablePeriod2.clone();
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod2.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType13);
        mutablePeriod14.addMillis((-1));
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod14);
        int int18 = mutablePeriod10.getYears();
        mutablePeriod10.setSeconds(100);
        mutablePeriod10.addWeeks((int) '4');
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType28);
        mutablePeriod29.setYears(0);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod29.setPeriod((org.joda.time.ReadableDuration) duration33, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        java.lang.Object obj39 = null;
        org.joda.time.Duration duration40 = new org.joda.time.Duration(obj39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Interval interval44 = duration40.toIntervalTo(readableInstant43);
        org.joda.time.Interval interval45 = interval44.toInterval();
        org.joda.time.DateTime dateTime46 = interval45.getEnd();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        boolean boolean53 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration51.toIntervalTo(readableInstant54);
        org.joda.time.Interval interval56 = interval55.toInterval();
        org.joda.time.DateTime dateTime57 = interval56.getEnd();
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableInstant) dateTime57);
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, (org.joda.time.ReadableInstant) dateTime46);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant62 = null;
        java.lang.Object obj63 = null;
        org.joda.time.Duration duration64 = new org.joda.time.Duration(obj63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration64);
        boolean boolean66 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration64.toIntervalTo(readableInstant67);
        org.joda.time.Interval interval69 = interval68.toInterval();
        org.joda.time.DateTime dateTime70 = interval69.getEnd();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType73 = periodType72.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(periodType73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(10L, periodType73);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime46, (org.joda.time.ReadableInstant) dateTime70, periodType73);
        int int77 = periodType73.size();
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant80 = null;
        java.lang.Object obj81 = null;
        org.joda.time.Duration duration82 = new org.joda.time.Duration(obj81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant80, (org.joda.time.ReadableDuration) duration82);
        boolean boolean84 = duration79.isShorterThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Interval interval86 = duration82.toIntervalTo(readableInstant85);
        long long87 = interval86.getStartMillis();
        org.joda.time.Chronology chronology88 = interval86.getChronology();
        org.joda.time.Period period89 = new org.joda.time.Period((long) 10, 1644572155967L, periodType73, chronology88);
        mutablePeriod10.add(1644572147615L, chronology88);
        org.joda.time.Period period91 = mutablePeriod10.toPeriod();
        org.joda.time.Period period93 = period91.minusMillis(30);
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period93);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "P52Y1M1W3DT9H35M22.327S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "P52Y1M1W3DT9H35M22.327S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "P52Y1M1W3DT9H35M22.327S");
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(interval44);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(interval56);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(interval68);
        org.junit.Assert.assertNotNull(interval69);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(interval86);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 1644572362165L + "'", long87 == 1644572362165L);
        org.junit.Assert.assertNotNull(chronology88);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test03990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03990");
        org.joda.time.Weeks weeks0 = org.joda.time.Weeks.THREE;
        org.joda.time.Weeks weeks2 = weeks0.plus((int) '4');
        org.joda.time.Weeks weeks3 = org.joda.time.Weeks.MIN_VALUE;
        org.joda.time.Weeks weeks5 = org.joda.time.Weeks.weeks((int) (byte) -1);
        boolean boolean6 = weeks3.isGreaterThan(weeks5);
        org.joda.time.DurationFieldType durationFieldType7 = weeks5.getFieldType();
        boolean boolean8 = weeks0.isGreaterThan(weeks5);
        org.joda.time.Period period9 = weeks5.toPeriod();
        org.joda.time.Period period11 = new org.joda.time.Period(1L);
        org.joda.time.Weeks weeks13 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Period period14 = period11.plus((org.joda.time.ReadablePeriod) weeks13);
        org.joda.time.Period period15 = period14.toPeriod();
        org.joda.time.Weeks weeks16 = org.joda.time.Weeks.standardWeeksIn((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Weeks weeks18 = org.joda.time.Weeks.weeks((int) (byte) -1);
        org.joda.time.Weeks weeks19 = weeks18.negated();
        int int20 = weeks18.getWeeks();
        org.joda.time.Weeks weeks22 = weeks18.minus(3);
        org.joda.time.Weeks weeks23 = org.joda.time.Weeks.ONE;
        boolean boolean24 = weeks18.isLessThan(weeks23);
        org.joda.time.Weeks weeks25 = weeks16.plus(weeks23);
        org.joda.time.MutablePeriod mutablePeriod26 = weeks16.toMutablePeriod();
        org.joda.time.Weeks weeks27 = weeks5.plus(weeks16);
        org.joda.time.PeriodType periodType28 = weeks16.getPeriodType();
        org.joda.time.PeriodType periodType29 = periodType28.withMillisRemoved();
        org.junit.Assert.assertNotNull(weeks0);
        org.junit.Assert.assertNotNull(weeks2);
        org.junit.Assert.assertNotNull(weeks3);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(weeks13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(weeks16);
        org.junit.Assert.assertNotNull(weeks18);
        org.junit.Assert.assertNotNull(weeks19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(weeks22);
        org.junit.Assert.assertNotNull(weeks23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(weeks25);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(weeks27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
    }

    @Test
    public void test03991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03991");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.setPeriod(100L, (long) (-1));
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod0, periodType4);
        int int6 = mutablePeriod5.getMonths();
        int int7 = mutablePeriod5.getDays();
        org.joda.time.Duration duration9 = new org.joda.time.Duration(35999L);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        java.lang.Object obj14 = null;
        org.joda.time.Duration duration15 = new org.joda.time.Duration(obj14);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration15);
        boolean boolean17 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration15.toIntervalTo(readableInstant18);
        org.joda.time.Interval interval20 = interval19.toInterval();
        org.joda.time.DateTime dateTime21 = interval20.getEnd();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        java.lang.Object obj25 = null;
        org.joda.time.Duration duration26 = new org.joda.time.Duration(obj25);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Interval interval30 = duration26.toIntervalTo(readableInstant29);
        org.joda.time.Interval interval31 = interval30.toInterval();
        org.joda.time.DateTime dateTime32 = interval31.getEnd();
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant36 = null;
        java.lang.Object obj37 = null;
        org.joda.time.Duration duration38 = new org.joda.time.Duration(obj37);
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration38);
        boolean boolean40 = duration35.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        org.joda.time.Interval interval43 = interval42.toInterval();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        java.lang.Object obj47 = null;
        org.joda.time.Duration duration48 = new org.joda.time.Duration(obj47);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration48);
        boolean boolean50 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Interval interval52 = duration48.toIntervalTo(readableInstant51);
        boolean boolean53 = interval43.isAfter((org.joda.time.ReadableInterval) interval52);
        org.joda.time.Period period54 = interval52.toPeriod();
        org.joda.time.Period period55 = interval52.toPeriod();
        org.joda.time.DateTime dateTime56 = interval52.getStart();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant60 = null;
        java.lang.Object obj61 = null;
        org.joda.time.Duration duration62 = new org.joda.time.Duration(obj61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant60, (org.joda.time.ReadableDuration) duration62);
        boolean boolean64 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableInterval readableInterval66 = null;
        org.joda.time.Minutes minutes67 = org.joda.time.Minutes.minutesIn(readableInterval66);
        java.lang.String str68 = minutes67.toString();
        org.joda.time.PeriodType periodType69 = minutes67.getPeriodType();
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant65, periodType69);
        org.joda.time.Period period71 = new org.joda.time.Period(1644572138952L, periodType69);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((org.joda.time.ReadableInstant) dateTime21, (org.joda.time.ReadableInstant) dateTime56, periodType69);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType75 = periodType74.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(periodType75);
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.eras();
        int int78 = periodType75.indexOf(durationFieldType77);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        java.lang.Object obj82 = null;
        org.joda.time.Duration duration83 = new org.joda.time.Duration(obj82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant81, (org.joda.time.ReadableDuration) duration83);
        boolean boolean85 = duration80.isShorterThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Interval interval87 = duration83.toIntervalTo(readableInstant86);
        org.joda.time.Interval interval88 = interval87.toInterval();
        org.joda.time.Chronology chronology89 = interval88.getChronology();
        org.joda.time.Period period90 = new org.joda.time.Period((long) 1, periodType75, chronology89);
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(0L, periodType69, chronology89);
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration9, chronology89);
        org.joda.time.Duration duration94 = duration9.plus(0L);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(interval20);
        org.junit.Assert.assertNotNull(dateTime21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(interval30);
        org.junit.Assert.assertNotNull(interval31);
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(interval42);
        org.junit.Assert.assertNotNull(interval43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(interval52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT0M" + "'", str68, "PT0M");
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(interval87);
        org.junit.Assert.assertNotNull(interval88);
        org.junit.Assert.assertNotNull(chronology89);
        org.junit.Assert.assertNotNull(duration94);
    }

    @Test
    public void test03992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03992");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) '4');
        long long2 = duration1.getMillis();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant5 = null;
        java.lang.Object obj6 = null;
        org.joda.time.Duration duration7 = new org.joda.time.Duration(obj6);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        boolean boolean9 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Interval interval11 = duration7.toIntervalTo(readableInstant10);
        org.joda.time.Interval interval12 = interval11.toInterval();
        org.joda.time.DateTime dateTime13 = interval12.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.DateTime dateTime24 = interval23.getEnd();
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableInstant) dateTime24);
        org.joda.time.Duration duration28 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration28.toPeriodFrom(readableInstant29);
        org.joda.time.Duration duration32 = duration28.plus((-1L));
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime13, (org.joda.time.ReadableDuration) duration28);
        org.joda.time.DateTimeFieldType dateTimeFieldType34 = null;
        boolean boolean35 = dateTime13.isSupported(dateTimeFieldType34);
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime13.getZone();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, (org.joda.time.ReadableInstant) dateTime13);
        org.joda.time.DateTimeFieldType dateTimeFieldType38 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int39 = dateTime13.get(dateTimeFieldType38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The DateTimeFieldType must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 52L + "'", long2 == 52L);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(interval11);
        org.junit.Assert.assertNotNull(interval12);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dateTimeZone36);
    }

    @Test
    public void test03993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03993");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 0, (int) (byte) 10, (int) (byte) 100, (int) (byte) 100);
        org.joda.time.Period period6 = period4.plusDays(1);
        org.joda.time.Period period8 = period6.minusYears((int) (short) -1);
        int int9 = period8.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod10 = period8.toMutablePeriod();
        java.lang.Object obj11 = mutablePeriod10.clone();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        java.lang.Object obj27 = null;
        org.joda.time.Duration duration28 = new org.joda.time.Duration(obj27);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration28);
        boolean boolean30 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration28.toIntervalTo(readableInstant31);
        boolean boolean33 = interval23.isAfter((org.joda.time.ReadableInterval) interval32);
        org.joda.time.Period period34 = interval32.toPeriod();
        org.joda.time.DateTime dateTime35 = interval32.getStart();
        org.joda.time.DateTimeZone dateTimeZone36 = dateTime35.getZone();
        org.joda.time.Period period37 = duration13.toPeriodFrom((org.joda.time.ReadableInstant) dateTime35);
        org.joda.time.Period period39 = period37.minusMonths((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((int) (byte) 1, (int) (short) 100, (int) '4', 5, 52, (int) (byte) 0, (int) (byte) 10, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant49 = null;
        java.lang.Object obj50 = null;
        org.joda.time.Duration duration51 = new org.joda.time.Duration(obj50);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration51);
        org.joda.time.Seconds seconds53 = period52.toStandardSeconds();
        org.joda.time.Seconds seconds55 = seconds53.minus((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType56 = seconds55.getFieldType();
        mutablePeriod48.set(durationFieldType56, 30);
        int int59 = period37.get(durationFieldType56);
        mutablePeriod10.add(durationFieldType56, (-20));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "P1Y1DT10M80.100S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "P1Y1DT10M80.100S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "P1Y1DT10M80.100S");
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNotNull(dateTimeZone36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(seconds53);
        org.junit.Assert.assertNotNull(seconds55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test03994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03994");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        java.lang.Object obj3 = null;
        org.joda.time.Duration duration4 = new org.joda.time.Duration(obj3);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        boolean boolean6 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration4.toIntervalTo(readableInstant7);
        org.joda.time.Interval interval9 = interval8.toInterval();
        long long10 = interval8.toDurationMillis();
        long long11 = interval8.toDurationMillis();
        java.lang.String str12 = interval8.toString();
        org.joda.time.DateTime dateTime13 = interval8.getEnd();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Interval interval22 = duration18.toIntervalTo(readableInstant21);
        org.joda.time.Interval interval23 = interval22.toInterval();
        long long24 = interval22.toDurationMillis();
        org.joda.time.DateTime dateTime25 = interval22.getStart();
        org.joda.time.DateTime dateTime26 = interval22.getStart();
        org.joda.time.DateTime dateTime27 = interval22.getEnd();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology29);
        java.lang.String str31 = mutablePeriod30.toString();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant34 = null;
        java.lang.Object obj35 = null;
        org.joda.time.Duration duration36 = new org.joda.time.Duration(obj35);
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration36);
        boolean boolean38 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration36.toIntervalTo(readableInstant39);
        long long41 = interval40.getStartMillis();
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType44);
        mutablePeriod45.setYears(0);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration49, chronology50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant54 = null;
        java.lang.Object obj55 = null;
        org.joda.time.Duration duration56 = new org.joda.time.Duration(obj55);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean58 = duration53.isShorterThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration56.toIntervalTo(readableInstant59);
        org.joda.time.Interval interval61 = interval60.toInterval();
        org.joda.time.DateTime dateTime62 = interval61.getEnd();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant65 = null;
        java.lang.Object obj66 = null;
        org.joda.time.Duration duration67 = new org.joda.time.Duration(obj66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration64.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration67.toIntervalTo(readableInstant70);
        org.joda.time.Interval interval72 = interval71.toInterval();
        org.joda.time.DateTime dateTime73 = interval72.getEnd();
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableInstant) dateTime62, (org.joda.time.ReadableInstant) dateTime73);
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, (org.joda.time.ReadableInstant) dateTime62);
        boolean boolean76 = interval40.isBefore((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Duration duration77 = mutablePeriod30.toDurationFrom((org.joda.time.ReadableInstant) dateTime62);
        org.joda.time.Chronology chronology78 = dateTime62.getChronology();
        boolean boolean79 = dateTime27.isBefore((org.joda.time.ReadableInstant) dateTime62);
        boolean boolean80 = interval8.isAfter((org.joda.time.ReadableInstant) dateTime62);
        boolean boolean82 = interval8.equals((java.lang.Object) "2022-02-11T09:38:14.730Z");
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "2022-02-11T09:39:22.393Z/2022-02-11T09:39:22.393Z" + "'", str12, "2022-02-11T09:39:22.393Z/2022-02-11T09:39:22.393Z");
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(interval22);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(dateTime25);
        org.junit.Assert.assertNotNull(dateTime26);
        org.junit.Assert.assertNotNull(dateTime27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT0S" + "'", str31, "PT0S");
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(interval40);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1644572362393L + "'", long41 == 1644572362393L);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
        org.junit.Assert.assertNotNull(interval72);
        org.junit.Assert.assertNotNull(dateTime73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(chronology78);
// flaky:         org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test03995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03995");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks1 = org.joda.time.Weeks.parseWeeks("2022-02-11T09:38:06.423Z/2022-02-11T09:38:06.423Z");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"2022-02-11T09:38:06.423Z/2022-02...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03996");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.eras();
        int int5 = periodType2.indexOf(durationFieldType4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        java.lang.Object obj9 = null;
        org.joda.time.Duration duration10 = new org.joda.time.Duration(obj9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration10);
        boolean boolean12 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration10.toIntervalTo(readableInstant13);
        org.joda.time.Interval interval15 = interval14.toInterval();
        org.joda.time.Chronology chronology16 = interval15.getChronology();
        org.joda.time.Period period17 = new org.joda.time.Period((long) 1, periodType2, chronology16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(periodType19);
        org.joda.time.Period period21 = period17.minus((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) (byte) 0, chronology23);
        mutablePeriod20.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod24);
        int int26 = mutablePeriod24.getYears();
        org.joda.time.ReadableInstant readableInstant27 = null;
        java.lang.Object obj28 = null;
        org.joda.time.Duration duration29 = new org.joda.time.Duration(obj28);
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, (long) 0, periodType35);
        mutablePeriod36.addMillis((-1));
        mutablePeriod32.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod36);
        mutablePeriod32.setMillis((int) '4');
        int int42 = mutablePeriod32.getMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration47 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration50 = duration47.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration52 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration47, (int) (short) 1);
        long long53 = duration44.getStandardMinutes();
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.weeks();
        org.joda.time.DurationFieldType durationFieldType55 = org.joda.time.DurationFieldType.years();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        java.lang.Object obj59 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration(obj59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Interval interval64 = duration60.toIntervalTo(readableInstant63);
        org.joda.time.Interval interval65 = interval64.toInterval();
        org.joda.time.Chronology chronology66 = interval65.getChronology();
        boolean boolean67 = durationFieldType55.isSupported(chronology66);
        org.joda.time.Period period68 = duration44.toPeriod(periodType54, chronology66);
        org.joda.time.Duration duration69 = duration44.toDuration();
        mutablePeriod32.add((org.joda.time.ReadableDuration) duration44);
        mutablePeriod24.setPeriod((org.joda.time.ReadableDuration) duration44);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(chronology16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 600L + "'", long53 == 600L);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(interval64);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(chronology66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
    }

    @Test
    public void test03997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03997");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) 100);
        org.joda.time.Minutes minutes3 = period2.toStandardMinutes();
        org.joda.time.Period period5 = period2.plusMonths((-3));
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test03998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03998");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(10L, periodType2);
        int int5 = mutablePeriod4.getMillis();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration15 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration10, (int) (short) 1);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((long) 'a', (long) 0);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((long) (byte) 100, 10);
        org.joda.time.Duration duration23 = duration7.withDurationAdded((org.joda.time.ReadableDuration) duration21, (int) (short) 100);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration23);
        mutablePeriod4.addDays(0);
        int int27 = mutablePeriod4.getDays();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod4.addMinutes(36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test03999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03999");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("2022-02-11T09:36:09.629Z/2022-02-11T09:36:09.629Z", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test04000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test04000");
        org.joda.time.Minutes minutes1 = org.joda.time.Minutes.minutes((int) (byte) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) '4');
        long long4 = duration3.getMillis();
        org.joda.time.Minutes minutes5 = duration3.toStandardMinutes();
        org.joda.time.Minutes minutes6 = minutes5.negated();
        org.joda.time.Minutes minutes7 = minutes1.plus(minutes5);
        org.joda.time.Minutes minutes8 = minutes7.negated();
        int int10 = minutes8.getValue((int) (short) 0);
        org.joda.time.PeriodType periodType11 = minutes8.getPeriodType();
        org.joda.time.Minutes minutes12 = minutes8.negated();
        org.joda.time.Duration duration13 = minutes8.toStandardDuration();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant16 = null;
        java.lang.Object obj17 = null;
        org.joda.time.Duration duration18 = new org.joda.time.Duration(obj17);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration18);
        boolean boolean20 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInterval readableInterval22 = null;
        org.joda.time.Minutes minutes23 = org.joda.time.Minutes.minutesIn(readableInterval22);
        java.lang.String str24 = minutes23.toString();
        org.joda.time.PeriodType periodType25 = minutes23.getPeriodType();
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant21, periodType25);
        org.joda.time.Minutes minutes27 = duration18.toStandardMinutes();
        long long28 = duration18.getStandardSeconds();
        org.joda.time.Duration duration30 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration18, (int) (short) 10);
        org.joda.time.Minutes minutes31 = duration13.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration32 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int33 = duration13.compareTo(readableDuration32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(minutes1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(minutes5);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(minutes7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-10) + "'", int10 == (-10));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0M" + "'", str24, "PT0M");
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(minutes31);
    }
}
